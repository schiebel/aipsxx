%!PS-Adobe-3.0
%%Creator: Windows PSCRIPT
%%Title: Microsoft Word - 5FEB.DOC
%%BoundingBox: 18 9 593 784
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%Pages: (atend)
%%BeginResource: procset Win35Dict 3 1
/Win35Dict 290 dict def Win35Dict begin/bd{bind def}bind def/in{72
mul}bd/ed{exch def}bd/ld{load def}bd/tr/translate ld/gs/gsave ld/gr
/grestore ld/M/moveto ld/L/lineto ld/rmt/rmoveto ld/rlt/rlineto ld
/rct/rcurveto ld/st/stroke ld/n/newpath ld/sm/setmatrix ld/cm/currentmatrix
ld/cp/closepath ld/ARC/arcn ld/TR{65536 div}bd/lj/setlinejoin ld/lc
/setlinecap ld/ml/setmiterlimit ld/sl/setlinewidth ld/scignore false
def/sc{scignore{pop pop pop}{0 index 2 index eq 2 index 4 index eq
and{pop pop 255 div setgray}{3{255 div 3 1 roll}repeat setrgbcolor}ifelse}ifelse}bd
/FC{bR bG bB sc}bd/fC{/bB ed/bG ed/bR ed}bd/HC{hR hG hB sc}bd/hC{
/hB ed/hG ed/hR ed}bd/PC{pR pG pB sc}bd/pC{/pB ed/pG ed/pR ed}bd/sM
matrix def/PenW 1 def/iPen 5 def/mxF matrix def/mxE matrix def/mxUE
matrix def/mxUF matrix def/fBE false def/iDevRes 72 0 matrix defaultmatrix
dtransform dup mul exch dup mul add sqrt def/fPP false def/SS{fPP{
/SV save def}{gs}ifelse}bd/RS{fPP{SV restore}{gr}ifelse}bd/EJ{gsave
showpage grestore}bd/#C{userdict begin/#copies ed end}bd/FEbuf 2 string
def/FEglyph(G  )def/FE{1 exch{dup 16 FEbuf cvrs FEglyph exch 1 exch
putinterval 1 index exch FEglyph cvn put}for}bd/SM{/iRes ed/cyP ed
/cxPg ed/cyM ed/cxM ed 72 100 div dup scale dup 0 ne{90 eq{cyM exch
0 eq{cxM exch tr -90 rotate -1 1 scale}{cxM cxPg add exch tr +90 rotate}ifelse}{cyP
cyM sub exch 0 ne{cxM exch tr -90 rotate}{cxM cxPg add exch tr -90
rotate 1 -1 scale}ifelse}ifelse}{pop cyP cyM sub exch 0 ne{cxM cxPg
add exch tr 180 rotate}{cxM exch tr 1 -1 scale}ifelse}ifelse 100 iRes
div dup scale 0 0 transform .25 add round .25 sub exch .25 add round
.25 sub exch itransform translate}bd/SJ{1 index 0 eq{pop pop/fBE false
def}{1 index/Break ed div/dxBreak ed/fBE true def}ifelse}bd/ANSIVec[
16#0/grave 16#1/acute 16#2/circumflex 16#3/tilde 16#4/macron 16#5/breve
16#6/dotaccent 16#7/dieresis 16#8/ring 16#9/cedilla 16#A/hungarumlaut
16#B/ogonek 16#C/caron 16#D/dotlessi 16#27/quotesingle 16#60/grave
16#7C/bar 16#82/quotesinglbase 16#83/florin 16#84/quotedblbase 16#85
/ellipsis 16#86/dagger 16#87/daggerdbl 16#88/circumflex 16#89/perthousand
16#8A/Scaron 16#8B/guilsinglleft 16#8C/OE 16#91/quoteleft 16#92/quoteright
16#93/quotedblleft 16#94/quotedblright 16#95/bullet 16#96/endash 16#97
/emdash 16#98/tilde 16#99/trademark 16#9A/scaron 16#9B/guilsinglright
16#9C/oe 16#9F/Ydieresis 16#A0/space 16#A1/exclamdown 16#A4/currency
16#A5/yen 16#A6/brokenbar 16#A7/section 16#A8/dieresis 16#A9/copyright
16#AA/ordfeminine 16#AB/guillemotleft 16#AC/logicalnot 16#AD/hyphen
16#AE/registered 16#AF/macron 16#B0/degree 16#B1/plusminus 16#B2/twosuperior
16#B3/threesuperior 16#B4/acute 16#B5/mu 16#B6/paragraph 16#B7/periodcentered
16#B8/cedilla 16#B9/onesuperior 16#BA/ordmasculine 16#BB/guillemotright
16#BC/onequarter 16#BD/onehalf 16#BE/threequarters 16#BF/questiondown
16#C0/Agrave 16#C1/Aacute 16#C2/Acircumflex 16#C3/Atilde 16#C4/Adieresis
16#C5/Aring 16#C6/AE 16#C7/Ccedilla 16#C8/Egrave 16#C9/Eacute 16#CA
/Ecircumflex 16#CB/Edieresis 16#CC/Igrave 16#CD/Iacute 16#CE/Icircumflex
16#CF/Idieresis 16#D0/Eth 16#D1/Ntilde 16#D2/Ograve 16#D3/Oacute 16#D4
/Ocircumflex 16#D5/Otilde 16#D6/Odieresis 16#D7/multiply 16#D8/Oslash
16#D9/Ugrave 16#DA/Uacute 16#DB/Ucircumflex 16#DC/Udieresis 16#DD/Yacute
16#DE/Thorn 16#DF/germandbls 16#E0/agrave 16#E1/aacute 16#E2/acircumflex
16#E3/atilde 16#E4/adieresis 16#E5/aring 16#E6/ae 16#E7/ccedilla 16#E8
/egrave 16#E9/eacute 16#EA/ecircumflex 16#EB/edieresis 16#EC/igrave
16#ED/iacute 16#EE/icircumflex 16#EF/idieresis 16#F0/eth 16#F1/ntilde
16#F2/ograve 16#F3/oacute 16#F4/ocircumflex 16#F5/otilde 16#F6/odieresis
16#F7/divide 16#F8/oslash 16#F9/ugrave 16#FA/uacute 16#FB/ucircumflex
16#FC/udieresis 16#FD/yacute 16#FE/thorn 16#FF/ydieresis ] def/reencdict
12 dict def/IsChar{basefontdict/CharStrings get exch known}bd/MapCh{dup
IsChar not{pop/bullet}if newfont/Encoding get 3 1 roll put}bd/MapDegree{16#b0
/degree IsChar{/degree}{/ring}ifelse MapCh}bd/MapBB{16#a6/brokenbar
IsChar{/brokenbar}{/bar}ifelse MapCh}bd/ANSIFont{reencdict begin/newfontname
ed/basefontname ed FontDirectory newfontname known not{/basefontdict
basefontname findfont def/newfont basefontdict maxlength dict def basefontdict{exch
dup/FID ne{dup/Encoding eq{exch dup length array copy newfont 3 1 roll
put}{exch newfont 3 1 roll put}ifelse}{pop pop}ifelse}forall newfont
/FontName newfontname put 127 1 159{newfont/Encoding get exch/bullet
put}for ANSIVec aload pop ANSIVec length 2 idiv{MapCh}repeat MapDegree
MapBB newfontname newfont definefont pop}if newfontname end}bd/SB{FC
/ULlen ed/str ed str length fBE not{dup 1 gt{1 sub}if}if/cbStr ed
/dxGdi ed/y0 ed/x0 ed str stringwidth dup 0 ne{/y1 ed/x1 ed y1 y1
mul x1 x1 mul add sqrt dxGdi exch div 1 sub dup x1 mul cbStr div exch
y1 mul cbStr div}{exch abs neg dxGdi add cbStr div exch}ifelse/dyExtra
ed/dxExtra ed x0 y0 M fBE{dxBreak 0 BCh dxExtra dyExtra str awidthshow}{dxExtra
dyExtra str ashow}ifelse fUL{x0 y0 M dxUL dyUL rmt ULlen fBE{Break
add}if 0 mxUE transform gs rlt cyUL sl [] 0 setdash st gr}if fSO{x0
y0 M dxSO dySO rmt ULlen fBE{Break add}if 0 mxUE transform gs rlt cyUL
sl [] 0 setdash st gr}if n/fBE false def}bd/font{/name ed/Ascent ed
0 ne/fT3 ed 0 ne/fSO ed 0 ne/fUL ed/Sy ed/Sx ed 10.0 div/ori ed -10.0
div/esc ed/BCh ed name findfont/xAscent 0 def/yAscent Ascent def/ULesc
esc def ULesc mxUE rotate pop fT3{/esc 0 def xAscent yAscent mxUE transform
/yAscent ed/xAscent ed}if [Sx 0 0 Sy neg xAscent yAscent] esc mxE
rotate mxF concatmatrix makefont setfont [Sx 0 0 Sy neg 0 Ascent] mxUE
mxUF concatmatrix pop fUL{currentfont dup/FontInfo get/UnderlinePosition
known not{pop/Courier findfont}if/FontInfo get/UnderlinePosition get
1000 div 0 exch mxUF transform/dyUL ed/dxUL ed}if fSO{0 .3 mxUF transform
/dySO ed/dxSO ed}if fUL fSO or{currentfont dup/FontInfo get/UnderlineThickness
known not{pop/Courier findfont}if/FontInfo get/UnderlineThickness get
1000 div Sy mul/cyUL ed}if}bd/min{2 copy gt{exch}if pop}bd/max{2 copy
lt{exch}if pop}bd/CP{/ft ed{{ft 0 eq{clip}{eoclip}ifelse}stopped{currentflat
1 add setflat}{exit}ifelse}loop}bd/patfont 10 dict def patfont begin
/FontType 3 def/FontMatrix [1 0 0 -1 0 0] def/FontBBox [0 0 16 16]
def/Encoding StandardEncoding def/BuildChar{pop pop 16 0 0 0 16 16
setcachedevice 16 16 false [1 0 0 1 .25 .25]{pat}imagemask}bd end/p{
/pat 32 string def{}forall 0 1 7{dup 2 mul pat exch 3 index put dup
2 mul 1 add pat exch 3 index put dup 2 mul 16 add pat exch 3 index
put 2 mul 17 add pat exch 2 index put pop}for}bd/pfill{/PatFont patfont
definefont setfont/ch(AAAA)def X0 64 X1{Y1 -16 Y0{1 index exch M ch
show}for pop}for}bd/vert{X0 w X1{dup Y0 M Y1 L st}for}bd/horz{Y0 w
Y1{dup X0 exch M X1 exch L st}for}bd/fdiag{X0 w X1{Y0 M X1 X0 sub dup
rlt st}for Y0 w Y1{X0 exch M Y1 Y0 sub dup rlt st}for}bd/bdiag{X0 w
X1{Y1 M X1 X0 sub dup neg rlt st}for Y0 w Y1{X0 exch M Y1 Y0 sub dup
neg rlt st}for}bd/AU{1 add cvi 15 or}bd/AD{1 sub cvi -16 and}bd/SHR{pathbbox
AU/Y1 ed AU/X1 ed AD/Y0 ed AD/X0 ed}bd/hfill{/w iRes 37.5 div round
def 0.1 sl [] 0 setdash n dup 0 eq{horz}if dup 1 eq{vert}if dup 2 eq{fdiag}if
dup 3 eq{bdiag}if dup 4 eq{horz vert}if 5 eq{fdiag bdiag}if}bd/F{/ft
ed fm 256 and 0 ne{gs FC ft 0 eq{fill}{eofill}ifelse gr}if fm 1536
and 0 ne{SHR gs HC ft CP fm 1024 and 0 ne{/Tmp save def pfill Tmp restore}{fm
15 and hfill}ifelse gr}if}bd/S{PenW sl PC st}bd/m matrix def/GW{iRes
12 div PenW add cvi}bd/DoW{iRes 50 div PenW add cvi}bd/DW{iRes 8 div
PenW add cvi}bd/SP{/PenW ed/iPen ed iPen 0 eq iPen 6 eq or{[] 0 setdash}if
iPen 1 eq{[DW GW] 0 setdash}if iPen 2 eq{[DoW GW] 0 setdash}if iPen
3 eq{[DW GW DoW GW] 0 setdash}if iPen 4 eq{[DW GW DoW GW DoW GW] 0
setdash}if}bd/E{m cm pop tr scale 1 0 moveto 0 0 1 0 360 arc cp m sm}bd
/AG{/sy ed/sx ed sx div 4 1 roll sy div 4 1 roll sx div 4 1 roll sy
div 4 1 roll atan/a2 ed atan/a1 ed sx sy scale a1 a2 ARC}def/A{m cm
pop tr AG m sm}def/P{m cm pop tr 0 0 M AG cp m sm}def/RRect{n 4 copy
M 3 1 roll exch L 4 2 roll L L cp}bd/RRCC{/r ed/y1 ed/x1 ed/y0 ed/x0
ed x0 x1 add 2 div y0 M x1 y0 x1 y1 r arcto 4{pop}repeat x1 y1 x0 y1
r arcto 4{pop}repeat x0 y1 x0 y0 r arcto 4{pop}repeat x0 y0 x1 y0 r
arcto 4{pop}repeat cp}bd/RR{2 copy 0 eq exch 0 eq or{pop pop RRect}{2
copy eq{pop RRCC}{m cm pop/y2 ed/x2 ed/ys y2 x2 div 1 max def/xs x2
y2 div 1 max def/y1 exch ys div def/x1 exch xs div def/y0 exch ys div
def/x0 exch xs div def/r2 x2 y2 min def xs ys scale x0 x1 add 2 div
y0 M x1 y0 x1 y1 r2 arcto 4{pop}repeat x1 y1 x0 y1 r2 arcto 4{pop}repeat
x0 y1 x0 y0 r2 arcto 4{pop}repeat x0 y0 x1 y0 r2 arcto 4{pop}repeat
m sm cp}ifelse}ifelse}bd/PP{{rlt}repeat}bd/OB{gs 0 ne{7 3 roll/y ed
/x ed x y translate ULesc rotate x neg y neg translate x y 7 -3 roll}if
sc B fill gr}bd/B{M/dy ed/dx ed dx 0 rlt 0 dy rlt dx neg 0 rlt cp}bd
/CB{B clip n}bd/ErrHandler{errordict dup maxlength exch length gt
dup{errordict begin}if/errhelpdict 12 dict def errhelpdict begin/stackunderflow(operand stack underflow)def
/undefined(this name is not defined in a dictionary)def/VMerror(you have used up all the printer's memory)def
/typecheck(operator was expecting a different type of operand)def
/ioerror(input/output error occured)def end{end}if errordict begin
/handleerror{$error begin newerror{/newerror false def showpage 72
72 scale/x .25 def/y 9.6 def/Helvetica findfont .2 scalefont setfont
x y moveto(Offending Command = )show/command load{dup type/stringtype
ne{(max err string)cvs}if show}exec/y y .2 sub def x y moveto(Error = )show
errorname{dup type dup( max err string )cvs show( : )show/stringtype
ne{( max err string )cvs}if show}exec errordict begin errhelpdict errorname
known{x 1 add y .2 sub moveto errhelpdict errorname get show}if end
/y y .4 sub def x y moveto(Stack =)show ostack{/y y .2 sub def x 1
add y moveto dup type/stringtype ne{( max err string )cvs}if show}forall
showpage}if end}def end}bd end
%%EndResource
/SVDoc save def
%%EndProlog
%%BeginSetup
Win35Dict begin
ErrHandler
statusdict begin 0 setjobtimeout end
statusdict begin statusdict /jobname (Microsoft Word - 5FEB.DOC) put end
/oldDictCnt countdictstack def {}stopped 
{ countdictstack oldDictCnt lt { Win35Dict begin } 
{1 1 countdictstack oldDictCnt sub {pop end } for } ifelse } if 
/oldDictCnt countdictstack def {letter
}stopped 
{ countdictstack oldDictCnt lt { Win35Dict begin } 
{1 1 countdictstack oldDictCnt sub {pop end } for } ifelse } if 
[
{mark 1.0 1.0 .98 .9 .82 .68 .56 .48 .28 .1 .06 .0 counttomark dup 3 add -1 roll exch 2 sub mul dup floor cvi dup 3 1 roll sub exch dup  3 add index exch 2 add index dup 4 1 roll sub mul add counttomark 1 add 1 roll  cleartomark } bind
/exec load currenttransfer /exec load] cvx settransfer
%%EndSetup
%%Page: 1 1
%%PageResources: (atend)
SS
0 0 25 11 798 1100 300 SM
32 0 0 42 42 0 0 0 39 /Times-Bold /font29 ANSIFont font
0 0 0 fC
730 560 858 (AIPS++: A New Astronomical Imaging Package) 858 SB
462 660 14 (\() 14 SB
32 0 0 42 42 0 0 0 38 /Times-Italic /font31 ANSIFont font
476 661 1381 (Published in IAU Symposium 158: Very High Angular Resolution Imaging \(1993\)) 1381 SB
891 711 536 (ed. W. Tango, Kluwer, in press\)) 536 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1051 811 229 (Ray P. Norris) 229 SB
32 0 0 42 42 0 0 0 38 /Times-Italic /font31 ANSIFont font
447 911 1436 (Australia Telescope National Facility, CSIRO Radiophysics Laboratory, PO Box 76,) 1436 SB
909 961 512 (Epping, NSW 2121, Australia.) 512 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
421 1061 228 (ABSTRACT.) 228 SB
649 1061 1136 (  In this paper I describe a new software package \("AIPS++"\) being) 1136 SB
421 1111 1470 (written  by a consortium of seven astronomical institutions spread over four continents.) 1470 SB
421 1161 1413 (I start by describing the background to the project, followed by a summary detailing) 1413 SB
421 1211 1336 (what AIPS++ is and why it is being written in this way. Section 3 describes the) 1336 SB
421 1261 1456 (challenge of running a globally distributed project spread over four continents. Finally) 1456 SB
421 1311 1053 (I describe the current status and an estimated completion date.) 1053 SB
32 0 0 42 42 0 0 0 39 /Times-Bold /font29 ANSIFont font
1026 1411 279 (1.  Introduction) 279 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
421 1511 1374 (Some ten years ago, NRAO developed the AIPS software for use with their newly) 1374 SB
421 1561 1450 (completed VLA. Since that time, AIPS, which consists of some 600 000 lines of code,) 1450 SB
421 1611 1443 (has been installed at over 300 sites worldwide. It has been developed and modified by) 1443 SB
421 1661 1423 (various astronomical institutions to cope with a range of instruments and techniques) 1423 SB
421 1711 1450 (which were unthought of at the time of its writing. However, AIPS is now showing its) 1450 SB
421 1761 1451 (age, and is increasingly unable to cope with new computer technologies, new imaging) 1451 SB
421 1811 1403 (techniques, and new instruments. The continuous additions and modification made) 1403 SB
421 1861 1417 (throughout its lifetime are now making the code difficult to maintain. It has become) 1417 SB
421 1911 1364 (clear that AIPS can no longer be modified piecemeal, but that instead we need to) 1364 SB
421 1961 1387 (replace it by a new generation of software, embracing modern software techniques) 1387 SB
421 2011 874 (while building on the experience provided by AIPS.) 874 SB
255 255 255 fC
/fm 256 def
1508 3 411 2162 B
1 F
n
0 0 0 fC
2 2 408 2159 B
1 F
n
2 2 408 2159 B
1 F
n
1508 2 411 2159 B
1 F
n
2 2 1920 2159 B
1 F
n
2 2 1920 2159 B
1 F
n
2 53 408 2162 B
1 F
n
2 53 1920 2162 B
1 F
n
571 2218 951 (Australia Telescope National Facility, CSIRO, Australia) 951 SB
2 49 408 2216 B
1 F
n
2 49 1920 2216 B
1 F
n
571 2268 673 (Berkeley-Illinois-Maryland Array, USA) 673 SB
2 49 408 2266 B
1 F
n
2 49 1920 2266 B
1 F
n
571 2318 727 (Herzberg Institute of Astrophysics, Canada) 727 SB
2 49 408 2316 B
1 F
n
2 49 1920 2316 B
1 F
n
571 2368 773 (National Radio Astronomy Observatory, USA) 773 SB
2 49 408 2366 B
1 F
n
2 49 1920 2366 B
1 F
n
571 2418 1101 (Netherlands Foundation for Research in Astronomy, Netherlands) 1101 SB
2 49 408 2416 B
1 F
n
2 49 1920 2416 B
1 F
n
571 2468 867 (Nuffield Radio Astronomy Labs., Jodrell Bank, UK) 867 SB
2 49 408 2466 B
1 F
n
2 49 1920 2466 B
1 F
n
571 2518 792 (Tata Institute for Fundamental Research, India) 792 SB
2 49 408 2516 B
1 F
n
2 49 1920 2516 B
1 F
n
2 49 408 2566 B
1 F
n
2 49 1920 2566 B
1 F
n
32 0 0 42 42 0 0 0 38 /Times-Italic /font31 ANSIFont font
571 2618 847 (Table 1: The members of the AIPS++ Consortium) 847 SB
2 49 408 2616 B
1 F
n
2 49 1920 2616 B
1 F
n
255 255 255 fC
1508 3 411 2716 B
1 F
n
0 0 0 fC
2 2 408 2720 B
1 F
n
2 2 408 2720 B
1 F
n
1508 2 411 2720 B
1 F
n
2 2 1920 2720 B
1 F
n
2 2 1920 2720 B
1 F
n
2 53 408 2666 B
1 F
n
2 53 1920 2666 B
1 F
n
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
571 2775 1331 (This new system is to be called AIPS++ \(Astronomical Information Processing) 1331 SB
421 2825 1428 (System\). Because of the sophistication demanded by users and techniques, it was felt) 1428 SB
1 #C
statusdict begin /manualfeed false store end
EJ RS
%%PageTrailer
%%PageResources: font Times-Bold
%%+ font Times-Italic
%%+ font Times-Roman
%%Page: 2 2
%%PageResources: (atend)
SS
0 0 25 11 798 1100 300 SM
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
0 0 0 fC
421 560 1342 (that no one institution had the resources to build this system. A consortium was) 1342 SB
421 610 1378 (therefore formed of seven institutions, listed in Table 1, each of which runs major) 1378 SB
421 660 485 (radio-astronomical facilities.) 485 SB
571 760 1323 (Each institution provides between one and seven programmers, making a total) 1323 SB
421 810 1407 (team of about 18 programmers at present, although this number will increase as we) 1407 SB
421 860 1307 (start writing higher-level applications. An essential part of  this simultaneous) 1307 SB
421 910 1462 (development over geographically dispersed sites is that code needs to be kept in step at) 1462 SB
421 960 1472 (all sites. This is achieved by running an automatic job overnight which distributes code) 1472 SB
421 1010 1484 (and documentation via Internet, and ensures that no site is more than a few hours out of) 1484 SB
421 1060 341 (step with the others.) 341 SB
32 0 0 42 42 0 0 0 39 /Times-Bold /font29 ANSIFont font
942 1160 447 (2. What will AIPS++ be?) 447 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
421 1260 216 (2.1.  SCOPE) 216 SB
421 1310 1432 (The goal of the AIPS++ project is to provide an image processing and data reduction) 1432 SB
421 1360 1482 (system for all mainstream radio-astronomy applications throughout the world. This will) 1482 SB
421 1410 1478 (include both aperture-synthesis and single-dish applications, but will not initially target) 1478 SB
421 1460 1366 (highly specialised applications such as pulsar search algorithms. Single-dish and) 1366 SB
421 1510 1427 (aperture-synthesis software have traditionally been viewed as two separate packages.) 1427 SB
421 1560 1426 (However, as newer aperture-synthesis instruments routinely provide auto-correlation) 1426 SB
421 1610 1489 (data as well as cross-correlation data, and as single dishes acquire multi-beam feeds, the) 1489 SB
421 1660 1378 (traditional distinctions between single-dish and multi-element radio-astronomical) 1378 SB
421 1710 1436 (techniques are diminishing. It is therefore now appropriate to combine these into one) 1436 SB
421 1760 301 (software package.) 301 SB
421 1810 11 ( ) 11 SB
571 1810 1139 (An additional goal of the project is to provide a platform for optical) 1139 SB
421 1860 1486 (interferometry applications, although the actual writing of those applications will be left) 1486 SB
421 1910 1479 (to practising optical interferometrists. The reasoning behind this decision is that optical) 1479 SB
421 1960 1452 (interferometry uses many techniques common to those of radioastronomy,  and so it is) 1452 SB
421 2010 1471 (natural to include  optical interferometry applications within AIPS++. A further reason) 1471 SB
421 2060 1373 (is to encourage cross-fertilisation between the two disciplines. In the longer term,) 1373 SB
421 2110 1472 (software may be written for other disciplines or wavelengths within AIPS++, but we do) 1472 SB
421 2160 653 (not intend  to target them at this stage.) 653 SB
571 2210 1272 (A potential problem that could be caused by aiming at such a wide range of) 1272 SB
421 2260 1344 (targets is  that the resulting code may be very bulky. For example, a user who is) 1344 SB
421 2310 1390 (interested only in single-dish applications may not want to clutter up the disk with) 1390 SB
421 2360 1447 (VLBI applications. The code will therefore be divided into sections \(core, single-dish,) 1447 SB
421 2410 1479 (aperture-synthesis, VLBI, and so on\) so that a user or institution may load only a subset) 1479 SB
421 2460 404 (of the AIPS++ package.) 404 SB
421 2560 418 (2.2.  SPECIFICATIONS) 418 SB
421 2610 1487 (AIPS++ is designed around a set of user specifications which have been assembled from) 1487 SB
421 2660 1382 (specifications prepared by the astronomers at the consortium member institutions.) 1382 SB
421 2710 1458 (These specifications are freely available by anonymous ftp \(see Section 5\), and we will) 1458 SB
421 2760 1475 (always welcome comments on them. Broadly, AIPS++ will have the following features.) 1475 SB
1 #C
statusdict begin /manualfeed false store end
EJ RS
%%PageTrailer
%%PageResources: font Times-Bold
%%+ font Times-Roman
%%Page: 3 3
%%PageResources: (atend)
SS
0 0 25 11 798 1100 300 SM
32 0 0 42 42 0 0 0 38 /Times-Italic /font31 ANSIFont font
0 0 0 fC
421 560 315 (What the user sees) 315 SB
32 0 0 42 42 0 0 0 42 /Symbol font
gs 440 3231 0 0 CB
421 656 19 (\267) 19 SB
gr
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
496 660 1221 (It will contain \(as a minimum\) most of the present functionality of AIPS) 1221 SB
32 0 0 42 42 0 0 0 42 /Symbol font
gs 440 3231 0 0 CB
421 756 19 (\267) 19 SB
gr
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
496 760 1287 (It will take advantage of new computing technologies such as graphical user) 1287 SB
496 810 1126 (interfaces, distributed computing, and massively parallel machines) 1126 SB
32 0 0 42 42 0 0 0 42 /Symbol font
gs 440 3231 0 0 CB
421 906 19 (\267) 19 SB
gr
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
496 910 1360 (It will have a variety of user-friendly interfaces, including text input, a graphical) 1360 SB
496 960 1359 (user interface, and a dataflow interface \(such as that found in Khoros and AVS\).) 1359 SB
32 0 0 42 42 0 0 0 42 /Symbol font
gs 440 3231 0 0 CB
421 1056 19 (\267) 19 SB
gr
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
496 1060 1199 (It will have on-line documentation as well as hard-copy documentation) 1199 SB
32 0 0 42 42 0 0 0 42 /Symbol font
gs 440 3231 0 0 CB
421 1156 19 (\267) 19 SB
gr
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
496 1160 716 (It will be easy for  users to write new tasks) 716 SB
32 0 0 42 42 0 0 0 42 /Symbol font
gs 440 3231 0 0 CB
421 1256 19 (\267) 19 SB
gr
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
496 1260 1336 (It will be possible for users to enter algorithms \(as in IDL and PV-Wave\) at the) 1336 SB
496 1310 1161 (user interface. For example, a user might write ImageA=ImageB/5 +) 1161 SB
496 1360 278 (SQRT\(ImageC\).) 278 SB
32 0 0 42 42 0 0 0 42 /Symbol font
gs 440 3231 0 0 CB
421 1456 19 (\267) 19 SB
gr
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
496 1460 1224 (It will be distributed freely \(using a gnu-style license\) via anonymous ftp) 1224 SB
32 0 0 42 42 0 0 0 42 /Symbol font
gs 440 3231 0 0 CB
421 1556 19 (\267) 19 SB
gr
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
496 1560 1409 (Regional and international user groups will be set up to encourage dissemination of) 1409 SB
496 1610 839 (information and feedback to consortium members) 839 SB
32 0 0 42 42 0 0 0 38 /Times-Italic /font31 ANSIFont font
421 1710 429 (What the user doesn't see) 429 SB
32 0 0 42 42 0 0 0 42 /Symbol font
gs 440 3231 0 0 CB
421 1806 19 (\267) 19 SB
gr
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
496 1810 1397 (It will use object oriented techniques to maximise maintainability and adaptability,) 1397 SB
496 1860 374 (and be written in C++) 374 SB
32 0 0 42 42 0 0 0 42 /Symbol font
gs 440 3231 0 0 CB
421 1956 19 (\267) 19 SB
gr
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
496 1960 901 (It will use the X window system  for display purposes) 901 SB
32 0 0 42 42 0 0 0 42 /Symbol font
gs 440 3231 0 0 CB
421 2056 19 (\267) 19 SB
gr
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
496 2060 1122 (It will be portable to most Unix \(strictly, Posix-compliant\) systems) 1122 SB
32 0 0 42 42 0 0 0 42 /Symbol font
gs 440 3231 0 0 CB
421 2156 19 (\267) 19 SB
gr
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
496 2160 941 (It will adhere to industry standards \(Posix, X, C++, etc\)) 941 SB
32 0 0 42 42 0 0 0 42 /Symbol font
gs 440 3231 0 0 CB
421 2256 19 (\267) 19 SB
gr
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
496 2260 1251 (Code will be kept simple by taking advantage of operating system features) 1251 SB
32 0 0 42 42 0 0 0 42 /Symbol font
gs 440 3231 0 0 CB
421 2356 19 (\267) 19 SB
gr
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
496 2360 1310 (Wheels will be borrowed rather than re-invented where possible \(e.g. Khoros,) 1310 SB
496 2410 200 (InterViews\)) 200 SB
1 #C
statusdict begin /manualfeed false store end
EJ RS
%%PageTrailer
%%PageResources: font Symbol
%%+ font Times-Italic
%%+ font Times-Roman
%%Page: 4 4
%%PageResources: (atend)
SS
0 0 25 11 798 1100 300 SM
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
0 0 0 fC
421 610 847 (2.3. WHO WILL WRITE THE APPLICATIONS?) 847 SB
421 710 1357 (Fig 1. shows the three levels of the AIPS++ software. At the centre is the core of) 1357 SB
421 760 1302 (AIPS++, containing efficient low-level software, written by computer science) 1302 SB
421 810 1332 (specialists. This core includes libraries, data structures, and the interface to the) 1332 SB
421 860 1469 (operating system. Surrounding the core are the "official applications", which constitute) 1469 SB
421 910 1370 (the bulk of the code seen by most users, and which are distributed by the AIPS++) 1370 SB
421 960 1467 (regional centres. These applications include all the essential astronomical and imaging) 1467 SB
421 1010 1485 (tasks, such as tasks to edit, image, and display data, and conform strictly to standards of) 1485 SB
421 1060 655 (coding, documentation, and reliability.) 655 SB
1 lc
1 lj
0 0 0 pC
6 5 SP
427 409 1095 1673 E
S
n
255 255 255 fC
/fm 256 def
258 253 1104 1537 E
1 F
S
n
107 107 1095 1429 E
1 F
S
n
32 0 0 43 43 0 0 0 41 /Helvetica /font12 ANSIFont font
0 0 0 fC
gs 1159 1068 538 1115 CB
1025 1400 156 (CS core) 156 SB
gr
gs 1159 1068 538 1115 CB
905 1614 380 (Official Applications) 380 SB
gr
gs 1159 1068 538 1115 CB
882 1886 426 (Unofficial Applications) 426 SB
gr
0 lc
0 lj
1074 1007 580 1170 B
S
n
32 0 0 43 43 0 0 0 41 /Helvetica-Oblique /font19 ANSIFont font
gs 1159 1068 538 1115 CB
677 2113 816 (Fig 1: The three layers of AIPS++ software) 816 SB
gr
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
571 2235 1322 (Finally, there exists a layer of "unofficial applications". These are applications) 1322 SB
421 2285 1458 (freely written by users without having to conform to the standards of coding which are) 1458 SB
421 2335 1446 (enforced for the officially distributed code. Use of these unofficial applications will be) 1446 SB
421 2385 1477 (strictly at the user's own risk. However, such tasks which prove to be particularly useful) 1477 SB
421 2435 1349 (or of wide appeal may be adopted by the AIPS++ centre, recoded to the AIPS++) 1349 SB
421 2485 844 (standards, and incorporated into the official layer.) 844 SB
421 2585 965 (2.4. OBJECT-ORIENTED PROGRAMMING AND C++) 965 SB
421 2635 1477 (AIPS++ will be written in the object-oriented language C++. It is not my intention here) 1477 SB
421 2685 1460 (to give a tutorial on object-oriented programming or C++, but rather to give the casual) 1460 SB
421 2735 1176 (reader some flavour of what is involved in object-oriented techniques.) 1176 SB
1 #C
statusdict begin /manualfeed false store end
EJ RS
%%PageTrailer
%%PageResources: font Helvetica
%%+ font Helvetica-Oblique
%%+ font Times-Roman
%%Page: 5 5
%%PageResources: (atend)
SS
0 0 25 11 798 1100 300 SM
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
0 0 0 fC
571 560 1326 (Traditional programming \(function-oriented programming, or FOP\) has relied) 1326 SB
421 610 1437 (on a functional approach, where emphasis is given to the functions \(corresponding to) 1437 SB
421 660 1318 (verbs or subroutines\) rather than the objects \(nouns, common blocks, and data) 1318 SB
421 710 1469 (structures\), which tend to be added as an afterthought. In object-oriented programming) 1469 SB
421 760 1486 (\(or OOP\), on the other hand,  the design is built around the nouns rather than the verbs.) 1486 SB
421 810 1423 (FOP will generally produce a number of subroutines within which are embedded the) 1423 SB
421 860 1463 (objects \(data structures\). In OOP, a number of objects \(or classes\) are produced, within) 1463 SB
421 910 1447 (which are embedded instructions \(the methods\) which tell  how to perform operations) 1447 SB
421 960 149 (on them.) 149 SB
571 1010 1321 (In principle there is no particular reason why this should offer any benefit, but) 1321 SB
421 1060 1364 (in practice it is found that object-oriented code is less complex, and carries fewer) 1364 SB
421 1110 1403 (connections between modules. In FOP the number of connections between modules) 1403 SB
421 1160 1441 (tends to increase as the factorial of the number of modules, whereas in OOP there are) 1441 SB
421 1210 1406 (far fewer interconnections. While FOP is appropriate for small or medium software) 1406 SB
421 1260 1463 (projects, in large software projects it tends to lead to complex code which is difficult to) 1463 SB
421 1310 338 (maintain and adapt.) 338 SB
571 1360 1257 (As well as this primary difference, there are a number of other elements of) 1257 SB
421 1410 273 (OOP as follows.) 273 SB
32 0 0 42 42 0 0 0 38 /Times-Italic /font31 ANSIFont font
421 1510 266 (Encapsulation. ) 266 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
687 1510 1096 (Each module is self-contained, so that it can be modified without) 1096 SB
421 1560 1482 (affecting the rest of the package. This also enhances the reliability because each module) 1482 SB
421 1610 1469 (can be thoroughly tested on its own. Maintenance is also improved by the consequently) 1469 SB
421 1660 441 (limited scope of variables.) 441 SB
32 0 0 42 42 0 0 0 38 /Times-Italic /font31 ANSIFont font
421 1760 195 (Inheritance) 195 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
616 1760 1285 (. Objects can inherit properties of a more general class. For example, for the) 1285 SB
421 1810 1484 (class of animals we can define a number of functions \(eating, breathing, etc.\) which can) 1484 SB
421 1860 1455 (be inherited by another class \(mammals\) without having to rewrite the code. A further) 1455 SB
421 1910 1431 (class \(cows\) could then be defined which would inherit the properties of animals and) 1431 SB
421 1960 1350 (mammals, but would also have its own special functions defined \(mooing\). This) 1350 SB
421 2010 1400 (approach reduces the volume of code by eliminating redundancy, and consequently) 1400 SB
421 2060 474 (reduces the number of bugs.) 474 SB
32 0 0 42 42 0 0 0 38 /Times-Italic /font31 ANSIFont font
421 2160 266 (Polymorphism. ) 266 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
687 2160 1125 (Polymorphism is the ability of a function to choose the appropriate) 1125 SB
421 2210 1447 (method depending on what it's operating upon. For example a "Draw" function might) 1447 SB
421 2260 1479 (be defined to act on a class of "Picture" objects, and it will then be defined for each type) 1479 SB
421 2310 1470 (of object \("Circle", "ContourMap", etc\) inherited from Picture. When called, Draw will) 1470 SB
421 2360 1466 (automatically pick the right function depending on the object, and new types of Picture) 1466 SB
421 2410 1466 (can be added without changing the applications which use Draw. Thus the writer of an) 1466 SB
421 2460 1449 (application who wants to draw an object on the screen doesn't have to worry about the) 1449 SB
421 2510 1368 (internal details of the objects being drawn. This results in less complex and more) 1368 SB
421 2560 482 (understandable applications.) 482 SB
32 0 0 42 42 0 0 0 38 /Times-Italic /font31 ANSIFont font
421 2660 245 (Design Tools. ) 245 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
666 2660 1165 (A feature of OOP is that the balance between design time and coding) 1165 SB
421 2710 1433 (time is shifted far more towards design than in FOP, so that as much as half the time) 1433 SB
421 2760 1426 (dedicated to the project may be spent in design rather than construction. This is very) 1426 SB
1 #C
statusdict begin /manualfeed false store end
EJ RS
%%PageTrailer
%%PageResources: font Times-Italic
%%+ font Times-Roman
%%Page: 6 6
%%PageResources: (atend)
SS
0 0 25 11 798 1100 300 SM
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
0 0 0 fC
421 560 1473 (frustrating to those of us who expect to sit down and write code on day one of a project,) 1473 SB
421 610 843 (but will  hopefully result  in a much better design.) 843 SB
571 660 1281 (Finally, a disadvantage for many astronomers brought up on Fortran will be) 1281 SB
421 710 1481 (their unfamiliarity with object-oriented programming. However, undergraduates now in) 1481 SB
421 760 1307 (university are being taught C and C++ rather than Fortran, and so to the next) 1307 SB
421 810 1476 (generation of graduate students it will be the Fortran rather than the C++ which will be) 1476 SB
421 860 743 (strange and unfamiliar. A Fortran interface ) 743 SB
32 0 0 42 42 1 0 0 38 /Times-Roman /font32 ANSIFont font
1164 860 65 (will) 65 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1229 860 636 ( be provided to write tasks in Fortran,) 636 SB
421 910 1013 (but this will clearly be less powerful than the C++ interface.) 1013 SB
32 0 0 42 42 0 0 0 39 /Times-Bold /font29 ANSIFont font
991 1010 348 (3. Project structure) 348 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
421 1110 564 (3.1. PROJECT MANAGEMENT) 564 SB
421 1160 1373 (Management takes on an even more important role in a project spread over seven) 1373 SB
421 1210 1345 (institutions than it does in other projects, and we have worked hard to represent) 1345 SB
421 1260 1489 (interests of all the institutions while trying to avoid "software designed by a committee".) 1489 SB
571 1310 1305 (The management structure is shown in Fig. 2. Policy decisions are taken by a) 1305 SB
421 1360 1456 (steering committee consisting of a representative from each institution, but the day-to-) 1456 SB
421 1410 1439 (day management is by a team consisting of a project manager, project scientist, and a) 1439 SB
421 1460 1295 (project computer scientist, resident at the Project Office \(currently at NRAO,) 1295 SB
421 1510 1394 (Charlottesville, Virginia\). Programmers at the individual sites report to the project) 1394 SB
421 1560 1483 (manager, and are allocated "software contracts" which remove any ambiguity over what) 1483 SB
421 1610 933 (is expected from them and when it should be delivered.) 933 SB
1 lc
1 lj
0 0 0 pC
6 3 SP
255 255 255 fC
/fm 256 def
830 1748 1357 2030 30 30 RR
1 F
S
n
830 2081 1357 2394 30 30 RR
1 F
S
n
66 60 1084 2214 E
1 F
S
n
61 61 1215 2307 E
1 F
S
n
61 61 951 2313 E
1 F
S
n
1084 2031 M 0 121 1 PP
S
n
998 2270 M 28 -26 1 PP
S
n
1139 2244 M 28 23 1 PP
S
n
1084 2276 M 0 242 1 PP
S
n
724 2520 M 532 0 1 PP
S
n
724 2520 M 0 119 1 PP
S
n
934 2520 M 0 119 1 PP
S
n
1142 2520 M 0 119 1 PP
S
n
2 1 SP
gs 118 1 1256 2520 CB
1256 2520 M 117 0 1 PP
S
n
gr
32 0 0 40 40 0 0 0 38 /Helvetica /font12 ANSIFont font
0 0 0 fC
gs 1297 1182 542 1658 CB
992 1814 148 (Steering) 148 SB
gr
gs 1297 1182 542 1658 CB
978 1862 192 (Committee) 192 SB
gr
gs 1297 1182 542 1658 CB
954 2096 239 (Project Office) 239 SB
gr
gs 437 107 1084 2091 CB
1084 2197 M 436 -106 1 PP
S
n
gr
gs 1297 1182 542 1658 CB
1448 2036 291 (Project Manager) 291 SB
gr
gs 176 31 779 2281 CB
954 2311 M -175 -30 1 PP
S
n
gr
gs 1297 1182 542 1658 CB
651 2228 124 (Project) 124 SB
gr
gs 1297 1182 542 1658 CB
607 2286 205 (Astronomer) 205 SB
gr
gs 295 81 1223 2228 CB
1223 2308 M 294 -80 1 PP
S
n
gr
gs 1297 1182 542 1658 CB
1454 2175 320 (Project Computer ) 320 SB
gr
gs 1297 1182 542 1658 CB
667 2639 119 (Centre) 119 SB
gr
gs 1297 1182 542 1658 CB
683 2679 82 (Staff) 82 SB
gr
gs 1297 1182 542 1658 CB
859 2639 150 (Remote ) 150 SB
gr
gs 1297 1182 542 1658 CB
901 2682 62 (site) 62 SB
gr
gs 1297 1182 542 1658 CB
1067 2639 150 (Remote ) 150 SB
gr
gs 1297 1182 542 1658 CB
1109 2682 62 (site) 62 SB
gr
0 lc
0 lj
6 3 SP
1214 1125 583 1711 B
S
n
32 0 0 47 47 0 0 0 42 /Times-Italic /font31 ANSIFont font
gs 1297 1182 542 1658 CB
815 2757 774 (Figure 2. Project Management Structure) 774 SB
gr
32 0 0 40 40 0 0 0 38 /Helvetica /font12 ANSIFont font
gs 1297 1182 542 1658 CB
1528 2222 151 (Scientist) 151 SB
gr
1 #C
statusdict begin /manualfeed false store end
EJ RS
%%PageTrailer
%%PageResources: font Helvetica
%%+ font Times-Bold
%%+ font Times-Italic
%%+ font Times-Roman
%%Page: 7 7
%%PageResources: (atend)
SS
0 0 25 11 798 1100 300 SM
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
0 0 0 fC
421 560 648 (3.2. PROJECT COMMUNICATIONS) 648 SB
421 610 1484 (Good communications are obviously important for this project, and take place at several) 1484 SB
421 660 1354 (levels. It should be stressed that we rely heavily on Internet for all our electronic) 1354 SB
421 710 1469 (communications, and it is doubtful whether a project like this would have been feasible) 1469 SB
421 760 1311 (a few years ago before the near-universal electronic access that we now enjoy.) 1311 SB
571 810 1238 (Much of the actual work is done at the individual institutions, except that) 1238 SB
421 860 1414 (several programmers spent a few months at Charlottesville in early 1992, where the) 1414 SB
421 910 1430 (initial problem analysis and design phases took place. Throughout the lifetime of the) 1430 SB
421 960 1469 (project, occasional exchanges of programmers between institutions will continue. Code) 1469 SB
421 1010 1387 (and documentation written by programmers at any one institution is automatically) 1387 SB
421 1060 1390 (transferred overnight to all other institutions, so that the code at each institution is) 1390 SB
421 1110 1236 (never more than a few hours out of step with that at any other institution.) 1236 SB
571 1160 1262 (Most of the business of the steering committee \(and of most of the AIPS++) 1262 SB
421 1210 1402 (team\) is by electronic mail, with only three or four face-to-face meetings each year,) 1402 SB
421 1260 1425 (which are rotated around the participating institutions. In addition, we have recently) 1425 SB
421 1310 1432 (started monthly telephone conferences, which are surprisingly successful for a multi-) 1432 SB
421 1360 1447 (continent project like this, although some members may respond rather sleepily to the) 1447 SB
421 1410 596 (early-morning brightness of others.) 596 SB
32 0 0 42 42 0 0 0 39 /Times-Bold /font29 ANSIFont font
882 1510 567 (4.  Current status of the Project) 567 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
421 1610 1472 (The construction of AIPS++ started on 1 January 1992, and a system will be completed) 1472 SB
421 1660 1303 (by the end of 1994 which will largely replace the main functionality of AIPS.) 1303 SB
gs 225 56 547 1753 CB
567 1761 142 (1 Jan 92) 142 SB
gr
gs 1029 56 775 1753 CB
796 1761 241 (Project started) 241 SB
gr
0 0 0 fC
/fm 256 def
5 5 541 1753 B
1 F
n
5 5 541 1753 B
1 F
n
224 5 547 1753 B
1 F
n
5 5 772 1753 B
1 F
n
1025 5 778 1753 B
1 F
n
5 5 1804 1753 B
1 F
n
5 5 1804 1753 B
1 F
n
5 49 541 1759 B
1 F
n
2 49 772 1759 B
1 F
n
5 49 1804 1759 B
1 F
n
gs 225 53 547 1809 CB
567 1814 157 (Q1&2 92) 157 SB
gr
gs 1029 53 775 1809 CB
796 1814 751 (Programmers assemble at Charlottesville for) 751 SB
gr
gs 1029 53 775 1859 CB
796 1864 350 (       "indoctrination") 350 SB
gr
5 2 541 1809 B
1 F
n
224 2 547 1809 B
1 F
n
2 2 772 1809 B
1 F
n
1028 2 775 1809 B
1 F
n
5 2 1804 1809 B
1 F
n
5 99 541 1812 B
1 F
n
2 99 772 1812 B
1 F
n
5 99 1804 1812 B
1 F
n
gs 225 53 547 1912 CB
567 1917 157 (Q3&4 92) 157 SB
gr
gs 1029 53 775 1912 CB
796 1917 668 (Design basic math classes, tools, kernel) 668 SB
gr
gs 1029 53 775 1962 CB
796 1967 889 (Construct of code/documentation distribution system) 889 SB
gr
gs 1029 53 775 2012 CB
796 2017 354 (Select of CASE tools) 354 SB
gr
5 2 541 1912 B
1 F
n
224 2 547 1912 B
1 F
n
2 2 772 1912 B
1 F
n
1028 2 775 1912 B
1 F
n
5 2 1804 1912 B
1 F
n
5 149 541 1915 B
1 F
n
2 149 772 1915 B
1 F
n
5 149 1804 1915 B
1 F
n
gs 225 53 547 2065 CB
567 2070 157 (Q1&2 93) 157 SB
gr
gs 1029 53 775 2065 CB
796 2070 372 (Finalise kernel design) 372 SB
gr
gs 1029 53 775 2115 CB
796 2120 703 (Complete database system, prototype user) 703 SB
gr
gs 1029 53 775 2165 CB
796 2170 826 (      interface, on-line help, simple imaging tools.) 826 SB
gr
gs 1029 53 775 2215 CB
796 2220 647 (Construct prototype to take FITS files,) 647 SB
gr
gs 1029 53 775 2265 CB
796 2270 410 (     FFT and image them) 410 SB
gr
5 2 541 2065 B
1 F
n
224 2 547 2065 B
1 F
n
2 2 772 2065 B
1 F
n
1028 2 775 2065 B
1 F
n
5 2 1804 2065 B
1 F
n
5 249 541 2068 B
1 F
n
2 249 772 2068 B
1 F
n
5 249 1804 2068 B
1 F
n
gs 225 53 547 2318 CB
567 2323 123 (Mid 93) 123 SB
gr
gs 1029 53 775 2318 CB
796 2323 668 (Start construction of major applications) 668 SB
gr
gs 1029 53 775 2368 CB
796 2373 502 (Construct VLBA applications) 502 SB
gr
5 2 541 2318 B
1 F
n
224 2 547 2318 B
1 F
n
2 2 772 2318 B
1 F
n
1028 2 775 2318 B
1 F
n
5 2 1804 2318 B
1 F
n
5 99 541 2321 B
1 F
n
2 99 772 2321 B
1 F
n
5 99 1804 2321 B
1 F
n
gs 225 53 547 2421 CB
567 2426 122 (End 93) 122 SB
gr
gs 1029 53 775 2421 CB
796 2426 880 (First major subsystems available for "friendly" users) 880 SB
gr
5 2 541 2421 B
1 F
n
224 2 547 2421 B
1 F
n
2 2 772 2421 B
1 F
n
1028 2 775 2421 B
1 F
n
5 2 1804 2421 B
1 F
n
5 49 541 2424 B
1 F
n
2 49 772 2424 B
1 F
n
5 49 1804 2424 B
1 F
n
gs 225 53 547 2474 CB
567 2479 123 (Mid 94) 123 SB
gr
gs 1029 53 775 2474 CB
796 2479 522 (Operational single-dish system) 522 SB
gr
5 2 541 2474 B
1 F
n
224 2 547 2474 B
1 F
n
2 2 772 2474 B
1 F
n
1028 2 775 2474 B
1 F
n
5 2 1804 2474 B
1 F
n
5 49 541 2477 B
1 F
n
2 49 772 2477 B
1 F
n
5 49 1804 2477 B
1 F
n
gs 225 53 547 2527 CB
567 2532 84 (1994) 84 SB
gr
gs 1029 53 775 2527 CB
796 2532 669 (Design and construct more applications) 669 SB
gr
5 2 541 2527 B
1 F
n
224 2 547 2527 B
1 F
n
2 2 772 2527 B
1 F
n
1028 2 775 2527 B
1 F
n
5 2 1804 2527 B
1 F
n
5 49 541 2530 B
1 F
n
2 49 772 2530 B
1 F
n
5 49 1804 2530 B
1 F
n
gs 225 53 547 2580 CB
567 2585 184 (1 Jan 1995) 184 SB
gr
gs 1029 53 775 2580 CB
796 2585 553 (Release AIPS++ to general users) 553 SB
gr
gs 1029 53 775 2630 CB
796 2635 337 (Cease AIPS support) 337 SB
gr
5 2 541 2580 B
1 F
n
224 2 547 2580 B
1 F
n
2 2 772 2580 B
1 F
n
1028 2 775 2580 B
1 F
n
5 2 1804 2580 B
1 F
n
5 99 541 2583 B
1 F
n
2 99 772 2583 B
1 F
n
5 99 1804 2583 B
1 F
n
32 0 0 42 42 0 0 0 38 /Times-Italic /font31 ANSIFont font
gs 1030 53 774 2733 CB
796 2738 546 (Table 2. The AIPS++ Timetable) 546 SB
gr
5 2 541 2683 B
1 F
n
224 2 547 2683 B
1 F
n
2 2 772 2683 B
1 F
n
2 2 775 2683 B
1 F
n
1025 2 778 2683 B
1 F
n
5 2 1804 2683 B
1 F
n
5 149 541 2686 B
1 F
n
5 5 541 2836 B
1 F
n
5 5 541 2836 B
1 F
n
225 5 547 2836 B
1 F
n
5 5 773 2836 B
1 F
n
1024 5 779 2836 B
1 F
n
5 149 1804 2686 B
1 F
n
5 5 1804 2836 B
1 F
n
5 5 1804 2836 B
1 F
n
1 #C
statusdict begin /manualfeed false store end
EJ RS
%%PageTrailer
%%PageResources: font Times-Bold
%%+ font Times-Italic
%%+ font Times-Roman
%%Page: 8 8
%%PageResources: (atend)
SS
0 0 25 11 798 1100 300 SM
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
0 0 0 fC
421 660 1345 (Thereafter, additional applications will continue to be added to AIPS++ over its) 1345 SB
421 710 1464 (estimated ten to fifteen-year lifetime.   Table 2 gives a brief summary of the milestones) 1464 SB
421 760 623 (in the development cycle of AIPS++.) 623 SB
32 0 0 42 42 0 0 0 39 /Times-Bold /font29 ANSIFont font
1045 860 240 (5. Conclusion) 240 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
421 960 1473 (AIPS++ is an ambitious project, tackling not only an unfamiliar software methodology,) 1473 SB
421 1010 1452 (but also the challenge of managing a large project distributed over seven astronomical) 1452 SB
421 1060 1456 (institutions spread over four continents. We do not expect the path to completion to be) 1456 SB
421 1110 1410 (smooth, but signs so far give us cause for optimism that we will achieve our goal. If) 1410 SB
421 1160 1487 (AIPS++ is the success that we hope, then it will be interesting to see the extent to which) 1487 SB
421 1210 1286 (this type of collaborative project becomes more common in the astronomical) 1286 SB
421 1260 1459 (community. Such collaborative projects not only have the potential  to reach goals that) 1459 SB
421 1310 1476 (are beyond the scope of any one institution, but also have the potential to achieve cross-) 1476 SB
421 1360 903 (fertilisation between both disciplines and institutions.) 903 SB
571 1460 1313 (For further information on the AIPS++ project, all code and documentation is) 1313 SB
421 1510 1464 (available by anonymous ftp from aips2.cv.nrao.edu. Of particular interest is the project) 1464 SB
421 1560 737 (book, stored as  /pub/aips++/docs/Pbook.ps.) 737 SB
1 #C
statusdict begin /manualfeed false store end
EJ RS
%%PageTrailer
%%PageResources: font Times-Bold
%%+ font Times-Roman
%%Trailer
SVDoc restore
end
%%Pages: 8
% TrueType font name key:
%    MSTT31c1e6 = 3fc7DTimes New RomanF0000002a000001900000
%    MSTT31c1f3 = 3fc7DTimes New RomanF0000002a000002bc0000
%    MSTT31c200 = 3fc7DTimes New RomanF0000002a000001900001
%    MSTT31c20d = 3fc7DTimes New RomanF0000001c000001900000
%    MSTT31c22e = 3fc7DTimes New RomanF0000002f000001900001
%    MSTT31c23b = 3fc7DTimes New RomanF00000012000001900000
%    MSTT31c248 = 3fc7DTimes New RomanF00000021000001900000
%%DocumentSuppliedResources: procset Win35Dict 3 1

%%DocumentNeededResources: font Helvetica
%%+ font Helvetica-Oblique
%%+ font Symbol
%%+ font Times-Bold
%%+ font Times-Italic
%%+ font Times-Roman

%%EOF


