\documentclass[11pt]{article}
\usepackage{html}
\include{ahrecipe}
\begin{document}
\begin{ahrecipe}{Read an ASCII data table into \textsf{AIPS++}
and make plots of the data}

\begin{rawhtml}
<body bgcolor="#ffffff">
\end{rawhtml}



%\argoals
\begin{rawhtml}
<font face=helvetica size="+2" color="#cc0000">
Goals:</font>
\end{rawhtml}
{Read an ASCII data table into \textsf{AIPS++}
and make plots of the data.}

%\arusing
\begin{rawhtml}
<font face=helvetica size="+2" color="#cc0000">
Using:</font>
\end{rawhtml}
{\emph{tablefromascii} function, the \emph{Table} system, 
and the \emph{PGPlotter}.}


%\arresults
\begin{rawhtml}
<font face=helvetica size="+2" color="#cc0000">
Results:</font>
\end{rawhtml}
{Data in \emph{Glish} vectors and plots of these data.}

%\arassume
\begin{rawhtml}
<font face=helvetica size="+2" color="#cc0000">
Assume:</font>
\end{rawhtml}
{You have an input file of ASCII data in columns.  In this recipe the ASCII 
data file 
\begin{rawhtml}
<a href="../sampleData.txt">sampleData.txt</a>
\end{rawhtml}
has three columns of numbers.  The \emph{tablefromascii} function will
automatically decipher the format of the table in this example, but it is also 
possible to specify the format explicitly.  See the documentation of 
\emph{tablefromascii} in the \textsf{AIPS++} User's Reference Manual for 
details. The ASCII data file must be in the directory from which you started 
\textsf{AIPS++}}.

%\arscript
\begin{rawhtml}
<font face=helvetica size="+2" color="#cc0000">
Script:</font>
<a href="../recipe1.g.txt">recipe1.g</a>
\end{rawhtml}

\begin{arexample}
\arline{include~'pgplotter.g';}
{Include the necessary startup script for the pgplotter tool.}

\arline{t~:=~tablefromascii('sample',
'sampleData.txt',,T);}
{Put ASCII data into an 
\textsf{AIPS++} table using the \textsf{AIPS++}
\emph{tablefromascii} function. 
For details on what you can do with \textsf{AIPS++}
tables see the User's Reference Manual.

Invoking \emph{tablefromascii} results in an \textsf{AIPS++} Table named 
\texttt{sample} written to disk. Henceforth the table \texttt{t} can be 
recalled using \emph{t~:=~table('sample')}, without the need for this 
conversion step.}

\arline{t.colnames();}
{Show column names defined in the table}

\arline{\emph {Column1~Column2~Column3}}
{Resulting list of column names.}

\arline{x~:=~t.getcol('Column1');
y1~:=~t.getcol('Column2');
y2~:=~t.getcol('Column3');}
{Extract data from the columns and assign them to vectors using 
\textit{getcol} on the table \texttt{t}.}

\arline{pg~:=~pgplotter();}
{Create a pgplotter tool named \texttt{pg} and open a plotting window 
on the screen.}

\arline{pg.plotxy1(x,y1); 
pg.plotxy1(x,y2);} {Plot the data.}
\end{arexample}


In the Pgplotter window, {\it File} can be used to preview, print, save, and 
load the plot.  The {\it Tools} menu includes a zoom feature.  The plot
commands can be modified using the {\it Edit} menu options.

Contributions of recipes and other material for AIPS++ documentation
are welcome.  Please send them to tcornwel@nrao.edu.
\end{ahrecipe}
\end{document}
