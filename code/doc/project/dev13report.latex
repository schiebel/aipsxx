\documentclass[11pt]{article}
\usepackage{html, epsf, epsfig}
\input{aips2defs.tex}

\newcommand{\devplanURL}{../../notes/226/226.html}

%
\begin{document}
\title{\bf \aipspp\ report: Development cycle 1.3}
\author{T.J. Cornwell, NRAO}
\date{2000 May 1}

\maketitle

\tableofcontents

\section{Introduction}

Development now proceeds via a 6 month cycle, the details of which
were given in the last report. A development plan for this cycle was
drawn up and circulated (\htmladdnormallink{\aipspp\ Note
226}{\devplanURL}. Reporting is also based on the development cycle.

\section{Overview of work in this cycle}

In this document, we report on the work accomplished in this
development cycle.  The major accomplishment this cycle was the
issuing and support of the first public release (version 1.2), and the
preparation of the second public release (version 1.3). In addition,
we continue to support other activities such as the GBT commissioning,
and the HIA ACSIS development.

\subsection{Single Dish support}

Jim Braatz, Joe McMullin and Bob Garwood continue to focus on support
of the GBT and development of the dish environment for general single
dish analysis in aips++.  There continue to be regular visits by
Garwood and McMullin to Green Bank and Braatz to Charlottesville.
Braatz has primary responsibility for GBT support while McMullin has
primary responsibility for dish development.  The group also supports
the efforts by the Arecibo staff to reduce Arecibo data through
dish/aips++.

Users in Green Bank have utilized \aipspp\ for a number of projects
including radiative transfer code, analyzing spectral processor data,
displaying GBT encoder data, and developing GBT user interface tools.
A number of utility functions were added to the GBT commissioning tool
in response to user feedback.  Braatz presented a paper on the aips++
commissioning tool at the January AAS meeting.

Garwood continued to spend a fair amount of effort on the GBT data
filler.  This takes the various GBT FITS files produced during an
observation and fills them into an \aipspp\ MeasurementSet.  The
helper classes written during this period should make maintenance
much simpler and they should prove useful for other fillers.

The non-GBT focus this cycle was primarily on responding to reported
defects and enhancement requests from users of dish.  We gained a number
of users when members of the Arecibo staff began actively using
\aipspp\ and dish.  McMullin visited Arecibo in February 2000 to talk
to them about using dish and to listen to them describe their needs.
User feedback from Arecibo users and Green Bank users will guide our
development plan for the next development cycle.

McMullin gave the second in a planned series of talks on \aipspp\ to the
NRAO-CV staff.  This talk was also carried on the NRAO video conferencing
system where it was seen by staff in Green Bank and Socorro.  This talk
covered the basics of using dish.  

\subsection{Synthesis support}

Priorities at present include: i) wider
scientific use of the package; ii) broadening of the existing
thin-path capabilities for connected-element arrays; iii) addition of
thin-path processing for VLBI; iv) time-critical local priorities
(e.g. TMS commissioning), and v) basic automated and real-time
imaging. Actions this cycle in synthesis have been scheduled in
keeping with these priorities.

Broadening of thin-path capabilities has occurred in several areas.
These include: i) the completion of the infrastructure required to
fully implement the MS v2.0 data format (M. Wieringa); ii) the
addition of new or expanded features in the VLA (R. Marson) and ATCA
fillers (M. Wieringa and F. Badia); iii) higher-level integration of
calibration and imaging facilities (A. Kemball), and iv) upgrade of
support for source component models, including projection (R. Marson)
The MS v2.0 infrastructure has been checked-in to the system, to allow
time to migrate data fillers and converters to the new standard, for a
switch-over date in April 2000, as soon after issuing the second
public release as practical. This format has resulted from a united
effort throughout the consortium to provide a generic interferometric
and single-dish data format.

As part of the overall thin-path strategy, advanced development has
continued to be scheduled in targeted areas, primarily to prototype or
complete new data reduction capabilities within the current synthesis
framework. As part of this effort, work has continued in mosaicing
development (M. Holdaway/T. Cornwell), 3-D/wide-field imaging
(K. Golap/T. Cornwell) and single-dish/OTF gridding within the
standard synthesis framework (T. Cornwell/B. Garwood). Planning has
been completed for development of a standard holography reduction tool
to extend existing tools for commissioning the GBT holography back-end
(J. Braatz). A significant effort has also been made in extending the
current simulation capabilities (M. Holdaway), both to allow testing
of current synthesis capabilities, but also to meet simulation needs
for ALMA and SKA. In mosaicing, work has continued in completing
optimal mosaicing weighting, MEM and multi-resolution deconvolution
and general testing. Further advanced development in synthesis is
described in the parallelization section elsewhere in this report.

A new focus this cycle has been in the area of pipeline development,
here defined to cover both automated off-line reduction as well as
real-time imaging. Both these applications, in keeping with standard
interactive reduction, use many common data reduction components from
the synthesis infrastructure. The maturity of the synthesis library
has allowed these efforts to start at several consortium telescopes,
but there are significant gains to be made in sharing and coordinating
common infrastructure in this area, as well as in expedited completion
of the missing core synthesis capabilities. A meeting on pipeline
development was held in January, 2000 to review scientific
requirements in this area and coordinate common development. This was
a successful meeting, and has led to the establishment of a
coordination group and mechanism for those parts of development which
can be shared. At present, common scientific requirements and
infrastructure components are being distilled from discussions and
presentations at the meeting.

Oleg Smirnov joined the \aipspp\ group as a developer at NFRA during
this development cycle.  His first assignment has been the
implementation of an \aipspp\ interface to the PIM ionosphere model, and
integration of an initial version in the existing calibration
infrastructure.  Signficant progress in this area was achieved during
a successful visit Oleg made to the AOC early this year.

In the closing stages of this development cycle, a significant effort
has been made in release testing and defect correction, in common with
the rest of the project.

Future work in synthesis in 2000 will follow the overall priorities
enumerated above. This will continue the expansion of the thin-path
capabilities as described, in addition to the new efforts in VLBI and
pipeline development. The area of VLBI has developed slower than
desired, mostly due to personnel difficulties. However, these problems
are now alleviated, and we expect significant progress in this area in
the next development cycle.

\subsection{Parallelization}

The immediate objective remains the completion of several key data
reduction projects to demonstrate the scientific usefulness of the
parallelization capabilities. These projects selected for this effort
represent mosaicing, 3-D/wide-field imaging, and large, multi-epoch
VLBI observations. Parallelization development tasks this cycle have
been chosen primarily to support this effort.

A document requesting computer policy accommodations, primarily in
the area of persistent (non-batch) disk storage, was prepared by
D. Roberts and submitted to the policy committee at NCSA. This was
followed by a time allocation request to cover the key projects
specified above. We have also agreed the operational procedures to
be used in reducing the key projects as part of this effort.

W. Young completed a port of \aipspp\ to full 64-bit operation under
the SGI native compiler, to remove the existing 32-bit limit of 1 GB
on memory allocation, which is anomalously low compared to the
available memory on large high-performance systems, and has restricted
key project processing in mosaicing in the past. A change proposal and
\aipspp\ document (Note 227) has been prepared to unify 64-bit
conventions within \aipspp\ (W. Young / A. Kemball). D. Roberts has
implemented a script for the M33 mosaicing key project, to ensure that
large imaging using this infrastructure is working correctly.

The parallelization infrastructure classes were updated to their next
major revision to include greater support for multi-algorithm
parallelization (A. Kemball / W. Young). This is required for
3-D/wide-field parallelization. K. Golap has continued work in this
area, both verifying the correctness of the serial 3-D imaging with
T. Cornwell, but also in implementing prototype parallelized code in
this area. This has overlapped with continuing parallel I/O
instrumentation work (D. Roberts) using the Pablo library. 

Parallel I/O work were presented as a poster at ADASS'99 by
D. Roberts. Trials of statement-level parallelization have also
continued using OpenMP (D. Roberts) as part of the infrastructure
development.

The NT port has continued in this cycle (P. Cortes), and is making
good progress. A full installation on the Linux supercluster at UNM in
Albuquerque was completed this cycle (W. Young), and has be used
for cluster profiling of \aipspp\ applications under Linux. This will be
compared with NT cluster performance once the NT port is complete.

\subsection{Glish}

Much of the recent work on Glish involves fixing memory leaks which arise from
the way reference counting works. With reference counting, each object contains
a count of the number of places which refer to it. Each time another object
established a reference to an object, the reference count of that object is
incremented. Each time a reference goes away the referenced object's count
is decremented. This works fine as long as there are no cycles in the reference
graph, but as soon as a cycle arises all of the objects participating in the
cycle are leaked.

The first attempted fix for this problem was to introduce garbage collection.
The introduction of garbage collection in a limited manner is the way reference
count cycles are typically addressed. In our case, we added a freely available
garbage collector, and while this worked very well, it doubled execution time.
This added overhead was unacceptable.

Since leaks in Glish are limited to function declarations within a function
invocation, most of the Glish work during the past few month has been devoted
to understanding how these cycles are created, and adding extra
mechanics to analyze the results of function invocations and attach enough
meta-information to the results to ensure that when the results of the function
are no longer used all of the memory allocated as part of the invocation will
be deleted.

This proved to be a fair amount of work because Glish is very flexible, and
because the source of the problem was at the core of the Glish mechanics. This
work is nearing completion and will be integrated and tested during the next
development cycle.

Aside from this problem, most of the other defects were of a minor nature
and were fixed in a day.

\subsection{Measures}

The only substantial change was to add handling of Comets and other
solar system bodies to Directions.

\subsection{Infrastructure}

Improvements were made to the user interface. The tool manager was
simplified, and new entry widgets for a number of Measures were
developed.  The TableMeasures classes developed by Michael Haller have
been improved and changed according to the MS2 needs. All classes have
been copped and moved to the aips tree.

Wim Brouw developed a very general set of C++ classes and Glish tools
for fitting. These will now form the basis of most fitting in \aipspp.

About 15 classes in the Lattices module have been reviewed by
Peter Barnes and changed according to his comments. This first
chunk of Lattices classes is about to be moved to the aips tree.
For this purpose a few common classes have been moved from Lattices
to Arrays, otherwise a mutual dependency would exist.

Several bugs have been fixed in the Arrays, Tables, and Lattices
module. Table locking/synchronization has been improved.
The precedence of the power operator is standardized in TaQL and
LEL, so $-2^2=-4$ and not 4.
The median function has been added to the Lattice Expression Language,
so one can get the median of an image (section).
Ms2uvfits now correctly handles multi-source measurementsets.

A class ScaledComplexData has been developed to be able to store
Complex data points as 2 16-bit integers to reduce file size.

\subsection{Documentation}

The cookbook was expanded considerably and renamed to ``Getting
Results in \aipspp''. Other than that and the normal additions for new
tools, only minor changes and revisions were made.

\subsection{Management}

The major news is that Jodrell Bank Observatory/MERLIN rejoined the
\aipspp\ consortium. Barry Maguire was hired by JBO and at the time of
writing is in Socorro for training.

A number of staff changes have occurred, with the consequent need for
reallocation of tasks, and retraining. Staff difficulties have
particularly affected the synthesis development, slowing down progress
substantially.

We have started planning for an \aipspp\ User Group to replace the
long-defunct STAG. We expect to hold the first meeting in the late
summer. The list of invitees is being constructed now. The emphasis
will be on active users of \aipspp\ as judged from defect reports, email
logs, {\em etc}.

\subsection{Outreach}

The \aipspp\ user meetings at the AOC have continued with the goal of
preserving and expanding the existing scientific users within NRAO.
The AOC management expedited the formation of an active testers group
at the AOC, led by Steve Myers. Outreach efforts have also taken place
at most consortium sites to achieve the same purpose. A joint visit
was undertaken in November 1999 by T. Cornwell and A. Kemball to
several sites in Europe to publicize \aipspp\ to a wider international
community.  Additional visits of this nature, both within the US and
elsewhere, will be scheduled in 2000.

We gave demonstrations and distributed CDROMs at both ADASS in Hawaii
and at the AAS in Atlanta. At the ADASS, we had eight AIPS++-related
posters, and Darrell Schiebel gave an invited talk on ``Event-driven
programming with Glish''. An interesting point that was apparent from
various ADASS papers, was that basic design of AIPS++ as compiled
language plus an interpreted glue language is now being adopted
by other groups. 

As described above in the Single Dish section, Joe McMullin visited
Arecibo in February 2000 to give a talk and demonstration of AIPS++,
and in particular the dish program. This appears to have worked out
very well, and we now have a core group of enthusiastic and very
helpful users at Arecibo.

There are some straightforward lessons from from our outreach activities:

\begin{itemize}
\item The major barriers to the adoption of \aipspp\ are
the difficulty of the interface, unfamiliarity, a lack of knowledge, a
lingering bad reputation of AIPS++, and areas of incompleteness such
as data fillers, calibration utilities, and editing capabilities.
\item There is little understanding in the community of the
scope of AIPS++. Continued discussions with a core of people are vital
in communicating the true scope. Unless the true range of capabilities
are conveyed to people, they remain unenthusiastic about adopting just
another software package. Once they understand what is possible, they
often become substantially more enthusiastic. In particular, the
tool-based approach is still quite alien to some users. They expect
that tasks do {\em exactly} what they desire, and sometimes do not
appreciate the advantages of the tool-based approach. On the other
hand, those who do understand the tool-based approach are generally
very pleased with the package.
\end{itemize}

\subsection{System}

Considerable effort has been devoted to improving the installation
process, particularly in the area of robustness. For example, Darrell
Schiebel improved the way shared libraries are handled to avoid
confusion with shared libraries already present.

We have established how the new features of the C++ standard will be
used in \aipspp. A particularly important area is the improved
handling of casts.

The global makedefs file has been improved by putting commonly used
commands from the local makedefs in it. For example, linking with
purify (and purecov and quantify) has been incorporated.

In Socorro a few licenses of Insure++ have been bought as an addition
to the Rational products purify and purecoverage. It looks as if it
does test more thoroughly. Unlike purify it inserts test code at
compile-time, which makes it compiles to test only parts of the system.
The Rational products work fine with egcs 1.0.3, but not with 1.1.2.
Insure++ works for both compilers on all platforms.

\subsection{Quality Assurance Group}

There were two personnel changes: Joe McMullin was named chief tester
and Bob Garwood was named code cop. Bob replaced Ralph Marson who had
performed the duties of code cop with enthusiasm and energy.

During the last cycle, note 228 was written.  This note describes our
testing mission and implementation along with future testing plans.  A set
of scripts was written which check the health of various installations
daily and weekly so that regular reports can be sent to aips2-lib.
A new version of note 167 and the c++ review rules were checked in to the system.  
All occurances of the old arraycast were removed from the system.  The easy 
(name *) 0 casts were changed to the new c++ casts as an example for users.
The code review of the first part of the Lattice module, the Coordinates
module, the DisplayOption class, and the TableMeasures module were largely
completed during the last cycle although the actual movement of this
reviewed code out of trial will happen early in the next cycle.

Reviewing of several classes was completed.  Most importantly, the
reviews of the TableMeasures module and much of the Lattice module
were completed.  Regular monitoring of the unit testing and glish
assay tests by McMullin continues.

\subsection{Visualisation}

David Barnes and Harold Ravlin made substantial improvements to
infrastructure and applications.  TrueColor X Windows displays are now
fully supported, and multi-color-component output capability has been
added to the PostScript software.  These additions made possible the
provision of multi-color-component overlays in the viewer tool - such
overlays can be used to produce stunning images from multi-waveband
data.  As well, support for image masks was added at all levels, so
masked image data can now be easily displayed by users.  An early
version of a {\em DisplayData} class for plotting catalogue
information was provided, and the viewer controls were reworked and
improved, especially those for "animating" multi-dimensional images.

\section{Releases}

The first release (version 1.2) was made October 4, 1999 at the ADASS
meeting in Hawaii. Since there we have distributed about 1400 CDROMs
split roughly equally between Solaris, and Linux 2.0, and Linux
2.2. The total number of defect reports submitted (since May 1999) now
approaches 1300, of which we have fixed about 1100. The remainder are
postponed until the development cycle that is now starting.  In the
version 1.3, there were no unresolved important defects (severity
level 1 or 2). See Appendix G for a report on defect statistics.

It is very hard to estimate the number of active users of \aipspp. Our
request that users register resulted in only 25 new registrations,
with many known users missing. Looking at the defect submissions, we
find 29 non-developers plus an effectively anonymous category of
probably about 10 more people. Thus the total number of external
people who have used the package enough to submit a defect report is
probably about 40. This means that we are still in the
``early-adopter'' phase where only a small fraction of the final
audience is using the package. This is reflected in the usage at
consortium sites, which is still quite limited. Based upon a variety
of sources, we expect this to pick up once main-line synthesis
calibration and imaging is completely present.

The second release (version 1.3) is planned for mid-April 2000. At the
time of writing, it is on schedule. Preparation has been much simpler
this time around since most of the thorny issues seem to be have been
dealt with during the first release. We plan to support Solaris and
Linux only, again, and to duplicate 1000 CDROMs of each for
distribution via various mechanisms.

The major changes in release 1.3 compared to 1.2 are:

\medskip 

\begin{tabular}{|l|l|}
\hline
Package and Module & What \\
\hline
general.deconvolver&		MEM and multiscale deconvolutions\\
images.imagefitter&		Interactive image fitting\\
images.imagepol&			Polarization calculations\\
measures.comet&			Handling of JPL comet ephemerides\\
utility.fitting&			Linear and non-linear fitting\\
display.viewer&			Sundry viewing capabilities\\
display.plotter&			PGPLOT-based plotting\\
synthesis.componentmodels&	Construction and use of discrete components\\
synthesis.flagger&		Simple flagging of visibility data\\
synthesis.imager&		MEM, Multiscale deconvolution\\
synthesis.imager&		Mosaicing, and Single Dish/Int combination\\
synthesis.calibrater&		Initial synthesis calibration\\
synthesis.dragon&		VLA wide-field imaging\\
synthesis.simulator&		Simulation of visibility data including errors\\
dish.dish&			Single dish reduction program\\
nrao.vla&			VLA filler\\
\hline
\end{tabular}

\medskip

Planning for the third release (1.4) will occur at a face-to-face
meeting of the lead developers in late April. The main goals will be
to continue the integration effort, to improve substantially the
synthesis calibration and editing capabilities, and to deploy some new
visualization capabilities.

We also plan for mid 2000 a developer pre-release to be based around
Linux only. This will serve two purposes: to give ``early-adopter''
developers a way to work, and to develop the necessary mechanisms
needed for the full developer release. The main work required for the
pre-release is to improve programmer documentation, and to check the
build parameters against standard versions of Linux (probably RedHat
6.*). Based upon the number of requests for a development system, we
expect that perhaps 10-20 people would use the developer's prerelease.
It is not our intention to support an open-source development model.

\section{Collaboration with HIA/ASCIS project}

In late 1998, we were approached by the ACSIS development group at
HIA/DRAO regarding the use of \aipspp\ in their development of reduction
software for the JCMT ACSIS correlator. They were investigating the
use of \aipspp\ for the correlator and wished to know if we would be
able to provide some support.  Discussions continued throughout the
first part of 1999, and in August 1999, we agreed on a set of tasks
that would be performed by \aipspp\ to support the HIA development.
Since the ASCIS group was very experienced in C++ and the use of
Glish, the support only amounted to about 2 months of Darrell
Schiebel's time. Our motivation had two parts: first, the ACSIS
development would provide a good test bed for many aspects of \aipspp,
and second, the ACSIS system would demonstrate to the community the
capabilities of the \aipspp\ toolkit. The development would also be part
of a natural progression in that the final system would be close to
the Parkes Multibeam system in capability but would be able to handle
a data rate about 50 times higher.

The chief software architect was Tony Willis, who writes:
 
{\em ``For the past 16 months or so, we have been using the \aipspp\ toolkit
to develop a large fraction of the reduction software for the JCMT
ACSIS correlator. ACSIS (Auto-Correlation Spectral Imaging System) will
be capable of computing the spectra over 1 GHz bandwidths for up to 32 
receiver beams every 50 millisec. The goal of the reduction system is
to produce calibrated, gridded 3-D data cubes that can be viewed in
real-time or near real-time.''

``I believe that our use of the \aipspp\ toolkit has been beneficial
to both the ACSIS project and to the \aipspp\ group itself.''}

{\em ``The ACSIS reduction system makes heavy use of distributed processing
and message passing between tasks running on different computers. We
require something like 40 tasks (c++ glish clients) to be running and
communicating with each other at the same time. Also, we require that
message passing between clients be dynamically configurable at run
time.  It has proved easy to meet these requirements with the \aipspp
'glish' message-passing system. This message-passing system, as well
as the glish-Tk GUI package, has proved extremely easy to set up and
use. The \aipspp\ toolkit provides an extensive c++ library of classes
for astronomical and radio-astronomical applications. The existence of
this class library, together with glish, has been of enormous help to
ACSIS programmer productivity.''}

{\em ``The \aipspp\ group has been very supportive of this project. Early in the
project we identified a number of areas where the \aipspp\ toolkit was
deficient, or had bugs, that affected the ACSIS system design. The \aipspp\ 
group provided fixes for these problems by an agreed-upon deadline, so that 
ACSIS development has been able to proceed on schedule.''}

{\em ``Because ACSIS is the first project to actually use a glish-based distributed
processing environment spread over many computers, our testing revealed
several glish bugs/defects that would not have been apparent to the 
regular \aipspp\ developers. 
They have focused on development of an integrated application
running on a single workstation. Our discovery and reporting of these
problems will make the development of the next distributed system based on
\aipspp\ much easier.''}

\section*{Appendix A: ATNF contribution {\em  Neil Killeen}}

\subsection{General}

In this cycle we had 4 people working in \aipspp.  These are (nominal
time allocations given) Neil Killeen (75\%, also local manager), Wim
Brouw (75\%), Mark Wieringa (30\%), and David Barnes (75\%).  Wim's work in
ATOMS has now ramped down to something modest (some testing left to do)
so his \aipspp\ availability continues to ramp up again. 

\subsection{System}

Following the public release, we installed a range of systems
throughout the ATNF.  We have the base release, the stable
release, the development release (weekly and daily varieties).

We don't have an egcs103a installation (required for Purify products). 
We rely on the Socorro installation for this.  The link is 
just tolerable for basic displays.  Unfortunately we are
unable to use Purify on the Display Library shared object
(this is the main reason for not making an installation here).
This is a significant problem.

\subsection{Individuals}

\subsubsection{David Barnes}

David's time was spent on

\begin{itemize}

\item implementation of multi-channel (eg. hue-intensity) display
  infrastructure and use of same in the viewer application

\item design and implementation of support for image masks in 
  image display

\item re-working of the viewer controls (ie. zooming, region 
  drawing etc.) and improving the interface to make the
  state of the viewer clearer to the user

\item commencement of a "drawing displaydata" which will be an
  important link for various applications which use the 
  viewer

\item Initial version of a Catalog Display Data which is available to users.

\item Replaced statistics in DisplayDatas with LatticeStatistics

\item Replaced interpolation on WorldCanvas with Interpolate2D

\item Pointer and PostScript defects addressed

\item continuing code tidying, submission of two classes for review

\item continuing defect correction

\item Worked on planning ATNF \aipspp\ workshop

\item Worked on list of development objectives for next cycle

\end{itemize}



\subsubsection{Wim Brouw}


Wim's time (32\% in Q4 1999 and 54\% in Q1 2000) was spent on

\begin{description}
\item[Fitting]
\begin{itemize}
\item rewrote the Least Squares base classes LSQ, LSQBase and LSQBasic completely
\item wrote module and LSQ documentation
\item wrote tests and tested all Complex fitting options
\item removed LSQMethods and LeastSquares from system and some old .gif
\item did a lot of background cleanup and reading
\item used (after long fight) Array and Vector iterators in DOfitting
\item connected the C++ classes to a fitting Glish tool and 
  provided the help for it.
\end{itemize}

\item[QAG]
\begin{itemize}
\item Comments on 64bit draft proposal
\item new version of Note 167 and c++ review rules
\item removed all occurrences of the (old) arraycast from system
\item changed to c++ casts the easy (name *) 0 casts as an example for users
\item discussion on throw specification
\item discussion on traits/typename and implementation of 1-template MeasConvert
    (old one was 3): send egcs compiler bug (no response) when trying to do
    other
\item ifdef change proposal and discussion
\item some aipsrc data update
\item SGI compiler bugs and compilation problems with castst, Math.h and
  NumericTraits. 
\item Intel chip precision problem again
\end{itemize}

\item[Defects/enhancements]

\begin{itemize}
\item added handling of Comets and other solar system bodies to Directions
\item added getTMRecordValue() to all Measures for the TableMeasures
\item DE200 table problem in MB: was CD reader problem
\item wrong day of week when before 16th century
\item added isModel() to measures for some users
\item added vector value options to measures and quanta at request of user (glish
    defect (now solved) and timing considerations)
\item egcs problem with Functional module
\item speed up of position angle (and correction of a bug); make MeasConvert work
    if no explicit reference code given
\item added a special shiftAngle function in MDirection
\item added setAngle function to MVDirection and binorm function to MVAngle
\item added posangle and separation functions to measures.g
\item some changes for the 'beam' unit problems (needed in images)
\item update IERS tables (twice)
\item IAGA changed their table format over the 2000 break causing some
 significant pain !
\item aided WSRT in analysing some of their imprecise coordinates results
\item testing of VLA position differences throughout system
\item documentation 
\end{itemize}  


\item[Release]
\begin{itemize}
\item testing of Table tool for second release.
\item update quanta.g and measures.g per release review
\end{itemize}
\end{description}

\subsubsection{Neil Killeen}

Neil's time (75\%) went on:


\begin{description}
\item[Image analysis development]
\begin{itemize}
\item Support FFT of images in Image tool.
\item Initial dedicated polarimetry support offered in Imagepol tool.
\item Improved Imagefitter tool to support multiple simultaneous 
    components.  Make use of David's first drawing displaydata
    for interactive estimates.
\item Proper support of SkyComponents in the face of non-linear
  coordinate systems in the Image tool {\bf fitsky} function
\item Effort to get use of SkyComponent in Image tool consistent with 
  that of ComponentImager.  Especially a lot of messing around with
  brightness units (per beam etc).
\item Implement and optimize regridding in Image tool.  
   This includes reference frame conversions.
\item Support virtual images more uniformly
\item Rework image concatention to make the output
    image virtual 
\item Support foreign image formats (miriad, gipsy) via
    hidden FITS conversion
\item Better support of Complex images in some C++ class code (not in 
    Glish yet or DO yet)
\item Some infrastructure work  in the Coordinates C++ classes
\end{itemize}


\item[Defects]

\begin{itemize}
\item Submitted a lot of defects
\item Repaired some defects
\end{itemize}


\item[Release]

\begin{itemize}
\item distributed first release CDs to about a dozen interested
    institutions in Australia
\item Helped some of them with configuration, startup issues
\item Planned what systems we needed at the ATNF   (Mark Calabretta
    did implementation)
\item Mini review of MS tool for second release process
\item Improve documentation of Image analysis tools for second release
  per review.
\end{itemize}


\item[Patches]
\begin{itemize}
\item Generated some patches for the first release
\end{itemize}

\item[Other]
\begin{itemize}
\item Spent way too much time keeping weekly documentation system
    functioning.
\item started reviewing fitting classes  
\item Continue improvement of Glish tool test scripts
\item Add documentation for ATNF package
\item Generated cycle report
\end{itemize}

\end{description}


\subsubsection{Mark Wieringa}

Mark's time  went on

\begin{itemize}
\item Work on MS V2 - updated code to be consistent with latest version of
  TableMeasures and resynced all code currently checked in for which I
  have private versions.  The new MS code was then named "new" and
  checked in ready for the cut over in the next cycle.

\item SKA (non-target) work: used glishtk with the pgplot interface to 
  explore a number   of SKA configurations and produce plots of 
  array layout, uv coverage
  and some statistics. Mostly used glish computations on arrays, but also
  used the fftserver to produce some beam patterns.

  See:
\htmladdnormallink{http://wwwnar.atnf.csiro.au/\~mwiering/skasim}
{http://wwwnar.atnf.csiro.au/~mwiering/skasim}

\item System work - implemented dual weekly system, where we always
  keep one running version available.  

\item Completed specified tool review (deconvolver) for release.

\item Some defect fixing.

\item Attended and contributed to the Imaging pipeline meeting in Socorro

\item Frederic Badia has continued work on the rpfitsfiller, adding the
  birdie and reweight options of the miriad version, a wild card
  facility and some bug fixes and use of standard library functions.
  He has also continued to explore use of the Display library for image
  and uv display in real-time imaging for the ATCA. 

\item Frederic has also worked on the MS V1 to V2 converter.  This was
started by Mark and transferred to Fred. This is near ready.
\end{itemize}

\section*{Appendix B: BIMA/NCSA contribution {\em  Doug Roberts}}

\subsubsection{General}

During this cycle at NCSA and BIMA had two individuals working on
\aipspp.  Doug Roberts (the local manager) contributed 85\% and Harold
Ravlin contributed 65\% to the \aipspp\ project.

\subsubsection{Systems}

The computer systems used at NCSA include Linux, Solaris, and SGI
machines.  The SGI Onyx, which is mainly used for visualization has
had a few problems with a couple of disk drives and the graphics board
went out in November; since then it has been stable.  Harold Ravlin
has worked on backup scripts for all the NCSA/\aipspp\ machines in the
Astronomy Department.  The SGI Origin systems at NCSA have been
stable.  We have three builds on the Origins which insure that we
always have two stable systems.  Now that Wes Young has enabled the
64-bit compilation using the native compiler, we have a stable 32 and
64 bit system as well as a test build system.

\subsubsection{Individuals}

Harold Ravlin has spent some time during this cycle to deal with our
system problems.  His \aipspp\ work has been to expand the \aipspp
visualization facilities to to deal with TrueColor displays.

\begin{itemize}
\item Harold fixed a few Aipsview bugs.
\item Added TrueColor support to Aipsview display tool.
\item Replaced the PostScript code in Aipsview with the PostScript driver
  from the Display Library.  This reconciliation will make it easier to
  change the code in a single place.
\item Dealt with hardware problems with our SGI Onyx.
\item Added TrueColor support to X11 Pixel Canvas in the Display Library.
  Both RGB and indexed images can be written to either a TrueColor or
  PseudoColor visual.
\item Added RGB support to PS Pixel Canvas in Display Library.  Now the
  PostScript driver can output RGB and indexed images.
\end{itemize}

Doug Roberts has spent some time away from the parallel project by working
on the BIMA imaging pipeline: design and identifying \aipspp
requirements.  The rest of the time has been spent working on
parallelization targets.

\begin{itemize}
\item Finished analyzing I/O data from a dedicated I/O run in the last
  cycle.
\item Attended ADASS, where presented a paper on I/O in \aipspp.
\item Submitted the paper on \aipspp\ I/O to the ADASS proceedings.
\item Updated Aipsview manual to reflect TrueColor support in Aipsview.
\item Installed released versions on linux, Solaris.
\item Gave tutorials to other members of NCSA Radio Astronomy Imaging
  group to help identify how \aipspp\ can be used in our BIMA Imaging
  Pipeline.
\item Investigated \aipspp\ requirements for BIMA Imaging Pipeline.  We now
  have a list of \aipspp\ requirements for BIMA Imaging.  The
  requirements are generally ones to complete the suite of processing
  that BIMA astronomers use in MIRIAD.
\item Finished bigimagertest test program.  We now invoke this at the
  completion of each build on the SGI to make sure that the imaging
  tasks (imager and pimager) output the same results.  We will be
  alerted if the output images differ from a reference image.
\item Fixed problems with bimafiller.  Some bugs were found and array
  casts removed.
\item Ran tests to validate the 64-bit changes that Wes Young has been put
  into the system.
\item Roberts made a formal request to the Computer Policy Committee at
  NCSA for persistent disk space for the processing of the identified
  key projects that the parallel group will take through the system in
  the next year.  We had to make disk I/O tests to determine how the
  disks would be physically mounted to the compute servers and decided
  that nfs would be acceptable.  The committee has agreed to give us
  100 GB of disk space sometime in early February.
\end{itemize}

\section*{Appendix C: JBO/MERLIN contribution {\em  Barry Maguire}}

Barry Maguire writes:

{\em ``I began work at Jodrell Bank in early February 2000, primarily to develop
\aipspp\ software for the reduction of MERLIN data. The first step was to
make a trip to Dwingeloo to find out what \aipspp\ development their people
were doing for VLBI and make sure we were not working in the same areas.
As you know, at the end of February, Jodrell Bank rejoined the \aipspp
Consortium and I set up a consortium installation at the JBO site. It was
necessary to repeat this process a couple of times as the required
dependant software libraries were not already in place. But after a couple
of attempts and a fair bit of help from Darrell Schiebel I managed to get
the installation running successfully. The only thing missing from the
installation is the automount to the Master repositories, as our system
administrator expressed some concerns regarding the University firewall,
but we hope to have that mounted in the next few weeks.
The areas of interest for MERLIN are in data calibration, editing and   
UV-visualization, but of course a neccessary first step is to ensure that
MERLIN data can be read into \aipspp, and so the first task is to build a
MERLIN Filler.  Having spent a few weeks trying to familiarize myself with
the system and programming manuals and particularly focusing on the
MeasurementSet and associated filler classes, I have now made a trip to
Socorro for a couple of weeks.  I have found my stay here very instructive
as I now have a good feel for how \aipspp\ code is implemented and how the
class hierarchy is structured, with the highest level interface being
built into a distributed object and bound to Glish, thus allowing the
users control via the command line or GUI interface. This is something I
picked up in a few days here at Socorro, but would have taken me a lot
longer to grasp staring at manuals back at Jodrell. While here I have
begun work on a MERLIN MS filler, basing the structure on the VLA filler,
although I am somewhat hampered by the fact that the developers at Jodrell
are currently developing new on-line software for the MERLIN correlator
that is due to be installed this summer. When it is, the output data
format will be markedly different from that which currently exists and so
the format of the data to be read by any filler is presently uncertain. I
can write a filler based on the existing format now, but it will require
substantial changes later this year when the new software goes on-line.''}

\section*{Appendix D: NFRA contribution {\em  Jan Noordam}}

Local project members: Ger van Diepen (GVD), Jan Noordam (JEN, local
manager). Associated member: Tom Oosterloo (TAO)

This cycle, the NFRA contribution in FTE's was as follows:

\medskip

\begin{tabular}{|l|c|c|c|}
\hline
&                     Global \aipspp	& Local \aipspp	& Other \\
\hline
Ger van Diepen &	25\%		&     45\%	& 30\%	\\
Jan Noordam:   &        10\%		&     60\%	& 30\%  \\
Oleg Smirnov:  &        60\%		&     10\%	& 30\%  \\
\hline
\end{tabular}

\medskip

(NB: The 'other' category includes vacations)

\subsection{General}

Oleg Smirnov has arrived and has started work on ionosphere
calibration.  In general, he will help to 'widen the thin path'
through the uv-data processing part of aips++.

Tom Oosterloo has further developed his ideas for a 'calibration
pipeline', which will be implemented as a joint project with ATNF.
Its modules should be directly usable in the global package.

In this cycle, the most substantial contribution to the global
package was again made by Ger van Diepen in his role as Technical
Leader, and as the man responsible for a number of essential
infrastructure modules (tables, lattices, ms2uvfits, etc).  This is
eleborated elsewhere in this report.

In the meantime, the upgraded WSRT continues to rely heavily on
\aipspp. The online system (TMS) uses \aipspp\ Tables, Measures and
Glish, and MS2uvfits for data export. The local WSRT 'mini-package',
written in Glish by Jan Noordam, is operational and widely used
locally for inspection of uv-data and determination of instrumental
parameters prior to observations. 

The TableMeasures classes are now actively used in the MS v2 and
in the ComponentModels. It appeared that a few small changes were
needed to make the framework fully suitable for the MS classes.

For the ACSIS people (in particular for John Lightfoot) the
Table Query Language has been extended with the possibility to
operate on TableRecords. It makes it possible to use a TaQL-command
to select TableRecords from a set of TableRecords.

The Table system has been extended with a NoReadLocking option.
It makes it possible to read a file without locking it.
Arthur Coolen has actively worked on a new storage manager which
will be more robust and use less memory. It is expected to be
ready in May 2000.
A widget has been developed to help the user in forming a
TaQL-command. It makes it much easier to select records from
a table.

The logger has been extended considerably. The user has much more
control how the widget looks like. The main change is the addition
of a query possibility. It uses the TaQL-widget to let the user
form the query string.


\subsection{System work}

Michel Caillat in Meudon and Christian Bruens in Bonn would like
to develop code in AIPS++. Various email messages have been exchanged
to solve problems in setting up the system and to tell them about
the AIPS++ software. In May Michel will visit Dwingeloo.

\section*{Appendix E: NRAO contribution {\em  Tim Cornwell}}

The core NRAO group is now Braatz (75\%), Cornwell (75\%), Garwood
(75\%), Golap (75\%), Holdaway(75\%), Kemball(75\%), Marson (75\%),
McMullin (75\%), Minter(75\%), Schiebel (100\%), and Young (100\%).
Golap and Young are funded by NCSA-NRAO collaboration. Minter by a
three year NSF visualization grant.  We have one open position funded
by the NSF grant for visualization.  George Moellenbrock will join the
AOC group in late May to work on synthesis development, replacing
Peter Barnes who left at the end of 1999.

\subsection{Jim Braatz}

Jim Braatz' primary responsibilities are to manage the Green Bank installation 
of \aipspp, to support GBT operations, and to work on single-dish applications.
Specifically, Jim worked on the following tasks during this cycle:

\begin{itemize}
\item Attended January 2000 AAS meeting to represent and market \aipspp, and 
  gave a presentation there titled "An \aipspp\ Commissioning Tool for the GBT".
  Attended the "Data Pipelines" meeting in Socorro.

\item A varied group of users have begun using \aipspp\ for both scientific and
  engineering analysis in Green Bank.  I have supported these efforts by
  writing code and teaching the use of various \aipspp\ tools.  Projects
  include writing radiative transfer code, analyzing Spectral Processor
  data, displaying GBT encoder data, and developing GBT user interface tools.
  
\item Wrote new baseline fitting and gaussian fitting functions in the
  commissioning tool.  Rewrote the power spectrum function to handle single
  phase data properly.  Added utility functions to the commissioning tool to
  meet some requests for engineering analysis of the DCR.

\item Addressed several defects relating to the pgplotter.  Updated much of
  the pgplotter online documentation and wrote a chapter on using the 
  pgplotter in the "Getting Results" document.  Corrected defects in the
  zoom tool and the gplot1d emulation functions.

\item Observatory-related duties this cycle included:
\begin{itemize}
\item   Coordinator of the weekly Science Lunch Talk in Green Bank
\item   Research Mentor for graduate student Michelle Little
\item   Wrote and presented a plan for improvements to the NRAO-GB
        recreation area.
\end{itemize}
   
\item Science work included:
\begin{itemize}
\item  Preparation for Michelle Little's Haystack Observing Run 
\item  Presentation of AAS poster on VLA observations of H2O masers
\item  Preparation of GBT science documents (sections on maser studies).
\end{itemize}
\end{itemize}


\subsection{Tim Cornwell}

I spent a larger amount of time this cycle on management and less on
actual development. 

In management:

\begin{itemize}
\item A larger fraction of my time has been devoted to
NRAO-related activities. Most of these are important to the
acceptance of AIPS++ at NRAO ({\em e.g.} I contributed material
to the VLA Expansion proposal on the role of AIPS++. \
\item NRAO is also considering expanding into more coordinated 
data management.  This also took a substantial part of my time.
\item In November, Athol Kemball and I conducted a tour of various
European observatories (Jodrell Bank, MPIfR/Bonn, ESO, IRAM,
Observatoire de Paris, NFRA). At each location, we gave a talk about
AIPS++, conducted a demonstration/tutorial, and engaged in discussions
about AIPS++. In the main, we were received well, and it was a very
useful effort in building community understanding of the goals and
status of AIPS++. Repeat visits in 2000 would probably pay off.
\item We have conducted a series of outreach talks here at the
AOC. Acceptance at the AOC seems to be growing. There is now an
autonomous local testers/users group headed by Steve Myers that is
doing useful work. 
\item I was involved in distributing CDROMs and giving demonstrations 
at both ADASS in Hawaii, and at the AAS meeting in Atlanta.
\item Hiring has consumed a substantial amount of time. Peter Barnes
left the project at the end of 1999. We are very fortunate to be able
to replace him with George Moellenbrock from the NRAO/GB OVLBI ground
station. We have also had to hire into two visualization positions,
one at Green Bank, and one in Socorro. Toney Minter joined AIPS++ as
the GB visualization scientist. We continue to search for a software
developer for Socorro.
\end{itemize}

My coding contributions have been some fraction (about 30\%) of the
targets that I undertook at the beginning of the development cycle. 

\begin{itemize} 
\item I have continued collaborating on imaging targets: wide-field imaging
with Kumar Golap, mosaicing with Mark Holdaway, but my involvement is
mainly offering advice and fixing some defects. 
\item I added some new features to the toolmanager user interface,
and developed some new widget capabilities ({\em e.g.} getting a 
measure direction from an image).
\item I spent a large amount of time using the package, both for
testing and for some reduction of data. I hold the record for number
of defect reports submitted (about 240), and assigned to me (about
120). I'm not sure that the latter is a good record.
\item I fixed many defects in a range of areas.
\item I was the keeper of the release code tree, admitting (or not)
patches. The process of constructing patches is currently much too
time intensive, and we did not issue any patches for version 1.2.
We expect to remedy this in version 1.3.
\item I fought with the ``interim'' visibility plotting program
visplot. The design of this program (and the C++ server ms) is far
from optimum and I look forward to it being replaced.
\end{itemize}

\subsection{Bob Garwood}

Bob Garwood's primary responsibility is to oversee and contribute
towards the single dish work in \aipspp.  This work remains focussed on the
DISH environment and the support of the GBT.  His contribution 
in support of the GBT is primarily through the GBT fillers which
convert the GBT FITS data files to an \aipspp\ MeasurementSet.
In addition to these duties, he is responsible for the maintenance
and enhancement of the FITS classes and, as author and
maintainer of the GUI guidelines, he spends some amount of time
reminding other \aipspp\ workers on the importance of following
those guidelines.  He is also the chief code cop and head of the QAG.

Over the last development cycle, he has done the following:

\begin{itemize}
\item   Worked on the GBT filler.  A number of useful helper classes were
        written which should make the filler code much easier to maintain.
        These classes may also prove useful in other fillers.  The GBT fillers
        now fill pointing data and weather data in addition to the data from
        three backends (holography, DCR, and spectral processor).  Work on a
        filler class for the spectrometer is on hold pending finalization of
        a description of the output FITS classes from GBT monitor and control.

\item   Wrote a chapter on dish for the getting started document.  This was based
        on a dish FAQ that McMullin wrote during this period.

\item   Numerous bugs in the sditerator and FITS code were fixed.

\item   Supported work at Arecibo to use \aipspp\ and dish for data reduction.
        This consisted primarily of numerous e-mail exchanges and phone
        conferences as well as a few days spent fine-tuning their aips++
        installation so that they could get regular automatic code updates
        just as the \aipspp\ consortium sites do.

\item   Started planning for the switch to version 2 of the MeasurementSet and
        how the GBT fillers, sditerator, and SDFITS converters will need to be
        rewritten to use the new MeasurementSet definitions.

\item   Had several discussions with McMullin and Braatz regarding the single
        dish development plan for the next development cycle.

\item   Several classes finished the code-cop process
        during this period.  For the most part, this just required shepherding
        the process.  A few very small classes were reviewed personally.
        Some time was spent running some classes through the purify and
        purecov tools to verify that the test programs adequately cover all
        code and that they run without any reported memory leaks or other problems.

\item   Visited Green Bank several times.
\end{itemize}

\subsection{Kumar Golap}

\begin{itemize}

\item  I have worked into getting familiar with \aipspp\ at the C++ level. 

\item  I have helped in testing the synthesis imaging capabilities. I
have spent some time trying to locate a problem in the WideField
Imaging. 

\item I have worked on the problem of directional dependent gain. I
have done some simulations (mainly in glish) about this to get a feel
about how things work. Also looked into how the ionosphere behaves at
low frequencies (this is one of the examples which will need such a
solver). I have to work on the solver.

\item Worked on the widefield parallelization. Got the beam-making to
work in parallel. The usefulness of parallelization looks very
promising even if the each worker process has to access the same MeasurementSet
independently (and redundantly).

\item Also helped in some user support at the AOC.


\end{itemize}


\subsection{Mark Holdaway}

Mark Holdaway has made a number of modifications to the
maximum entropy code, including the addition of masks and
correct image plane operation for single dish deconvolution.
In addition, he cast the MEM algorithm into a form which reflects
\aipspp's incremental model of deconvolution, but calculates the
entropy function on the cumulative image.  This last enhancement
is required to get MEM to work for the wide-field and multi-field
contexts.

Several problems in the SkyEquation which limited the
quality of mosaiced images were found and fixed.

Now most of the deconvolution algorithms supported by \aipspp\ are
enabled for the multi-field context.  Mosaicing can be performed using
Clark, Hogbom, or multiscale CLEAN, maximum entropy, and maximum
emptiness.  Minimum-sized FFT's in mosaicing have been succesfully
prototyped.

Feathering has been added to imager, permitting the addition of
total power data to mosaiced interferometric images.

Mark has done work on the simulator, including adding an image
evaluation tool to compare the initial model image with the image
constructed from the simulated data.  

Mosaicing simulations for ALMA will require time dependent, antenna
dependent pointing errors, which result in a time and baseline
dependent primary beam, and a different Fourier transform for each
visibility.  Most of this code has been written, and this work was
presented at the ALMA Configuration Conceptual Design Review in
Tucson.

Also using the simulator and imager, Mark has demonstrated the
construction of time dependent voltage patterns generated from phased
arrays such as the SKA may utilize.  The phased array voltage patterns
would then be used by the simulator to predict the actual data.  An
outline of this work, plus how imager would generate accurate images
with time dependent (and to some extent, unknown) voltage patterns, was
presented at the SKA US Consortium meeting in Aricebo.

\subsection{Athol Kemball}

I have continued coordination of synthesis and parallelization in this
development cycle, as described in the separate sections covering
these areas in this report. I have also continued with coding projects
to meet individual development targets to which I am assigned, or for
which I am jointly responsible. These include synthesis integration
above {\tt calibrater} and {\tt imager} as part of the effort to
expand automated and pipeline reduction within \aipspp, finalization of
the MS v2.0 transition, work on parallelization infrastructure in C++
required for wide-field parallelization, and general testing, defect
identification and correction. I have continued work in the system
area in specific areas, including the testing of Rational Purify,
Quantify and PureCoverage release versions with revisions of the egcs
and gcc C++ compilers, evaluation of other memory leak tools,
including Parasoft Insure++, supervision of the trial port to Windows
NT, maintenance of two Solaris builds at the AOC as local site
manager, and other system administration, computer procurement and
general administration.  I spent some time this cycle arranging the
meeting, "Imaging pipelines in radio astronomy" (Jan 18-20, 2000), in
follow-up to this meeting and in user support and tester meetings.  I
participated in a visit to several sites in Europe with T. Cornwell in
November, 1999, as part of our continuing public outreach
initiative. As customary, assistance with release testing and
preparation has taken a signficant fraction of time towards the end of
the development cycle.

\subsection{Ralph Marson}

Ralph Marson's aips++ responsibilities continue to be the development
of radio interferometry applications. For the month of January he was
the Linux site-manager in Socorro.

During the last three months the main application Ralph has worked on
has been the vlafiller. Work completed includes:
\begin{itemize}
  \item Establishment of a generic framework for filtering of VLA
        records. 
  \item A class to filter the VLA records based on the calibration
        codes.
  \item A class to filter the VLA records based on the subarray
  \item A class to filter the VLA records based on the observation time
  \item A class to filter the VLA records based on the observation
        frequency 
  \item A class to filter the VLA records based on the source observed
  \item Re-implement project filtering using the new framework.
  \item Plugged a memory leak in the vlafiller.
  \item Make all the above filtering functionality available from
        glish in the vlafiller tool.
  \item Make only source, frequency and time filtering available in
        the vlatoms stand-alone application
  \item Make the vlafiller tool print its status in a toolmanager window.
  \item Overhaul the vlafiller documentation considerably, including a 
        more extensive overview, numerous examples, and
        documentation of all the new functionality.
\end{itemize}

The other major application area Ralph has worked on in the last three
months is the ComponentModels module. This includes the following
work.
\begin{itemize}
  \item Speeding up the function that converts a componentlist to an
        image. This involved a number of infrastructure changes in the
        ComponentModels module as the main problem was due to
        too many temporary objects being created. After optimization
        this function was sped up by a factor of six.
  \item Add the ability for the componentlist to image function to
        correctly handle any images with units dimensionally
        equivalent to Jy/beam or Jy/pixel.
  \item Allow the componentlist to image function to handle images
        with non-square pixels. This functionality was also made
        available in the sample function of the componentlist tool.
  \item Updated the error handling in the componentlist tool.
  \item Infrastructure changes in preparation to speeding up the
        subtraction of components from visibilities.
  \item Prepared a circulated a discussion document with suggested
        further work on the ComponentModels module.
\end{itemize}

All the test programs I am responsible for in the trial package were
overhauled so that that they now run as well as they ever did.

A number of bugs were addressed in the above mentioned areas
(vlafiller and components) and in the mathematics module.

four weeks of science time was taken in this quarter. Science work included:
\begin{itemize}
\item glish code to create an empty measurement set (V1). 
\item glish code to fill this measurement set from a optical
      interferometry data file. 
\item Initial attempts at creating an optical interferometry image
      using aips++
\item Adding the structure to  facilitate the building of the NPOI
      documentation 
\end{itemize}

\subsection{Joe McMullin}

\begin{itemize}

\item DISH: Multicomponent fitting in DISH was implemented, allowing many
components, allows gaussian parameters to be independently set and fixed,
supports cursor setting of gaussian parameters and a 'guess' for single
component lines. Gaussian fits, errors, etc can be sent to the clipboard
as a single record through the GUI.

\item DISH: Supported efforts by Cornell/Arecibo to reduce Arecibo
Observatory
data through DISH/\aipspp. Their work uncovered several bugs which
we addressed and helped us to refine our documentation; we added an
aips2-dish
mail exploder for users of DISH and a DISH FAQ for common problems and
how-tos,
including a complete command line interface mapping of all of DISH
operations.

Visited the observatory and staff. They had constructed a list of
wish/needed
items for their integration of \aipspp\ into the Arecibo Observatory.
Developed
a response to the various items including a development plan for the
unfinished items. Also: 1) delivered a proto-type RFI tool; 2) Gave a talk
on
\aipspp/DISH to the scientific/computing staff; 3) Gave a talk on
astronomical
programming tactics in Glish for the same; 4) installed a development
version of
\aipspp\ with regular inhales (it took Bob's efforts to really make this
happen);
5) Produced a document for them on tool building and an example Arecibo
tool as
a template for layering their analysis needs onto and using DISH;
6)Provided
examples of plugins and scripts for extending the functionality. We also
established regular conference calls to maintain close
contact/collaboration
over the next development cycle.

\item DISH: Gave a video conferenced talk to CV, GB and AOC on Getting
Started
in DISH.

\item DISH: (with Bob and Jim) established the next round of development
strategies.

\item QAG: Established a model for glish test scripts, documented in Note
228.
Updated the list of tests done, adding new tests and a new catagory
(display).
Expanded on the Unit testing documentation and added a section on stable
releases. Updated the daily/weekly test procedures to better establish
intermediate
stable releases. Assigned various people to the existing \aipspp\ modules
for
pre-release testing and documentation check.

\item defect handling: Closed out several bugs reported by Arecibo users
and other
general DISH and plotting problems.

\end{itemize}
\subsection{Darrell Schiebel}

Darrell's primary responsibilities include maintenance and development of the
Glish scripting language, system level release preparation, and about half the
work (shared with G. van Diepen) of maintaining the code distribution and version
control system. Each of these received some attention during the cycle:

\begin{itemize}
\item Problems were fixed with scripts for secure remote check-in and check-out
  of files from the \aipspp\ repository.

\item In addition to fixing minor Glish defects, a substantial amount of effort
  was invested in fixing memory leaks intrinsic to reference counting. This
  required at least twice the time budgeted because it involved the most basic
  memory management in Glish (see the Glish section for more details).

\item The first phase of the work of producing the next release of \aipspp\ was
  completed. This involved splitting the master repository into development
  and release repositories. This allows new work to proceed with the development repository
  and patches to be applied to the release repository.
  
\item Participated in ADASS IX giving an invited presentation on the use of
  Glish in the \aipspp, Parkes Multibeam, and ACSIS projects.

\end{itemize}

\subsection{Wes Young}
\begin{itemize}
\item Produced a stable build using 64 bit SGI compiler.
   \begin{itemize}
   \item solved the general core dump on exit problem.
   \item found a long address variable that needed setting in glish (it was a
      general 64 bit problem).
   \item Clean make assay for code/aips
   \item assay().trytests() works.
   \end{itemize}

\item Extended the MPITransport class to handle Bool, Record, and String.

\item Wrote an \aipspp\ Note 227 64 Bit Compiler Considerations, out of this note
Athol and I produced a 64-bit change proposal which was accepted.

\item Provided system support for the AOC's SGI systems.

\item UNM Linux Cluster
\begin{itemize}

\item Installed \aipspp.

\item Visited UIUC, March 13-17 to work with Doug Roberts. We had hoped to do some
benchmarking of the cluster and compare results with the Origin
2000, but encounter some MPI configuration problems on the cluster.

\end{itemize}

\item Documentation
\begin{itemize}

\item Looked into using SGML instead of LaTeX for the documentation system. The big
   stumbling block here is handling mathematics, i.e. except for the Amaya browser
no browser is ready to handle MathML. 

\item Investigated more thoroughly web-checkers, choice seems to be between linbot
(gnu/gpl) and linkscan (a commercial product).

\item General support, i.e. finding and fixing bad links and
sorting out LaTeX build problems.
\end{itemize}

\item Defect fixing and investigation.

\end{itemize}

\section*{Appendix F: Summary of \aipspp\ Personnel}

In this section, we give the names of people in the various \aipspp
groups and the nominal fraction of time allocated to \aipspp.

\begin{description}

\item[ATNF]  Neil Killeen (75\%, also local manager), Wim
Brouw (44\%), Mark Wieringa (30\%) and David Barnes (75\%).

\item[BIMA/NCSA] Harold Ravlin (65\%), Doug Roberts (85\%).

\item[JBO/MERLIN] Barry Maguire (100\%)

\item[NFRA]

\medskip
\begin{tabular}{|l|c|c|c|}
\hline
&                     Global \aipspp	& Local \aipspp	& Other \\
\hline
Ger van Diepen &	25\%		&     45\%	& 30\%	\\
Jan Noordam:   &        10\%		&     60\%	& 30\%  \\
Oleg Smirnov:  &        60\%		&     10\%	& 30\%  \\
\hline
\end{tabular}
\medskip

\item[NRAO] Braatz (75\%), Cornwell (75\%), Garwood (75\%), 
Golap (75\%), Holdaway(75\%), Kemball(75\%), Marson (75\%),
McMullin (75\%), Minter(75\%), Schiebel (100\%), and Young (100\%).
Golap and Young are funded by NCSA-NRAO collaboration, and Minter by a
three year NSF visualization grant.  We have one open position funded
by the NSF grant.  George Moellenbrock (currently at NRAO/GB) will
join the AOC group in late May to work on synthesis development,
replacing Peter Barnes who left at the end of 1999.

Thus, in aggregate, we have 21 people contributing about 14.45 FTEs to
the \aipspp\ Project. 

\end{description}

\section*{Appendix G: Defect statistics}

Here we show the defect arrival and repair rates from May 1999 when
we adopted the ClearDDTS program (replacing the GNATS program).

\begin{description}
\item[Top line] Problems labeled by state as a function of
time for all severities (left) and for the top two severities
(right). The states are New (green), Assigned (blue), Open (yellow), 
Resolved (orange), and Verified (red):
\begin{description}
\item[New] Report submitted but not yet assigned to anyone
\item[Assigned] Report has been classified and assigned to someone
\item[Open] The report has been officially opened by the assignee
and is being worked on.
\item[Resolved] The problem is believed to be repaired.
\item[Verified] The submitter agrees that the problem is resolved.
\end{description}
\item[Middle line] All (left) and Unresolved (right) Problems labeled 
by severity as a function of time.
\item[Bottom line] Problem arrival and repair rates for all
severities (right), and for the top two severities (right).
\end{description}
\begin{latexonly}

\medskip
\begin{figure}[th]
\epsfig{file=defects1.3.ps, width=6in}
\caption{Defect statistics at the release of 1.3}
\end{figure}
\medskip 
\end{latexonly}

\begin{htmlonly}
\begin{rawhtml}
<center>
<img src="../defects1.3.gif"><BR>
Defect statistics at the release of 1.3
</center>
\end{rawhtml}
\end{htmlonly}


\end{document}

