%% VLBI++103
%%----------------------------------------------------------------------------
\documentclass[11pt]{article}
\usepackage{html, epsf}
%%-----------------------------------------------------------------------------

\begin{document}

\title{AIPS++ DEFERRED DEVELOPMENT: Release 1.6 and higher}
  

\author{Athol Kemball and Tim Cornwell (eds.)\\
   NRAO}

\date{20 Apr, 2001}

\maketitle
%%---------------------------------------------------------------------------
%%\begin{htmlonly}
%%\htmladdnormallink{A postscript version of this note is available (100kB).}{../xxx.ps}
%%\end{htmlonly}

\tableofcontents
      
\newcommand{\remark}[1]{{\small\begin{itemize}\em \item #1\end{itemize}}}
%\newcommand{\thisdocURL}{http://aips2.nrao.edu/aips++/docs/project/releasenotes/releasenotes.html}
\newcommand{\thisdocURL}{http://www.nrao.edu/~tcornwel/synplan/synplan.html}
\newcommand{\searchURL}{../../html/aips2search.html}
\newcommand{\aipsviewURL}{../../user/aipsview/aipsview.html}
\newcommand{\GlishmanualURL}{../../reference/Glish/Glish.html}
\newcommand{\GlishtutorialURL}{../../notes/195/195.html}
\newcommand{\synthesisURL}{../../user/synthesis/synthesis.html}
\newcommand{\gsURL}{../../user/gettingstarted/gettingstarted.html}
\newcommand{\userrefmanualURL}{../../user/Refman/Refman.html}

\newcommand{\specsURL}{../../specs/specs.html}
\newcommand{\betaURL}{../beta/beta.html}
\newcommand{\consortiumURL}{../consortium.html}
%
% URL to Help system
%
\externallabels{../../user/Refman}{../../user/Refman/labels.pl}

% Add home page navigation button
%

\htmladdtonavigation{\htmladdnormallink
  {\htmladdimg{../../gif/home.gif}}{{../../html/aips++.html}}}

\section{\underbar{Introduction}}

This document records all postponed or deferred development items, to
be considered at the time of planning for release v1.6. This is a
rolling list of all proposed future development, and the fact that an
item is included here is {\it \bf not a reflection of its priority or
an indication of the likelihood of it being scheduled in a given
release cycle}. Neither is this list complete, as other items not
listed here may be proposed at the time of the v1.6 planning cycle,
including items not completed as planned in v1.5. This is primarily a
list of items which need to be tracked in future planning. The
proposed development items are sub-divided by module or area of
development, as in the development plan for each release, listed
without regard to priority.

%%----------------------------------------------------------------------

\section{\underbar{Single-dish}}

\begin{description}

\item[Arecibo filler] Filler for the Arecibo raw data.

\item[Median averaging] Median averaging facility.

\item[Zeeman analysis] Zeeman analysis tool for single-dish data;
estimate line splitting, and associated errors.

\item[Column density] Column density operator in {\tt dish}.

\item[Bulk processing in C++] Allow bulk single-dish operations in C++.

\item[Improved UNIPOPS to MS conversion]

\item[Improved SD visualization] i) dishplotter upgrade; ii) 3-D data
visualization.

\item[Unification of SD and interferometry] Full unification of
single-dish and interferometry in AIPS++.

\item[Mopra support] Facilitate greater use of {\tt dish} at Mopra.

\end{description}

%%----------------------------------------------------------------------

\section{\underbar{Synthesis}}

\begin{description}

\item[calibratertester] Add full DJones and BJones testing.

\item[Unit test programs] Unit test programs for calibrater and imager
and related infrastructure.

\item[Code review] Code review of calibrater, imager and related
infrastructure.

\item[uv-component fitter] Complete uv-component fitting.

\item[Advanced VisJones solvers] Including: 2nd order FJones,
parametrized solvers for BJones, DJones.

\item[Advanced SkyJones solvers] Next generation image-plane solvers,
including full non-isoplanatism.

\item[Pipeline support] Further pipeline framework support.

\item[VLBI support] Second level VLBI applications development.

\item[Componentmodels enhancements] Extend component models to enable
uv-fitting. Closer integration of componentmodels in calibration.

\item[Simulator] i) bw, time smearing; ii) SKA/LOFAR simulation.

\item[E-W arrays] Detect and advise.

\end{description}

%%----------------------------------------------------------------------

\section{\underbar{Applications integration}}

\begin{description}

\item[Parameter names] Unify all parameter names.

\item[Pop-up help] Example entries in pop-up help.

\item[Glish coding rules] Review Glish coding rules.

\item[Default propagation] Including: i) propagate unset to C++; ii)
adopt unset for all context-dependent defaults; iii) document all
actual defaults used in documentation.

\item[Glish global namespace] Revise and define rules for the Glish
global namespace: i) command completion; ii) tool name prefix on
global functions; iii) *tp and *from used uniformly; iv) use :: for
global variable used internally.

\item[Checkpoint and restart] Investigate check-point and restart solutions.

\item[Getting Results editing] i) more complete; ii) more attention to
flow; iii) publicize a style guide; iv) use standard datasets in
examples; v) preserve recipes; decide on format for GUI recipes.

\item[Region selection] Write region selection proposal.

\item[Common data access] Consider a common data access interface (or
data block).

\item[History propagation] History propagation mechanisms.

\end{description}

%%----------------------------------------------------------------------


\section{\underbar{Build and code distribution system}}

\begin{description}

\item[Improved developer support] Including: i) document makedefs; ii)
improve programmer documentation; iii) remove obsolete code; iv) split
aips.h to allow use of parts of AIPS++.

\item[cxx2html enhancements] Improve cxx2html; evaluate a move to
other tools such as DOC++.

\item[Template instantiation] Investigate the use of automatic
template instantiation.

\item[Global data system] i) allow dynamic updates; ii) use global
data system for documentation data files.

\item[Source code reorganization] Split current packages into sub-packages.

\item[Revision control] Full adoption of CVS.

\end{description}

%%----------------------------------------------------------------------

\section{\underbar{Glish}}

\begin{description} 

\item[VxWorks clients] VxWorks port of the Glish client library.

\item[Java clients] Glish clients written in Java.

\item[Multi-threading] Threading of Glish and clients.

\item[Binding of other mega-widgets] Complete binding of other Tcl/Tk
mega-widgets from Glish/Tk. Consider Java/Swing. Evaluate
professional-level toolkit (e.g. Qt).

\item[TAB completion] Allow TAB completion. Requires new readline
implementation.

\item[Alternative itemcontainer implementation] Implement
itemcontainers as a form of opaque record. Allow print to Records.

\end{description}

%%----------------------------------------------------------------------

\section{\underbar{User interface and tasking}}

\begin{description}

\item[CORBA-AIPS++ interoperability] Two-way access to CORBA objects
from AIPS++ clients.

\item[DO upgrade] Including: i) move DO system to use proxy clients;
ii) implement Glish objects proposal; iii) incorporate CORBA into the
Glish objects.

\item[Toolmanager enhancements] i) workspace; ii) tool of tools.

\item[Retro-fit of guientry] Use guientry in all older
GUI's. Normalize all hand-coded GUI's to comply with GUI guidelines.

\item[Event handling] Resolve current event/procedural mix in tasking
system.

\item[Server restart] Automated server restart.

\item[Meta information] Global system for meta-data, visible at all levels.

\end{description}

%%----------------------------------------------------------------------

\section{\underbar{Basic library}}

\begin{description}

\item[Exceptions] Use PtrHolder (or autoptr) to avoid leaks.

\item[Statics] Remove statics as much as possible.

\item[Rationalize class {\tt Time}] Remove non-OS functions from class
{\tt Time}, as {\tt MVTime} is an improvement in this area.

\item[Standardization] i) move to the C++ Standard Library; ii) use
the Glish regex in place of the current {\tt Regex} class; iii)
consider overlay of STL classes over our classes; iv) evaluate use of
vector in {\tt Block}, and valarray in {\tt Array}.

\item[Tables enhancements] Including: i) computed ColumnEngine:
virtual column engine expression; ii) ColumnsIndex: support vector
columns in ColumnsIndex; iii) higher-dimensioned arrays in TSM: needed
for ScaledComplexData; iv) stored columns in reference tables; v)
add/remove column and support in lock/sync: also possibility to remove
groups of columns; vi) B-tree index.

\item[TaQL enhancements] Including: i) support of fields in records;
ii) IIF function; iii) make all functions (e.g. sin) available for
arrays; iv) optimize IN using a sort or binary search; v) recognize
Boolean literals T and F; vi) allow expressions in SELECT; vii) make
IN applicable to scalars; viii) improve the taqlwidget.

\item[Measures enhancements] Including: i) include refraction; ii)
refraction model definition; iii) atmosphere and model in frame; iv)
atmosphere class; v) SOFA compliance; vi) new IAU 2000 nutation; vii)
Earth tides; viii) distance in Directions; ix) proper motions in
Directions; x) addition of new JPL tables

\item[Fitting enhancements] Including: i) high-level fitting classes:
revision and extension (e.g. FitPoly at C++ level); ii) high-level
interface extension (e.g. polynomial and Gaussian (requires user
feedback); iii) stop automatic SVD use in DO interface.

\item[Fourier transform routines] Evaluate FFTW as a replacement for
our Fourier transform routines.

\item[Overhaul of Functionals] Improve the performance and design of
Functionals.

\end{description}

%%----------------------------------------------------------------------

\section{\underbar{Images}}

\begin{description}

\item[Regions enhancements] Including: i) regionmanager.g test script
(add to assay.g); ii) auto-discard of axes; iii) handle reference
frame conversions.

\item[Images enhancements] Including: i) SubImage/Lattice with remove
degenerate axes; ii) LEL: some more robust statistics, collapse,
specify axes in say mean() function, autoexpand, reorder image axes,
concat, regrid, fft; iii) errors in images, and automated error
propagation.

\item[ImageFitter enhancements] Including: i) get errors back to
Glish; ii) better DisplayData for interactive estimates; iii) 3-D
component fitting; iv) support functional forms other than Gaussians,
and v) automated source finding.

\item[Imagepol enhancements] i) depolarization ratio; ii) Zeeman fitting.

\end{description}

%%----------------------------------------------------------------------

\section{\underbar{Visualization}}

\begin{description}

\item[DL and GlishTk thread] multi-threading the preferred solution.

\item[Re-build PrincipalAxesDD from CachingDisplayData] once
CoordSystem is available on the WorldCanvas.  This involves/requires
re-design of animation; at same time provide blinking.
 
\item[Change ColormapDefinition to retrieve definitions from a table
on disk] check the table into the system; add code to generate table
if cannot be found, using 'gencolormaptable'.  At same time, add
support for "ronekers" behaviour of colormaps. 
 
\item[AOCso00069] add to Image-based DisplayDatas the ability to
transparently regrid to the CoordinateSystem of WorldCanvas; cannot be
done until WorldCanvas gets CoordinateSystem proper. 

\item[Decide on future of PGPLOT in display library] If to stay, then
investigate using Tasking/PGPlotter in the WorldCanvas and/or
WCPGFilter classes.  This will enable the provision of most PGPLOT
functionality on the "worldcanvas" agent from Glish/Tk.

\item[Auto-margin calculation for axis labels] 

\item[AOCso01076] support images whose corners fail to convert, but
which have valid pixels closer to the centre of the image. 

\item[Unite handling of complex and real data in LatticePADD] using
eg.  ImageExpr(real(...)) and friends.  Finish uniting handling of
Arrays and Images in LatticePADD. 

\item[Decide on destination of reviewed files] if new display package
to remain, then ensure that it is tested regularly and write the
package header documentation. 

\item[Improve DParameter classes to read defaults from .aipsrc file]
according to a meaningful name convention, and also keep all
DParameters per class in a List so as to make Record creation and
parsing very easy.  Also use DParameter in all get/setOptions class
functions, and add support for unset DParameters. 

\item[Re-work constructors for LatticeAsRaster/Contour] to take a String
which is the image name, and to not require the IPosition, and
thereby remove dependence of ctor on dimensionality of data.  Use
changes to simplify GTkDisplayData etc. 

\item[Graphical display of the transfer function] 

\item[AOCso00076] axis labeling in pixel coordinates, getting things
right for subimages etc., and also provide offset labelling.  Also
solve axis labelling degeneracy issues (as in p-v slices)
intelligently.

\item[Re-work primitives on PixelCanvas and WorldCanvas]  The former
should only have very generic primitives, and should be limited to
only a few overloads (eg. Int, Float).

\item[Replace WC*ResampleHandler classes] with a single class which
can have the type of resampling selected from Interpolate2D::enum. 

\item[Add RefreshReason] RefreshOverlays, and make overlays only draw to
front buffer etc.

\item[Contour drawing algorithm] stop using pgcont/pgconb.

\item[Add capability to set domain of color cube axes]  That is, you can
presently set the r, g, b dimensions of the cube, but you also want
to be able to say that red goes from 0.4 to 0.8, while blue is fixed
at 0.0 for example.

\item[Make glishtk display library interface more DO-like] by making the
various objects map more closely to classes within the DL.  Also,
reduce "ownership" of displaypanels by viewer etc.  Tricky one,
needs a lot of thought.

\item[Hershey fonts?] stop using pgtext/pgptxt.

\item[Change all ListIter$<$void *$>$] to be specific to the type they are
storing, and fix all subsequent casts etc.  Need to remember to add
templates for the new ListIters etc.

\item[Correct argument ordering in AttributeBuffer::getValue] and all
*::getAttributeValue functions.

\item[Template member functions where possible] immediate examples include
WorldCanvas, X11PixelCanvas etc. except note that templated members
cannot be virtual.

\item[Remove Motif/Lesstif from X11PixelCanvas] and Simple*App classes.

\item[Use CountedPtr] where applicable to prevent wrong-order destructions.

\item[Resolve differences between attributes and restrictions]

\item[make DisplayOptions functions static] stop inheriting from it

\item[Event handling] in WCHolder, WorldCanvas, and possibly other
places, remove "inbetween" event handling classes, and use multiple
inheritance from classes like WCMotionEH, WCPositionEH, WCRefreshEH or
sim. where necessary.  egs. are WCTool, PCTool, ...

\item[PCTool] derive PCTool from DisplayTool.

\item[Finish viewer test script] and add to assay.trytests so that the
viewer is tested when assay runs.

\item[Improved widget for setting min/max for display] eg. interactive
histogram etc.  Could combine in some clever way with display of the
transfer function?

\item[Color bar/wedge provision]

\item[Improve feedback to user on order of registration] and provide
reasons when individual DisplayDatas do not draw.

\item[Profiles] Profile (more general than spectrum) display for
viewer.

\item[Viewer interface for DrawingDisplayData]

\item[Improve printing facilities]  Merge first and second print windows,
and add preview button to send to ghostview etc.  Maybe an
equivalent of File-$>$Page setup... instead of the existing silly
canvasmanager idiom; allow annotations in print manager

\item['kpvslice-like' application or module for viewer]

\item[Drag'n'drop for displaydatas onto displaypanels] Thumbnail views
of the displaydatas placed on a multiwcholder in the datamanager can
be dragged to displaypanels. 

\item[Colormap editor]

\item[Pass on control of caching strategy] (server, client, smart) to
user.

\item[Code review] DisplayEvent, DisplayTool (submitted); AttVal,
AttValBase, AttValPoi, AttValPoiTol, AttValTol, Attribute (submitted -
reviewer Ger); AttributeBuffer; PSPixelCanvas and friends (Harold Ravlin
preparing)

\item[viewer use in LiveData/MB] investigate use of viewer in LiveData/MB.

\item[OpenGL and vtk] Evaluate OpenGL and vtk in the DL.

\end{description}

%%----------------------------------------------------------------------


\section{\underbar{Parallelization and high-performance computing}}

\begin{description}

\item[Statement-level parallelization] Complete evaluation of OpenMP;
demonstrate use with a specific problem.

\item[IA64 support] Evaluate on an IA64 system, when available.

\end{description}

%%----------------------------------------------------------------------

\end{document}


