\documentclass[11pt]{article}
\usepackage{html, epsf}
\begin{document}
\title{\bf AIPS++ Quarterly Report: 1998 Q3}
\author{T.J. Cornwell, NRAO}
\date{1998 October 16}
\maketitle

\tableofcontents

\section{Introduction}

The Third Beta Release was made on October 15. Another significant
project milestone is the first Nature paper to have used AIPS++: the
August 13 edition has a Parkes Multibeam paper on a new leading arm
for the LMC (Putman {\em et al.}).

\section{Developments in 1998 Q3}

In {\bf Single Dish support}, we have made a number of enhancements
and bug fixes to the dish environment.  The full SDFITS convention is
now understood by dish.  There is full support for multi-polarization
data in all dish operations.  The command line interface to dish was
significantly improved and the internals of dish were somewhat
reorganized.  A fair amount of real single dish data from a number of
different telescopes has been collected for use in demonstrations and
testing of dish.

In support of the GBT, we have developed a basic continuum
commissioning software suite in AIPS++.  A script was written for
reducing total power scans from the GBT spectral processor.  These
reduced data can then be processed using dish.  The AIPS++ RFI
monitoring program for use in Green Bank was revised based on feedback
from the RFI committee in Green Bank.  This program is now in use by
the 140ft/GBT operators.

Single Dish work suffered in Q3 from the departure of Jeff Uphoff from
NRAO.  Joe McMullin moved from Green Bank to Charlottesville.  Both
Bob Garwood and Joe McMullin are involved in supporting the GBT
through regular 2 to 3 day visits by at least one of them to Green
Bank each week.  A replacement for Jeff Uphoff, to be based in Green
Bank, has been advertised.

In {\bf Synthesis support}, work has followed the development
priorities and guidelines as stated in the report for the immediately
preceding quarter. This includes development on a broad front in key
synthesis areas such as imaging and calibration, in line with the
long-standing AIPS++ policy in this area, but with some resources
devoted to an additional development stream for a limited end-to-end
data reduction capability ("thin-path" capability) for instruments
such as the VLA. In addition, synthesis development for instruments
where AIPS++ is in the critical path (such as WSRT), remains a
priority. The overall aim of the current development is to expand the
scientific capabilities and user base of the system as a strong
priority. The current emphasis is on application development over
library development.

Consultations have continued, both internally and externally, on the
approaches to calibration and imaging being adopted in synthesis
development within the project.  This is in keeping with the
requirement that the system serve as a data reduction environment for
a broad range of instruments, and is consistent with the distributed
expertise that exists in the project in this area. Travel by
A. Kemball to NFRA in June and by W. Brouw to the AOC in July were
helpful in this respect.

The proposed data format revision to V2.0, finalized in previous
quarters has seen little change in this quarter, with the exception of
some changes for specialized sub-tables (A. Kemball). A plan has been
adopted for the implementation of the revised format immediately
following the third beta release. The revised format is required for
VLBI and other more specialized synthesis development, and will be be
implemented by M. Wieringa.

Further WSRT specific utilities for visibility data display and
manipulation have been developed by J. Noordam and others at NFRA in
support of the WSRT upgrade and TMS commissioning. These utilities are
primarily Glish-based, but include other developments in C++,
including a holography application. Further details can be found in
the NFRA contribution to the report. An additional WSRT synthesis
development has involved participation in the evaluation of the PIM
ionosphere model, which is being reviewed elsewhere at NFRA. The code
and data formats required to support this model in AIPS++ have been
considered.

Work on data fillers has continued this quarter, with an update to the
BIMA filler (D. Roberts and P. Teuben), and initial design and
development work for a prototype VLA filler (R. Marson and
A. Kemball), in keeping with the "thin-path" strategy for the VLA.
Basic components for graphical display and editing of visibility data
are required for "thin-path" capabilities for all instruments, and are
an important element in developing early automated data reduction
capabilities. This is a priority at several instruments. Design work
for uv display components has proceeded this quarter (A. Kemball), in
consultation with the developers of the Display Library (D. Barnes and
N. Killeen). This work will continue in collaboration with P. Barnes
(NRAO), who joined the project in June. The Glish visibility display
tool "visplot" has also been revised and extended during this quarter
(T. Cornwell).

A significant focus has been retained in this quarter on the
development of cross-calibration capabilities across a broad front to
expand the current calibration facilities in the system
(A. Kemball). A formalization of calibration table formats for
visibility- and image-plane effects has been completed, together with
the framework for the continuing development of more advanced
calibration parametrization, interpolation and solvers.

A primary development effort in imaging has concerned mosaicing, which
has seen renewed emphasis in this quarter (M. Holdaway and
T. Cornwell).  A mosaicing algorithm development workshop is planned
for July 1999 by M. Holdaway, who joined the project in July, Michael
Rupen and Tim Cornwell. Mark is taking the lead in mosaicing
implementation in AIPS++. This has proceeded as outlined in the
development plan for mosaicing, with initial emphasis on expanding the
primary beam correction software and related matters. T. Cornwell has
worked on wide-field imaging questions relevant to space-based arrays,
as part of a collaboration with NRL. As part of this effort, the
uv-data simulator has been updated (T. Cornwell). In addition,
continued maintenance and revision of the imaging software has
continued throughout the quarter (T. Cornwell), including updates to
the source component model infrastructure (R. Marson). It is
anticipated that the lead on wide-field imaging will be taken over by
T. Cornwell, with the tragic death of D. Briggs in July.

Finally, the application simpleimage has been improved in a number of
ways: it can process multi-source and multi-spectral-window data, and
the Glish commands used are displayed to the user and also written to
a file for use as an template scripts.

Vacant positions are currently advertised for parallel synthesis
application development, and wide-field imaging development, both to
be filled at the AOC.

In {\bf Glish}, preparations began for the upcoming beta release of
AIPS++ and public release 2.7 of Glish. The user manual was updated to
document all of the additions since the last public release of
Glish. The whole manual was reviewed in the process of doing this
update.

In addition to updating the manual, a few new features were added:

\begin{itemize}
\item now the 'system' agent generates an 'exit' event before the Glish
  	interpreter exits

\item the gtk client which serves up the Tk widgets was improved to
	allow additions, e.g. PGPLOT, to be dynamically loaded. This
	involved a reorganization of the gtk classes.

\item fail values are now returned as the result of a request/reply
	event when errors occur. Previously an error string was returned.

\item added byte array as a type which the read() built-in function can
	return
\end{itemize}

Finally, a number of bugs were fixed:

\begin{itemize}
\item incomplete output for fail values

\item floating point precision problems with printf et al.

\item mixing of state for check buttons in menus

\item fixed -vf command line argument so that it only reports "unhandled"
	fail values
\end{itemize}


In {\bf Measures}, Wim Brouw accomplished the following: 

\begin{itemize}
\item split off the pure Quantity related parts into a separate module throughout
    the system (including the Glish and Tasking interface)
\item made the gui related Quanta and Measures programs separate in Glish
\item replaced the existing static state transition table in the Measure
    conversions dynamic. This enables easier addition of conversions, and limits
    the possibility of errors in the sometiomes large matrices.
\item corrected the baseline, uvw, magnetic field measures for code cop remarks
\item finalised special conversion machines for UVW, Magnetic field and Velocity
    for inclusion in the standard package
\item separated out most of the direction conversion methods into a separate
    module, to be included in all other related conversions (baselines, magnetic
    field and other places where relation between the inertial and Earth bound
    system have to be made
\item made it possible to have Arrays of Quanta and Measures transferable between
    Glish and C++ code
\end{itemize}

Not much work was done on the planned extensions for this quarter, with
the exception of the unification of the coordinate system tranforms. 
Work on Earth tides and comet-like ephemerides has not progressed. 

In {\bf AIPS++ Infrastructure}, little new work was performed apart
from bug fixes and cleaning up:
\begin{itemize}
\item The interfaces to the File and Object Catalogs were brought closer
together.
\item All user-visible objects in the system can now be controlled from
the Object Catalog in a uniform manner.
\item The passing of C++ structures to and from Glish via the
distributed object interface was augmented by the development of
a new set of supporting classes.
\end{itemize}

In {\bf Image Analysis}, all work was connected with regions in
images. See Neil Killeen's report for details of what he did directly
in Image Analysis in this quarter.  In addition, Ger van Diepen has
worked on the region classes (see NFRA report for his details).  As a
result, we now have:

\begin{itemize}
\item produced C++ infrastructure for regions that:
\begin{itemize}
\item define pixel coordinate based shapes (strided box, polygon, ellipsoid)
\item combine the pixel based regions as unions, differences, intersections,
    complements, extensions and concatenations.
\item defined  world coordinate based shapes (box, polygon)
\item combine the world based regions as unions, differences, intersections,
    complements, extensions and concatenations.

\end{itemize}

\item produced Glish interfaces (command line and GUI) that enable users 
  to create regions and use them with images.

\item some work in the Lattice Expression Language classes  (the things 
  that let you create expressions involving lattices) adding region
  handling (but not in the interface yet)

\item some Glish infrastructure to enable saving of Records into table 
  keywords (to enable saving of region records into Tables)
\end{itemize}

In summary, we pretty much achieved what we planned for this quarter.
A small number of outstanding items have been moved to next quarter's
plan. None of the above changes made their way into the system as we
were unable to test well enough before the beta release.  They will be
checked in very soon after the beta release.

In {\bf Display} work, David Barnes acheived the following:

\begin{itemize}
\item Extending the "first generation" display library glish/tk widget
  to the point where it could display AIPS++ images under control
  from glish.

\item Learning from the first generation widget, and redesigning a 
  more flexible and functional "second generation" widget.

\item Implementing parts of the newer widget, to the present status
  where multiple world canvases can be placed on a single widget,
  and subsequently used, for example, for display panelling.  
  Additionally, colormap control has been implemented and is
  controllable from glish/tk.

\item Transfering the second generation widget out of the gtk client
  and into a dynamically loadable Tcl library.  This is partly
  complete.

\item Making minor changes to the DisplayData class design for lattice-based
  datasets, and producing the beginnings of a DisplayData class 
  design for table-based datasets, eg. visibility data.

\item Two weeks in Urbana-Champaign visiting John Pixton prior to
  his departure from the AIPS++ project, in July.

\item Covering a few WorldCanvas-related matters with Tom Oosterloo
  while he visited ATNF, in September.
\end{itemize}

In the {\bf System} area, we have continued to suffer the loss of Jeff
Uphoff, who was dedicated 50\% to system work, and the move of Joe
McMullin to Charlottesville. Logistics demand a full-time astronomer
at the GBT so we will end up down half a person for system work. Some
small relief comes from the fact that Ger van Diepen has agreed that
starting September 1st he would take over the role of technical
manager from Brian Glendenning.  In September he visited Socorro to
discuss the tasks and the system work with the AIPS++ management. It
resulted in a system plan which is laid down in note 220. It describes
the future plans in the system area. Ger will work with Darrell
Schiebel on implementing a triage approach to our systems work until a
more acceptable long-term solution is found.

Wim Brouw's data proposal has been accepted and will be implemented
in the next quarter. It results in a clear separation of the source
code and the data files needed to run AIPS++. A rearrangement of
the code tree is deferred until next year.

It appeared that gcc 2.7.2 and Solaris 2.6 do work together very well.
It is investigated if the available patches solve this problem.

Building the documentation was more reliable than in previous
quarters, but there are still a few small problems with latex2html.
It is being investigated if other tools could be useful to build the
documentation.

The GNATS system was found to be somewhat unfriendly and cumbersome to
use. It is being investigated if another bug reporting system
({\em e.g.} the one used in the GNOME project) can be used instead.

Brian's last deed was the preparation of the beta release, which was
ready on October 15th. He documented the process to make the creation
of future beta releases easier.  The beta release is based on gcc
2.7.2, but it appeared that for Linux Red Hat 5.1 the egcs compiler
had to be used.

To provide more rapid feedback to our testers and users, it is planned
that from November on monthly binary releases will be generated based
on the most recent stable inhale. A few scripts will be developed
to create and install such releases.

Shortly after the beta release a few changes will be done to make
our use of C++ more compliant with the standard:
\begin{enumerate}
\item The builtin data type bool will be used instead of the enum Bool.
\item The new scope for a variable declared in a for loop will be used.
\item The keyword explicit is effectuated for compilers supporting it.
\end{enumerate}
The changes are simple, but it has to be seen how many sources
files need to be changed before everything compiles fine. It is
expected that it will not take too long.

The current project compiler is gcc 2.7.2. In the coming quarter
it will be investigated if other compilers, notably egcs, run
well on all supported platforms. If so, it will be decided if
another compiler will be the project compiler.

Static variables are sometimes causing problems when using exceptions
or shared libraries. Some efforts will be done to reduce the number
of statics and to create and destruct them in a way that is harmless
for exceptions and shared libraries.

In the area of {\bf Parallelization}, in the third quarter of 1998,
the parallel group suffered the loss of Dan Briggs, who was a postdoc
working on parallelization and had just started the parallelization of
a wide field imaging application within AIPS++.  Dan was killed in a
skydiving accident.  This tragedy has obviously affected our small
parallel group.  In addition, our group leader, Brian Glendenning, has
moved on to a position in the Millimeter Array (MMA) and Athol Kemball
has taken that role in his stead.  The changes in the group are
reflected in the specific focus on a limited number of parallel
efforts.

The most significant accomplishment has been the development of
parallel algorithm iterator by Wes Young.  This algorithm iterator
allows an application programmer to implement high level algorithms
which loop over independent pieces of data.  The obvious test case for
this is independent spectral line channels.  Wes has implemented a
Clark CLEAN algorithm using these classes.

In preparation for an NSF site review at NCSA, Doug Roberts
benchmarked the parallel Clark CLEAN application.  This test was in
preparation for a large scale imaging and deconvolution project that
the parallel group is enabling.  This significant project entails
making maps ($>$ 6K on a side) and a large number of spectral line
channel ($>$100).  The parallel group is helping Dave Westphal to
process this large HI data set of M33.  In initial tests performed for
the NSF site review, good speed-up (almost a linear slope of 1.0) was
observed between 1-16 processors.  However the slope was substantially
worse (slop of 0.5) between 16-32 processors.  The group is
investigating the performance.  It is possible that this has exposed
an I/O bottleneck.  This test suggests that understanding I/O
performance is important to ultimate parallel performance.

Roberts has been using the SGI installation to process and analyze
data.  Most tasks appear to work in the SGI installation.  Until late
in the quarter a problem existed with the sky (now imager)
application, which was exposed due to the big image (2K on as side)
work exercised by the parallel group.  This problem has been fixed it
is likely that soon there will be a blessed SGI release.

We have been in contact with several National Computational Science
Alliance (Alliance) partners.  We have had meetings with the Parallel
I/O group headed by Dan Reed, UIUC computer science department chair.
Their group has decided to install AIPS++ on a linux system and will
replace the low-level I/O calls with calls to an instrumented library
that they have developed.  They have the installation complete now and
are now beginning to instrument our code.  After this is complete
(last quarter of the year), we should be able to investigate I/O usage
and identify bottlenecks (similar to the one that might be responsible
for the slower speedup after 16 processors mentioned above).  This
will also be useful in investigating the use of a parallel I/O
library that is available as part of the MPI-2 standard.  The MPI-I/O
is available now, although other aspects of the MPI-2 standard are
under development.

Another possible Alliance partnership is with the Globus group.
Globus is a project to design and build middleware for authenticated
data transfer and control across the computation grid.  The Globus
group is lead by Ian Foster from Argonne National Laboratory.  At
NCSA, a group involved with real time data transfer is investigating
using Globus.  We are in contact with that group and may use their
experiences to guide the potential uses of Globus in our parallel
execution environment for AIPS++ on parallel (or clusters of parallel)
computers.  

Finally, we have nearly completed the installation of a NRAO
frame-relay network node at NCSA.  This will allow a guaranteed
bandwidth for Wes Young to continue development in Socorro on NCSA
machines, such as the Origin 2000.  In addition, astronomers at NRAO
should be able to transfer relatively large data sets to the NCSA
computers via overnight ftp sessions and to use visualization and
graphical user interfaces across the higher-speed intranet
connection.  

In {\bf Documentation}, we (finally) produced a document to help
new users: {\em Getting Started in AIPS++}. This is a large expansion
by Anantha of a seed document written by Tim Cornwel some time ago.
It explains the weird and wacky world of AIPS++ in terms that
astronomers (mainly Anantha, Michael Rupen and Bob Hjellming) are 
comfortable with. This document is a key ingredient of the third
beta test.

We have proceeded with incremental improvements to the Web Site. For
example, Glish and the Quality Assurance Group both now has their own
pages, and we have a page devoted to job opportunities within
AIPS++. Also we now have a simplified Web address:
\htmladdnormallink{http://aips2.nrao.edu/}{http://aips2.nrao.edu/}
(Unfortunately, AIPS++ cannot be used since most browsers will not
accept it).

In {\bf Management}, the replacement of Brian Glendenning by
Athol Kemball (as Deputy Project Manager) and Ger van Diepen (as 
Technical Leader) has proceeded extremely smoothly. This was aided
by a very successful visit of Ger to Socorro in September, and
by weekly phone conferences between Athol, Ger and Tim Cornwell.

We have started monthly meetings of the consortium site managers.
This consists of Tim Cornwell, Athol Kemball, Ger van Diepen, Jan
Noordam, Doug Roberts, and Neil Killeen. With Neil's good grace we
have these meetings at 11pm Sydney time (13UT) and so all are able to
attend. We find this forum very useful for discussing issues such as
personnel, budgets, planning, that are not suitable for discussion in
the long-standing Monday Meetings of all AIPS++ Project members.

The AIPS++ Project and the MMA Computing division are jointly
sponsoring a meeting on Mosaicing Techniques to be held next July.
Mark Holdaway, Michael Rupen and Tim Cornwell are organizing this
meeting, at which it is hoped that the state-of-the-art in mosaicing
will be discussed and documented by those most active in this
area.

JCMT has approached AIPS++ with the desire to use AIPS++ as the
platform for the new ACSIS multi-beam/correlator project. We have
agreed that we expect that this will be possible, pending negotiations
on the exact requirements. We expect that the support required from
the Project will be small. We plan to discuss more details in a 
visit by Tony Willis and others to Socorro in mid November.

In the {\bf Quality Assurance Group}, work was performed on:
\begin{itemize}
\item "stable" releases developed as a more frequent alternative to beta releases
\item First "stable" release issued in September.
\item Three reviews completed this quarter
\item Two change proposals submitted, "data proposal" and the "gui
  guidelines" proposal. 
\item Beta release issued.
\item QAG page developed (http://aips2.nrao.edu/AIPS++/docs/html/qag.html)
\item The project made a committment to not distribute anything from the trial package in
  the First public release of AIPS++
\item Plan for the review of major parts of the trial package developed.
\end{itemize}

\section{Beta Release}

The pre-release code was frozen on October 2, and was tested,
principally by testers and project staff at the AOC, and released on
October 15. Next, we plan to move to a different scheme for
distributing the system.  Instead of a large beta release every 6-12
months, we plan to release binaries for the stable builds. Every
month, we attempt to certify one build as being stable and
complete. It has to pass a number of tests, including both our
standard unit-testing and interactive, Glish-based tests. It is then
placed on our ftp server in order that those wishing to acquire a
good-quality build can do so using our inhale mechanism. In the new
approach to distributions, we will build binaries for each stable
version, and also make these available on the ftp server. Installation
of a new stable system is then possible approximately every month.
Ths has the advantage for the users that new features and bug fixes
appear rapidly, and for the project, that we can more easily and
quickly get feedback on new capabilities. It is envisaged that this
new ``trickle-out'' approach will continue until the first public
release next year.

The response of our established beta-testers to this new approach
has been positive (or at least neutral!). From a poll, it seems
that building on Solaris and Linux RedHat 5.1 will be sufficient,
and so the builds can be performed at NRAO.

Compared to the second beta, the third contains substantial
changes and additions in essentially all areas:

\begin{itemize}
\item The user interfaces have been improved in a number of ways:
the robustness of Glish continues to improve, we have produced
graphical user interfaces for most user-visible objects, and we
have a simple help-inputs-go system for object functions.
\item In AIPS++, users do things using objects. The file-object 
distinction in AIPS++ has been explicated by the development of
catalogs for both. The primary way to start, control and stop objects
is via the Object Catalog, whereas files are handled by the File
Catalog.
\item The synthesis capabilities have been improved by the 
addition of {\tt imager} and {\tt calibrater}, the principal objects
for imaging and calibration. {\tt imager}, in particular, has many
features not found in other packages. We expect {\tt calibrater} to
evolve similarly over the next few months.
\item The Measures system developed by Wim Brouw is to our
knowledge unparalleled in the types of operations it allows
on measured quantities with units and coordinate systems.
The functionality is available via both the Glish command line
and a specialized graphical user interface.
\item The single dish environment {\tt dish} is now part of
the release. This is a carefully designed interactive tool for
processing of single dish data, most particularly spectra but 
other one-dimensional data formats are supported. 
\item A very capable plotting tool, {\tt pgplotter}, based
on the PGPLOT subroutine library, is available and is used
by many tools. For example, an interactive  visibility plotting
tool, {\tt visplot}, has been built on top of {\tt pgplotter}.
\item Numerous utilities have been improved. For example, the
tablebrowser can edit, plot, query and select data, and can
be configured in many ways to display data as the user desires.
\item To demonstrate the possibilities of stream-lined processing
in AIPS++, we have polished the {\tt simpleimage} object. This
walks the user through straightforward imaging of synthesis
data, first making a tapered image at low resolution and then
imaging a user-specified region at full resolution. The user
has only to select the data to be imaged, and to delimit the
full-resolution region. This is an example of the type of
packaging that we plan to incorporate in the future.
\item Introductory documentation has been written by early testers
of AIPS++, and terminology established for subsequent use throughout
the project. For example, we have settled on global functions,
objects and object functions as the primary way to describe
``things-you-can-do'' in AIPS++.
\end{itemize}

\section{Developments planned for 1998 Q4}

In {\bf Single dish support}, we expect to receive a significant
amount of user feedback from dish as a result of its inclusion in the
upcoming AIPS++ beta release.  This is the first inclusion of dish in
an AIPS++ beta release.  In addition to responding to user feedback,
we plan on adding new operations to dish and to improve aspects of the
user interaction with dish.  Dish will be able to function fully from
the command line and the user will be able to start and stop the dish
graphical user interface without exiting AIPS++.  The dish state
saving mechanism will be more flexible to allow for the state to be
saved and restored while running the program and to allow the user to
have multiple states stored on disk.  We expect to start to integrate
dish with the GBT commissioning tools.  The command line interface to
the dish plotter will be cleaned up.  The conversion between an AIPS++
MeasurementSet and an SDFITS convention binary FITS file will be
enhanced to encompass the full SDFITS convention.  dish will then be
changed to interact directly with an AIPS++ MeasurementSet.  The
existing GBT fillers will be reworked to improved their speed and
usefulness with on-line data.  We will begin to work on the pointing
analysis and modeling of the telescope structure for the GBT
commissioning support.  Work is expected to start late in the quarter
on single dish imaging using the same imaging scheme as used in the
synthesis imaging already in place in AIPS++.

In {\bf Synthesis}, we expect to respond to beta-testers, fix bugs,
but also continue on our planned development plan: adding more
functionality in filling of data, calibration, and imaging.  In
particular, the mosaicing capabilities will be augmented by the
addition of new classes to support more complete models of primary
beam effects, such as beam squint for the VLA. This example will give
us entirely new capabilities for polarimetric imaging of large fields
with good accuracy, as is important for the Sun, for example.

In {\bf Measures}, we plan to finish the coordinate system
(directions, baselines, uvw etc) unification and if possible do some
work on Earth tides.

In {\bf Images}, we plan the following:
\begin{itemize}
\item Implement the saving and restoring of regions to disk
\item design a special syntax for the Lattice Expression Language classes
  to handle regions
\item Implement the persistence of image masks and provide the user with
  control over them
\item Combination of the unstrided pixel box and world regions 
\item A large task is the unification of coordinates, measures and
  regions at the Glish level.
\item More world regions
\item Reworking some of the image DO user interface
\end{itemize}

In {\bf Display}, we plan the following:

\begin{itemize}
\item The finalization of the basic widget interface in glish/tk, and the bulk 
  of the implementation of said widget in a dynamically loadable module.  

\item Small improvements and/or changes to the DisplayData class design 
  will continue to be made, and features such as data scaling and
  resampling, and complex data display will be pursued.

\item Some progress will be made on the pgplot side of things, which
  should enable axis labelling and contouring to be implemented late in
  the next quarter or shortly thereafter. 

\item A schedule for the development of core DL applications will be produced.
  Possibly we may actually begin the production of these as well.
\end{itemize}

In {\bf Management}, we will start planning the next meeting
of advisory groups. Our tentative plan is to split the STAG into
two groups, one of users and one of technically competent experts,
as we always have envisaged being the ultimate situation. 

We will make presentations at ADASS in November, including a demo
of the third beta.

In mid November we will hold a meeting of those project members
working on applications. The purpose of this meeting is to
come up with styles and standards for writing applications
in AIPS++. Those expected to attend are: Cornwell, Kemball,
Garwood, Schiebel, Killeen, Barnes, van Diepen and Noordam.

In the {\bf Quality Assurance Group}, we will:

\begin{itemize}
\item Begin the plan for the review of code in trial by getting the most
  important code reviewed.
\item Issue a "stable release on an approximately monthly time scale.
\item Transfer testing responsibilities from the code cop to the chief
  tester.
\item Finalise the change proposals submitted this quarter.
\end{itemize}

\section{Appendix: ATNF contribution {\em  Neil Killeen}}

\subsection{General}

This quarter the ATNF had 4 people working in AIPS++.  These are Neil
Killeen (25-75\%, also local manager), Wim Brouw (75\%), Mark Wieringa
(30\%) and David Barnes (75\%).   

In the next quarter, Wim's availability will be markedly decreased as he
he is temporarily (about 3 months) seconded to the ATOMS project (our
on-line OO software project).  Wim will work in AIPS++ at about the 20\% level
next quarter.

\subsection{System}

Our systems (Solaris/Gnu and Digital Unix/Gnu) were generally stable
this quarter.  The documentation pain of last quarter has eased
somewhat, but the need for too frequent software (such as LaTeX)
upgrades persists. 

\subsection{Visits}

David visited NCSA for two weeks in order to maximise information transfer
from the departing John Pixton and to try and get as much of the DL
infrastructure under control as possible before John left; this was
a successfull visit as we believe the loose ends are few (and known).

Ger van Diepen visited Epping for two weeks.  This time was spent mainly
on discussions and code implementation revolving around image regions. 
Ger also spent time with David learning about the Display Library.

Overlapping with Ger, Tom Oosterloo was also here.  Apart from joining
us in the regions battles, Tom worked with us generating some design ideas
on how the basic core DL applications might look to the user.

These periodic visits that we do are always incredibly successful.
Our progress accelerates enormously during them.

\subsection{Multibeam}

Commissioning of narrow band multibeam systems is beginning.  The
multibeam software has now been checked into the AIPS++ system and the
ATNF will play a larger role in the care of multibeam software. 
Previously it was created and looked after by the multibeam science
teams (some of whom were ATNF staff).  This change comes about as the
multibeam receiver moves more into a National Facility role.  The
principle ATNF people now involved in the multibeam software are Lister
Staveley-Smith and Mark Calabretta. 

\subsection{Individuals}

\subsubsection{Wim Brouw}

Wim has spent much of his time this quarter on updating and related
work on Measures, as discussed above.

Other activities:
\begin{itemize}

\item Tasking system: wrote a general Glish/C++ Parameter interface for arrays of
    C++ data structures, including Glish routines to handle them.
\item Wrote, again, and finalised a proposal for the data handling in the AIPS++
    distribution
\item did QAG related work and testing
\item worked on bugs and small extensions for Quanta and Measures
\item made parameter conversions for Strings to general QuantumHolder
\item improved the speed of measures display for the table browser
\item discussed ionospheric aspects
\end{itemize}


\subsubsection{David Barnes} 

David Barnes was totally responsible for all changes to the
Display Library discussed above.


\subsubsection{Neil Killeen}

Neil writes:


\begin{quote}
{\em Virtually all my efforts this quarter went into image regions related
issues.  I have learned this quarter (again) that having a system with
enormous scope, power and flexibility, does not always make it easy to
deliver.  One's eyes light up with the excitement of the boundless
possibilities, and the trick of limiting those possibilities is
non-trivial !}
\end{quote}

Neil's time went on:

\begin{itemize}
\item Periodic regions discussion documents for Ger and David to fall asleep over

\item Evolved the Glish interface to regions (called regionmanager.g)

\begin{itemize}
\item introduced quantities into the world coordinate interface once
    Wim had provided support for vectors of quantities
\item introduced to the world regions, the capability to handle mixed 
    world, pixel and fractional coordinates, as well as mixed absolute
    and relative (to reference pixel or image centre or eventually some
    specifiable location) coordinates
\item wrote GUI interface version 1 (this was Neil's first foray into Glish/Tk so
    some learning curve to go up here).  
\item major GUI rewrite following Neil's own testing, as well as testing and comments by
    others to produce version 2.   The main differences from version 1
    are a much better interface for world regions (version 1 was 
    deliberately brain dead) and a different (better ?) basic layout.  
\item For a while there was an extra  C++ layer between the records that regionmanager.g
    produced and those that C++ region classes wanted.  After much
    discussion with Ger, the C++ region classes were substantially
    restructured and the extra layer was then jettisoned

\end{itemize}
\item world region C++ classes: Neil didn't write any new ones.  However, after Ger's major restructuring
    of the region classes, Neil reworked WCBox and WCPolygon in the new
    vogue.  Their internals are now a little simpler.

\item I worked through the image DO (the C++ code that actually offers users their
direct image functionality) retro-fitting regions to replace the horrid blc/trc stuff.
  Only one function is causing him some pain still.

\item Reviewed some Measures code

\end{itemize}



\subsubsection{Mark Wieringa}

Mark has again had little time this quarter for AIPS++.  Partly this was
due to the heavy floods at Narrabri, holidays and other local issues. 
It is expected that next quarter Mark's AIPS++ time will increase again. 

He has spent his AIPS++ time on:

\begin{itemize}
\item Reviewed some Measures code

\item Fixed bugs in the measurement set DO and added some modest functionality 
to it

\item Some substantial effort was spent on trying to get the AIPS++ documentation
  system going again on the DEC alpha.  This ultimately failed.  
\end{itemize}
  
\section{Appendix: BIMA/NCSA contribution {\em  Doug Roberts}}

During the past quarter we had 3 people (1.3 FTE) working on AIPS++:
John Pixton (20\%), Harold Ravlin (10\%), and Doug Roberts
(100\%). In addition, NCSA is funding the salary of
Wes Young at NRAO-Socorro and will shortly fund the salary of a second
NRAO person. Accomplishments during the past quarter are described
above under {\bf Parallelization}.

\section{Appendix: NFRA contribution {\em  Jan Noordam}}

Local project members: Ger van Diepen (GVD), Michael Haller (MXH), Jan
Noordam (JEN, local manager).

\subsection{General}

Michael Haller has been transferred to the TMS project for the
remainder of 1998. He will continue in his role as local AIPS++ system
manager, and will participate in the QAG in the future.

Bob Campbell (postdoc at NFRA) has made a large contribution to the
definition of ionospheric calibration in AIPS++. He will remain
involved in the near future.

This quarter, the NFRA contribution in FTE's was as follows:

\begin{tabular}{|l|c|c|c|}
\hline 
&                     Global AIPS++ &     Local AIPS++ &   Other\\
\hline 
Ger van Diepen:	   &  60\%		&     20\% & 20\%	\\
Michael Haller:    &  10\%		&     30\% & 60\%\\
Jan Noordam:       &  30\%		&     40\% & 30\% \\
\hline
\end{tabular}
\vskip 0.5in

\subsection{WSRT upgrade}

The new WSRT on-line system (TMS) continues to rely heavily on AIPS++
modules, particularly Tables and Measures. Is has now also adopted
Glish. With the exception of the latter, which is still a bit fragile
at times, these various modules have performed with very few problems.    

The first generation of local AIPS++ applications (in Glish) for
off-line uv-data inspection and the extraction of set-up parameters
works satisfactorily. In order to deal with the full range of tools
that are required, a somewhat more able uv-data structure (the 4D
'uvbrick') has been developed, together with its user interface
('msbrick'). It is based on the 4D data structure that is extracted
from the MS by the ms DO. Its methods include a limited form of
selfcal that solves for all kinds of instrumental parameters using a
bright central point source calibrator (which may be polarised).  In
addition, astronomers may manipulate and inspect uv-data in various
ways, using basic operations on uvbricks.  Altogether, it amounts to a
'mini-package that fills a niche that is complementary to 'official'
AIPS++, somewhat like the single-dish 'Dish' application. It is fully
generic in the sense that ifr-selection is no longer WSRT-specific.

\subsection{Applications}

The 'HOLOG' DO has been developed to reduce holographic observations.
For the time being it is a bit WSRT specific, but without too much
work it should be possible to turn it into a general tool.


\subsection{Fillers and converters}

The program ms2scn (which convert a MeasurementSet to a Newstar SCN file)
has been enhanced to deal with multi-field, multi-spectral window
observations. It also uses the ANTENNA subtable to find the telescope
number for an antenna-id.

UVFITSWriter writer has been extended with writing the TY and GC
tables (system temperature and gain curve) to be able to load these
data in classic AIPS.

Harro Verkouter (JIVE) has continues his work on a more permanent
version of the UVFITS writer. He has finished the multi-source part,
and it has been agreed that he will take care of multiple spectral
windows.

\subsection{Infrastructure software: Tables}

Access to tables has been optimized by Ger van Diepen for accessing
parts of a column.  The class RefRows has been developed for this
purpose to have a uniform interface to the data managers.

The TiledShapeStMan has been developed. It resembles TiledDataStMan,
but chooses the hypercube automatically based on the shape of the
data array.  It frees the user of the burden to add or extend
hypercubes, but offers less flexibility than TiledDataStMan.

In the next quarter the ability to store records in a column will
be added. It is needed to be able to store regions and parameters
in a table.

An introductory article about tables has been written for the AIPS++
newsletter. In the next quarter some more articles will be written
discussing how to use tables and the query language.
Also a note will be written explaining the tiled storage managers.


\subsection{Infrastructure software: Lattices/Images}

PagedImage has been changed such that it is possible to access a
readonly image. For this purposes LogTable needed to be changed
as well to access readonly log tables. The glish interface to
log tables has been changed similarly.

Ger van Diepen worked with Neil Killeen on regions in pixel and world
coordinates.  The LCRegion classes make it possible to define a region
in pixel coordinates and are used to access the required pixels from
the lattice/image. The basic LCRegion classes are LCBox, LCEllipsoid,
and LCPolygon. Compound LCRegion classes make it possible to define
the union, intersection, difference, complement, and concatenation of
LCRegion's. LCExtension is a specific compound class to extend a
region along straight lines in other dimension(s).  The LCSlicer class
is similar to LCBox with the addition of strides.  LCSlicer is not an
LCRegion, because it cannot be used in compounds.  The WCRegion
classes make it possible to define a region in world
coordinates. Similarly to the LC classes there are compound classes to
make a union, etc. of WCRegion's. When a WCRegion is used for an
image, it is converted to the appropriate LCRegion using the
coordinate and shape information of the image. Since it knows the
world axes of the region and the image, it can adjust the order of the
region axes to match the image axes. When the image has more axes than
the region, the region will be extended automatically.

The regions are almost finished now and will be checked in after the
beta release. The classes SubLattice and SubImage will be able to
handle them.  The next step is changing the lattice expressions
classes such that they handle a possible mask associated with a
region. The LEL classes have been changed, but they need extensive
testing before they can be checked in. This will be done in the next
quarter.  Also in the next quarter the Lattice copyData and set
functions will be extended to handle masks.


\subsection{AIPS++ Site in Dwingeloo/Westerbork}

No particular problems. NFRA will continue to test AIPS++ on HP
machines.

\section{Appendix: NRAO contribution {\em  Tim Cornwell}}

The core NRAO AIPS++ group is now Barnes (100\%), Cornwell (100\%),
Garwood (100\%), Holdaway(100\%), Kemball(100\%), Marson (100\%),
McMullin (100\%), Schiebel (100\%), Weatherall (50\%),
and Young (100\%).

\subsection{Peter Barnes}

Peter:
\begin{itemize}
\item Learned C++
\item Improved the MSSummary classes
\end{itemize}

\subsection{Tim Cornwell}

Tim did the following:
\begin{itemize}
\item Managed AIPS++.
\item Was involved in many discussions about everything.
\item Worked with Mark Holdaway on design and implementation of the
mosaicing classes.
\item Rearranged the imager and simulater object code location to
be consistent with AIPS++ standards.
\item Polished the visibility visualizer visplot.
\item Cleaned up and rationalized the handling of files and
objects in the File and Object Catalogs.
\item Learned more than he wanted to know about Linux while installing
it on his home PC and his laptop.
\item Worked with the AOC testers on testing and documentation.
\item Worked on an initial analysis of imaging and computing problems for
PMII (a space-borne array being studied by NRL).
\end{itemize}

\subsection{Bob Garwood}

Bob Garwood's primary responsibility is to oversee the single dish work
which remains focussed on the dish environment as well as supporting
the GBT.

Over the past 3 months (July through September) he has done the
following work:

\begin{itemize}
\item    The full SDFITS convention is now understood by dish.
\item    All dish operations correctly work with multiple polarization data.
\item    Popup help was added to dish.
\item    Significant progress was made on the planned internal 
        reorganization of dish especially as it impacts the user
	at the public command line interface to dish.  This 
	interface is significantly saner.
\item    Gave a talk on AIPS++ to the NRAO-CV summer students.
\item    Had discussions with and offered help to an NRAO-CV summer 
	student about n-body simulations and AIPS++.
\item    Attended the GBT First Science and Commissioning Workshop in
	Green Bank.  Gave a talk and demo there on single
	dish analysis in AIPS++.  Received much useful feedback.
\item    Cleaned up the averager for all alignment options.
\item    Had discussions with Arecibo about using AIPS++ for their analysis
needs.
\item    The dish Selection operation is now a true operation.
\item    The dish operation panes can now be dismissed from each panel.
\item    Completed the first round of review of the Table Measures module.
\item    Completed the review of TiledShapeStMan.
\item    Submitted an abstract for ADASS 98 on a poster paper for dish.
\item    Began discussions on reworking the GBT fillers.
\item    Wrote the first draft of the GUI guidelines and had several
	useful discussions on this draft.
\item    Spent a lot of time debugging dish thanks to some very useful 
	user feedback from a number of people.
\item    Collected a fair amount of real single dish data for use in
         demonstrations of dish.
\item    Wrote a simple conversion utility for converting the ad-hoc GBT 
	spectrometer data into an AIPS++ table.
\item    The full state of the dish GUI is now saved to disk.
\item    Started work on a more comprehensive users document for dish.
\end{itemize}

\subsection{Brian Glendenning}

Brian Glendenning worked 75\%+ for the MMA last quarter. His AIPS++
activities were modest: some image changes to support reporting ancillary
information about the original observation, automated detection of object
creation/deletion for the object GUI, some bug fixes, and preparation for
the upcoming Beta release (which he will conduct).

\subsection{Mark Holdaway}

Mark Holdaway joined the AIPS++ project in July and is improving the
mosaicing capabilities in AIPS++.  Currently, he is working on
improving the voltage pattern classes.  The classes will be general
enough to handle 1-D radial beam profiles or 2-D beam images,
correctly rotating the latter on the sky.  In correctly treating the
2-D beams, we can correct for off-axis instrumental polarization and
circular polarization beam squint.  The classes will also permit
solving for the primary beam shape via some form of self-calibration
in the future.

Mark is also organizing a Mosaicing Techniques Meeting to be held in
Socorro in July 1999.

\subsection{Athol Kemball}

Athol has become Deputy PM. He has taken responsibility for the
oversight of the syntheis development, and he also manages the
parallelization effort. His prime effort in coding was the
development of the calibration object, calibrater. In addition,
he continues to work on system-wide issues such as integration
of applications.

\subsection{Ralph Marson}

\begin{itemize}
\item completed the User documentation for the ComponentModels class
\item Completed a minimal LatticeConvolver class
\item Switched to a Linux as the OS on his desktop
\item Configured a Linux server for use by AIPS++ testers and developers.
\item Designed, with Athol, the overall structure of the vlasfiller
\item Implemented the ModComp numeric conversions within the AIPS++ I/O
  structures.
\item Served as head of the Quality Assurance Group (see report above).
\end{itemize}

\subsection{Joseph McMullin}

Joseph McMullin's main responsibilities are managing the Green Bank
installation of AIPS++ and supporting AIPS++-related GBT needs.

Developed a basic continuum commissioning software suite in AIPS++ as
per the specifications of the McKinnon and Braatz memo on "Preliminary
Single-Dish Continuum Requirements for AIPS++". The package reads
AIPS++ table data and provides a set of functions from either the
command line or a GUI interface. Available functions include: 1) system
temperature measurement, 2) power spectrum calculation, 3) display of a
tracking data, 4) measurement of antenna temperature, 4) analysis of
focus observation, 5) analysis of tipping observation for opacity, and
6) analysis of a pointing observation.  This package was presented at
the GBT science workshop. A corresponding user's document was written
for this software.

Wrote a script for reducing total power scans from the 140 ft/GBT
spectral processor, and loading the reduced scans into a table readable
by DISH for further analysis. This has been used for off-line reduction
of observations at the 140 ft, as well as passband tests of the
spectral processor.

Implemented a revised version of the AIPS++ RFI monitoring program
based on comments from the RFI committee in GB. It's operation has been 
shown to the existing 140 ft/GBT operators and is in use.

Currently working on the remaining specifications in the McKinnon and
Braatz memo, specifically implementation of tools for pointing analysis
and modelling of the telescope structure.

\subsection{Darrell Schiebel}

Darrell Schiebel implemented all of the Glish changes and additions
described in the section on progress in the last quarter. 

In addition to all of the Glish changes, Darrell worked on a few other items.
He wrote the GBT observer table parser which Rick Fisher drives with his
GBT Observer interface. This Glish client parses the GBT observer table
language which Rick developed, and returns Glish records which are
arranged for easy use by Rick's scripts.

Following the departure of Jeff Uphoff, Darrell worked on a number of
AIPS++ system/clean up items:

\begin{itemize}

\item removed the gmisc client and replaced the remaining uses of the
	client with calls to built-in Glish functions

\item updated latex2html for the SunOS systems in Charlottesville

\item several Linux build problems, i.e. an EGCS installation
	in MD and GCC 2.7.2 on RedHat 5.1 systems

\item runtime problems with a couple of clients on SGI machines

\end{itemize}

\subsection{Kate Weatherall}

Kate was responsible for all changes made to the AIPS++ Web pages.
She also wrote some documentation, and collaborated with Anantha
on the format of the Getting Started document.

\subsection{Wes Young}

\begin{itemize}
\item Implemented the Applicator/Algorithm classes.  Wrote a test program that
  parallelizes the Clark Clean Algorithm.  Doug Roberts reported on speed ups.

\item Made a parallel version of sky (now imager) but ran into trouble with
  glish client communications.

\item Started working Dave Westpfahl's M33 data set.  Dave's data 
  uncovered some problems with generating MeasurementSets on the SGI 
  (fixed).  The data set also uncovered some problems with large 
  spectral line data sets (debugging).

\item Provided SGI support for AIPS++.  Wes recieved an SGI Octane at the 
  end of June and now uses it as his primary development machine. He
  made some progress on blessing the SGI version (only imageralltests
  fails).

\item More worked on the "new table browser".  He made it more measures 
  aware and increased the rendering speed.  Wes made some formatting
  suggestions about vectors of measures to Wim Brouw which he
  implemented.

\item Provided documentation support (quite a lot! - {\em Ed.})

\item General AIPS++ support, bug fixes, system and GNATS administration.

\item Visited the University of Illinois, Urbana-Champaign for a week in July.
\end{itemize}

\section{Appendix: Summary of AIPS++ Personnel Changes}

In this section, we give the names of people in the various AIPS++
groups and the nominal fraction of time allocated to AIPS++.
These are as expected for the next quarter (and thus do not
include the expected replacements for Briggs or Uphoff, or the
new hires in Socorro).

The ATNF group is: Neil Killeen (75\%, also local manager), Wim
Brouw (20\%), Mark Wieringa (30\%) and David Barnes (75\%).

The BIMA/NCSA group is: Harold Ravlin (10\%), and Doug Roberts
(100\%). Another position is in the processing of being filled.

The NFRA group is: Ger van Diepen, Michael Haller, and Jan Noordam.
The allocations are:

\begin{tabular}{|l|c|c|c|}
\hline \
&                     Global AIPS++ &     Local AIPS++ &   Other\\
\hline \
Ger van Diepen:	   &  60\%		&     20\% & 20\%	\\
Michael Haller:    &  10\%		&     30\% & 60\%\\
Jan Noordam:       &  30\%		&     40\% & 30\% \\
\hline
\end{tabular}
\vskip 0.5in

The NRAO group is: Tim Cornwell (100\%), Bob Garwood (100\%), Mark
Holdaway (100\%), Athol Kemball (100\%), Ralph Marson (100\%), Joe
McMullin (100\%), Darrell Schiebel (100\%), Kate Weatherall (50\%) and
Wes Young (100\%). We have one open position in Green Bank and two
new positions in Socorro (funded by NRL and NCSA).

Thus, in aggregate, we have 19 people contributing about 14.6 FTEs to
the AIPS++ Project. Of these, 10 are employed by NRAO (one funded by
NCSA), and contribute 9.5 FTEs. The numbers for the other partners
are: ATNF 4 and 2, BIMA/NCSA 2 and 1.1, NFRA 3 and 1.9. There are four
unfilled positions, one at BIMA/NCSA (the replacement for
Briggs) and three at NRAO (GBT scientist, parallel applications
developer, and an NRL-funded postdoc).

\end{document}

