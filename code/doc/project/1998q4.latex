\documentclass[11pt]{article}
\usepackage{html, epsf}
\begin{document}
\title{\bf AIPS++ Quarterly Report: 1998 Q4}
\author{T.J. Cornwell, NRAO}
\date{1999 January 27}
\maketitle

\tableofcontents

\section{Introduction}

The major accomplishment of this quarter was the successful release of
the third beta on October 15, 1998. In addition, a stable release was
designated in the week of 18 January 1998.

In this quarter, a special emphasis has been placed on the integration
and standardization of applications development in preparation for the
first public release in 1999. A meeting to address these objectives
was held in Socorro in November. A key objective of this initiative is to
standardize the framework for AIPS++ applications and to ensure as
uniform a user interface as practical. The successful discussions at
the meeting in Socorro have been followed up by weekly integration
meetings to ensure that the identified items are addressed in the
preparations for the public release. Planning in all areas was also
reviewed at the time of the integration meeting in November, in
preparation for the release.

\section{Developments in 1998 Q4}

In {\bf Single Dish support}, Dish itself remained largely unchanged
after the beta release during this quarter. A revised dish plotter has
been designed. Dish was demonstrated at the GBT Advisory Committee
meeting in October.  Garwood and McMullin each presented poster papers
at ADASS in November.  Garwood attended the aips++ integration meeting
at the AOC following ADASS.

Both Bob Garwood and Joe McMullin continue to be involved in
supporting the GBT.  This includes regular 2 to 3 day visits by at
least one of them to Green Bank for most weeks during the quarter.
The aips++ position in Green Bank remains unfilled.

The dish plotter and results manager were incorporated into the GBT
continuum commissioning tools.  Several options for pointing solutions
for the GBT were examined.  It is likely that we will use the TPOINT
software for this task.  The GBT filler are being rewritten.

In {\bf Synthesis support}, the development strategy outlined in the
previous quarterly report for synthesis imaging and calibration has
been continued in this quarter, with primary emphasis on the expansion
of the scientific capabilities and usefulness of the
package. Development on a broad front has continued in calibration and
imaging, but resources have also been allocated to the "thin-path"
capability in the area of data fillers and uv-data visualization,
consistent with the overall strategy discussed in earlier reports.

As previously agreed, work on the implementation of the second version
of the MeasurementSet format was scheduled in this quarter. This has
included a formal change proposal required by the project software
engineering guidelines. Work on the implementation has been undertaken
by Mark Wieringa (ATNF), and will be well in place before the public
release, as previously planned.

Peter Barnes (NRAO), who joined the project in the preceding quarter,
has assumed responsibility for the development of uv-data
visualization components compatible with the current Display
Library. This is a cooperative effort with Athol Kemball (NRAO) and
David Barnes (ATNF). A revised MeasurementSet summary format, and data
lister has been completed, and an initial layout of display components
had been completed along with a plan for their incorporation in the
Display Library. This work will continue actively in this quarter.

Work on the VLA filler has been undertaken by Ralph Marson (NRAO),
with current efforts focused on tape support and MODCOMP format
translators. This target will proceed actively in the next quarter.

Calibration capabilities have been expanded this quarter, with the
adoption of the revised and extended calibration table format, and the
implementation of basic cross-calibration capabilities. Current
efforts in this area involve the extension of interpolation and data
selection options. A new initiative in integrating single-dish and
interferometry calibration has been undertaken in an initial group
comprising Athol Kemball, Tim Cornwell, Joe McMullin and Bob Garwood,
with outside expertise provided by Rick Fisher. Two meetings have been
held in this regard and the resulting note will be forwarded more
widely once it is complete for broader discussion. The aim of this
work is to standardize calibration models and data formats between
single-dish and interferometric calibration development within the
project, to allow joint calibration or calibration transfer.

Jan Noordam (NFRA) has continued work on supporting TMS and WSRT
commissioning using customized Glish scripts to assess data quality.
Details of this work can be found in the NFRA section of the report.

In imaging, the significant effort in mosaicing started by Mark
Holdaway (NRAO) in the last quarter has continued. This has included
the expansion of primary beam models supported in the imaging system
and their representation. He has also nearly completed the early
implementation of the Cornwell-Evans MEM algorithm, as required for
subsequent planned development in mosaicing. Tim Cornwell (NRAO) has
taken over 3-D wide-field imaging, and has successfully demonstrated a
prototype capability in this area. In addition, he has implemented a
multi-scale CLEAN deconvolution algorithm, which has shown significant
improvements in imaging performance in early trials. General
refinements to imager developments have continued during this quarter,
including the development of image-plane-only deconvolution
capabilities in support of the MEM and multi-scale clean developments.

A summary of work on the parallelization of synthesis code can be
found in the NCSA section. A primary emphasis in this area has been
the demonstration of a scientifically useful capability in the area of
embarrassingly parallel problems. An implementation of this type for
spectral line deconvolution has been demonstrated in early imaging of
a four-pointing, multi-configuration VLA dataset taken towards M33,
which cannot easily be imaged using existing packages.
 
Athol Kemball (NRAO) presented a talk on calibration at the ADASS'98
meeting in November. Tim Cornwell (NRAO) provided a demonstration of
AIPS++ at the same meeting.
 
The NCSA funded position at NRAO for parallel synthesis development
has been filled, with a current starting date of 1 April 1999. There
are no other outstanding positions in synthesis at this time.
 
In {\bf Glish}, the past quarter has been one of consolidation. The
graphical widgets were tentatively moved to a client for testing
during the second quarter. At that time, while the default behavior of
the widgets was unchanged, the new widget client was made available
for testing. This quarter the new client-based widgets became the
default widgets. This change revealed a number of problems both in
Glish and in the client-based widgets. Fixing these and other
problems, as well as adding a few new features were the primary Glish
activity of the quarter.

A significant amount of time was spent working on memory leaks arising
from self referential records. As a result of records containing
functions, these sorts of records are often created. While a solution
was found, more work is required to make it efficient before
incorporating it into the distributed version of Glish. Other bug
fixes included:

\begin{itemize}
\item timer client event scheduling problems were discovered and fixed

\item problems with is\_const() and is\_defined() for certain values were
        discovered and fixed

\item site-wide .glishrc file was created to fix startup problems

\item many TCL/Tk widget bugs were fixed in the widget client
\end{itemize}

In addition to fixing bugs, a few new features were added during the quarter.
These new features include:

\begin{itemize}
\item removal of the last blocking I/O in the Glish interpreter

\item pgplot is available for creating PostScript without a GUI

\item several improvements to subsequences

\item new function, as\_evalstr(), was added to create strings which can
        be passed to eval()
\end{itemize}


In {\bf Measures}, only limited changes were made:

\begin{itemize}
\item Changed Unit interface to not use Constants anymore for physical factors
  \item Added virtual 'Type' interface to Measures, and made available in Glish
\item No work done on new Measures features. Worked only on bugs
	and requests (like formatting options and the like)
\end{itemize}

In {\bf AIPS++ Infrastructure}, we have focussed on integration of the
the user interface. This required consolidation and reconcilation of
the various interfaces, both graphical and command line, that have
been designed. This was a major discussion item in the November
integration meeting. The changes in the last quarter are:

\begin{itemize}
\item The object-oriented terminology of objects and methods has
been dropped from the user interface in favor of a more familiar
``tools and functions'' description.
\item Tools and functions can now be created and executed from a
centralized tool manager. 
\item Both graphical and command line interfaces are available.
\item A number of useful ``mega-widgets'' have been consolidated
into a widget server that provides common interfaces and default
parameters.
\item A second-generation ``auto-gui'' developed by David Barnes has
been adopted as the foundation for tool creation and function
execution. 
\end{itemize}

Two major additions have been made to the Table system:

\begin{itemize}
\item It is now possible to store records in table columns
	(internally they are stored as vectors of uChar).  Other
	software (like TableRow, glish table client, TaQL) has been
	changed to cope with records in columns.  Although TaQL (Table
	Query Language) accepts column record fields in its syntax, it
	cannot handle them yet (an exception is thrown when they are
	used).

\item The ColumnsIndex class has been created. It builds (in
	memory) an index on top of one or more columns to make it
	possible to do (fast) key lookups. For instance, given a time
	(or time range) it can find the appropriate row(s) in a
	weather subtable.  This class has not been code-copped yet, so
	it is not checked in.
\end{itemize}

A few small bugs have been fixed and some small additions have been done.

A group of 14 Lattices classes has been submitted for review.
Their documentation and test programs have been upgraded considerably.
It is expected that the review will be finished by the end of January
after which they can be moved from trial to aips.

The Lattice and Image region classes have been finished.  The LC
classes define a region in pixel coordinates. They are used by the
Lattice classes (e.g. to create a SubLattice).  An LC region consists
of a (minimal) bounding box and optionally a mask.  The mask tells
which pixels in the bounding box belong to the region.  The basic
classes can be used to define a box, ellipsoid, or polygon.  The
compound classes make it possible to make the union, difference,
complement, etc. of regions.  The WC classes define a region in world
coordinates. They can also be (partly) defined in pixel or fractional
coordinates. When a WC region is used on an Image, it is first
converted to an LC region. In this process axes are permutated as
needed, so the order of the region axes matches the order of the image
axes. Similar to the LC classes there are basic and compound WC region
classes.

The LEL (Lattice Expression Language) classes have been changed to
handle masked lattices (e.g. a sublattice formed by a circle)
correctly.  They even handle a lattice without any valid element
correctly.  Note that LEL is optimized such that no extra tests are
done when a lattice has no mask.  The LEL grammar has been extended
with functions complex (forming a complex from two reals) and length
(get length of given axes) and with the [] operator. This operator
makes it possible to mask a lattice with a condition.

It appeared that egcs1.0 compiled some code using LatticeExprNode in a
strange way (it invoked the Lattice copy constructor). By making that
constructor protected, such cases were caught.  It looks as if
egcs1.1.1 is handling this better.

The class TempImage has been created to make temporary images (in
memory or on disk depending on the size). To avoid having too many
open files, functionality has been added (also to TempLattice) to
temporarily close such an image when on disk. The reopen is done
transparently.

In {\bf Image Analysis}, the main goal was to write an image-plane
fitter that could work both interactively and non-interactively. It
was to produce a standard componentlist of fitted components. Display
was to be accomplished using the Display Library viewer (see below).
Neil Killeen writes in regard to this work:

\begin{quote}
  As my next experiment in writing an application in aips++, I
  started on imagefitter, to fit 2-D models to images.  To do
  this I created infrastructure C++ classes Fit2D and GaussianConvert.
  I then added a function to the image DO and Glish wrapper
  to fit a region of an image to a model.  I then created an
  interactive application in Glish using this basic fitting service.
  At present the displaying/cursoring is done via the pgplotwidget.  This will
  soon be replaced by Display Library capability when David 
  gives it to me (some experiments already done successfully on this).
\end{quote}

We expect this, in conjunction with the component processing in the
synthesis application imager, will be one of the major deliverables of
the first release.


In addition, the image region functionality was completed:
\begin{itemize}
\item Regions were checked into the system  and the image DO and 
    Glish wrapper modified to work with regions.
\item Some miscellaneous work in regionmanager and regionmanagergui
    adding more functionality and better layout. Added full
    GUI capability for world regions and compound regions.
    Added capability to save/restore/delete regions from Tables.
\item Added getregion, putregion, boundingbox to the user's image
    module interface
\end{itemize}

In {\bf Display} work, work proceeded on a number of fronts all aimed
at developing the library and producing some initial applications:

\begin{itemize}
\item Implementing the "final" design of the Glish/Tk Display
	Library widgets/agents---pixelcanvas, worldcanvas,
	displaydata, colormap, animator---in a separate module to the
	gtk client: it is now ready for dynamic loading whenever
	AIPS++ is ready.

\item Addition of PgPlot functionality to the WorldCanvas to
	display contour maps and axis labels as promised!  Completed a
	second DisplayData: LatticeAsContour, for displaying contour
	maps of AIPS++ Images and Arrays.  Work is still required to
	improve the axis labelling style, but the basic functionality
	is there.

\item The design and implementation of an option-passing technique
	to allow glish records to be forwarded on to DisplayDatas,
	whose various parent classes simply pull out fields of the
	record that are relevant to them.

\item The design of a prototype application---"aipseye"---to
	replace the functionality of aipsview.  This application has
	been written in glish using the Glish/Tk Display Library
	widgets/agents.  At the November Applications Integration
	Meeting, it was accepted as a good model for the First Release
	Display Library application, which will be called the
	"viewer."

\item As part of "aipseye", the design of an autogui, which builds
	and manages automatic forms for setting options on
	DisplayDatas, or in fact anything that takes the record format
	specified for the options passing (described above).  This
	will be checked into the system and used in other areas of
	AIPS++.

\item The provision of GUI widgets to unify the look and feel of
	AIPS++.  The widgetserver provides standard flavour buttons,
	entry boxes, etc., according to user settings in .aipsrc.  The
	rollup widget provides a handy real-estate saving device.  The
	tapedeck can be used to control stepping through data for
	example.
\end{itemize}

In the {\bf System} area, we continued some minor work on compilers.
In an effort to evaluate the egcs compiler, egcs1.1.1 has been
installed on a few machines. In general it seems to work fine, but
alas Solaris 2.4 has a bug which prevents it from building shared
libraries. It means we cannot switch to egcs1.1.1 until all sites have
moved to Solaris2.5 or higher.  The strong points of egcs are that it
supports almost the full C++ standard and that its exception handling
is multi-thread safe.  Egcs1.1.1 is stricter than gcc, so the code had
to be changed in a few places.  A few small tests indicated that code
compiled with egcs seems to perform at the same level as code compiled
with gcc.

A few general changes have been made to adhere the new C++ standard
in a better way:

\begin{itemize}
\item The -fno-for-scope switch has been removed from all
	makedefs.  Several source files had to be changed to get rid
	of the warnings generated by that change.

\item Bool has been changed from an enum to a typedef as bool.
	Some code had to be changed, in particular because a
	conversion from const Char* to Bool now preceeds a conversion
	to String.

\item The keyword explicit is now fully supported. It proved to be
	very useful, because the compiler showed a few errors in the
	code.

\item The keyword mutable is supported by all compilers. It is
	advocated to use it when appropriate.  The coding and
	code-copping guidelines have been changed accordingly.
\end{itemize}

Towards the end of the quarter building the documentation seemed to be
quite stable.

The aipsinit.sh file has been changed such that in general it can
set up the environment such that an aipshosts file is not needed.
This change has not been put into the system yet. because aipsinit
files for other shells have to be changed too. Furthermore it'll be
tried to cope with setting LD\_LIBRARY\_PATH as good as possible.

We considered replacements for our bug-tracking system, the Free
Software Foundation GNATS system, which we have now outgrown. None of
the free software candidates offer enough functionality and so we are
considering buying commercial software. The cost is moderate and would
be confined to consortium sites, maybe even to NRAO only. Commerical
systems provide a range of functionality ranging from simple defect
tracking to full help-desk maintenance, most of which we will need in
the near future. Evaluation will continue in the next quarter.

In the area of {\bf Parallelization}, the major push of the last
quarter was a demonstration of the parallel AIPS++ system at the
ADASS'98 conference in Urbana the first week of November.  Wes Young
and Doug Roberts presented a demonstration of the parallel
capabilities of the AIPS++ system.  Wes Young has implemented a
parallel algorithm applicator in the AIPS++ system.  This applicator
class can be used for algorithms that can carry out significant work
across multiple processors with little or no communication between the
processors.  This demonstration showed the first use of this class to
deconvolve a large spectral line cube within AIPS++. The demonstration
ran remotely on one of the NCSA Origin2000 systems. The implementation
of parallel processing is with the Message Passing Interface (MPI).
MPI is a portable system that allows data and instructions to be sent
to remote processors (either on the same machine or on different
machines).

In addition to the work put into the parallel algorithm applicator
which was put into the imager application (and subsequently renamed
pimager) significant effort was put into the user interface.  Doug
Roberts and Wes Young have worked on the user interface to allow users
to access the batch systems at NCSA.  The NCSA policy is to allow
interactive systems for short cpu times (15 minute limit); all other
jobs must be submitted to the batch manager lsbatch, which is a
load-sharing batch system built on top of the Load Sharing Facility
(LSF) system.  The interface additions to the object manager allowed
the users choices in the GUI to be written to a Glish script file.
The Glish script could be submitted to the batch system with an
additional click in the GUI.
                                   
The NCSA enabling technology (ET) team responsible for high
performance computing has been involved in an effort to obtain I/O
statistics of the AIPS++ code.  The Pablo group at the University of
Illinois Computer Science department has developed an I/O library that
records the I/O usage during the execution of an application.  The
group also provides a set of tools to analyze the I/O data in the
recorded file.  The tools can be used to create statistics in several
forms, from a table to a 3-D output that can be visualized on an
immersive display.  Doug Roberts and Wes Young have been involved in
assisting Pablo group get a stable AIPS++ installation and linking in
the instrumented I/O libraries.  The changes to the code have been
checked into the AIPS++ system to allow easy instrumentation of code
running on other machines.  Just before Christmas, we saw the first
output from an "imagertest".  Additional testing using larger data
sets will be required before making conclusions on the I/O performance 
of the AIPS++ system.

Athol Kemball, the head of the parallelization project circulated a
plan for the next two quarters of the parallel project.  It includes
plans for a small exploration of OpenMP for fine-grain parallelization
of gridding, continued work on the algorithm applicator class to
extend it to additional processing (beyond Clark CLEAN that is
currently parallelized).  The group will assist in taking two large
datasets (a VLA HI mosaic and a VLBA monitoring experiment) through
the parallel AIPS++ system.

In {\bf Documentation}, we continued improvement of the ``Getting
Started in AIPS++'' document. We investigated replacement of our flaky
and fragile, home-grown documentation system with other
alternatives. A survey of commercial products and free software
produced nothing that would meet all our needs. Our plan is to nurse
the current system along until after the first public release, at
which point, we expect to have to make a change with some concomittant
loss of functionality.

In {\bf Management}, we:

\begin{itemize}
\item Continued the recently-launched AIPS++ Managers meetings, held
every month. These are proving to be very useful in addressing
concerns not necessarily appropriate for discussion at the
project-wide Monday meetings.
\item Organized the above mentioned Integration meeting. This was
attended by: Cornwell, Kemball, Marson, Garwood, Schiebel (NRAO),
Noordam, van Diepen (NFRA), Verkouter (JIVE), Killeen, and David
Barnes (ATNF) This was a tremendous success with agreements being
reached on a number of very important topics related to integration of
the existing applications.
\item Presented a demo of AIPS++ at ADASS. This was a PowerPoint
document being run on a projector much of the time, with actual
hands-on demos in AIPS++ on Linux at breaks. The projector is an
excellent way to attract attention.
\item Made a presentation on AIPS++ to all New Mexico NRAO staff.
\item Held discussions with JCMT over their use of AIPS++ to support
the development of ACSIS. For the moment, the ACSIS group is working
on a draft of a letter of agreement between AIPS++ and ACSIS.
\item Held discussions with Rick Puetter over incorporation of
commercial Pixon code in AIPS++. This is an area that should be
discussed with the Executive Committee. The method is the subject
of a patent application by the University of California at San Diego.
Any derivative methods may be covered by this patent, and the relevant
software will be available from a holding company, Pixon
LLC. Licensing fees are to be expected, though the authors clearly
want their method to be widely used.
\item Developed standard posters and handouts for AIPS++. Prototyped
AIPS++ tee-shirts.
\end{itemize}

In the {\bf Quality Assurance Group}, the following has occurred. 
\begin{itemize}
\item Increased in activity in system testing:
\begin{itemize}
\item Jan Noordam (Chief Tester) has assumed his role of coordinating
the testing of AIPS++. 
\item Weekly testing of the BOTH C++ and glish code
\item Daily testing (every other day) of the glish code
\end{itemize}
\item 6 Reviews completed
\item Relaxation of the commitment to not distribute code from trial. 
\end{itemize}

\section{Third beta and First Release}

The third beta release was made on October 15, 1998. Response from our
list of external beta testers has been very poor.  We have received
about a dozen bug reports, and few comments.  A poll of the
approximately 20 sites in mid December produced 8 responses, of which
most people said that they had installed the system but not used it
extensively. A few sites (NRL and JCMT, for example) are using the
system in earnest. Many plead overcommitment of time. Lack of fillers
is for some an issue, {\em e.g.} NRAO 12m.

We expect to make a first release within the first six months of this
year. We plan a code-freeze on 15 March 1999. This will be preceded
and followed by periods of intensive testing. Our intention is to make
a robust, well-documented release in time for the summer meeting of
the AAS in Chicago. Most major capabilities expected in the release
are now in the system, and require debugging or some relatively minor
additions. The key areas yet to be finalized are:

\begin{description}
\item[Robustness of Glish:] Glish is still prone to crash for
various reasons. A big improvement has been made in this quarter
with the migration of the tk widgets to a separate server.
\item[Integration of the Display Library:] Incorporation of
the DL application, viewer, in applications such as the
imagefitter, requires some system work to move towards shared
libraries. 
\item[Completion of integration issues:] The revised, integrated
user interface is a few weeks away from being finished. We expect
to get most of the important feedback from local testers.
\end{description}

Testing of the system prior to the release is a serious concern. We 
currently test AIPS++ in four different ways:

\begin{description}
\item[C++ unit testing] Specially written C++ test programs are
compiled and run weekly. Typically all classes in the reviewed code
pass this test all the time. Unreviewed code, such as the synthesis
code, does not always have test programs.  The impact of this is
lessened considerably by two factors: first, that most of the code has
been used for many months, and secondly that glish-based testing
catches a number of errors.
\item[Glish script testing] Scripts written in glish exercize the
system by testing, for example, all functions in a tool.
\item[Direct user testing] We ask users to exhaustively test all
the functionality in some area.
\item[Un-directed user testing] Users test the system either while
exploring the system or while reducing data. Note that the use of
AIPS++ at the GBT, WSRT, and Parkes has been invaluable in this
respect for certain parts of AIPS++ such as the Table system and
Glish. Other parts of the system, such as the synthesis package,
have seen much less exercise.
\end{description}

To improve project-wide awareness of the Glish script testing, we now
perform so-called ``Build and Smoke Test'' three times a week. This
practice is commonplace at Microsoft and other commercial software
vendors. As described in an IEEE software article ({\em Best
Practices}, IEEE Software, Vol 13, No. 4, July 1996), the key is to
arrange that:

\begin{quote}
Every file is compiled, linked, and combined into an executable
program every day, and the program is then put through a "smoke test,"
a relatively simple check to see whether the product "smokes" when it
runs.
\end{quote}

Our smoke test is to run the assay script which executes a number of
glish-based test scripts within the typical user environment.  For
logistic reasons, we do this three times a week instead of daily.  The
summarized results are then mailed to our aips2-lib mail exploder so
that if the system smokes, everyone can see who is responsible. This
accomplishes two objectives: first, developers become more aware of
the current state of the system {\em as would be experienced by
users}, and second, peer-pressure is utilized to minimize breakages.

Both directed and un-directed User testing are vital in producing a
high quality first release. With the recent loss of our Chief Tester,
Jan Noordam, to WSRT and SKA duties, we have no-one currently
designated to lead the testing. We must resolve this in the next
weeks, even if it means a reassignment away from development. We now
believe that the the ineffectiveness of external beta testing is to be
expected without an established user base. This means that we will
have to rely upon internal testers. At the AOC, we have two testers
who devote significant time to testing, and who have a demonstrated
history of providing valuable and useable feedback. We must make
efforts to find and cultivate similar testers at the other consortium
sites. Some help and pressure from the Executive Committee is needed
here, particularly in providing help for directed testing.

\section{Developments planned for 1999 Q1}

In {\bf Single Dish}, the top priority at the start of Q4 is to get
the new GBT filler working so that it can be used for a planned
holography backend test towards the end of the quarter.  The details
of the GBT pointing solution and its integration with other aips++
tools will be worked out.

Once the revised fillers are in place, the focus will shift back
toward dish.  Dish must be made able to interact directly with
an aips++ MeasurementSet.  A multi-component fitting operation
will be added to dish as will an fft operation.  The dish documentation
will be improved with a focus on describing the command line
interface so that users can use other aips++ tools to do things
which can not be done with the dish graphical interface.

Towards the end of the quarter we plan on starting to implement
some single dish calibration schemes in aips++.  Discussions will
also begin on a unified approach to holography within aips++.

in {\bf Measures}, we plan to:
\begin{itemize}
\item Finish the coordinate system (directions, baselines, uvw etc) unification
\item If possible, do some work on Earth tides.
\end{itemize}

In {\bf Image Analysis}, we plan to:

\begin{itemize}
\item Finalize imagefitter application in particular, when David provides 
  the bits and pieces,  integrate with Display Library
\item Implement the persistence of image masks and provide the user with
  control over them
\item Unification of coordinates, measures and regions at the Glish level.
\item A GUI for moments method of image DO
\item Relative coordinate conversions and mixed pixel/world conversions
\item More world regions
\end{itemize}

In the {\bf Display Library}, the next quarter will be spent on
touching up and documenting the viewer application in time for the
First Release.  Only two major outstanding issues remain: the
PostScript output, which has been accepted as a target by Harold
Ravlin (NCSA), and proper axis labelling and annotation methods.  One
moderate issue remains to support simple region drawing for the
imagefitter application being developed by Neil Killeen (ATNF).

In {\bf AIPS++ Infrastructure}, we plan to complete the revised
user interfaces.

In {\bf System}, we plan to move to shared libraries, as needed
for integration of the Display Library into other applications.

\section{Appendix: ATNF contribution {\em  Neil Killeen}}

\subsection{General}

This quarter the ATNF had 4 people working in AIPS++.  These are Neil
Killeen (25-75\%, also local manager), Wim Brouw (50\%), Mark Wieringa
(30\%) and David Barnes (75\%).   

As foreshadowed last time, Wim's availability decreased owing to a
temporary secondment to the ATNF's ATOMS project.  However, Wim did more
aips++ work than expected, and he will continue on reduced aips++
rations (30\%) in the first quarter 1999 as he completes his ATOMS work. 

\subsection{System}

Our systems (Solaris/Gnu and Digital Unix/Gnu) were generally stable
this quarter.  We will start egcs installations in the new year for
Solaris, Digital Unix and Linux.  The latter on our new Linux server. 

\subsection{Visits}

David and Neil visited Socorro for two weeks to attend the integration
and applications workshop (no doubt described elsewhere by Tim).


\subsection{Testing}

For the next quarter, I have lined up three people at the ATNF
to test components of the system.  They will analyze ATCA and
VLA data as part of their testing.

\subsection{Individuals}

\subsubsection{David Barnes}

David's time was spent on the Display library as described above.
In addition, he attended the Socorro meeting.

\subsubsection{Wim Brouw}

Wim has spent his time this quarter on:


\begin{description}
\item[Measures:]

\begin{itemize}
\item  Changed Unit interface to not use Constants anymore for physical factors
\item  Added virtual 'Type' interface to Measures, and made available in Glish
\item  No work done on new Measures features. Worked only on bugs and requests (like
     formatting options and the like)
\end{itemize}


\item[Miscellaneous:]

\begin{itemize}
\item wrote a new Fitting base class: still to attach it to the existing
    interface. Can handle all Real and Complex special cases.
\item tried to get all funnies out of popuphelp
\item traced a Glish error that bothered me for years
\item changed use of streams in time/angle formatting to follow standard more
    closely where possible
\item explicit problem in Tasking system
\item looked at techexplorer (from IBM)
\item code copped Records-in-Tables
\item discussed magnetic field value differences between WSRT and aips++ program
    (still waiting for outcome)
\item traced a (pks) memory leak in Maesures that was not indicated by purify
\end{itemize}

\item[Quality Assurance Group:]

\begin{itemize}
\item finalised data proposal
\item removed many (often irrelevant) compiler warnings
\item checked in new data; checked templates
\item commented on MS proposals, and other discussions and proposals
\item solved EVN crash
\item thoughts on static (i.e. Constant implementation)
\item added some rules (like explicit usage)
\end{itemize}
\end{description}


\subsubsection{Neil Killeen}

This quarter I mainly consolidated regions in the system (although I
know that I must do one more substantial revision), generated a lot
of reuseable Glish/Tk widgets and started on a new application to
fit models to images.


Neil's time went on:

\begin{description}
\item[Images/regions:]
\begin{itemize}
\item Wrote regionmanager.help
\item Regions were checked into the system  and the image DO and 
    Glish wrapper modified to work with regions.
\item Some miscellaneous work in regionmanager and regionmanagergui
    adding more functionality and better layout. Added full
    GUI capability for world regions and compound regions.
    Added capability to save/restore/delete regions from Tables.
\item Added getregion, putregion, boundingbox to the user's image
    module interface
\item improved the imagetest() script for the image module
\end{itemize}

\item[Code Copping:]

\begin{itemize}
\item Copped ObsInfo class
\item My major task here was to prepare the coordinate classes for code 
    copping.  I have written some 9 test programs to this end, with
    some documentation tidying left to do.    In writing the test
    programs, some minor bugs in the classes showed up.  
\end{itemize}

\item[Coordinates:]

\begin{itemize}
\item  some extra functions in CoordinateUtil plus the a test program.
\item I spent some time thinking and writing about how to unify coordinates, 
    measures  and regions.  I presented my ideas at Socorro.   This is quite a 
    complex problem, but needs to be done sooner rather than later.
    I made test some test implementation of a Glish coordinatemanager
    as well.
\end{itemize}


\item[Widgets (.g, .help, test script):] 
  One outcome of the Socorro meeting was an increased priority on reuseablity
  of code.  So we all stripped out good stuff from our Glish scripts and
  made a whole pile of reusable widgets.  The ones I made (code, help and
  test script) are checkmenu, extendoptionmenu, optionmenu, 
  selectablelist and dialogbox.

  I also widgetized regionmanager (from which much of my stuff
  has its origins), Wim's measures GUI (non trivial) and the quanta GUI.

\item[Fitting:]

  As my next experiment in writing an application in aips++, I
  started on imagefitter, to fit 2-D models to images.  To do
  this I created infrastructure C++ classes Fit2D and GaussianConvert.
  I then added a function to the image DO and Glish wrapper
  to fit a region of an image to a model.  I then created an
  interactive application in Glish using this basic fitting service.f
  At present the displaying/cursoring is done via the pgplotwidget.  This will
  soon be replaced by Display Library capability when David 
  gives it to me (some experiments already done successfully on this)


\item[Travel:] I attended the Socorro meeting for 2 weeks.
\end{description}


\subsubsection{Mark Wieringa}

This quarter Mark's time has been spent on

\begin{itemize}
\item Fixing a VisibilityIterator bug fix and speedup by avoiding needless I/O.
\item Restructured the measurement set DO classes, broke them up into new 
  classes and got them ready for code copping. 
\item Added new features and debugged all existing code while getting the 
  test programs to work.
\item Review of MeasurementSet version 2.0 specifications
\end{itemize}

Planned for 1999Q1:


\section{Appendix: BIMA/NCSA contribution {\em  Doug Roberts}}

\subsection{GENERAL}

During the last quarter, we had Harold Ravlin (5\%) and Doug Roberts
(50\%) working on the AIPS++ project.  In addition, NCSA is funding the
salary of Wes Young at NRAO-Socorro and will shortly fund the salary
of a second NRAO person. Accomplishments during the past quarter are
described above under Parallelization.

A significant amount of time was spent by our group in preparation for 
the ADASS'98 conference, which we hosted in Urbana on November 1-4.
The conference was also a useful deadline, which prompted the parallel 
group to finish up some of the parallelization work in order for a
presentation at ADASS.

\subsection{SYSTEM}

Our native IRIX build is now stable.  The builds are first done on an
IRIX system at NRAO.  When builds are relatively clean there an inhale
is done at NCSA.  We still have in place a red/black system which
allows a build in one while a user is actively using the other.  This
system seems to be working out fine.  NCSA is now connected to the
NRAO intranet via Socorro.  This has significantly increased the
interactivity for Wes Young in Socorro working on the NCSA Origin
2000.  This should also allow overnight transfers of moderate sized
data sets from the VLA to NCSA.

\subsection{VISITS}

Several AIPS++ programmers attended the ADASS'98 conference in early
November.  Our group had significant discussions with Athol Kemball
(the parallel project manager) and Wes Young.  Wes Young also visited
from December 16 through Christmas.  Wes and Doug met with the
performance engineering group at NCSA and the Pablo group at UIUC CS
department.  Wes and Doug started processing a large 6k x 6k x 120
HI image of M33 (from Dave Westpfahl, New Mexico Tech).

Doug Roberts visited Houston for a short meeting to encourage
interactions between the high performance computing enabling
technology team of NCSA and AIPS++.  Several possible collaborations
were discussed, including the use of a Linux cluster at the
Albuquerque High Performance Computing Center.  We also discussed the
use of MPI-I/O to address our I/O problems.

\subsection{INDIVIDUALS}

A significant fraction of the time of the NCSA personnel was taken up
with the ADASS'98 conference.  Nothing new was added to Aipsview in
the last quarter.  The parallel work progressed to the point of a
successful demonstration at the ADASS conference and progress toward
an instrumentation of the I/O performance of the AIPS++ code.

\subsubsection{RAVLIN}

Harold Ravlin has been heavily involved with system administration
during the last quarter.  Much of our local computer systems were used
during the ADASS conference and Harold was in charge of setting the
systems up and returning them to normal operation at the conclusion of
the conference.  Harold spent a small amount of time with Aipsview
consulting.  Harold investigated getting Aipsview to display on
systems with TrueColor visuals.  The conclusion was that a robust
solution is possible but probably prohibitive in terms of time since
Aipsview is not currently being developed.

\subsubsection{ROBERTS}

Doug Roberts spend much of the first part of the quarter preparing for
the parallel AIPS++ demonstration at the ADASS conference.  He wrote a
perl script to submit a Glish script to the batch queue, including the
user's environment.  With the additions that Wes Young made to the
object catalog, the user now sees only a minor difference between an
interactive and batch system.

Doug has also installed AIPS++ on a linux cluster at the UIUC CS
department and consulted with the Pablo group to enable the
instrumentation of the AIPS++ I/O system.  So far we just have
preliminary results.  We have the instrumented code on the Origin 2000
and are accumulating statistics on large data processing.  Results on
a variety of problems sizes will be obtained in the first quarter of
1999.  Further information is available in the Parallel section.

\section{Appendix: NFRA contribution {\em  Jan Noordam}}

Local project members: Ger van Diepen (GVD), Michael Haller (MXH), Jan
Noordam (JEN, local manager).

\subsection{General}

Michael Haller will leave NFRA at the end of March 1999. Until then,
he will continue writing Glish applications for the TMS project. In
addition to his role as local AIPS++ system manager, he will
participate in the weekly testing of AIPS++.

Bob Campbell (postdoc at NFRA) has made little progress to his work
on ionospheric calibration, due to his greater involvement with VLBI
work in Bonn. 

\begin{tabular}{|l|c|c|c|}
\hline 
&                     Global AIPS++ &     Local AIPS++ &   Other\\
\hline 
Ger van Diepen:	   &  70\%		&     10\% & 20\%	\\
Michael Haller:    &  10\%		&     30\% & 60\%\\
Jan Noordam:       &  20\%		&     50\% & 30\% \\
\hline
\end{tabular}
\vskip 0.5in

\subsection{WSRT upgrade}

The WSRT DZB/TMS 10MHz system (i.e. using the first of 8 DZB units)
has been declared operational by 19 Dec. It relies heaviliy on AIPS++.
The on-line system TMS uses tables, Measures and Glish, and off-line
determination of basic instrumental parameters is done in a local
AIPS++ 'mini-package' (see below). Much remains to be done. 


\subsection{Replacement of WSRT setup software (IWOS) (JEN)}

A clear split has been made between the sofdtware needed for the
'10MHz' and the '20MHz' systems. The former are now all available in
the well-tested 'mstool' set of applications, which include the
uv-data visualiser. The remainder has been implemented in the new
'uvbrick' set of applications, but not yet tested 'in the field'.
Before March, all WSRT setup and inspection applications will be based
on uvbrick.

\subsection{WSRT uv-data fillers and converters (GVD)}

A few small changes to ms2scn and fits2ms have been made.

\subsection{Infrastructure software:}

This has been reported separately by GVD above.

\subsection{TMS Applications in Glish (MXH)}

TMS Table Browsers: Work on this began in the 3rd quarter.  These are
mostly finished except for maintenance updates etc.

TMS Specification application: Initial design including a few meetings
to discuss this.


\subsection{AIPS++ Site in Dwingeloo/Westerbork (MXH)}

On-going administration of aips++ system.  On average 4 hours a week.
Quite a lot of work here due to upgrade to use of egcs cmpiler.  Also 
a number of (ongoing) changes to the AIPS++ system in Westerbork.

Upgrade of aips++ system on W'bork and JNoordam's laptop.
Upgrade/maintenance of linux systems.  Aips++ support to several
aips++ users.  Linux installation help to sysadmin.  Help sysadmin is
determining problems with a number of installed tools/applications
(eg, broken gcc, etc).


\section{Appendix: NRAO contribution {\em  Tim Cornwell}}

The core NRAO AIPS++ group is now Barnes (100\%), Cornwell (100\%),
Garwood (100\%), Holdaway(100\%), Kemball(100\%), Marson (100\%),
McMullin (100\%), Schiebel (100\%), Weatherall (50\%),
and Young (100\%, funded by NCSA-NRAO collaboration).

\subsection{Peter Barnes}

Peter:

1. Received comments from testers about MSSummary format.  Made
extensive changes to code after consultation with Athol to reflect
received suggestions -- most accomodated.  MSSummary now has 2 main
modes of operation, a "verbose" mode which gives more details about
the various tables in a Measurement Set, and a "terse" mode which
gives fewer details.  Both are formatted to read well on the page or
screen.  Also, I enhanced the code in several other respects to make
it more conformant with aips++ recommended style.  Kept learning more
things about using aips++ libraries and modules.

2. Wrote new class MSLister to produce text-based data listings, based
on MSSelector class and what I learned from revising MSSummary.  Had
to spend quite a bit of time learning more about the existing
libraries and how to use them, especially MSSelector and the class
MSRange which was split off from it, as well as compile and debug
issues, scoping and formatting, etc.  Got a nicely working version
which will print out all data (default) or data restricted to a given
time range from a Measurement Set.

3. Began working on a DisplayLibrary design memo.  Using discussion
with Athol and David B, enums in MSRange, and MSdefV2 as sources of
inspiration (besides my own experience with numerous plotting and
astro software packages).  Gave Athol a rough draft before leaving for
xmas hols.  Main inspiration was: for coders, plot styles should be
organised according to the underlying dimensionality of the plots, ie
spectra and time series are intrinsically 1D, maps etc are 2D, and
cubes are cubes.  Then particular plot applications become simple
extensions of basic plot styles from these families, making the code
useful and easily extentible for astronomers, but keeping an elegant
OO architecture for coders.

\subsection{Tim Cornwell}

Tim did the following:
\begin{description}
\item[User interface:] 
\begin{itemize}
\item Developed new version of toolmanager (previously called the
objectcatalog). This is the prime point of control for AIPS++ tools.
It allows control using both a GUI and a CLI. Much more information
is presented to the user about the tools that can be used, and the
status of those that are currently running.
\item Conducted discussion of terminology. We have decided on tools
and functions. A tool is a collection of related functions such as
imager, the synthesis imaging and deconvolution application. 
\item With Athol Kemball, arranged and chaired the November
Integration meeting.
\end{itemize}
\item[Synthesis:] 
\begin{itemize}
\item Developed initial version of wide-field imaging application,
embedded in imager as one option. Due to the excellent design of
all relevant parts of the synthesis and image code, this was very
easy. The extra code is mainly in a derived class of ImageSkyModel
called WFCleanImageSkyModel, which calls MFCleanImageSkyModel to
do all of the important work.
\item Worked with Mark Holdaway on the development of the mosaicing
code.
\item Developed a multi-scale clean algorithm based upon a simple
generalization of Hogbom's algorithm. Again, this was an excellent
test of the library code, and proved that very substantial new
algorithms can be written straightforwardly with little work. The
algorithm produces very low residuals, removing the largest scale
structures first.
\item Worked with a group from NRL and JPL on the design of a
space-borne interferometric system. This project has now fallen
by the wayside for lack of a sponsor at NRL but has provided funds
for the acquisition of a SGI Origin 200 at Socorro.
\end{itemize}
\item[Management:] Tim did most of the work described above
under Management.
\end{description}

\subsection{Bob Garwood}


Bob Garwood's primary responsibility is to oversee and contribute
towards the single dish work in aips++.  This work remains focussed on the
"dish" environment and the support of the GBT.  His contribution
in support of the GBT is primarily through the GBT fillers which
convert the GBT FITS data files to an aips++ MeasurementSet.

Over the past 3 months (October through December) he has done the
following:


\begin{itemize}
\item    Made a presentation at the GBT Advisory Committee meeting in October.
        This presentation included a demo of "dish".  
\item    Several real data sets for use with dish were checked into the system.
        Previously, only fake pseudo data was available for testing and
        demonstrating dish.
\item    Participated in a number of face-to-face discussions regarding single
        dish calibration and holography.
\item    Presented a poster at ADASS.
\item    Attended the aips++ integration meeting at the AOC in November.
        Prepared a single dish development plan prior to this meeting.
\item    Drafted a set of guidelines for GUIs in aips++.  These guidelines were
        used as the starting point for a discussion on GUIs held during
        the integration meeting at the AOC in November.
\item    Participated in discussions at the AOC with the ACSIS group from JCMT on
        on using aips++ for their analysis needs.
\item    Started work on revising the UniPOPS FITS writer so that it produces
        valid SD-FITS.
\item    Started working on rewriting the GBT fillers.  The basic utilities
        are rewritten sufficiently to demonstrate a significant increase
        in speed and a reduction in the disk space required for the
        resulting filled table.
\item    Developed and checked in several simple widgets suggested by the GUI
        discussions at the integration meeting.
\item    Fixed several small bugs related to the Green Bank installation and
        Green Bank specific tools.
\end{itemize}

\subsection{Mark Holdaway}

Mark Holdaway has written new primary beam/voltage pattern classes
which permit the construction of the beams from a number of expandable
generic types (Airy pattern, polynomial, etc).  Currently, the beams
are restricted to be rotationally symmetric, but classes have been
left for full 2-D beam images.  Likewise, the possibility of different
beam patterns for different antennas is also left open.  All beams can
deal with beam squint.  Tests of removing the effects of beam squint
from Stokes V and Stokes I data are under way.

In addition, Mark is nearly finished with writing and testing
an implementation of the Cornwell and Evans maximum entropy
deconvolution algorithm.  The polymorphic entropy class currently
permits both maximum entropy and maximum emptiness algorithms.

\subsection{Athol Kemball}

Athol writes:

``In the area of code development, I have continued to implement
expanded calibration capabilities in the existing synthesis
package. This has included the design and implementation of a new
calibration table format, and the implementation of cross-calibration
capabilities. I have modified the calibrater DO interface and
documentation accordingly and have spent time testing the new
calibration features. Significant effort has also been expended on
calibration design for current and future development in this area.

``I have worked with a small group to coordinate calibration
implementation in single-dish and synthesis, to maximize the overlap
between these two efforts, in order to allow joint calibration and
calibration transfer. Two meetings have been held in this regard
during this quarter. The MS v2.0 data format has been revised slightly
to accommodate improved single-dish data handling.

``:I have continued my normal coordination responsibilities in general
synthesis development and AIPS++ parallelization. The work in these
areas is described in the synthesis and NCSA sections of this report.
I have undertaken coordination responsibilities in applications
integration during this quarter, as a follow-up to the integration
meeting held in Socorro in November. This is described in the
synthesis section of the report. My current duties in the technical
area and supervision have continued during this quarter, and have
included work on procurement.

``I attended the ADASS'98 meeting in Champaign-Urbana, where I presented
a talk on data processing models in AIPS++. I also attended the
parallel object-oriented meeting ISCOPE'98 in Santa Fe in early
December.''


\subsection{Ralph Marson}

Ralph writes:

``This has been a quite quarter for me because:
\begin{itemize}
\item I took three weeks of science time (my allotted amount)!
\item I took three week of vacation time.
\end{itemize}
This only left about six weeks of AIPS++ time.

``The major thing I worked on this quarter was the Lattice Convolver and 
the Lattice based clean. The Lattice Convolver is finished and if test 
programs and documentation were up to scratch could be code copped.

``The Lattice based clean is 80\% finished but not checked in yet. This
will be completed (excluding test programs and documentation) after we
declare a stable release as it involves overhauling the base classes
for deconvolution.

``I also spent two weeks this quarter with issues related to the beta
release. In particular the mathematics module was split into seperate
files and the documentation overhauled. I also undertook some of the
testing responsibilities.

``Two weeks was also spent on the AIPS++ integration meetings and
associated discussions.

``I spent one week visiting the Navy Protype Optical Interferometer in
Arizona. This is instrument is operated by the Naval Research
Laboratory (NRL) and they are interested in using AIPS++ for data
reduction. During this week I installed the latest AIPS++ beta release
(ie., binaries) and a recent code snapshot (ie., source and
binaries). This arraingement gives them a stable platform to evaluate
AIPS++ as well as a mechanism for compiling code and linking their own
code into AIPS++.

``NRL currently has some software for reducing data from their
instrument. This software relies on the commercial product PV-WAVE and
there is concern for the longer term viability of this development
path. The current stratagy is for them to evaluate AIPS++ over the
next few months and over the next few years migrate their current
software to AIPS++. 

``During this week in Arizona I gave a talk on AIPS++ to a group of
about 20 astronomers at the NRL optical telescope near Flagstaff.''


\subsection{Joseph McMullin}


Joseph McMullin's main responsibilities are managing the Green Bank
installation of AIPS++, supporting AIPS++-related GBT needs, and work
on single dish applications within AIPS++.

\begin{itemize}
\item Replaced defaultplotter with  DISH Plotter in the continuum commissioning 
software and added the resultsmanager for similar interfaces between
the spectral line and continuum reduction.

\item Added an operation for ASCII spectrum output within DISH.

\item Revised total power reduction scripts for passband tests to better
accomodate the work being done (improved table output, header info for
smoother access in DISH).

\item Present poster on astronomical applications of AIPS++ at ADASS; wrote
up paper for proceedings. 

\item Explored various options for pointing solutions for the GBT.
Currently, it looks like we will settle on using the TPOINT software
of P. Wallace. Have included a button within the commissioning
software which calls up a window within the TPOINT environment for
interactive analysis. Quite a few details to work out still.

\item Worked on design of a revised DISH plotter which will incorporate all
of the required functions while conforming to the new GUI standards.
Implementation in progress.

\item Currently working on finalizing the pointing implementation and the
revised DISH plotter.
\end{itemize}

\subsection{Darrell Schiebel}

Darrell Schiebel implemented all of the Glish changes and additions
described in the section on progress in the last quarter. 

In addition to all of the Glish changes, Darrell worked on a few other items.
He wrote the GBT observer table parser which Rick Fisher drives with his
GBT Observer interface. This Glish client parses the GBT observer table
language which Rick developed, and returns Glish records which are
arranged for easy use by Rick's scripts.

Following the departure of Jeff Uphoff, Darrell worked on a number of
AIPS++ system/clean up items:

\begin{itemize}

\item removed the gmisc client and replaced the remaining uses of the
	client with calls to built-in Glish functions

\item updated latex2html for the SunOS systems in Charlottesville

\item several Linux build problems, i.e. an EGCS installation
	in MD and GCC 2.7.2 on RedHat 5.1 systems

\item runtime problems with a couple of clients on SGI machines

\end{itemize}

\subsection{Kate Weatherall}

Kate was responsible for all changes made to the AIPS++ Web pages.

\begin{itemize}
\item Reformatted "Getting Started in AIPS++" Manual.
\item Continue to fix broken links reported by htdig and other bug 
reports when I receive
them.
\item Made new navigation buttons for top of web pages and installed.
\item Cleaned up and reorganized directories and files, including: 
\item Wrote web maintenance proposal.
\item Made AIPS++ poster for ADASS and brochures AAS-Austin.
\item Working on formatting recipes so they are consistent.
\end{itemize}        

\subsection{Wes Young}

\begin{itemize}
\item Attended the ADASS conference at UIUC and demo'ed the parallelization
effort.

\item Attended the ISCOPE98 conference in Santa Fe.

\item Made a version imager capable of doing Clark Cleans in parallel.  As
part of
  this effort demonstrated a scheme for creating "batch scripts" from
the AIPS++
  auto-gui (We demo'ed this at the ADASS).

\item Visited the University of Illinois, Urbana-Champaign for two weeks
in
  December.

\item Checked in the NCSA's Parallel IO group's (PABLO) changes to
FilebufIO.cc
  and RegularFileIO.cc. Modified ObjectController.cc to allow collection

  of IO statistics from distributed objects.  We ran some test cases
with
  imagertest. We expect to collect results from processing the M33 data.

\item With Doug Roberts pushed through one plane of Dave Westpfahl's M33
data
  set (6000 pixels on a side).

\item Started work on a glish record-browser.

\item Provided SGI support for AIPS++.

\item Constructed a web page for known compiler problems (mostly SGI).

\item Provided documentation support.

\item General AIPS++ support, bug fixes, system and GNATS administration.

\item Investigated alternatives to GNATS for problem report.

\item Did some maintenance on VLA observe (bug fixes, calibrator, planetary
  ephemeris, and array) updates.
\end{itemize}

\section{Appendix: Summary of AIPS++ Personnel Changes}

In this section, we give the names of people in the various AIPS++
groups and the nominal fraction of time allocated to AIPS++.
These are as expected for the next quarter (and thus do not
include the expected replacements for Briggs or Uphoff, or the
new hires in Socorro).

The ATNF group is: Neil Killeen (75\%, also local manager), Wim
Brouw (20\%), Mark Wieringa (30\%) and David Barnes (75\%).

The BIMA/NCSA group is: Harold Ravlin (5\%), Doug Roberts (50\%).

The NFRA group is: Ger van Diepen, Michael Haller, and Jan Noordam.
The allocations are:

\begin{tabular}{|l|c|c|c|}
\hline 
&                     Global AIPS++ &     Local AIPS++ &   Other\\
\hline 
Ger van Diepen:	   &  70\%		&     10\% & 20\%	\\
Michael Haller:    &  10\%		&     30\% & 60\%\\
Jan Noordam:       &  20\%		&     50\% & 30\% \\
\hline
\end{tabular}
\vskip 0.5in

The NRAO group is: Tim Cornwell (100\%), Bob Garwood (100\%), Mark
Holdaway (100\%), Athol Kemball (100\%), Ralph Marson (100\%), Joe
McMullin (100\%), Darrell Schiebel (100\%), Kate Weatherall (50\%) and
Wes Young (100\%, funded by NCSA-NRAO collaboration). We have one open
position in Green Bank. Kumar Golap of MRT is scheduled to join the
Socorro group in early April. Kumar will work on optimization and
parallelization of wide-field imaging.

Thus, in aggregate, we have 18 people contributing about 13 FTEs to
the AIPS++ Project. Of these, 9 are employed by NRAO (one funded by
NCSA), and contribute 8.5 FTEs. The numbers for the other partners
are: ATNF 4 and 2, BIMA/NCSA 2 and 0.55, NFRA 3 and 1.9. There are
three unfilled positions, one at BIMA/NCSA (Briggs) and two at NRAO
(GBT scientist, parallel applications developer: Kumar Golap due in
April).

\end{document}

