\documentclass[11pt]{article}
\usepackage{html, epsf}
\begin{document}
\title{\bf AIPS++ Quarterly Report: 1997 Q3}
\author{T.J. Cornwell, NRAO}
\date{1997 October 8}
\maketitle

\tableofcontents

\section{Introduction}

AIPS++ is now in second beta release (of three expected before
a limited public release). In addition, AIPS++ is in use at
a number of consortium observatories:

\begin{description}
\item[ATNF] At the Parkes telescope for Parkes Multibeam 
observing.
\item[NRAO] At Green Bank, for support of the Green Bank
Telescope engineering.
\item[NFRA] At WSRT, integrated into the Telescope Management
System.
\end{description}

\section{Developments in 1997 Q3}

In {\bf Single Dish support}, we continued development of the single
dish analysis program, concentrating on improving the plotter
capabilities. Much work this last quarter has been dedicated to
improving our handling of SDFITS. We continue to provide support for
the use of AIPS++ by the Green Bank Telescope engineers.

In {\bf Synthesis support}, as planned, we have re-written the
gridding and FFT code to improve the performance for both spectral
line and large continuum processing. We also considerably improved the
performance of the sort and selection routines. We added support for
manipulating lists of components, most particularly converting them to
images.

We continue development of a sophisticated Glish-based tool for
visualizing visibility data from a MeasurementSet. Jan Noordam is
writing this application entirely in Glish. As such it is an excellent
test and demonstration of the Glish programmability. For efficiency
purposes, we have provided C++-based access to the MeasurementSet via
a Distributed Object. This type of development (astronomer in Glish,
project support via C++ and Glish-bound Distributed Objects) is a good
model for future development by astronomers in AIPS++. The UV visualizer
will be released into the system after testing by the local staff
in Dwingeloo.

We have had discussions with Bob Sault of ATNF over the completeness
of the Measurement Equation implementation. None of the hard cases
that came up in discussion are thought to present serious problems.

In {\bf Measures}, we continued adding capabilities to the 
system. We now have the JPL DE-200 ephermeris built-in so that
the position of {\em e.g.} Mars is available from C++ and from
Glish. We continue to add Table support for Measures. We expect
this to be very useful in many different applications.

In {\bf Glish support}, our main activity was to respond to bug
reports. We are concerned that our development of GUIs in Glish may be
stressing Glish too much. An initial implementation of a sophisticated
plotter object shows unacceptable memory and resource usage.
Implementation of garbage collection inside Glish has not helped this
significantly. We are currently re-implementing some key parts of
the GUI framework to see if the memory usage can be improved.
 
In {\bf AIPS++ Infrastructure}, our work continues to be driven by the
needs of applications development. We also continue to develop a
graphical user interface for standard AIPS++ Distributed Objects,
based upon the tk widgets now bound to Glish. The Table system
was augmented by the completion of the Table Query Language (TaQL),
an SQL-like query language. We made considerable improvements
to the tablebrowser: editing of values, user-controlled formatting,
generation of sub-tables by TaQL-query, improved scrolling speed, {\em etc.}

In {\bf Visualization and Image Analysis}, we continued development of
the image display library, a joint undertaking of ATNF (Tom Oosterloo)
and BIMA/NCSA (John Pixton). The core library is finished and
well-documented but as yet only a few demonstration and test programs
have been written. This work is now in hiatus following the departure
of both Tom and John. We expect that some small amount of work will
occur in the next few months, but our major development in this area
will resume with the arrival in February of David Barnes at Epping to
work in AIPS++.

In the {\bf System} area, we started (and are closing to finishing) a port
to the IRIX native compiler, including optimizations for parallelization.

We also continued an evaluation of the Kuck and Associates C++
compiler. This includes a number of optimizations not present in other
C++ compilers and may improve the performance of our code. This work
now continues at NFRA., If this is successful, we plan to use this
compiler for generating binaries for distribution.

We have normalized and documented the names of user control variables.

We have started re-implementation of our ``Do-It-Yourself'' template
handling mechanism. The goals of this are to cut down compilation
time by suitably grouping templates and by eliminating
un-used templates. We expect to complete the implementation of this
approach in the next quarter.

We held long dicussions of proposals for rearranging the directory
structure. This will be needed soon to support the delivery of
data to AIPS++ sites (for {\em e.g.} the Measures system), and also
to rationalize the distribution of source code files inside the
system. In view of the complicated nature of the set of changes that
must be made, we have deferred this until after the next beta
release.

In {\bf Documentation}, we continued adding material to the Reference
manual.  We have deferred production of a cookbook until the
interfaces, most particularly the GUIS, settle down.  We have hired a
Information Services Coordinator in Socorro (50\% time) to work on
improving the Web interface for our documentation and to provide
technical editing for our documentation.

In {\bf Management}, we conducted a Birds-Of-a-Feather session
(jointly with the AIPS project) at the ADASS meeting in Sonthofen. In
addition, we gave a computer demonstration of AIPS++. Cornwell,
Glendenning and Kemball visited Dwingeloo for several days following
the meetings. One purpose of the meeting was to discuss the proposed
alternate implementation of the MeasurementEquation (``Megi Number
Servers''). After intense discussion, we decided to defer any further
consideration for at least a year.  In addition, we held discussions
with the NFRA TMS group and the JIVE Correlator group. The main
purpose of these meetings was to exchange information on the use of
the system by both groups. TMS is currently using AIPS++ as part of
the operational interface of the WSRT telescope. JIVE intends to use
AIPS++ for data acquistion and re-formatting. Both projects need
loss-less mechanisms for exporting and archiving in FITS format. As a result, we
have made this a high priority. JIVE is not expected to contribute
back to the AIPS++ project in the short term but is interested in
becoming a full partner in the longer term.

Tim Cornwell visited ATNF (both Epping and Narrabri) for three weeks
to work with the local group on a variety of issues, most importantly
the performance of the synthesis code in collaboration with Mark
Wieringa.

\section{Beta release v0.9}

The second beta release was made on September 11, 1997. Little
feedback has been received. Some problems with FITS reading and
writing were noted (and will be fixed in the next patch).  There is
some concern that the current model for spectral line processing needs
augmentation by addition of a ``channel-0'' pseudo-continuum. Our
response is to fix this in the short term by providing improved
visualization capabilities, and in the longer term by incorporating
channel-0 capabilities in the data access routines needed for
cross-calibration.

The current list of milestones is as follows:

\begin{description}
\item[AIPS++ V0.8 {\em 26 Feb 97}]: First beta release
\begin{itemize}
\item Continuum synthesis imaging and self-calibration,
\item General Glish-based tools.
\end{itemize}
\item[AIPS++ V0.9 {\em 11 September 97}]: Second beta release
\begin{itemize}
\item Rectify remaining problems in V0.8
\item Spectral line additions to synthesis processing,
\end{itemize}
\item[AIPS++ V0.95 {\em January 98}]: Third beta release
\begin{itemize}
\item Rectify remaining problems in V0.9
\item Improvements to the user interface, specifically via a number of
GUI-based applications such as the Image GUI and the Single Dish 
analysis program.
\item Additional synthesis capabilities: {\em e.g.} multi-field imaging,
component models.
\end{itemize}
\item[AIPS++ V1.0 {\em Q2 98}]: Limited Public Release
\begin{itemize}
\item First publicly available release of AIPS++.
\end{itemize}
\end{description}

We are concerned about exhausting our beta-testers with too many
releases so we intend to hold off on the third beta release until we
have a clear core of new capabilities for testing.

\section{Developments planned for 1997 Q4}

The principal activity for the next quarter will be support of
beta testing, and preparation of the next release.

In {\bf Single Dish support}, we will continue development of the
Single Dish analysis program, with the goal of making this part of
the third beta release. We will continue work towards
the formalization of the SDFITS standard, providing a draft
standard and some example SDFITS files.

In {\bf Synthesis support}, we will increase our activity
considerably:

\begin{itemize}
\item Athol Kemball will continue development of a fully-fledged calibration
system using the current Measurement Equation implementation.
\item Jan Noordam will finish a visibility data visualizer.
\item Tim Cornwell will convert imager to the new implementation
of Distributed Objects and he will develop a GUI interface for the imager.
\item Wim Brouw will design
mosaicing support using the Measurement Equation implementation.
\item Dan Briggs will develop wide-field imaging algorithms similar
to those in the dragon program in SDE.
\item Ralph Marson will convert the cleaning algorithms to work on
Lattices (disk-based rather than memory-based).
\end{itemize}

This activity will be coordinated via weekly phone conferences following
the usual Monday Meetings.

In {\bf Measures}, we will complete the addition of support for Measures 
in Tables.

In {\bf Glish support}, we will continue to fix bugs as they occur in
testing. We will issue release 2.6 of Glish.

In {\bf AIPS++ Infrastructure}, we will continue to track the needs of
applications programmers. We will finish the improvements to the table browser.
We will integrate history and logging. We will finish the DO Version 2
GUI support including support for plug-in components. We will complete
optimization and cleanup of the FFTServer class.

In {\bf Visualization and Image Analysis}, we will do some minor testing
and application development using the display library.

In the {\bf System} area, we will complete the port to the KAI compiler.
We will implement fully the improvements to the DIY template system
that were described above.

In {\bf Documentation}, we expect to make progress on the intermediate level
documentation requested by our beta testers (cookbooks and migration guides).
We will review our Web presence.

In {\bf Management}, as the first stage in implementation of the
Operations plan, we will set up the Quality Assurance Group.

\section{Appendix: ATNF contribution {\em  Neil Killeen}}

\noindent 
{\bf People}

For this quarter, the ATNF had 4 people working in AIPS++.  These are
Neil Killeen (25-75\%, also local manager), Wim Brouw (90\%), Tom
Oosterloo (75\%) and Mark Wieringa (30\%).  For the coming quarter, we
will be three as Tom Oosterloo has now left the project and returned
to Italy.  We have hired David Barnes to replace Tom; David will join
us in the middle of February 1998 after he completes his PhD.  His
prime software responsibility will be to continue implementation of
the display library and to generate applications using it.

I would like to thank Tom for his contribution to AIPS++, in particular
for designing and implementing (in collaboration with John Pixton) the
display library, and wish him success in his future.

\bigskip
\noindent 
{\bf System}

\begin{itemize}

\item Our systems (SUN/Gnu, Digital Unix/Gnu) have been pretty stable
this quarter.  Our experience with the time taken to manage these
AIPS++ installations that are inhaling weekly is that it is quite
small.  Our weekly inhale process usually consists of an initial look
at the inhale (fetch updates) as it begins (on Saturday -- the ATNF is
of course generous with overtime, if not pay for it).  Then usually a
couple of spot checks during the sneeze (rebuild).  If there are minor
problems, we try to diagnose and have the rebuild finished again
before the working week begins.  If we cannot diagnose/fix any
problems, them we send out appropriate emails and install the fix when
it arrives and initiate the rebuild.  There are occasional times when
we might spend some substantial fraction of a day diagnosing some
obscure problem, but these are now pretty rare.  Typically, the time
we spend on maintaining the system is quite small, about 1 hour per
week.

\item The weekly full rebuilds are taking about 15 hours presently (on
an Ultra 140 server with a lot of memory).  This has decreased from the
previous 24 hours because of the removal of many unused templates from
the system.  It will improve quite substantially in the future as a new
scheme for coalescing templates will be implemented in the system.

\item Regrettably, the SGI native port (the Gnu port failed entirely
with internal compiler errors) is still not complete.  This is mainly
because we lowered its priority relative to some non-AIPS++ observatory
related things.  However, we have begun the work lately and made some
progress.  A variety of errors occurred with the IRIX 6.2 version of the
operating system which did not occur in NCSA's work with IRIX 5.3.  At
this point we are soliciting NCSA's opinion since they are the only
other active SGI site and presumably need an IRIX 6.2 port as well. 


\end{itemize}


\noindent {\bf Visits}

Nobody went anywhere.  I should note here that the ATNF was unsuccessful
in trying to get funding from an Australian government agency for AIPS++
international travel.  In the past we have received some funding from
them.  We will apply again next year, but this shortfall will probably
curtail some of our ability to travel in the coming year. 

Tim Cornwell made an enjoyable visit (at least, we enjoyed it) to the
ATNF for about 3 weeks during this quarter.  We took the opportunity
during his visit to hold some discussions about mosaicing and single
dish integration with interferometers.  Tim spent time with Mark
Wieringa discussing the continuing effort to implement the Measurement
Equation.  He also discussed a range of ME implemention and
functionality aspects with Bob Sault (one of its creators).  With Wim
Brouw and Neil Killeen he discussed how to incorporate system data into
AIPS++.  We also made an arrangement with Tim that Wim Brouw would spend
some time implementing mosaicing related software later in the
Measurement Equation development. 


\bigskip
\noindent {\bf Individuals}

\bigskip
\noindent Wim Brouw's responsibility is mainly to designing and
implementing the Measure and related classes.  

\begin{itemize}

\item Worked on planning how system data (tables and other auxilliary
data) should be catered for within the AIPS++ structure.  Produced a
proposal after many iterations within the project.  However, there is a
postponement of any implementation until the system directory structure is
revised to accomodate it. 

\item Provided scripts to generate/update/calculate the leap second,
IERS Earth Orientation Parameters, and IERS EOP predictions tables in
the AIPS++ system, and connected them to the Measures system.  Their use
was documented. 

\item Provided scripts to generate, and AIPS++ readable Tables of the
JPL Planetary Ephemeris tables.  The Measures can now use Planets
directly (and Sun and Moon).  Still to make use of the also provided
Nutation data in the Measure conversion (this is awaiting some movement
of code from the trial package to the code-copped aips package). 

\item Spent a lot of time on template discussions.  Changed `mkinst' to
handle multiple templates per declaration, multiple lines, \#if/\#endif,
forward declarations.  Created applications `reident' (based on earlier
script), `duplicates', `unused' and `used' to get statistics about
templates. 

\item Wrote additional `aipsrc' related classes, and interfaced them to
the aipsrc.g interface.  Meant for use in steering Measures conversions,
but still to be implemented when some trial code moves to the
code-copped aips package.  Wrote aipsrc-data.help: combining all
references to aipsrc data in the system for reference by users. 

\item Provided a Glish/c++ Parameter record interface for all Measures.
No decision yet on Table use of Measure/MeasValue records.

\item Many discussions, and small changes everywhere


\end{itemize}

\bigskip
\noindent Mark Wieringa works with Tim Cornwell implementing the Measurement
equation.  

\begin{itemize} 

\item Worked on the ATCA filler (mainly changes to the tiling scheme and
some speedups). 

\item During Tim Cornwell's visit worked with him to get spectral line processing 
ready for the beta release. 

\item Worked on the MSSelector, a class to allow
easy selection and iteration of MeasurementSets from the glish level.
A first pass at this was checked in and after comments by Jan Noordam,
some changes to the interface were made and some new Table
functionality incorporated. A second iteration has now been checked
in. Some more work on polarization conversions remains to be done.

\item Worked on speeding up the UVFITS filler and investigated sorting
and selection speeds for large continuum MeasurementSets. 


\end{itemize}



\bigskip
\noindent Tom Oosterloo was working on the display library.  

\begin{itemize}


\item The design was finalized for a number of classes, and
the first basic implementation of the Display Library finished.   

\item The Display.h file contains a description of the philosophy
and design of the display library.

\item Progress was not quite as fast as hoped, so there are some basic
things left to do.  These are integration with Glish (a discussion
document was written), creation of the user-interaction widgets
and integration with Mark Calabretta's non-linear coordinate 
labelling software (written for PGPLOT).  However, none of these
require a particularly deep knowledge of the Display Library,
which is why they were left to last.

\item We didn't quite get as far as getting a running application.  A
simple application was written to display a movie of images from a cube
with some user control over the display modes but owing to rather minor
integration problems it was not running before Tom left.  However, the
important thing to note from this application, was that its coding fully
matched our expectations of how easy it should be to write such a thing. 
It is just a few lines.  This is very enouraging. 

\item Tom will remain collaboratively connected to the AIPS++ project
and intends to continue to work (in his own time) on the Display Library
in the next few months.  When David Barnes joins us, we hope to continue
to collaborate with Tom in whatever way is most useful to us all.


\end{itemize}




\bigskip
\noindent 
Neil Killeen spends his AIPS++ time attending to local ATNF AIPS++ management 
issues as well as generating image applications.     

\begin{itemize}

\item Wrote functions in the Coordinates classes to nicely 
format world values.   Also wrote Coordinate class functions 
to compare one coordinate with another for equality given
a tolerance and a list of exclusion axes.

\item Finished round one of the Lattice classes code cop
report.  Awaiting response from respondee.

\item Turned on basic region selection (blc/trc) in my image application
classes.

\item Improved the convolution in ImageMoments so that any sized problem
can now be handled by means of separable 1-D kernels.   Made some substantial
speed improvements by being more judicous in the computation of coordinates.

\item Added to the images module a new constructor (concat) which
enables users to concatenate images together.  I also added a Hanning
smooth function.  These were done for the multibeam people.  Together
with some FITS changes, this means that multi-beam processing is now
self-contained within AIPS++, with no need to move data into Miriad for
some processing.   

\item Spent a lot of time on our new scheme to offer classes that know
how to optimally iterate through images, thus removing the need for
application programmers to know about tiling and memory management.  Had
many discussions with Ger van Diepen and Brian Glendenning about this. 
Made an initial implementation for one particular case (N dimensions in, N-1
dimensions out) and then handed it over to Ger for future work.  As a test
of this scheme, I integrated the ImageMoments class with it.  This
required a substantial restructuring of ImageMoments, but the final
result is pretty good.

\item Spent time on the process to replace Tom Oosterloo.  Successfully
concluded by hiring David Barnes.

\item Organized Tim Cornwell's visit.

\item Wrote quarterly report.


\end{itemize}


\section{Appendix: BIMA/NCSA contribution {\em  Dick Crutcher}}

During the past quarter we had 6 people working on AIPS++. Those
continuing from before were Dick Crutcher (20\%), John Pixton (100\%),
Harold Ravlin (100\%), Doug Roberts (75\%), and Peter Teuben (10\%).  Dan
Briggs joined the group in August at 100\% effort; John Pixton leaves the
group October 1. Accomplishments during the past quarter are described
below under each person.

Dick Crutcher served as local AIPS++ project manager and as BIMA
director in charge of our participation in AIPS++. In addition to usual
management duties, he attended the ADASS97 meeting in Germany and
presented a paper on "VRML and Networked Environments: New Tools for
Networked Visualization". He also spent considerable time arranging for
the ADASS98 meeting to be at the University of Illinois, sponsored by
the University of Illinois Astronomy Department and NCSA. Crutcher
became Chair of the Astronomy Department in August and moved the AIPS++
group from the Beckman Institute building to the Astronomy Building.
Much effort was put into negotiations with NCSA about continuing support
of the AIPS++ group once Crutcher's NSF Grand Challenge grant which has
provided the majority of funding expires next year; these negotiations
have not yet been concluded.

John Pixton has focused primarily on the AIPS++ display library. 
Working closely with Tom Oosterloo (CSIRO, Australia), he has tried to
fill in more of the design details regarding the WorldCanvas.  He
implemented and tested all the code necessary for the successful display
of images, including rescaling of the image and conversion of its real
values into color values.  He then needed to go back and implement
translation ability in display lists and clipping control for the
PixelCanvas to help optimize the redraw process and make it easy to draw
the same object in different places on the screen. He completed
documentation for the classes involved in the display library, and added
the ability for the user to control the target buffer for graphical
output, supporting double-buffering for smooth movies and overlay
graphics.  He also implemented but has not fully tested the code
required to handle the rendering of RGB and HSV color images. He also
attended the SIGGRAPH '97 meeting in Los Angeles August 2-9.

Harold Ravlin administers our AIPS++ workstations, which takes about 1/3
of his time. He spent considerable time on the move of all of our
workstations from NCSA to the Astronomy Building. He attended SIGGRAPH
'97. Aside from workstation support for the group, his primary
responsibility was Aipsview. Much of this was bug fixes, including
fixing some incompatibilities with Motif 2.x. He also changed the
profile code so a PGPLOT preview window is available and the X display
allows overlaid plots. The color and line style of the X display are
also changeable. Contour line widths are now adjustable, and emphasized
contours are available. Line widths now track better between profile and
axis displays and X11 and PostScript outputs.

Doug Roberts finished porting the AIPS++ system to the NCSA Origin2000
computer using the SGI native C++ compiler.  He attempted to install
AIPS++ under g++ on the Origin2000, but the gnu software had been 
improperly installed by NCSA and he was unable to proceed. He has been
editing the Aipsview manual to reflect functional changes that Harold
Ravlin has been putting into Aipsview. He has tested the AIPS++
calibration, imaging, and deconvolution routines against the same ones
in MIRIAD by processing the same BIMA data set completely through the
two systems; he found them to give the identical results within the
noise.  He has also written a users' manual on processing BIMA data
through AIPS++ to help BIMA MIRIAD users transition to using AIPS++. The
spectral-line Beta version of AIPS++ has been installed on the Illinois
Astronomy computer system.  He has given two talks to the BIMA group
here at Illinois on the background of AIPS++ and specifically how to use
it to process BIMA data; the talks include a demonstration script to
calibrate, image, and deconvolve BIMA data in AIPS++.

Dan Briggs joined the NCSA AIPS++ group in mid-August. He has spent the
month coming up to speed on the local computing infrastructure, and
preparing for a 6 week AIPS++ training session in Socorro which began on
29 September.  His initial project within AIPS++ will be implementation
of a wide field imaging task, similar to the SDE program, dragon.  This
may be in the form of extensions to imager or as a specialized task. 
Beyond duplication of existing capabilities, special attention will be
paid to spectral line capability and high end parallelization on the
Origin 2000 at NCSA.

Peter Teuben has continued work on the BIMA filler.

\section{Appendix: NFRA contribution {\em  Jan Noordam}}

Local project members: Ger van Diepen (GVD), Michael Haller (MH), Jan
Noordam (JEN, local manager), Friso Olnon (FMO), Henk Vosmeijer (HJV).

\subsection{General}

After ADASS, the AIPS++ Project Management paid a visit to
Dwingeloo. The main topic was a discussion about interfaces between
AIPS++ and TMS and the JIVE correlator. This included UVFITS-issues
and the structure of calibration tables. It was further agreed that,
in view of the large amount of work that remains to be done on the
basic package, any plans for alternative implementations of the
Measurement Equation would be shelved for a year.


\subsection{Interaction with TMS/DZB}

The first module of the new WSRT correlator (DZB) was delivered at the
end of August. This coincided beautifully with the second beta release
of AIPS++. Subsequent commissioning of the DZB in conjunction with the
new on-line system (TMS) uncovered the usual crop of small problems,
but went well on the whole. When regular observations start this fall,
AIPS++ will be an essential link in the use of a major instrument.

At this point, the use of AIPS++ is still limited. The emphasis lies
on the use of the Table System and Measures by TMS, and the use of the
Measurement Set as the output data format. Off-line reduction tends to
take place in other packages like NEWSTAR and AIPS, and some extra
effort is needed to streamline those two links. The expectation is
that AIPS++ will be used more for off-line reduction as beta testing
makes them more familiar with it, and (most importantly) when AIPS++
will feature cross-calibration.
 
Friso Olnon rounded off his work on the prototype dzbfiller, a program
which creates AIPS++ MeasurementSets from "header" data gotten from
the TMS (Telescope Management System) database and "actual" data from
the new digital backend, DZB. The classes have been released to the
TMS group for further development, testing and maintenance.  Olnon
also started an upgrade of the wsrtfiller, which fills an AIPS++
MeasurementSet from WSRT archived data. The filler will be extended to
handle multiple spectral windows (8 continuum bands for the DCB),
multiple pointing positions (for mosaicking), and IF data (stored in
WSRT-specific extra columns).

The uv-data visualiser (Jan Noordam) will play an increasingly
important role in the near future. It has been split into two modules:
a data-selector and a data inspection/manipulation tool. These two
functions constitute the bulk of most application programs, whose
actual processing algorithm usually only consists of a few lines of
code. If well-designed, these two modules would make it possible to
put together new applications very rapidly. This concept will be
pioneered with the various WSRT setup programs, which require
relatively little processing and are not time-critical.

\subsection{AIPS++ Site in Dwingeloo}

 "Regular" maintenance of the local AIPS++ system costs Friso Olnon
somewhat less than one day a week. This more and more includes support
to programmers using AIPS++ code (in the JIVE and TMS groups). In
addition, Ger van Diepen and Henk Vosmeijer spend some time on
inspection, debugging and repair. The inhale and sneeze operations are
now usually successfull apart from some minor glitches, which are
easily and quickly repaired. But about half the time we suppress the
weekly inhale/sneeze to provide user/developers with a more stable
environment.

Extra activities this quarter were the beta-0.9 release (preparation
and installation) and the ADASS'97 conference in Sonthofen (including
the preparation for AIPS++ demos during that conference). 


\subsection{Infrastructure software}

The Table system has been enhanced considerably by Ger van Diepen, in
particular the TaQL (Table Query Language).

The Table system has been adopted by the TMS-group in Dwingeloo.
Therefore TaQL had to be extended with the possibilities of
handling arrays and subqueries. The new possibilities are:

\begin{itemize}
\item Specification of sets with single values or discrete or continuous intervals
\item Subqueries can be done and result in a set.
\item Arrays are fully handled by comparison and logical operators
  and by many functions like date. Only the mathematical functions
  cannot be used on arrays yet (but are trivial to implement).
  Some special array functions like any, all, mean, median have been added.
  Array slicing is possible using a set for the index ranges.
\item The IN operator can be used to test if an expression matches any
  value in a set or array.
\item Column keywords are handled.
\item A keyword name can be used to specify a subtable stored in a keyword
  of a previously specified table.
\item Error reporting has been improved.
\item Temporary tables (i.e. residing in memory only) can be handled.
\end{itemize}

All functionality, except subqueries, is also accessible from C++.

A few other changes have been made to the table system and some
utility classes:
\begin{itemize}
\item It is possible to skip sorting in the TableIterator constructor.
\item Sorting has been sped up when only one sort key is given.
\item The RecordDesc class maintains a map of field names to speed up
  the name lookup.
\item It appeared that on the SUN an fseek slows down the IO considerably. 
  Now an fseek is only done when the file position changes.
\item A few additions to the Glish table client have been made to let
  the new table browser perform better.
\item A table cannot be deleted when it is still open in another process.
\item A message is written to LogIO when a process is waiting more than 30 sec
  to acquire a lock on a table.
\end{itemize}

Too little time could be spent on the Lattice module. A few additions
have been made:
\begin{itemize}
\item TiledStepper handles blc,trc,inc.
\item The Lattice iterators classes keep the iteration axes to be able
  to remove degenerated axes correctly. This also required a small
  change in the classes Array and IPosition.
\item LatticeApply works in principal (thanks to Neil) and seems to give
  quite good performance. A final version has to be made.
\end{itemize}

Under the guidance of Ger van Diepen, Michael Haller has spent a month
learning C++ and AIPS++, especially the Tables and Measures modules.
His first project is the implementation of Measures in Tables. He has
also made initial investigation/analysis of the possible development
of a BTrees module which is being considered for inclusion into
AIPS++. He reviewed the new AIPS++ module Aipsrc prior to inclusion
into AIPS++ package.

\subsection{Miscellaneous}

Some work has been done for the KAI compiler (which conforms the draft
C++ standard). It appears that in the new standard the iostream
package uses stdio instead of file descriptors. This required a change
in the class FilebufIO and also resulted in a new class FiledesIO.

On September 1st Eelke Klein, a student from the HIO Leeuwarden,
started working on a C++ Software Quality project. It consists of
configuring QAC++ and assembling some metrics for the AIPS++ and
TMS code.

Some UNIX administration support has been provided especially to the
Linux systems.

\section{Appendix: NRAO contribution {\em  Tim Cornwell}}

\subsection{People}

The core NRAO AIPS++ group is now Cornwell (100\%), Garwood (90\%,
10\% going to Unipops support), Glendenning (100\%), Kemball(100\%),
Marson (100\%), McMullin (100\%), Schiebel (100\%), and Uphoff (100\%).
In addition, Young of the AOC Computer Group works with us, and as
described above, Murphy of the CV computer group also contributes.  We
continue to have one unfilled position, in Socorro, for a VLBI
software specialist, and one (funded by the collaboration with NCSA)
for a programmer to work on parallelization of the AIPS++ code.
We expect to fill the latter position in a few weeks. We have also
extended an offer to an Information Services Coordinator to work
50\% on AIPS++ documentation.

\subsection{NRAO specific work}

Most of the NRAO staff work on general AIPS++ capabilities. The
exceptions are Joe McMullin, who although he is an AIPS++ Project
member, concentrates on Green Bank and GBT support concerns, and Wes
Young, who is a member of the AOC Computer Division, and thus spends a
substantial (and increasing) amount of his time on VLA-specific
developments.

Wes has worked on a number of VLA specific capabilities in AIPS++, the
most recent of which is a filler from VLA archive tapes into AIPS++
Tables. When completed, this will give VLA engineers the capability to
examine VLA monitor data using AIPS++ in much the same way that GBT
engineers can examine GBT monitor data. From there, it is a relatively
short step to fill into a fully-fledged MeasurementSet, and thus give a
path for visibility data directly from the Modcomps into AIPS++.

\section{Appendix: Review of developments planned for last quarter}

The principal activity for the next quarter was be support of
beta testing, and preparation of the next release.

In {\bf Single Dish support}, we did continue development of the
Single Dish analysis program, with the goal of making this part of
the third beta release.

In {\bf Synthesis support}, we did continue development of the
synthesis code, starting the design of a fully-fledged calibration
system using the current Measurement Equation implementation. We did
not yet finish a visibility data visualizer being developed by
Noordam, but expect to do so within a few weeks.  We did add the
various capabilities needed for dealing with list of discrete
components, as needed for WSRT calibration.

In {\bf Measures}, we did not implement the data distribution scheme
(see above). We did incorporate JPL planetary data in the
Measures system. We did work towards but did not finishing adding support for Measures in Tables.

In {\bf Glish support}, we did continue to fix bugs as they occur in
testing. We did not yet issue release 2.6 of Glish.

In {\bf AIPS++ Infrastructure}, we did continue to track the needs of
applications programmers. We made a number of revisions to the Lattice,
Image, and Table classes. We did improve the table browser.

In {\bf Visualization and Image Analysis}, we did continue development
of the image display library. We do have a complete design
and description, an implementation of the major components, but
we do not yet have any example applications.

In the {\bf System} area, we did not yet complete the port to the KAI compiler.
We did not simplify and consolidate the disposition of Glish script files
in the code management system.

In {\bf Documentation}, we did not yet make progress on the intermediate level
documentation requested by our beta testers (cookbooks and migration guides).

In {\bf Management}, we did demonstrate AIPS++ at the ADASS in Germany in September
and conduct an ADASS Birds-Of-a-Feather session on AIPS and AIPS++. We did not
 proceed with the planned name change.
We did complete the operations plan.

\section{Appendix: Summary of AIPS++ Personnel}

In this section, we give the names of people in the various AIPS++
groups and the nominal fraction of time allocated to AIPS++.

The ATNF group is: Neil Killeen (25-75\%), Wim Brouw (90\%), 
and Mark Wieringa (30\%). Tom Oosterloo's position is to be
filled by David Barnes in mid February.

The BIMA/NCSA group is: Dick Crutcher (25\%), Dan Briggs (100\%), 
Harold Ravlin (100\%), Doug Roberts (75\%), and Peter Teuben (10\%). 

The NFRA group is: Ger van Diepen (100\%), Michael Haller (100\%), 
Jan Noordam (25\%), Friso Olnon (50\%), and Henk Vosmeijer (50\%).

The NRAO group is: Tim Cornwell (100\%), Bob Garwood (90\%), Brian
Glendenning (100\%), Athol Kemball (100\%), Ralph Marson (100\%), Joe
McMullin (100\%), Pat Murphy (30\%), Darrell Schiebel (100\%), Jeff
Uphoff (100\%) and Wes Young (90\%). We have an open position in
Socorro for a VLBI software specialist, and an open position funded by
the NCSA-NRAO collaboration for someone to work on parallelization of
AIPS++ code.

Thus, in aggregate, we have 24 people contributing just over 17 FTEs
to the AIPS++ Project. Of these, 11 are employed by NRAO, and contribute
9.1 FTEs. The numbers for the other partners are: ATNF 3 and 1.45,
BIMA/NCSA 5 and 3.10, NFRA 5 and 3.25.

\end{document}

