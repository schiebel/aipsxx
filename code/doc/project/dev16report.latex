
\documentclass [12pt]{article}
\usepackage {graphicx, html, epsf, epsfig}
\usepackage {graphicx, epsf, epsfig}
\input{aips2defs.tex}


\begin{document}

\begin{center}
\textbf{AIPS++ report for development cycle v1.6}
\end{center}

\begin{center}
Athol Kemball and Joe McMullin
\end{center}

\vskip 1cm

\begin{latexonly}
\begin{figure}[htbp]
\centerline{\includegraphics[width=3.0in,height=3.0in]{r1.61.eps}}
\label{fig1}
\end{figure}
\end{latexonly}

\begin{htmlonly}
\begin{rawhtml}
<center>
<img src="../r1.61.gif"><BR>
</center>
\end{rawhtml}
\end{htmlonly}


{\bf
\section{SUMMARY}

This document summarizes the status of the AIPS++ Project at the end
of the v1.6 release cycle. Key developments during this cycle include
the following:

\begin{itemize}

\item With increasing responsibilities as head of Data Management at
NRAO, Tim Cornwell transferred the project management of AIPS++ to
Athol Kemball in early August, 2001. Joe McMullin moved from Charlottesville
to Socorro in mid-2001 to become the deputy project manager.

\item The code for the fifth public release of AIPS++ (v1.6) was
frozen in early December, 2001, duplicated later that month, and
released on CD-ROM on 6th January 2002.

\item An evaluation test of AIPS++ for ALMA was agreed, initiated, and
partially completed during this cycle. It will run through the end of
April, 2002.

\item AIPS++ participated actively in commissioning activities for the
Green Bank Telescope, which was delivered to NRAO by the contractor in
late summer of 2001.

\item An AIPS++ Operations Division was formed to coordinate the
increasing tasks concerned with the growth in the user base of the
package.

\item User testing and outreach efforts continued during this cycle,
and a number of user tutorials were held for this purpose, among other
related activities. User groups are in place and active at a number of
consortium sites.

\item The {\it Getting Results} user cookbook was re-edited and
substantially improved by Neil Killeen (ATNF). In addition, various
new chapters were contributed from throughout the project during this
cycle.

\item Performance benchmarks were established to monitor and improve
AIPS++ performance in application areas in which it has been found be
be sub-optimal. 

\end{itemize}
}

\section{Introduction}
\label{subsec:introductionl}

This report summarizes the status of the AIPS++ Project at the end of
the v1.6 development cycle, which ran from approximately 7 May 2001 to
15 November 2001. We discuss the overall status of the project, the
milestones achieved in the v1.6 development cycle and current plans
for future releases.

\section{Project overview}

\subsection{Project status}

AIPS++ is in a final integration phase at present, as is common for
large software engineering projects in active deployment. While code
growth curves do not form the basis of planning in the project, they
provide useful quantitative diagnostic information on the project
status.  The integration phase is clearly evident in the code growth
curve for AIPS++, as depicted in Figure 1. For comparison, a standard
code growth curve under canonical software engineering assumptions is
shown in Figure 2. As the AIPS++ infrastructure has become more mature
and scientifically complete, integration efforts have consumed a
greater fraction of project efforts as planned. From the turn-over in
code growth, and the project development planning, the integration
phase started in earnest around the time of the v1.3 and v1.4 releases
and continues through the present.

\begin{latexonly}
\begin{figure}[htbp]
\centerline{\includegraphics[width=3.0in,height=3.0in]{r1.62.eps}}
\caption{AIPS++ code growth over time}
\label{fig1}
\end{figure}
\end{latexonly}

\begin{htmlonly}
\begin{rawhtml}
<center>
<img src="../r1.62.gif"><BR>
AIPS++ code growth over time
</center>
\end{rawhtml}
\end{htmlonly}

\begin{latexonly}
\begin{figure}[htbp]
%\centerline{\includegraphics[width=8.64in,height=11.16in]{r1.52.eps}}
\centerline{\includegraphics[width=5.8in,height=7.49in]{r1.52.eps}}
\caption{Relationships between Radio Observatories, COBRA, and NVO}
\label{fig2}
\end{figure}
\end{latexonly}

\begin{htmlonly}
\begin{rawhtml}
<center>
<img src="../r1.52.gif"><BR>
Relationships between Radio Observatories, COBRA, and NVO
</center>
\end{rawhtml}
\end{htmlonly}

\begin{latexonly}
\begin{figure}[htbp]
\centerline{\includegraphics[width=3.0in,height=3.0in]{r1.63.eps}}
\caption{Theoretical code evolution (McConnell 1998)}
\label{fig1}
\end{figure}
\end{latexonly}

\begin{htmlonly}
\begin{rawhtml}
<center>
<img src="../r1.63.gif"><BR>
Theoretical code evolution (McConnell 1998)
</center>
\end{rawhtml}
\end{htmlonly}

Software engineering integration phases are typically concerned with
certain key activities related to the full deployment of a system,
including: i) user testing of applications and documentation; ii)
integration testing (i.e. ensuring that all components in the
infrastructure inter-operate as expected); and, iii) performance
tuning as components are combined into the highest-level
applications. All these activities have been a strong project focus in
this release, as reflected in the project planning for v1.6:\\
(http://aips2.nrao.edu/docs/notes/246/246.html) and v1.7:\\
(http://aips2.nrao.edu/daily/docs/notes/248/248.html).

The code growth measurements also show typical features common to all
projects, especially the mid-implementation code reconciliation which
occurred immediately prior to the first public release. This dip in
the code production rate reflects the discarding of code developed
early in the project but which was not used in the subsequent public
releases. This is a common mid-implementation adjustment, as shown in
the canonical code growth curve. One final point evident in the code
growth curve is the slow design and prototyping phase at the beginning
of the project, which reflects the uncertainty in the early project
period. From the linear implementation phase, the code production rate
in AIPS++ has been approximately 13,000-15,000 physical lines of code
per developer per year, well above industry standards.

\subsection{Priorities}

The planning priorities for v1.6 are: i) scientific completeness; ii)
usability improvements; iii) robustness, correctness and performance
improvements, and iv) continued deployment of the package to an
expanded user base. The code development planning for the v1.6 release
was undertaken guided by these priorities. Other activities, such as
user outreach and testing, have also been scheduled in keeping with
these overall objectives.

Scientific completeness in this context means the provision of full
end-to-end reduction paths for required observing modes at all
consortium telescopes. We have audited these at most consortium
telescopes and have identified any missing elements which need to be
provided during the integration phase. The strategy in this area is to
check in a fixed dataset in the specific observing mode, and
associated Glish scripts for their reduction. These scripts verify the
end-to-end reduction completeness in the specific modes, and can also
be used for testing the continued integrity of the system as part of
our correctness monitoring during the development cycle and
immediately prior to each release. We also make an attempt to use
these scripts in our user cookbook-level documentation, as the example
datasets are distributed with the system and can be used in tutorial
form.

Usability improvements are a common focus during integration phases. A
significant effort was made during v1.6 to improve the uv-data
visualization tool, {\tt msplot} and continuing improvements were also
made in the {\tt viewer} tool. In addition, the cookbook-level user
documentation was expanded by adding new chapters for some consortium
telescopes, and was re-edited by Neil Killeen (ATNF) to improve
substantially the overall consistency and readability. User feedback
in the documentation area was solicited where possible from user
groups, and incorporated in the edited or revised material. GUI work
is notoriously expensive and we have had to balance usability
improvements in areas such as the automated GUI, {\tt toolmanager},
against work in scientific completeness. However, we did expend a
considerable effort in understanding and improving our GUI speed and
responsiveness which we believe is dominating user perceptions of our
GUI interface in general. This proved to be a subtle
technical problem, but after evaluating several different
possibilities and strategies, we believe we have determined the best
course of action in this area. This is being pursued at present by
Darrell Scheibel (NRAO). Usability by astronomical users is a
subjective issue, and we have taken some care to obtain as broad an
ensemble average of opinion as possible across the consortium before
undertaking major user interface revisions. To this end, we conducted
a user interface survey at the end of the v1.6 development cycle, and
these results will be used in guiding future development in this
area. At present, the project strategy in this area is to rectify
major user interface deficiencies which most users agree are a
problem, and then to work with user groups directly in refining their
own views on further changes beyond that.

The work in robustness, correctness and performance improvement, in
all cases continue longer-term programs in this area within the
project. We monitor robustness using test scripts and unit test
programs which we run regularly to ensure the health and integrity of
the system. We have expanded these during v1.6, and have also made
greater use of testing against simulated data where possible.

Performance problems in some areas of the package have become visible
in recent development cycles. We have devoted effort in v1.6 to try to
isolate and analyze these effects in the package. In almost all cases,
the performance problems are found to be due to unrelated code
evolution which has had an unnoticed, but negative, impact on
performance. These code changes can be innocuous but at times have
profound performance implications not obvious on inspection.  This is
a very common code development problem. An additional complication in
the case of radio astronomy reduction packages is the large set of
parameters on which performance may depend. This includes, for
example, the uv-data set size, the imaging algorithm employed, the
image size, and a host of our user-adjustable parameters. Frequently
users encounter and flag these performance issues in new areas of
parameter space, and most packages rely on this feedback to monitor
and correct performance drift of this type. This has been happening in
AIPS++ as well, but we have also tried to be more pro-active in this
area by developing performance benchmarks we can run regularly, like
our correctness benchmarks, to catch performance drift before it is
noticed by our users. This benchmark effort was started in earnest in
v1.6, but will continue in several subsequent development
cycles. Performance analysis requires good performance tools, and we
have suffered to some extent from compiler support problems for the
tools we have traditionally used in this area in the past. We have
worked actively on trying to work around this problem by finding
alternatives where possible. We take performance questions very
seriously, and will rectify any major problems in this area.

In the area of package deployment, we have continued our efforts in
user outreach and user training, both through interaction with user
test groups at several consortium sites, and by conducting user
tutorials outside the consortium as requested. This is an important
aspect of the integration phase, in which it is particularly important
to get user feedback on usability and integration efforts. This is
part of a continuing transition to full operational status, and the
increasing workload in this area has necessitated the formation of an
Operations Division within AIPS++ to coordinate and handle all
activities related to the expanding user base. This was established in
October, 2001, and is headed by Joe McMullin.

\subsection{New instruments}

Although the project is in the final integration phase for most
consortium telescopes, the package also has to be responsive to new
instruments under development in the community. Many of the
calibration and imaging features in AIPS++ were specifically added
early on in the project to support these anticipated telescopes,
and AIPS++ has to make sure that it can meet the needs of these
instruments as they move closer to construction. The particular new
telescopes that are immediately relevant are ALMA, LOFAR and the
EVLA.

During the v1.6 development cycle, AIPS++ took several steps to
establish a closer relationship with ALMA. In response to an ALMA
request in mid-2001, we have proposed a closer mechanism for
ALMA-AIPS++ interaction, including ALMA representation on the AIPS++
Executive Committee. In addition, we agreed to an evaluation of AIPS++
for ALMA reduction, using test millimeter spectroscopic data from the
IRAM interferometer on Plateau de Bure, in order to provide sufficient
information for the ALMA project decision on off-line package
adoption. This test started in the Fall of 2001, and will continue
through the end of April, 2002. 

Developments for LOFAR/SKA are more mixed. At present the community
efforts in SKA are distributed and quite diverse, especially in the
area of simulation and algorithm development. The reduction algorithms
have much in common with aspects of EVLA imaging, and in this area we
are in a much stronger position to develop common capabilities within
AIPS++, as the EVLA has adopted AIPS++ as the reduction package.

We have had queries regarding AIPS++ adoption from other instruments
during this cycle, including the SMA, who are using AIPS++ in
commissioning and imaging, but who have yet to make a final decision
regarding off-line reduction. We have collaborated with some developers
from the SMA in their commissioning use of AIPS++ in this regard.

The JCMT and Arecibo are similarly involved in either using or
evaluating AIPS++ in their data reduction efforts. Both sites have
regular development builds, and are making good progress in using the
system, and have provided documentation for user-level reduction of
their data in AIPS++. 

\subsection{Personnel} 

At the end of the v1.6 development cycle, Ralph Marson (NRAO) took an
internal promotion transfer to the ALMA project, and left AIPS++ in
early December, 2001. His position is being advertised at present and
will be re-filled. Joe McMullin (NRAO) moved to Socorro from
Charlottesville and became the deputy project manager in early August,
2001. ASTRON participation in AIPS++ has declined during v1.6. Ger van
Diepen remains at 50\%, as he has done for the past few development
cycles, while Oleg Smirnov and Jan Noordam have moved to work on
LOFAR. This leaves a big gap in coordinating testing of the package on
the Westerbork telescope, and in some areas of the main package
development. BIMA/NCSA has increased their FTE investment in AIPS++
during the v1.6 development cycle, and this has had strong benefits
for BIMA development and the main package as a whole. Jodrell Bank
have advertised a position to work within AIPS++; this is being filled
at present.

\subsection{Workload}

In table below, we show the workload per consortium partner for the
v1.6 development cycle The work is assigned in the planning for each
cycle in units of weeks.  Defect fixing is set at a fixed fraction of
the overall time per developer.  Note that the NCSA Alliance provides
funding for two positions at NRAO. During the v1.6 cycle these were
being re-hired, and one position has subsequently been filled by
Sanjay Bhatnagar.


\begin{table}[htbp]
\begin{tabular}
{|p{113pt}|p{109pt}|}
\hline
 & 
V1.6 \\
\hline
\textbf{ASTRON}& 
26.5 (12{\%}) \\
\hline
\textbf{ATNF}& 
36.0 (16{\%}) \\
\hline
\textbf{BIMA/NCSA}& 
28.0 (13{\%}) \\
\hline
\textbf{NRAL}& 
0.0 (0{\%}) \\
\hline
\textbf{NRAO}& 
128 (59{\%}) \\
\hline
\textbf{Target FTE-weeks}& 
218.5 (100{\%}) \\
\hline
\textbf{Defects}& 
65.6 (+30{\%}) \\
\hline
\textbf{Target + Defects}& 
284.1 \\
\hline
\textbf{Total FTEs}& 
13.5 \\
\hline
\end{tabular}
\caption{AIPS++ v1.6 workload}
\label{tab1}
\end{table}


\subsection{Current challenges}

Like most academic software projects, AIPS++ has always been
under-funded by some substantial margin. Compared to larger
astronomical institutions, such as ESO or STScI, we may be under-funded
by a factor of two or three given the scope of the project. This is
becoming particularly noticeable in the user support area, and in general
operations. The target market for the package is large, and the flux
of defects and user support requests has risen sharply as the package
has found increasing scientific use. Within NRAO for example, AIPS++
developers now spend a great deal of time in direct user interaction
with scientists and user test groups. This is an expected and healthy
aspect of the integration phase. The project as a whole has a current
allocation of 30\% to address defect correction and user support, but
this is being exceeded in some areas of the project in practice. In
addition, the number of outside sites developing with AIPS++ has also
risen, precipitating some developer support costs in setting up builds
and in providing rudimentary code development advice. User training
and tutorials, though important, are costly, and we need additional
dedicated staff in operations as a priority if we are to continue to
service user support requests in a responsive manner. This has been
very difficult to do in some areas of the package during the v1.6
cycle, as these needs have escalated.

Expectations on software usability are also higher today than they
were in the past due to substantial advances in the intuitive nature
of packages developed for personal computers during this
period. Increasing requests for highly intuitive user interfaces for
AIPS++ could represent a significant cost in the future if they are to
approach the levels of those in the commercial market. The project
will need to take particular care in managing requirements in this
area while still meeting user needs.

\section{Current status}
\label{subsec:current}

This section provides a more detailed listing of development in AIPS++ in 
this development cycle. These are sub-divided by project area.

In \textbf{Operations}, a separate Division was formed within AIPS++
in late October 2001. This division integrated numerous day-to-day
activities during an AIPS++ release cycle. The key personnel for this
division are Joe McMullin and Wes Young. We review the activities
within the key areas of responsibility below.

\begin{itemize}
\item	Build Administration
	\begin{itemize}
	\item	Stability
			Daily build reports were re-commenced on a variety of
			architectures to provide stability information and
			enable more frequent stable builds; this was achieved
			soon after implementation of the daily reports.
	\item	Data Repository
			The data repository underwent a cursory review prior
			to the release for unnecessary/outdated material. A
			more rigorous review will take place in the next 
			development cycle. Due to the expansion of the data
			repository, the AIPS++ release required a 2 CD
			distribution.
	\item	Defect Monitoring
			Athol Kemball (PM) continues to perform this duty.
	\item	Code Review Scheduling
			No work was done in this area due to
escalating user support costs. It is an area of
			focus for improvement in the next development cycle.
	\end{itemize}
\item	Release
	\begin{itemize}
	\item	Preparation
			Release 1.6 was prepared through the standard AIPS++
			procedures. 
	\item	Distribution
			A new distribution protocol was developed. The existing
			database was ported to an MSWord document where it
			will be maintained by Ernie Allen (CV). This change
			also enables improved reports through MSAccess.
	\end{itemize}
\item	User Support
	\begin{itemize}
	\item Testing Coordination
			NAUG: In response to the 2001 NRAO Visiting Committee report,
			the NAUG (NRAO AIPS++ User Group) was restructured to
			improve its effectiveness. It is now led by the 
			AIPS++ Deputy Project Manager who coordinates with two
			NRAO scientific leads: Synthesis (Ed Fomalont) and
			Single Dish (Phil Jewell). It is charged with
			debugging the system, tutoring new users and increasing
			deployment of the package in the user community. It
			meets monthly with AIPS++ personnel.
	\item Training
			AIPS++ training sessions were held in Green Bank in
			October to demonstrate the capabilities to the GBT
			commissioners. Several training sessions on reducing
			early GBT data were held in Charlottesville.
	\item	Outreach
		Numerous outreach efforts were initiated. An informational 
		brochure was developed to provide
		detailed information on current capabilities and requirements.
		New displays were also developed. A trial version was tested
		at the ADASS meeting in Victoria, B.C. This was then converted
		into a standard NRAO panel display for the AAS meeting in 
		Washington, D.C. An AIPS++ lecture was given at the AO/GBT
		Single Dish Summer School in Puerto Rico along with data
		analysis support for the students there. Contact with the
		JCMT staff was made to begin efforts to use AIPS++ at this
		facility. In addition, a work-plan was developed with the
		Cornell EGG (Extra-Galactic Group) to fashion an HI 
		analysis tool. A tutorial was held in Baltimore in
early September, 2001.

	\item	Newsletter
			The newsletter had become inactive during this release
			cycle. Information and articles were intubated,
			updated, and re-edited. The first newsletter in 10
			months will be published in January 2002.
	\end{itemize}
\end{itemize}


In \textbf{Synthesis development} a number of targets were assigned in
v1.6 to address scientific completeness issues at individual
consortium telescopes. This included improvements to the fillers,
calibration tools and test scripts for BIMA, the ATCA and the VLA. For
the ATCA, specific tools were added to improve the support for
polarization self-calibration. In collaboration with the SMA,
improvements were made to the FITS-IDI filler, including support for a
greater range of MeasurementSet (MS) sub-tables.

A significant effort was made to upgrade the {\tt msplot} tool for
uv-data visualization this cycle. This tool is used heavily by the
current scientific users of the package and there were many pending
requests for enhancements and defect fixes. It was re-engineered in
places to improve robustness, and many new features were added in
response to user requests. The revised tool has been used actively
since then, and this investment of effort has improved the scientific
completeness of end-to-end reduction considerably. 

Support was expanded for heterogeneous spectral windows in the
synthesis system, including proper handling of variable-shaped
calibrated data columns. This capability was always incorporated in
the system design, but had not been actively tested until BIMA data
were fully processed in the system. This capability is needed by many
telescopes within the consortium however. Additional work in
calibration concerned improvements to the calibration table access
classes to allow full incorporation of parametrized solvers, such as
those already developed for the ionosphere and VLBI fringe-fitting.

During the v1.6 cycle, an evaluation test of AIPS++ for ALMA was
agreed with the ALMA project using test data from the IRAM
interferometer on Plateau de Bure. During this cycle, the filler for
ALMA-TI data was started, Dominique Broguiere (IRAM) visited NRAO for
two weeks, and an evaluation of the IRAM algorithms was started. This
test will run through April 2002.

In imaging, a substantial effort was devoted to performance monitoring
and enhancement. This work is ongoing. This included some gridding
optimization for both the wide-field and the narrow-band spectral-line
case.  A imaging test suite using simulated data was developed to monitor
{\tt imager} correctness, and will be used in routine imager correctness
testing in v1.7 and above.

In \textbf{Single dish}, this release cycle saw major development by
the single dish group (Braatz, Garwood, McMullin) mainly in response
to the commissioning efforts of the GBT.  AIPS++ is an integral part
of the GBT. The filler has tracked the evolving FITS output of GBT
devices, assembling them into actual astronomical observations. A
real-time display system was implemented for assessing data quality
for continuum and spectral line observations, providing feedback to
the GBT M\&C system. Calibration routines were developed for the
initial modes of GBT operation and a new command line interface was
implemented to improve ease of use and broaden the user base.

Main stream DISH development also continued. In particular, numerous 
infrastructure changes were made, in response to User Group recommendations,
to merge single dish and interferometric development. A new display tool was
unveiled, utilizing/sharing image module utilities. True multi-component
gaussian fit routines were also implemented. New tools were also developed
for calibrating and analyzing continuum OTF maps; the result was the
highest dynamic range image ever produced by a single dish telescope. 
In addition, a significant realization of AIPS++ generalization of 
telescope data was attained through the first combination of single dish 
(GBT) and interferometric (VLA) data. 

Significant outreach efforts were initiated or maintained. Numerous demos
and presentations were made at astronomical meetings. A 
lecture on AIPS++ was presented at a single dish summer school. Demos 
were also conducted at NRAO-CV to inform/involve staff of AIPS++ and
GBT commissioning. Contact with the JCMT was also initiated, culminating
in a scheduled meeting in Jan 02.

In \textbf{Image analysis}, the following work was completed:

\begin{itemize}

\item Moved functionality (statistics, profiles, regions, summaries)
from the image.view() GUI interface to the standard Viewer interface.
Thus, the rollups that used to appear at the bottom of the image.view()
display now appear as a menu item (under 'Tools/ImageAnalysis') in the
standard Viewer display.

\item Implement a regions rollup (under the Viewer 'Tools/ImageAnalysis'
menu) to allow creation of compound regions  and redrawing of regions.

\item Support reference frame conversion layer for DirectionCoordinate
allowing capability to label (with Viewer) a DirectionCoordinate plane in
some
other reference frame (e.g. J2000 in GALACTIC)

\item Implement multiple rest frequencies per Spectral Coordinate
and support in enduser Coordsys tool

\item Activate native support for Miriad images in Image tool and
Viewer.  We now have native support for aips++, FITS and Miriad images.

\item Add {to,from}ascii (files) support to Image tool

\item Unify history support for all image types  in Image tool

\item Some interface improvements for imageprofilefitter tool

\item Add simple depolarization ratio methods to Imagepol tool

\item Improve test/assay scripts and programs

\end{itemize}

In \textbf{Visualization}, work continued in work on both image-plane
and uv-plane visualization. In uv-data visualization, the initial
version of a gridded (TVFLAG-like) display library tool for
MeasurementSet data--MSAsRaster--has been implemented.  This object is
capable of being used via the normal viewer interface, but is also
intended to allow embedding and reuse in custom user interfaces (such
as msplot) that are more specifically oriented toward visibility data.
The intention is to move the compute- and I/O-intensive tasks of
msplot out of glish into more efficient and larger-capacity C++
modules.

MSAsRaster displays visibility data as a 5-axis hypercube, with axes of
time slot, baseline, channel, polarization, and spectral window.  The
axes can be assigned arbitrarily to the display or to animation/slice
controls.

Future effort will focus on editing/flagging capability, selection of MS
data, and world coordinates for axis values.  MSAsRaster was not
included in the release until these are available, although it now
appears in the post-release development master.  There are also plans
for complementary plot-like viewer components.

In image-plane visualization, this development cycle was dedicated
towards improving consistency in the interface. Image analysis is now
directly accessible from the viewer tool. Some time was also spent on
designing a new infrastructure to accomodate on-the-fly regridding,
more flexible animation as well as fixing other existing limitations
and defects. An initial WorldCanvas based on ths has been
implemented. A colorbar/wedge has been added to show color-intensity
mappings. Handling of table overlays (skycatalog) was improved and the
viewer module documentation was restructured.

In \textbf{Parallelization and high-performance computing}, effort
continued though this was hampered by the vacant positions in this
area at NRAO and NCSA/BIMA. Anuj Sarma (NCSA) continued with profiling
of the parallel wide-field imaging application. We also continued to
maintain the SGI build at NRAO, and there was some work on the
parallelization infrastructure. Several of these vacant positions have
since been filled.

In \textbf{Documentation}, the primary focus has been on the {\tt
Getting Results} cookbook. New chapters have been added during v1.6
and the entire cookbook was edited by Neil Killeen (ATNF) for
consistency and style. This re-editing substantially improved the user
documentation in this area.

In the \textbf{General infrastructure}, there were significant
improvements in the Functionals and Fitting classes by Wim Brouw
(ATNF). Ger van Diepen (ASTRON) added the Table system storage
managers required for data compression, and also added facilities for
deep copying of Tables. There were also improvements in LEL, Lattices
and masks by a collaboration between Ger van Diepen (ASTRON) and Neil
Killeen (ATNF).

\section{Release 1.7}

Planning for the next development cycle, version 1.7 to be released in June
2002, is now complete. Feedback from the various user groups has been very 
influential in determining the priorities.

\textbf{Scientific completeness} Demonstrated end-to-end reduction 
capabilities for targeted instruments in all scientifically important 
observing and reduction modes.

\textbf{Usability by the astronomical community} Quality of the user 
interface, applications presentation and user documentation.

\textbf{Robustness, correctness and accuracy} Prove the correctness and 
robustness of existing capabilities and ensure comparable performance to 
other disk-based packages.

\textbf{Continued deployment to an expanded user base} Continue to increase 
the scientific user base for AIPS++.

\textbf{Performance }Continue to measure and improve the performance of 
AIPS++ applications.

{Detailed information may be found at:\\
http://aips2.nrao.edu/daily/docs/notes/248/248.html.}



\newpage 
\section{APPENDIX A: ASTRON REPORT}
{\em Jan Noordam}
\label{subsec:appendix}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\subsection{General}


The upgraded WSRT (and the JIVE correlator operations) continue to
rely heavily on \aipspp\. The WSRT has finally switched to MS2, and a
newer version of \aipspp\. The on-line system (TMS) uses \aipspp\
Tables, Measures and Glish, and MS2uvfits for data export. Data
inspection is done with (at least) three different uv-data
visualisation tools, which have been written locally with Glish and
\aipspp\ modules.

However, it continues to be difficult to entice local astronomers to
start doing their own data reduction with \aipspp\. They are used to
the older packages, and feel (rightly or wrongly) that these serve
their everyday needs better, especially in uv-data processing. The
argument that all the older packages are frozen does not appear strong
enough for them to make the investment in the only package that is
being actively developed.

\aipspp\ also plays an important role in the design of the new
low-frequency radio-telescope LOFAR. Glish is used extensively for
'analytic' simulations, and the \aipspp\ synthesis simulator should play
a role in simulations of actual data, since it has the most complete
instrument model (Measurement Equation). The prototype of the LOFAR
processing system will rely heavily on \aipspp\ modules. 

As the LOFAR project accelerates, the pressure to divert ASTRON
programmers away from \aipspp\ work increases. 

Ger van Diepen and Arthur Coolen have contributed mostly to the
\aipspp\ infrastructure, and between them they keep the local site
going. Ger continues maintaining and (modestly) upgrading the various
data converters. Oleg Smirnov has finished the synthesis applications
flagger and ionosphere calibration. Tom Oosterloo uses \aipspp\
(modules) for WSRT off-line processing, and Jan Noordam does the same
for LOFAR/SKA design and simulation. Between them they promote and
assist local astronomers in the use of \aipspp.


For release 1.6, the ASTRON contribution in FTE's was as follows:
Ger van Diepen,  50\%, Oleg Smirnov 25\%, Jan Noordam 10\%.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\subsection{Ger van Diepen}

Various defects and enhancements requests have been resolved.


\subsubsection{Table system}

\begin{itemize}
   \item A compressing storage manager has been added which scales the data
        making it possible to store them as short integers. Also a function
        has been added to the MS classes to be able to use this new storage
        manager in an easy way.
  \item The deepCopy function has been added to make a real copy of (a
        selection of) a table.
        For this purpose some extra functionality has been added to show and
        specify the storage managers characteristics via a Record object.
        Also the function actualTableDesc has been added to return the table
        description with actual shapes and data managers.
  \item The ColumnsIndexArray class has been added to be able to form an
        index for a column containing arrays.
  \item The functionality of table.g has been extended.
          xxxvarcol functions make it possible to access a column with
          arrays of varying shapes.
          renamecol has been added to be able to rename a column.
          tablefromascii has been extended; now it supports column keywords
          and an arbitrary separator (default blanks).
          full control of data manager characteristics (dminfo).
  \item Some small improvements to TaQL.
  \item The tiled storage managers have been improved.
\end{itemize}


\subsubsection{Lattices and Images}

\begin{itemize}
  \item Classes have been added to add axes of arbitrary length to an image
        which makes it possible to make the shape of an image equal to
        another one.
        This is uses in LEL to be able to deal with images of different
        dimensionalites, e.g. when subtracting the continuum channel from a
        multi-channel image.
  \item The spectralindex function has been added to LEL.
        Also the isnan function has been added to LEL.
  \item A LoggerHolder class has been introduced to unify the way in which
        the various derived Image classes deal with logging.
        For this purpose the class MemoryLogSink has been added.
\end{itemize}


\subsubsection{Miscellaneous}

\begin{itemize}
  \item synclistboxes.g has been improved by keeping better track of the
        current position. It also supports PgUp and PgDn events.
  \item The catalog tool has been improved
          its buttons are reorganized.
          it is using synclistboxes.g now
          it can handle wildcards in a better way
  \item Some small improvements in the Array class have been made to make it
        possible to add an STL-style iterator to it.
  \item Functions partialXXX have been added to ArrayMath. They return
        derived values (min, max, mean, etc.) for each line, plane, cube,
        etc. of an array.
\end{itemize}


\subsubsection{Local}

\begin{itemize}
  \item Tried to build \aipspp\ on HP-UX 10. Problems with configuring glish.
  \item Enhancement to ms2uvfits for WSRT.
  \item Improved WSRT MSFiller for MS to make fully use of MS v2 and to
        optimize storage manager use.
\end{itemize}




%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\subsection{Oleg Smirnov}


\subsubsection{Autoflag}

Oleg has completed numerous revisions of the interface, arising from 
discussions during the Green Bank meeting, and from further hand-on 
experience of individual users. Generally cleaned up the interface, completed 
documentation, and provided an autoflag\_meta.g. 

He has been interacting  with a number of users of autoflag. This has resulted 
in a number of improvements and new features, as well as a few defects that 
were fixed.

\subsubsection{Ionosphere}

Work on second-order corrections was halted, pending an integration of 
FVisJones into the synthesis package. Over the summer, Oleg supervised a 
trainee, who did some in-depth exploration of GPS vs. PIM data. This has 
resulted in a number of insights into the problems of instrumental bias and 
PIM corrections, which should save some effort later, if and when GPS-based 
corrections are actually incorporated into \aipspp.

\section{APPENDIX B: ATNF REPORT} 
{\em Neil Killeen}

\subsection{Staffing}

This cycle we had Neil Killeen, Wim Brouw, Malte Marquarding and
Mark Wieringa.

\subsection{Uptake}

Uptake of the system is continuing to improve.  This is mainly through
our efforts to help people with scientific scripting using the generic
tool kit.   In particular, we ran practical sessions at the ATNF
synthesis workshop this year to allow the students to see what they
could with the system.  They responded positively to this.

Ben Chan (University of Sydney) has helped us with pushing Compact Array
data through the system.  We have encountered a range of problems; there
are still some outstanding ones before we can encourage generic users to
process end-to-end in the system.  I hope these will be resolved very
early in the next development cycle.

\subsection{Individuals}


\subsubsection{Wim Brouw}

Wim's time (60\%) went on

\begin{description}


\item {\bf Measures}

\begin{itemize}

\item added run-time check code to all Measures to indicate the usage of the
various frame parameters in the calculations. Ultimate goal is to use
that in a notify pattern to make sure that only necessary re-calculations
are done if e.g. the Epoch is reset in the frame.

\end{itemize}


\item {Functionals}

\begin{itemize}

 \item redesigned and implemented the Function class (Functionals with
    parameters), and re-did all functions using it, including the test
    programs to test derivatives (specialized and automatic)

 \item wrote a function wrapper to handle functions with any number of
    dimensions and parameters in a transparent way

 \item redid the combination of functions (Compound and combination): they now
    act as a normal function

 \item repackaged all functions in such a way that in principle only a simple
    'eval' function has to be created for any Function object

\end{itemize}


\item {\bf Fitting}

\begin{itemize}

 \item rewrote the LinearFit and NonLinearFit various classes. They use the new
    Function objects, and are all derived from some GenericFit. The various
    Fitting only need to prescribe the 'looping' tests if applicable.

 \item made Fit2D to use the new Function and Fit classes
 
 \item use the new Function and Fit for the SpectralFit class

 \item re-wrote the AutoDiff<> classes, and added tests and demos to show
    improved speed and the way to do higher order derivatives

 \item made polyfitter more robust for a large non-origin centered x range

\end{itemize}


\item {\bf System}

\begin{itemize}

\item made a series of aips/<sys>.h to cater for STL differences between the
    various compilers

\item prepared a suggested development route towards STL usage in system

\item replaced the existing String class with an STL based

\item added a RegexBase, and derived Regex from it to enable multiple Regex
    classes for use in a.o. String

\item added a general ObjectPool and PoolStack class. They provide pre-allocated
    parameterized blocks (like Vectors) of memory to bypass malloc
    time. Improved the AutoDiff timing by a factor of 5-10

\end{itemize}



\item {\bf Synthesis}

\begin{itemize}
  \item prepared a note on the implementation  requirements for UV-plane
    component fitting

  \item started on a Parallactic angle machine to speed up polarisation MS
    processing. Only skeleton finished

\end{itemize}

\end{description}



\subsubsection{Neil Killeen}

Neil's time (60\%) went on:

\begin{description}


\item {\bf Coordinates}

\begin{itemize} 

\item Implement multiple rest frequencies per Spectral Coordinate
and support in Coordsys tool

\item Support reference frame conversion layer for DirectionCoordinate

\item Improve support classes handling axis removal

\item The usual collection of new special cases in FITS header
reading

\item Add some requested new functionality to Coordsys tool

\item Fix miscellaneous defects


\end{itemize} 


\item {\bf Image Analysis}

\begin{itemize} 

\item Improve assay scripts

\item Unify history support for all image types (support work from Ger)

\item Add {to,from}ascii support to Image tool

\item imageprofilesupport - variety of improvements to support
multiple ordinates and so that dish can use it directly for plotting spectra

\item Some interface improvements for imageprofilefitter (widths/regions)

\item Some optimization and improvements of ImageRegrid (which will
become fundamental to the DisplayLibrary next cycle) and Interpolate2D

\item Consolidate code from DOimage into general library classes

\item Activate native support for Miriad images

\item Add simple depolarization ratio methods to Imagepol tool


\item Fix miscellaneous defects

\end{itemize}



\item {\bf Visualization}

\begin{description}

\item Moved functionality (statistics etc) to native Viewer interface
('Tools' menu) from image.view() interface (rollups). 

\item Implement a regions rollup to allow creation of compound
regions from native Viewer interface ('Tools' menu)

\item Reworked and extended DDDEllipse (original from Malte) to provide (editable)
overlays of ellipse and rectangles

\item Implement re-drawing of regions from Viewer interface

\item Implement capability to label a DirectionCoordinate plane in some
other reference frame (e.g. J2000 in GALACTIC)

\item Eradicate assumptions about pixel and world axes being the same in
Display Library

\item Fix long-standing mixed (world/pixel) axis labelling problems in DL

\item Fix miscellaneous defects

\end{description}


\item {\bf Synthesis}

\begin{itemize}

\item Work on ATCA calibration issues (develop scripts)

\item Work with Ben Chan on calibration and imaging of ATCA
mosaic data.  

\end{itemize}




\item {\bf Documentation}

\begin{itemize}

\item Update Getting Results ImageAnalysis chapter

\item Edit all of Getting Results document.  I rewrote a lot
of it in doing this.

\end{itemize}



\item {\bf Other}

\begin{itemize}

\item Prepared and executed aips++ practical sessions at ATNF synthesis workshop
\item Assisted many people with Glish scripting
\item Development planning 
\item Presentations at AstroFests, ComputerFests, Steering Committee, aips++ User Group, ATNF Users Committee (ATUC)
\item Various reports (CSIRO board, ATNF annual report, cycle reports, ATUC, 
future developments)
\item Distributed CDs 

\end{itemize}


\end{description}


\subsubsection{Malte Marquarding}

Malte spent his time (95\%) on:

\begin{description}

\item {\bf Display library \& Viewer development:} 

\begin{itemize}

\item Implementation and integration of a color wedge
\item Design of a WorldCanvas containing a coordinate system
\item First implementation of NewWorldCanvas
\item Implementation of glish tool for better handling of
SkyCatalogOverlays
\item Miscellaneous fixes/improvements

\end{itemize}

\item {\bf Other:}
\begin{itemize}
\item Updated gettingresults chapter
\item Restructuring and major update of the Viewer reference manual
\item fixes to several DL/viewer defects
\item General Viewer/Display Library support for other developers
\item Running Viewer tutorials for ATNF staff
\item support of local staff using aips++

\end{itemize}

\end{description}




\subsubsection{Mark Wieringa}

Mark's time  (25\%) was spent on:

\begin{itemize}

\item calibration code for the ATCA to allow polarization and gain calibration
\item many bugfixes and enhancements  for the ms DO, mainly triggered by
msplot requirements.

\end{itemize}


\section{APPENDIX C: BIMA REPORT} 
{\em Ray Plante}

\subsection{General}

We continue to work in our four main areas of development: enabling
calibration of BIMA data, support for processing on parallel
platforms, OpenGL-based visualization, and user outreach.  This cycle,
we placed primary focus on BIMA calibration and user outreach.  These
efforts included contributions at NCSA from Ray Plante (local manager,
50\%), Dave Mehringer (site installation manager, 50\%), Harold Ravlin
(50\%), Anuj Sarma (50\%), and Paulo Cortes.  In addition, Peter
Teuben of the University of Maryland also contributed part time to
development and testing.

Plante began improvements to the simulator tool to allow gains to
vary according to given functions.  This was done in the context of
the new ``light-weight'' design process which has proved quite
effective.  Delivered as part of this work were two new function
classes representing Chebyshev and Butterworth functions which are
available as glish tools.  

Mehringer developed the imagerpositiontest tool for testing the
validity of imager results.  This tool creates a truth image which is
then transformed into a uv dataset by the simulator tool and then
imaged.  The positions of the sources in the resulting image are then
compared with those in the model to determine if the imaging tasks
have produced valid results.  The tools imager and pimager can be
tested in this way.

\subsection{BIMA Calibration}

Mehringer finished the implementation of basic BIMA calibration
through two new tools: bimams and bimacalibrater.  bimacalibrater is a
user-level tool that applies the standard calibrator tool
appropriately for BIMA data.  In particular, it does phase calibration
on each sideband separately via windows containing the sideband
averages.  It then copies the solutions to the spectral line windows.
bimams is a layer on top of the ms tool which helps bimacalibrater
pull out the data and information it needs to carry out the
calibration.  Mehringer has incorporated this functionality into the
bima test script.  

To support specialized calibration, Plante made a number of
improvements to the BIMA filler.  A major change was proper support
for multi-polarization data where polarizations are not observed
simultaneously.  System temperatures are loaded and used to calculate
weights that can be properly used in calibration and imaging.  A few
useability improvements were made, including the ability to detect
whether the data is raw, calibrated or otherwise processed to set the
default selections appropriately.  

Plante continued work on the gainpolyfitter tool, building on the
implementation started by Ravlin.  In particular, he generalized the
internal infrastructure to allow the tool to be configured for use by other
telescopes; through this infrastructure, he was able to add support
for multiple sideband windows.  

BIMA calibration was demonstrated to the BIMA Board in September
2001.  

\subsection{Parallel Platforms}
\label{bpara}

Sarma continued general timing tests on the NCSA Origin 2000 and
cluster platforms using the widefield imaging algortithm.  With
Cortes, he began gaining expertise with the PABLO profiling package.  

Overall, effort on this area was low due to loss of person-power and
expertise over the last year.  We expect this to improve in the next
cycle.  

\subsection{OpenGL-based Visualization}

As part of an effort to support large-pixel displays, Ravlin completed
an OpenGL DisplayCanvas class.

\subsection{Outreach}
%\ref{laugh}

Plante and Sarma continued their series of short tutorials at the
local Illinois BIMA meetings.  

\subsection{Dave Mehringer}

* Continued serving as the AIPS++ site installation manager.
  maintained builds on local Solaris and Linux platforms and NCSA
  Linux and SGI IRIX platforms. 

* Developed bimacalibrater tool for calibration of BIMA data.  The
  idea behind this tool is to hold several datasets of different roles
  (target source, phase calibrator, flux calibrator, etc.) and to have
  its functions be smart enough to calibrate data properly with
  minimal input from the user.

* Developed imagerpositiontest tool for testing validity of imager
  results.  This tool creates a truth image which is then tranformed
  into a uv dataset by the simulator tool and then imaged.  The
  positions of the sources in the resulting image are then compared
  with those in the model to determine if the imaging tasks have
  prodcued valid results.  The tools imager and pimager can be tested
  in this way.

\section{APPENDIX D: NRAO REPORT}

\subsection{Joe McMullin}

During this development cycle, McMullin has assumed several coordination
roles in taking over the role of Deputy Project Manager. His
primary responsibilities are to oversee and contribute towards
the single dish development of AIPS++, particularly the Green Bank Telescope
commissioning support; in addition, he is reponsible for the newly founded
operations division which handles the consortium build administration, release
preparation and distribution, and user support/outreach.
Specifically, Joe worked on the following tasks during this cycle:

\begin{itemize}

\item Single Dish Duties:
\begin{itemize}
\item	Merge the DISH capabilities with mainstream AIPS++. In particular,
the DISH plotter was rewritten, now utilizing/sharing the imageprofilesupport
tools for display of spectra, resolving numerous defects.
\item   Attend GB Tiger Team spectrometer meeting. Help develop and implement
initial DISH calibration procedures for Green Bank observing.
\item	Implemented a refined and simplified command line interface for the
DISH tool.
\item	Write/edit the documentation for the DISH User Reference Manual, the
DISH Getting Results chapter, and the Single Dish Imaging Getting Results
chapter.
\item	Develop single dish continuum calibration and imaging tools. Support
(with Tim Cornwell) the combination of single dish and interferometric data.
\item	Run internal single dish development meetings.
\item	Spend one week a month in Green Bank in support of software efforts.
\item 	Correct defects in the DISH module of AIPS++
\end{itemize}
  
\item Operations Related Duties:
\begin{itemize}
\item   Produced an informational Brochure for AIPS++.
\item   Developed new AIPS++ displays for meetings.
\item   With Wes Young, daily build status reports were recommenced.
\item	With Wes Young, prepared/tested release. Prepared CD release
notes, CD covers, and arranged duplication. Re-organized distribution
and logging of CDs.
\item	Led newly organized NAUG (run meetings, track/negotiate targets,
track defects, write draft minutes, etc).
\item   Attended and presented AIPS++ demos/posters at the ADASS meeting
in Victoria, B.C. and the AAS meeting in Pasadena, CA.
\item 	Presented a lecture on AIPS++ at the Arecibo/NRAO Summer School
in Puerto Rico. Supported student data analysis efforts. Provided initial
calibration tools for HI analysis.
\end{itemize}
   
\item Science work:
\begin{itemize}
\item Supported efforts for single dish imaging and combination with 
	interferometric data. Presented as a poster at the xxx AAS meeting
	in Washington D.C. along with a press conference.
\item Prepared and submitted a paper to Ap.J.
\item Refereed an article for Ap.J.
\end{itemize}
\end{itemize}

\subsection{Jim Braatz}

Jim Braatz' primary responsibilities are to manage and support the Green Bank 
installation of AIPS++, support GBT operations, develop software for analysis 
of GBT spectroscopic and continuum observations, and assist with GBT 
commissioning.  Specifically, Jim worked on the following tasks 
during this cycle:

\begin{itemize}
\item Commissioning of the GBT using the gregorian receivers continued
this cycle.  Jim participated heavily in the commissioning work by providing 
software for analysis and participating in the observing and planning.  He
added the capability to write pointing results to an archive, wrote analysis
routines for focus tracking observations, and provided analysis of failures
during commissioning observations, in particular hunting down problems with
the antenna FITS file generation.

\item Jim is the primary person responsible for development of the
Interim Automated Reduction and Display System (IARDS) which provides a
pseudo real-time look at GBT data for the purpose of assessing the quality of 
the observations.  The IARDS system is composed of a continuum display and 
analysis section, which also provides pointing feedback to the GBT M\&C system,
and the spectroscopic display system.  IARDS was developed and is now 
being used routinely on the GBT with continuum observations and position-
switched spectral observations.  Automatic recognition of bad pointing
scans was included.

\item Jim is the primary person responsible for UNI-jr development and support.
UNI-jr is an application for reduction of spectral line data.  It exists as
a layer on top of DISH, and is meant to mimic the reduction philosophy
used in UNIPOPS.  Most of the critical functions required for simple scan-
based data reduction are completed.  Significant effort went to development of
calibration routines.

\item Although unable to attend the ADASS conference, Jim prepared a poster
for the meeting and a manuscript for the proceedings on the topic of GBT 
commissioning software and results.

\item Jim continues managing the weekly AIPS++/GBT meetings, at which the 
relevant staff in GB, CV, and the AOC discuss the requirements and priorities 
of \aipspp\ single dish software development, particularly as it relates to 
GBT commissioning and early science.

\item Jim wrote documentation for the DCR tool and a cookbook for GBT
spectral line reduction using the UNI-jr application.

\item The \aipspp\ system continues to be widely used in Green Bank, 
especially in support of GBT operations and analysis but also in general 
science applications.  Jim continues to prepare scripts and give personal 
instruction and other assistance to engineering and science staff in GB and CV.

\item Jim continues in his responsibility for correcting defects and making
enhancements to the pgplotter routines.
  
\item Observatory-related duties:
\begin{itemize}
\item   Coordinated the weekly Science Lunch in Green Bank.
\item   Presented a public science talk on WVMR radio program.
\item   Served on the GB Rec Association Board of Directors.
\item   Gave a seminar on Cosmic Masers at the RARE CATS Summer Program.
\end{itemize}
   
\item Science work:
\begin{itemize}
\item Prepared and submitted four GBT proposals
\item Reduced VLA data to obtain calibrator positions and fluxes in 
preparation for a VLBA phase-referencing observation
\end{itemize}
\end{itemize}


\subsection{Bob Garwood}

Bob Garwood's primary responsibility is to contribute
towards the single dish work in AIPS++.  His contributions remains focussed
the GBT filler and the single dish data access tool (sditerator).
In addition to these duties he is responsible for the maintenance
and enhancement of the FITS classes and the data conversion tools
(to and from SDFITS). He is also the chief code cop.

Over the past development cycle he has done the following:

\begin{itemize}
\item   Several additions and enhancements were made to the GBT filler.  The
	GBT Spectrometer is now supported, frequency and polarization
         information for both spectral-line backends is now available, the
	information in the FITS files produced by the GO interface is now
	available in the filled MS, and the calibration files are now used to
	generate TCAL values appropriate for the spectral-line backends.

\item   The sditerator tool was enhanced to provide faster selection of the
	key fields used by DISH.  Several bugs were also addressed.

\item   Participated in wider discussions on future changes in the SDFITS
	convention that AIPS++ has adopted.

\item   Participated in many discussions regarding the form and content of
         all FITS files from the GBT.  Work was begun late in this development
	cycle towards changing the filler to handle these revised FITS files.

\item   Visited Green Bank several times.

\item   Presented a paper at ADASS XI on single dish data processing in AIPS++.
\end{itemize}


\subsection{Tim Cornwell}

Tim provided technical assistance with scientific project by Shepherd,
Maddalena and McMullin (2002) to combine GBT and VLA data in a joint
image. This involved some changes in the supported package
capabilities in this area.

Tim and Amos Yahil (SUNY) continued to work on the incorporation of
Pixon image deconvolution into AIPS++. The implementation calls IDL
from inside AIPS++ routines. Both speed and performance are
excellent. At the moment, only single dish data and image plane
convolution can be thus treated. Tim continues to work on synthesis
data reduction using Pixons.

\subsection{Kumar Golap}

I have been involved  in the following for the past quarter:

\begin{enumerate}

\item{automated wide-field data reduction}

In dragon tool now the masking capabilities are increased. We have an
automatic masking or interactive one at every time a self-calibration
is performed.

\item{improvements in imaging code and user support}

A good fraction of my time was devoted to usage of imager (and to a
lesser extent simulator) and fixing
its bugs. Also a fair amount of profiling has been done to locate
where imager time is being used and a couple of unexpected blocks were found.

\item{Alma-test work}

Some time was devoted to the alma-test and getting ready to process 
data from the Plateau de Bure telescope. IRAM's model for atmospheric
water vapour correction has been incorporated in AIPS++.


\end{enumerate} 


%\paragraph{Athol Kemball}


\subsection{David King}

* Initial implementation of MSAsRaster.

* Various display infrastructure revisions, including:
  - more complete exception trapping
  - plugging a memory leak of cached drawings
  - alignment correction of drawn images (WorldCanvas) and axes
(WorldAxesDD)
  - edge pixel drawing in Interp2D
  - slider GUI value control from within the library.
* pending revisions (under development, not yet checked in):
  - allowing mouse handlers like Zoomer to receive events off draw area
  - eliminating phantom images from those tools, etc.
  - output capabilities for Attribute values
  - extensions to DParameters (more to do)
  - design discussions on WC coordinate system and DL->glish event
issues


%\paragraph{Ralph Marson}

\subsection{George Moellenbrock}

\noindent
For the v1.6 development cycle, George Moellenbrock contributed as 
follows:

In the area of synthesis (and related) development:

\begin{itemize}

\item{Continued study of calibrater tool infrastructure in
anticipation of assuming more responsibility for this. Examined a
number of defects in calibrater, including, phase-only solutions,
first-guess setting, various plotcal problems.}

\item{Continued development of fringe-fitting prototype in glish, in 
particular, least-squares fitting algorithms.}

\item{Enhanced operation of the flagger tool through repair of numerous
defects.}

\item{Began development of recipes for the Recipe Repository (which was
deployed shortly after the end of the cycle).}

\item{Enhanced (in the course of fixing defects) operation of the
flagger tool.}

\item{Revised Synthesis Calibration chapter in Getting Results in \aipspp\ 
to include more information and pointers about actual operation of the 
calibrater tool.}

\item{Extensively revised the VLA Reduction chapter in Gettings Results in
\aipspp.  This chapter now treats (in parallel) the calibration of VLA
observations in continuum polarimetry and spectral line modes.  The text
corresponds directly to two glish scripts which process data from the data
repository. This chapter will undergo significant editing in the next
cycle as the internal testing group supplies comments.}


\end{itemize}

In the area user relations:

\begin{itemize}

\item{Spent even more time this cycle assiting local \aipspp\ testers with
use of \aipspp, including NRAO \aipspp Users Group (NAUG) meetings, and
one-on-one sessions with NAUG members.  In the latter, interest among
users ranges from the full calibration and imaging tools, to more narrow
of-the-moment needs, e.g., use of the viewer to render an image for
presentation or publication.  The user relations effort is a combination
of tangible advice concerning operation and usage of \aipspp, and of
moderating frustration among users.  The \aipspp\ learning curve remains
steep.  The process of achieving a reasonable comfort level for users can
be a slow and arduous process, but persistence seems to pay off.  Good
communication about new features and fixed defects to the testing group is
very important to maintaining their optimism about the package.  The work
on documenation and recipes described above is closely related to the
user-relations effort.}

\item{Staffed the \aipspp\ booth at the AAS meeting in Pasadena, CA, June 
3--7, 2001.}

\item{Assisted A. Kemball and K. Golap in conducting a day-long \aipspp\ 
user tutorial at the University of Maryland on September 5, 2001.  This
was followed by a half-day hands-on demonstration/tutorial with 
astrophysics students at NRL in Washington, D.C.  Several users from
these tutorials maintained contact with the project over the following
months as they used \aipspp\ on their own and had questions or
difficulties.}

\item{Fielded questions from several external users about operation and
usage of \aipspp. }

\item{Attended ADASS XI in Victoria, B.C. October 1--3, 2001, where I
presented a poster on plans for VLBI Fringe-fitting in \aipspp, and
staffed the general \aipspp\ booth.}

\end{itemize}

\subsection{Darrell Schiebel}

During this development cycle most of my time was spent understanding event
throughput of the Glish transport layer. As the complexity of the AIPS++
graphical user interface (GUI) has increased, the transport layer has failed
to keep up. This is particularly true when the GUI is initially created
simply because a huge number of events are required to create complex GUIs
in Glish/Tk.

I explored many options while trying to develop a solution to this problem.
These included:
\begin{itemize}
    \item trying to find profilers which will work with multiple processes
	  connected by a pipe [there are none which are freely available]
    \item using a Unix kernel profiler [usable but results are somewhat
	  ambiguous because the application symbol space and the profiled
	  kernel's symbol space are distinct]
    \item reimplementing the transport layer to minimize the number of
	  \emph{kernel level} read and write function calls [win for large
	  complicated events but loss for simple events].
    \item introducing threads, both standard \emph{pthreads} and using
%	  \htmladdnormallinkfoot{$\mu$C++}{http://plg.uwaterloo.ca/~usystem/uC++.html}
	  [significant effort which would have many benefits but would likely
	  not improve the situation since serialization is the bottleneck]
    \item reimplementing the transport layer to use shared memory [could
	  have worked if \textbf{all} Glish values were created in shared
	  memory \textbf{and} there was a way to mix waiting for SYSV
	  semaphores and BSD file descriptor \emph{select()}]
    \item create a Unix shared memory device driver using file descriptors as
	  semaphores and device driver's unique status for serialization to
	  overcome difficulty mixing shared memory and \emph{select()}
	  [significant effort hard to justify installation of special devices]
\end{itemize}
Some of these options were substantially implemented, e.g. minimizing the
number of kernel read and writes, while others were simply explored, e.g.
threading and shared memory device driver. However, all of this took much
time and produced no success. Current plans are to move the GUI client back
into the interpreter executable and introduce very limited threading.

In addition, about a dozen Glish related defects were fixed. These ranged
from crashes to output problems.


\subsection{Wes Young}
\begin{itemize}
\item System
\begin{itemize}
\item I took the system programmer position with the AIPS++ group.

\item Continued maintenance build 64 bit SGI compiler.

\item Provided system support for the AOC's SGI systems.

\item Solved a nasty KDE related problem with glishtk.

\item Continued work on porting AIPS++ to Solaris native compiler. I managed
to get release 1.5 to build but the uprev to 1.6 was stymied by 
template specializations

\item Patched release 1.5 in August.

\item Prepared release 1.6. 

\end{itemize}

\item Parallelization
\begin{itemize}

\item Maintenance on UNM Linux cluster and SGI production machines.

\item Visited UIUC, June 12-30 and July 17 - August 4. 

\item Continued investigations into using MPI-IO in the table system.

\end{itemize}


\item Documentation
\begin{itemize}

\item General support, i.e. finding and fixing bad links and
sorting out LaTeX build problems.

\item Procured linkscan which will help us find bad links at our web site.
\end{itemize}

\item Defect fixing and investigation. 

\end{itemize}

\end{document}
