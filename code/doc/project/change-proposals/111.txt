

Title:                  64-bit conventions in AIPS++
Person responsible:     Ger van Diepen (gvd@nfra.edu)
Originator of proposal: Wes Young (wyoung@nrao.edu) 
                        Athol Kemball (akemball@nrao.edu)
Exploders targeted:     aips2-lib, aips2-parallel
Time table:
        Date of issue:          2000 January  28         Done
        Comments due:           2000 February 15         Done.
        Revised proposal:       2000 March 10            Done.
        Final comments due:     2000 March 17            Done.
        Decision date:          2000 March 17            Done.

Statement of goals:

The goal of this proposal is to agree on 64-bit coding conventions for
AIPS++. These can be used for the existing 64-bit SGI and Dec Alpha
builds, their extension, and any new 64-bit ports.

Proposed changes:

The proposed coding conventions, and the context of this proposal
can be found in AIPS++ Note 227, dated 09 March 2000. The version
of the Note with this date reflects the final form of the change
proposal, and incorporates comments made since the change proposal
was issued.

In summary, the proposal suggests:

a) Introduction of a Size AIPS++ type, defined to be the largest
   Int encompassing (off_t, size_t, ssize_t) and a uSize counterpart.
b) Definition of AIPS_64BIT, to be used to isolate 64-bit dependencies.
c) Adoption of revised coding rules to address 64-bit problems and
   potential problems.

Expected Impact:

The immediate impact will be the unification of existing #ifdef's used
for the SGI and Dec Alpha 64-bit builds, and a revision to the coding
rules to guide future work in this area. No major overhaul of all
64-bit dependencies is planned at this time, but the agreed
conventions will allow this work to be scheduled incrementally in the
future, as allowed by other priorities.

Proposed documentation changes:

Changes in the coding rules.

-----------------------------------------------------------------------




