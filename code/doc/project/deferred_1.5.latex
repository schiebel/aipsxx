%% VLBI++103
%%----------------------------------------------------------------------------
\documentclass[11pt]{article}
\usepackage{html, epsf}
%%-----------------------------------------------------------------------------

\begin{document}

\title{AIPS++ DEFERRED DEVELOPMENT: Release 1.5 and higher}
  

\author{Athol Kemball and Tim Cornwell (eds.)\\
   NRAO}

\date{15 Aug, 2000}

\maketitle
%%---------------------------------------------------------------------------
%%\begin{htmlonly}
%%\htmladdnormallink{A postscript version of this note is available (100kB).}{../xxx.ps}
%%\end{htmlonly}

\tableofcontents
      
\newcommand{\remark}[1]{{\small\begin{itemize}\em \item #1\end{itemize}}}
%\newcommand{\thisdocURL}{http://aips2.nrao.edu/aips++/docs/project/releasenotes/releasenotes.html}
\newcommand{\thisdocURL}{http://www.nrao.edu/~tcornwel/synplan/synplan.html}
\newcommand{\searchURL}{../../html/aips2search.html}
\newcommand{\aipsviewURL}{../../user/aipsview/aipsview.html}
\newcommand{\GlishmanualURL}{../../reference/Glish/Glish.html}
\newcommand{\GlishtutorialURL}{../../notes/195/195.html}
\newcommand{\synthesisURL}{../../user/synthesis/synthesis.html}
\newcommand{\gsURL}{../../user/gettingstarted/gettingstarted.html}
\newcommand{\userrefmanualURL}{../../user/Refman/Refman.html}

\newcommand{\specsURL}{../../specs/specs.html}
\newcommand{\betaURL}{../beta/beta.html}
\newcommand{\consortiumURL}{../consortium.html}
%
% URL to Help system
%
\externallabels{../../user/Refman}{../../user/Refman/labels.pl}

% Add home page navigation button
%

\htmladdtonavigation{\htmladdnormallink
  {\htmladdimg{../../gif/home.gif}}{{../../html/aips++.html}}}

\section{\underbar{Introduction}}

This document records all postponed or deferred development items, to
be considered at the time of planning for release v1.5. This is a
rolling list of all proposed future development, and the fact that an
item is included here is {\it \bf not a reflection of its priority or
an indication of the likelihood of it being scheduled in a given
release cycle}. Neither is this list complete, as other items not
listed here may be proposed at the time of the next planning
cycle. This is primarily a list of items which need to be tracked in
future planning. The proposed development items are sub-divided by
module or area of development, as in the development plan for each
release, listed without regard to priority.

%%----------------------------------------------------------------------

\section{\underbar{Single-dish}}

\begin{description}

\item[Flagging] Automated and interactive flagging, tuned to
single-dish needs.

\item[Bad pixel replacement] Replace bad pixels by various means.

\item[Arecibo filler] Filler for the Arecibo raw data.

\item[Median averaging]

\item[Zeeman analysis]

\item[Column density] Column density operator in {\tt dish}.

\item[Improved SDIterator browser]

\item[Improved GUI data selection in {\tt dish}]

\item[Bulk processing in C++]

\item[Dishplotter rewrite]

\item[Dish test scripts]

\item[Improved UNIPOPS to MS conversion]

\item[SDIterator on an image cube]

\item[Improved SD calibration and imaging]

\item[Improved SD visualization] 2-D and 3-D data.

\item[Improved documentation]

\item[Mopra support]

\item[SDFITS to MS] Fully support SDFITS to MS conversion.

\end{description}

%%----------------------------------------------------------------------

\section{\underbar{Synthesis}}

\begin{description}

\item[Test scripts] Complete test scripts for all instruments.

\item[calibratertester] Add full DJones and BJones testing.

\item[Unit test programs] Unit test programs for calibrater and imager
and related infrastructure.

\item[Code review] Code review of calibrater, imager and related
infrastructure.

\item[Inter-comparison] Document inter-comparison between AIPS++ and
other packages.

\item[uv-component fitter] Complete uv-component fitting.

\item[Advanced VisJones solvers] Including: 2nd order FJones,
parametrized solvers for BJones, DJones.

\item[Advanced SkyJones solvers] Next generation image-plane solvers,
including full non-isoplanatism.

\item[Custom GUI] Custom synthesis GUI.

\item[Pipeline support] Further pipeline framework support.

\item[VLBI support] Second level VLBI applications development.

\item[Componentmodels enhancements] Extend component models to enable
uv-fitting. Closer integration of componentmodels in calibration.

\item[Simulator] i) bw, time smearing; ii) MSv2 transition; iii)
SKA/LOFAR simulation.

\item[E-W arrays] Detect and advise.

\item[Mosaicing wizard]

\end{description}

%%----------------------------------------------------------------------

\section{\underbar{Applications integration}}

\begin{description}

\item[XML] Consider the use of XML for meta and integration information.

\item[Parameter names] Unify all parameter names.

\item[Pop-up help] Example entries in pop-up help.

\item[Glish coding rules] Review Glish coding rules.

\item[Default propagation] Including: i) propagate unset to C++; ii)
adopt unset for all context-dependent defaults; iii) document all
actual defaults used in documentation.

\item[Exception handling] Exception-handling proposal for C++ and Glish.

\item[Glish global namespace] Revise and define rules for the Glish
global namespace: i) command completion; ii) tool name prefix on
global functions; iii) *tp and *from used uniformly; iv) use :: for
global variable used internally.

\item[Checkpoint and restart] Investigate check-point and restart solutions.

\item[Getting Results editing] i) instrument-specific chapters in GR;
ii) more complete; iii) more attention to flow; iv) publicize a style
guide; v) use standard datasets in examples; vi) preserve recipes;
decide on format for GUI recipes.

\item[Region selection] Write region selection proposal.

\item[Common data access] Consider a common data access interface (or
data block).

\item[History propagation]

\end{description}

%%----------------------------------------------------------------------

\section{\underbar{Build and code distribution system}}

\begin{description}

\item[Improved developer support] Including: i) document makedefs; ii)
improve programmer documentation; iii) remove obsolete code; iv) split
aips.h to allow use of parts of AIPS++.

\item[cxx2html enhancements] Improve cxx2html; evaluate a move to
other tools such as DOC++.

\item[Move to gcc 2.95] Complete testing on all development
architectures and tools for adoption of gcc 2.95.

\item[Template instantiation] Investigate the use of automatic
template instantiation.

\item[Global data system] Expanded use of the new global data system
(e.g. include documentation).

\item[Documentation build system] Design new documentation build
system. Evaluate the use of XML for user and programmer documentation.

\item[Source code reorganization] Split current packages into sub-packages.

\end{description}

%%----------------------------------------------------------------------

\section{\underbar{Glish}}

\begin{description} 

\item[VxWorks clients] VxWorks port of the Glish client library.

\item[Java clients] Glish clients written in Java.

\item[Multi-threading] Threading of Glish and clients.

\item[Binding of other mega-widgets] Complete binding of other Tcl/Tk
mega-widgets from Glish/Tk. Consider Java/Swing. Evaluate
professional-level toolkit (e.g. Qt).

\item[TAB completion] Allow TAB completion. Requires new readline
implementation.

\item[Alternative itemcontainer implementation] Implement
itemcontainers as a form of opaque record. Allow print to Records.

\end{description}

%%----------------------------------------------------------------------

\section{\underbar{User interface and tasking}}

\begin{description}

\item[CORBA-AIPS++ interoperability] Two-way access to CORBA objects
from AIPS++ clients.

\item[DO upgrade] Including: i) move DO system to use proxy clients;
ii) implement Glish objects proposal; iii) incorporate CORBA into the
Glish objects.

\item[Toolmanager enhancements] i) workspace; ii) tool of tools.

\item[Parameter save and restore] Including: i) save as separate
records; ii) save individual parameters; iii) save/restore clipboard;
iv) run-time control of table name.

\item[Retro-fit of guientry] Use guientry in all older
GUI's. Normalize all hand-coded GUI's.

\item[Event handling] Resolve current event/procedural mix in tasking
system.

\item[Server restart] Automated server restart.

\end{description}

%%----------------------------------------------------------------------

\section{\underbar{Basic library}}

\begin{description}

\item[Exceptions] Use PtrHolder (or autoptr) to avoid leaks.

\item[Statics] Remove statics as much as possible.

\item[Rationalize class {\tt Time}] Remove non-OS functions from class
{\tt Time}, as {\tt MVTime} is an improvement in this area.

\item[RTTI] Evaluate replacement of our RTTI mechanism.

\item[Standardization] i) move to the C++ Standard Library; ii) use
the Glish regex in place of the current {\tt Regex} class; iii)
consider overlay of STL classes over our classes; iv) evaluate use of
vector in {\tt Block}, and valarray in {\tt Array}.

\item[Tables enhancements] Including: i)implement large file support
in {\tt Tables} on all consortium architectures which allow this; ii)
computed ColumnEngine: virtual column engine expression; iii)
ColumnsIndex: support vector columns in ColumnsIndex; iv)
higher-dimensioned arrays in TSM: needed for ScaledComplexData; v)
stored columns in reference tables; vi) add/remove column and support
in lock/sync: also possibility to remove groups of columns; vii)
B-tree index.

\item[TaQL enhancements] Including: i) support of fields in records;
ii) IIF function; iii) make all functions (e.g. sin) available for
arrays; iv) optimize IN using a sort or binary search; v) recognize
Boolean literals T and F; vi) allow expressions in SELECT; vii) make
IN applicable to scalars; viii) improve the taqlwidget.

\item[Measures enhancements] Including: i) include refraction; ii)
refraction model definition; iii) atmosphere and model in frame; iv)
atmosphere class; v) SOFA compliance; vi) new IAU 2000 nutation; vii)
Earth tides; viii) distance in Directions; ix) proper motions in
Directions; x) addition of new JPL tables

\item[Fitting enhancements] Including: i) high-level fitting classes:
revision and extension (e.g. FitPoly at C++ level); ii) high-level
interface extension (e.g. polynomial and Gaussian (requires user
feedback); iii) stop automatic SVD use in DO interface; iv) usability
with Standard Library.


\end{description}

%%----------------------------------------------------------------------

\section{\underbar{Images}}

\begin{description}

\item[Coordinate frame engines] Layer in Coordinate classes or engines
to offer reference frame conversions.

\item[Relative coordinates] Mainly for axis labeling.

\item[Regions enhancements] Including: i) regionmanager.g test script
(add to assay.g); ii) auto-discard of axes; iii) handle reference
frame conversions.

\item[Images enhancements] Including: i) mask tracking; ii)
SubImage/Lattice with remove degenerate axes; iii) LEL: some more
robust statistics, collapse, specify axes in say mean() function,
autoexpand, reorder image axes, concat, regrid, fft; iv) errors in images,
and automated error propagation.

\item[ImageFitter enhancements] Including: i) get errors back to
Glish; ii) better DisplayData for interactive estimates; iii) fitting
of axes other that the sky (e.g. spectral axis); iv) support
functional forms other than Gaussians, and v) automated source
finding.

\item[Imagepol enhancements] i) depolarization ratio; ii) Zeeman fitting.

\end{description}

%%----------------------------------------------------------------------

\section{\underbar{Visualization}}

\begin{description}

\item[DL and GlishTk thread] multi-threading the preferred solution.

\item[Re-build PrincipalAxesDD from CachingDisplayData] once
CoordSystem is available on the WorldCanvas.  This involves/requires
re-design of animation; at same time provide blinking. 1/2 (10)
 
\item[Change ColormapDefinition to retrieve definitions from a table
on disk] check the table into the system; add code to generate table
if cannot be found, using 'gencolormaptable'.  At same time, add
support for "ronekers" behaviour of colormaps. 2/4 (4)
 
\item[AOCso00069] add to Image-based DisplayDatas the ability to
transparently regrid to the CoordinateSystem of WorldCanvas; cannot be
done until WorldCanvas gets CoordinateSystem proper. 2/1 (5)

\item[Decide on future of PGPLOT in display library] If to stay, then
investigate using Tasking/PGPlotter in the WorldCanvas and/or
WCPGFilter classes.  This will enable the provision of most PGPLOT
functionality on the "worldcanvas" agent from Glish/Tk. 2/2 (?)

\item[Auto-margin calculation for axis labels] 2/3 (1)

\item[AOCso01076] support images whose corners fail to convert, but
which have valid pixels closer to the centre of the image. 2/2 (2)

\item[Unite handling of complex and real data in LatticePADD] using
eg.  ImageExpr(real(...)) and friends.  Finish uniting handling of
Arrays and Images in LatticePADD. 2/5 (1)

\item[Decide on destination of reviewed files] if new display package
to remain, then ensure that it is tested regularly and write the
package header documentation. 2/5 (?)

\item[Improve DParameter classes to read defaults from .aipsrc file]
according to a meaningful name convention, and also keep all
DParameters per class in a List so as to make Record creation and
parsing very easy.  Also use DParameter in all get/setOptions class
functions, and add support for unset DParameters. 3/5 (1.5)

\item[DisplayData for vector fields] 3/3 (3)

\item[Re-work constructors for LatticeAsRaster/Contour] to take a String
which is the image name, and to not require the IPosition, and
thereby remove dependence of ctor on dimensionality of data.  Use
changes to simplify GTkDisplayData etc. 3/5 (0.5)

\item[Graphical display of the transfer function] 3/3 (1)

\item[AOCso00076] axis labeling in pixel coordinates, getting things
right for subimages etc., and also provide offset labelling.  Also
solve axis labelling degeneracy issues (as in p-v slices)
intelligently. 3/1 (4)

\item[Ellipse object for DrawingDisplayData] 3/4 (1.5)

\item[DisplayData for ComponentLists] extend SkyCatOverlayDD. 4/3 (2.5)

\item[Re-work primitives on PixelCanvas and WorldCanvas]  The former
should only have very generic primitives, and should be limited to
only a few overloads (eg. Int, Float). 4/4 (2)

\item[Replace WC*ResampleHandler classes] with a single class which
can have the type of resampling selected from Interpolate2D::enum. 4/4
(0.5)

\item[Add RefreshReason] RefreshOverlays, and make overlays only draw to
front buffer etc. 4/3 (1)

\item[Contour drawing algorithm] stop using pgcont/pgconb. 4/2 (1)

\item[Add capability to set domain of color cube axes]  That is, you can
presently set the r, g, b dimensions of the cube, but you also want
to be able to say that red goes from 0.4 to 0.8, while blue is fixed
at 0.0 for example. 4/5 (1)

\item[Make glishtk display library interface more DO-like] by making the
various objects map more closely to classes within the DL.  Also,
reduce "ownership" of displaypanels by viewer etc.  Tricky one,
needs a lot of thought. 5/2 (12 ?)

\item[Hershey fonts?] stop using pgtext/pgptxt. 5/2 (?)

\item[Change all ListIter<void *>] to be specific to the type they are
storing, and fix all subsequent casts etc.  Need to remember to add
templates for the new ListIters etc. 5/5 (1)

\item[Correct argument ordering in AttributeBuffer::getValue] and all
*::getAttributeValue functions. 5/5 (0.2)

\item[Template member functions where possible] immediate examples include
WorldCanvas, X11PixelCanvas etc. except note that templated members
cannot be virtual. 5/4 (2)

\item[Remove Motif/Lesstif from X11PixelCanvas] and Simple*App classes.

\item[Use CountedPtr] where applicable to prevent wrong-order destructions.

\item[Resolve differences between attributes and restrictions]

\item[make DisplayOptions functions static] stop inheriting from it

\item[Event handling] in WCHolder, WorldCanvas, and possibly other
places, remove "inbetween" event handling classes, and use multiple
inheritance from classes like WCMotionEH, WCPositionEH, WCRefreshEH or
sim. where necessary.  egs. are WCTool, PCTool, ...

\item[PCTool] derive PCTool from DisplayTool.

\item[Finish viewer test script] and add to assay.trytests so that the
viewer is tested when assay runs. 1/4 (2)

\item[Improved widget for setting min/max for display] eg. interactive
histogram etc.  Could combine in some clever way with display of the
transfer function? 1/2 (2.5)

\item[Color bar/wedge provision] 1/3 (2)

\item[Improve feedback to user on order of registration] and provide
reasons when individual DisplayDatas do not draw. 2/1 (1.5)

\item[Profiles] Profile (more general than spectrum) display for
viewer. 2/2 (4)

\item[Viewer interface for DrawingDisplayData] 3/2 (2)

\item[AOCso00597] selection of image name in viewer datamanager instead of
just names of loaded image tools. 3/3 (?)

\item[Improve printing facilities]  Merge first and second print windows,
and add preview button to send to ghostview etc.  Maybe an
equivalent of File->Page setup... instead of the existing silly
canvasmanager idiom. 3/5 (1)

\item[Widget for arranging WorldCanvases on a PixelCanvas] ie. a front-
end to control a MultiWCHolder object. 4/3 (2)

\item['kpvslice-like' application or module for viewer] 4/2 (7)

\item[Drag'n'drop for displaydatas onto displaypanels] Thumbnail views
of the displaydatas placed on a multiwcholder in the datamanager can
be dragged to displaypanels.  Cool eh? 5/3 (2)

\item[Colormap editor] 5/3 (8)

\item[Pass on control of caching strategy] (server, client, smart) to
user. 5/5 (0.5)

\item[Code review] DisplayEvent, DisplayTool (submitted); AttVal,
AttValBase, AttValPoi, AttValPoiTol, AttValTol, Attribute (submitted -
reviewer Ger); AttributeBuffer; PSPixelCanvas and friends (Harold Ravlin
preparing)

\end{description}

%%----------------------------------------------------------------------


\section{\underbar{Parallelization and high-performance computing}}

\begin{description}

\item[NT port] Complete the NT port.

\item[Statement-level parallelization] Complete evaluation of OpenMP;
demonstrate use with a specific problem.

\item[Expanded user access] Expand the user access to parallelization
capabilities for science processing.

\item[IA64 support] Evaluate on an IA64 system, when available.

\end{description}

%%----------------------------------------------------------------------

\end{document}
