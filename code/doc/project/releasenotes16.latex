\documentclass{article}
\usepackage{html,makeidx,epsf}
\pagestyle{headings}

\textheight  8.5truein
\textwidth   6truein
\topmargin   0.25truein
\oddsidemargin 0.25truein
\evensidemargin 0.25truein
%
% define hyperlink URLs:
%
\newcommand{\previousdocURL}
{http://aips2.nrao.edu/docs/project/releasenotes15/releasenotes15.html}
\newcommand{\thisdocURL}
{http://aips2.nrao.edu/docs/project/releasenotes16/releasenotes16.html}
\newcommand{\searchURL}{../../html/aips2search.html}
\newcommand{\GlishmanualURL}{../../reference/Glish/Glish.html}
\newcommand{\GlishtutorialURL}{../../notes/195/195.html}
\newcommand{\gsURL}{../../user/gettingstarted/gettingstarted.html}
\newcommand{\grURL}{../../gettingresults/gettingresults/gettingresults.html}
\newcommand{\userrefmanualURL}{../../user/Refman/Refman.html}
\newcommand{\specsURL}{../../specs/specs.html}
\newcommand{\consortiumURL}{../consortium.html}
\newcommand{\defectlink}[2]{
\par
\htmladdnormallink{{#1: #2}}{http://aips2.nrao.edu/ddts/ddts_main?bug\_id=#1&REMOTE_USER=nobody&LastForm=DumpBug}
}
%
% URL to Help system
%
\externallabels{../../user/Refman}{../../user/Refman/labels.pl}
\externallabels{../../reference/Glish}{../../reference/Glish/labels.pl}
\externallabels{../../user/Utility}{../../user/Utility/labels.pl}
\externallabels{../../user/General}{../../user/General/labels.pl}
\externallabels{../../user/Display}{../../user/Display/labels.pl}
\externallabels{../../user/Dish}{../../user/Dish/labels.pl}
\externallabels{../../user/SynthesisRef}{../../user/SynthesisRef/labels.pl}
\externallabels{../../user/ATNF}{../../user/ATNF/labels.pl}
\externallabels{../../user/NFRA}{../../user/NFRA/labels.pl}
\externallabels{../../user/NRAO}{../../user/NRAO/labels.pl}


\begin{document}

\title{{\bf AIPS++ Release 1.6: release notes}}

\author
{
AIPS++ Project\\
National Radio Astronomy Observatory\\
P.O. Box O, Socorro, NM, 87801, USA
}

\date{{Text last updated: 2001 Nov 29}\\
{HTML version available at:}\\
\texttt{{\thisdocURL}} 
}

\markright{AIPS++ Release 1.6: release notes}
\maketitle

\tableofcontents

\section{Purpose}

This document is a guide for users of AIPS++ release 1.6, the fifth
public release. It is intended to describe the installation
procedures, outline the current capabilities of AIPS++, and to
describe what feedback we would like from users.

The previous release (1.5) is documented in the
\htmladdnormallink{release notes}{\previousdocURL} of August, 2001.

\section{Planned releases of AIPS++}

AIPS++ is in continuing development at the various
\htmladdnormallink{AIPS++ consortium sites}{\consortiumURL}, and
rapidly evolving versions of the AIPS++ system are to be found in the
builds at these sites. A public release is a snapshot of the
development system that is suitable for export to the user community. AIPS++
is now making two public releases per year, nominally scheduled for
the months of April and October. The release described here is is the
fifth public release: AIPS++ Version 1.6. The next public release of
AIPS++ will be Version 1.7, and is scheduled for April 2002.

Several patches will be available over the course of the release cycle. 
Announcements will be made on the aips2.nrao.edu website. In addition,
a listing of the ongoing development priorities can be seen under the
Notes section of the on-line documentation:

aips2.nrao.edu/daily/docs/notes/notes/notes.html

The document is called Development plan for v1.7.

\section{Current capabilities of AIPS++}

In this section, we provide a brief overview of the capabilities
of AIPS++, describing both what is present in the system, and what we
have not yet delivered.

\subsection{What is present}

\begin{itemize}

\item Documentation

\begin{itemize}

    \item
    Getting Started in AIPS++: 
    aips2.nrao.edu/docs/user/gettingstarted/gettingstarted.html
    A general guide to the architecture, environment and usage of AIPS++.

    \item
    Getting Started with Glish:
    aips2.aoc.nrao.edu/docs/notes/195/195.html \hfil\break
    A description and tutorial for Glish, the interactive scripting language used in AIPS++.

    \item
    Glish User Manual
    aips2.nrao.edu/daily/docs/reference/Glish/Glish.html \hfil\break
    The reference manuak for the Glish scripting language.

    \item
    User Reference Manual:
    aips2.aoc.nrao.edu/docs/user/Refman/Refman.html \hfil\break
    The fundamental documentation for all tools available in AIPS++.
 

    \item
    Getting Results:
    High-level documentation aimed at helping you get scientific results from your data.
    Presently, it contains three parts:

    \begin{itemize}
    \item A.  Basic tools:
    aips2.aoc.nrao.edu/docs/gettingresults/grvol1/grvol1.html \hfil\break
    Basic tools needed for generic processing of any data.

    \item B.  Generic Processing:
    aips2.aoc.nrao.edu/docs/gettingresults/grvol2/grvol2.html \hfil\break
    A detailed description of the algorithms and basic usage of
        AIPS++ radio reduction tools.

    \item C.  Telescope-specific Cook-books for the users: \hfil\break
    aips2.aoc.nrao.edu/docs/gettingresults/grvol3/grvol3.html \hfil\break
	\begin{itemize}
        \item VLA reduction
        \item ATCA reduction
        \item GBT reduction
        \end{itemize}
   \end{itemize}

   \item Other useful cookbooks not yet in the formal documentation structure are:

      \begin{itemize}

       \item Benson Step-by-step approach to VLA reductions (recipe approach)
            www.aoc.nrao.edu/~jbenson/aips++/menus/framebase.html
       \item BIMA cook-book (mostly gui approach)
            monet.astro.uiuc.edu/aips++/forBIMA/
       \end{itemize}


    \item Useful Recipes (Scripts)
    aips2.nrao.edu/daily/docs/recipes/index.html

\end{itemize}

\item Interaction

\begin{itemize}

\item At the heart of AIPS++ is a powerful command line interpreter 
called Glish (see Appendix A for copyright information).  Glish is both a
programming (scripting) language and an environment for data acquisition and
analysis.  Glish has a lot of built in functionality such as standard
mathematical operations, array manipulation, event handling, and binding
to the Tk GUI widget set.

Glish is also the interface to all of the AIPS++ tools (which are coded
in some combination of C++ and Glish itself).  For example, there is a
tool ({\tt pgplotter}) that provides an interface to PGPLOT (the Caltech
plotting package), a tool ({\tt viewer}) to provide generalized display of
data, a tool ({\tt measures}) that provides vast functionality to manipulate
values, units, and reference frames. 

The combination of Glish itself and the higher-level AIPS++ tools
provides great flexibility of data analysis.  

Glish has both a \htmladdnormallink{tutorial}{\GlishtutorialURL} and a
\htmladdnormallink{reference manual}{\GlishmanualURL}.  


\item Apart from the Glish command line interface, we also have
graphical user interfaces for most user-visible tools.  The primary
(GUI) way to start, control and stop tools is via the Tool Manager ({\tt
toolmanager}).

\item File browsing and selection is handled by the File Catalog
tool ({\tt catalog}).

\item In AIPS++, all data are stored in Tables.  All tables may be
accessed via the {\tt table} tool.  However, there are some specific
types of Tables, such as MeasurementSets (to hold visibility data) and
Images to hold image data.  These can also be accessed by higher-level
tools with specialized functionality; in these cases, the {\tt ms} and
{\tt image} tools, respectively. 

\item To help users set up their AIPS++ environment (which is configurable), there is a {\tt
setupwizard} tool. 

\end{itemize}

\item Basic Tools

\begin{itemize}

\item The Mathematics module provides tools for statistics (median,
moments, etc), FFTs, polynomial fits, 1-d interpolation, 1-d gaussian
fits and evaluation, random number generation, matrix algebra, and
least squares of simultaneous equations. Numerous fitting tools are
available for linear and non-linear fits (real or complex) through
the Fitting module.

\item The {\tt measures} tool and its underlying C++ classes are to our
knowledge unparalleled in the types of operations it allows on measured
quantities with units and reference frames (e.g.  conversion like
$UTC->LAST$ for times, $J2000->Az,El$ for directions, $LSR->TOPO$ for
frequencies and velocities).  There is also a specialized GUI interface.

\item Numerous general purpose utilities for handling AIPS++ data are
present.  For example, the {\tt table} tool provides basic access to all
AIPS++ tables.  This immediately enables direct access to the data for
ad-hoc processing as needed.  The {\tt table} tool also has a {\tt
browse} function to enable you to edit, plot, query and select data via a GUI.

A {\tt catalog} tool is also provided for file browsing and selection.

\item The {\tt pgplotter} tool provides an interface
to the PGPLOT subroutine library. In addition, higher-level
functionality is available.

\item Image visualization capabilities are provided by the {\tt viewer}
tool, which provides a Glish interface to the underlying display library
C++ classes.  This supports raster, contour, vector and 3-D slice
displays of images.   Display of visibility data will be provided in 
the next release.

\item Extensive image analysis and manipulation is provided by the {\tt image},
{\tt imagefitter}, {\tt imageprofilefitter} and {\tt imagepol} tools.
Built into these tools is access to a flexible image calculator
(i.e. you may manipulate complex expressions involving images).

\item Extensive deconvolution utilities are also available, including 
deconvolution of known point spread functions using Hogbom and Clark clean, 
MEM and multi-scale techniques.

\end{itemize}

\item Synthesis Processing

\begin{itemize}

\item The synthesis imaging capabilities are found principally in the
tools {\tt calibrater} (for calibration) and {\tt imager} (for imaging). 

The {\tt calibrater} tool uses the Measurement Equation formalism (Sault et al.)
to provide a flexible solving system for gain, bandpass, polarization leakage,
and other calibration terms.  It is the only calibration software
that provide access to the complete Measurement Equation formalism, which
will be necessary for future instruments.

The {\tt imager} tool has many features not found in other packages, such as
mult-scale deconvolution, wide-field imaging via faceting, single dish
imaging and pixon deconvolution. 

For VLA wide-field imaging, the {\tt dragon} tool (built on top of {\tt imager})
can be used.  

\item Data editing (flagging) capabilities are provided through the
{\tt flagger} and {\tt autoflag} tools.   The latter
allows automated editing of bad data. An interactive editing
capability is available via the {\tt msplot} tool.

\item Modelling of the sky brightness as discrete components 
is supported by tools in the Component Model module.

\item To demonstrate the possibilities of stream-lined processing in
AIPS++, we have provided the {\tt imagerwizard} tool. This walks the
user through straightforward imaging of synthesis data, first making a
tapered image at low resolution and then imaging a user-specified
region at full resolution. The user has only to select the data to be
imaged, and to delimit the full-resolution region. An initial {\tt
mosaicwizard} is also available in this release.  Also, an
example of a high-level synthesis calibration and imaging tool {\tt
map} is available.

\item Functions for simulating telescope operations (either synthesis or 
single dish) and corruption of data through Gaussian errors or other 
specific errors is supported via the {\tt simulator} tool.

\end{itemize}

\item Single Dish Processing

\begin{itemize}

\item The single dish environment {\tt dish} is an
interactive tool for processing of single dish data, most particularly
spectra but other one-dimensional data formats are supported. SDFITS
and the AIPS++ MS formats are the only data structures which can utilize
the full single dish package. Graphical and command-line interfaces are
provided for viewing, examining (flagging/editing) and analyzing data. 
Operations
for averaging, baselining, regridding, etc are available along with
generic function application tools and calculators. Spectral line data
and OTF continuum data can also be imaged with the single dish package.
Observatory specific calibration procedures are available for several
facilities. 

\end{itemize}

\item Programmability

\begin{itemize}
\item Glish provides a powerful means of programming any user-desired analysis
using pre-existing functions within the AIPS++ toolkit and Glish.
\end{itemize}

\item Data Repository

\begin{itemize}
\item The data repository contains all of the standard global data used by 
AIPS++ (source catalogs, observatory positions, IERS data, planetary 
ephemerides, leap second data, magnetic field models) along with test data 
sets for use with many of the tools.
\end{itemize}

\end{itemize}

\subsection{What is not present}

\begin{itemize}

\item VLBI fringe fitting is not currently supported. 

\item Connected-element end-to-end processing is possible in this
release but is not recommended for new users unfamiliar interferometric
analysis.
Active efforts are underway to provide more intuitive
user interfaces to simplify end-to-end processing. See also the Synthesis
User Comments and for NRAO VLA reduction, see the cookbooks in: \hfil\break
www.aoc.nrao.edu/~jbenson/aips++/menus/framebase.html

\item Concatenation of multiple Measurement Sets (visibility data) is
currently limited to Measurement Sets filled from a UVFITS file.  Check
the AIPS++ site for updates to this. 

\item There is no single function for applying elevation-dependent
gain curves and optical depth corrections to VLA data $>$ 15 GHz. 
This can be achieved through Glish table manipulations. See the 
recipes page for details.

\item The msplot data-editing viewer combines the functionality of
the AIPS task TVFLG and difmap-VPLOT. Currently, there is no ability to 
edit on rms and differences versus a mean. 

\item Support for data formats beyond SDFITS and the AIPS++ MS data
structures for the single dish tool.

\item Generic calibration in the single dish toolkit. Currently the
calibration procedures are tightly coupled to individual observatories.
Contact jmcmulli@nrao.edu for the evolving list of observatories and
procedures.

\item There is no GUI interface to the continuum imaging capabilities
in the Single Dish package; these are provided as a script tool kit.

\item Efficient processing of many channel ({\em e.g.} more than 64)
spectral images; optimization is ongoing in this area with current processing 
optimized towards spectral-line
observations of moderate numbers of channels, and continuum processing.

\item We do not expect people to program independently at the C++
level using this release. We expect to issue a developer's pre-release
for Linux in early 2002.


\end{itemize}

\section{Installation of AIPS++ from CDROM}

You will be installing a full release of the system, complete with
prebuilt binaries. Installation over the top of a existing version is
possible but we strongly recommend that you make an entirely new
installation.

\subsection{For the impatient}
\begin{enumerate}
\item Identify a disk with at least 2GB of free space for the installation
\item Insert CD1 in to CDROM drive
\item mount /mnt/cdrom
\item sh /mnt/cdrom/INSTALL
\item answer some questions
\item Insert CD2 when prompted
\item Remove CD2 after script is done
\end{enumerate}


\subsection{Before installation}

If you have an existing installation, we recommend that you write
existing MeasurementSets and Images to FITS format from where
they can be reloaded.

\subsection{What will the installation from CDROM do?}

The installation process involves copying files from the 2 CDROMs.  It
will uncompress and unpack some tar files in the right places, and you
will end up with a complete source-and-binary AIPS++ system, ready to
run.  All that will be required is the invocation of an initialization
script ({\tt aipsinit.sh} or {\tt aipsinit.csh}) which you can call
for convenience in your {\tt .login} or {\tt .profile} or equivalent
login script.

\subsection{Requirements}

This release is targeted at a few architectures:

\begin{description}

\item[{\tt sun4sol}] Sparc systems running Solaris 2.8
\item[{\tt linux}] Intel machines running Linux RedHat
6.*-7.* or SuSE 6.2.

\end{description}

While a separate account for AIPS++ is recommended, it is not required for
the installation.  Your own personal account --- assuming sufficient disk
space --- should suffice.  You will likely not need {\tt root} access, and should
{\it not\/} perform the installation as {\tt root}, unless mounting and dismounting the
CDROM requires root priviledges.  In addition, you will
not be required to gain access to any operating system files or
directories; everything can be done from a normal, non-privileged account.

AIPS++ uses the Caltech
\htmladdnormallink{PGPLOT}{http://astro.caltech.edu/\~{}tjp/pgplot}
package (version 5.1.0 or later) to provide various plotting
capabilities. If you already have an installation of PGPLOT, then you
can and should use that.  Otherwise, for convenience we provide a copy
of the PGPLOT library and the required font file, grfont.dat. Please
note that PGPLOT is not public-domain software. However, it is freely
available for non-commercial use. It is copyrighted by California
Institute of Technology.

To access help information in your browser directly from AIPS++,
you will need perl installed and accessible. If perl is not
accessible, help will still be readable directly but the user
interface will not be able to drive your browser to the
appropriate section for a given tool or function.

Here is an approximate outline of the various hardware and software
{\bf requirements} for this release:

\begin{itemize}

\item A recent SUN Sparcstation or Intel machine.


\item SunOS 5, SunOS 5.8 (a.k.a. Solaris 2.8) or higher; or Linux
            2.2 (RedHat 6.0-6.2, SuSE 6.0 or 6.2) or 2.4 (RedHat 7.0-7.1, Mandrake 8.1)

\item 256 Megabytes of memory (note the more memory you have the better
performance you will get).

\item
Approximately 3GB of free disk 
space for full installation (code, documentation, binaries and test data) of solaris and linux. 
A full linux installation will take about 2GB of disk space a full solaris 
installation will take about 2.2GB.  Disk space requirements for a 
minimal installation with docs, is 2.5GB for both,  1.6GB for linux and 
1.8GB for solaris. AIPS++ requires so much disk space because  the documentation uses $\sim 250$ MB (due to the
use of postscript files for screen views) example and test data is $\sim$ 600 MB. We hope to pare this down
in the next release.

\item At least 256 Megabytes of swap space

\end{itemize}

\subsection{Running the INSTALL script}

AIPS++ comes on two CDs, the first CD contains the binary distributions 
for solaris and linux and the second CD contains necessary data needed 
to run AIPS++.  Ensure that you have about 2 GB of disk space available
for the full installation (3GB if installing both linux and solaris binaries). 

\begin{enumerate}
\item Insert the AIPS++ binary CD labeled CD1 into your CD-drive and mount the
CD using a command similar to:

mount /mnt/cdrom

If this fails because of a permissions problem you will need to either 
mount the CD as root (and run INSTALL as root) or have the local system 
adminstrator enable user mounting of the CDROM.

\item Assuming the mount succeeds then

sh /mnt/cdrom/INSTALL

and answer the questions.  The install script will eject the CD and prompt you to insert the second 
(data) CD, labeled CD2.

WARNING, do not cd to /mnt/CDROM and run the INSTALL script.  The script 
will be unable to unmount the CD.  If you do this by mistake, type quit 
at the prompt and cd to a directory not on the CD and rerun INSTALL.

\item At the end of
loading, you should have an AIPS++ installation that is ready for
testing. 

\end{enumerate}

\subsubsection{Testing the installation}

To test the installation, use the \htmlref{assay}{misc:assay}
module:

\begin{verbatim}
.      /aips++/release/aipsinit.sh       # For Bourne/Korn/Bash shells
source /aips++/release/aipsinit.csh      # For C-like shells
aips++
- include 'assay.g'
- assay().trytests()
\end{verbatim}

This will run all registered test scripts in the system, and summarize
at the end which failed. The complete sequence should take about 30
minutes.

The final number printed will be the number that failed. If this is
zero, then the installation has passed the first test. If it is not,
then you need to determine which test failed and run it again {\em
e.g.} if {\tt imagertest} failed then do:

\begin{verbatim}
aips++
- include 'assay.g'
- assay().try('imagertest')
\end{verbatim}
If it is not clear why a particular test fails, then please contact us
using the ask() function.

If no tests failed then you are ready to move on to using the system.
A good way to exercise many parts of the system is to run
synthesistest in demonstration mode:


\begin{verbatim}
include 'synthesistest.g'
ddemo.enable()
synthesistest()
\end{verbatim}

At this point, it may be a good idea to re-read the document on
\htmladdnormallink{Getting Started in
AIPS++}{\gsURL}, and then read the \htmladdnormallink{Getting Results
in AIPS++}{\grURL} chapter for the capabilities that you wish to try
out.

\subsection{Things That Can Go Wrong}

\subsubsection{ld.so (shared library loader) problems}

The most likely source of error on systems that support it is an incorrect
value for the environment variable {\tt LD\_LIBRARY\_PATH}.  On Sun and
Linux systems, this variable specifies additional directories to search
for unresolved shared libraries referenced in the binaries.  Your site may
not have the various system and optional shared libraries in the same
places as we do, so the binaries we generate may need this variable set to
include some of your site-specific directories before you can run certain
programs, or the aips++ system itself.

The {\tt INSTALL} script will attempt to figure out what is needed for
this variable, and it will set and/or extend it (possibly on multiple
lines) for you in the file {\tt sun4sol/aips++local.sh} (replace {\tt
sun4sol} with your architecture if needed); while it tries to figure
out the right settings, it may not be correct for your environment.
%%% perhaps a note about judicious use of ldd here?

If you find the value in this file incorrect, please change it to whatever
is correct for your system.  Note that if you do not have either PGPLOT or
TCL libraries on your system, this variable will need to include the AIPS++
architecture-specific library ({\it e.g.\/}, {\tt
\$AIPSROOT/sun4sol/lib}) as that is where they will then be found.

\section{Feedback requested from users}

AIPS++ is a totally new package and has many features and capabilities
that most astronomers will be unfamiliar with. It has been designed in
accord with the \htmladdnormallink{AIPS++ User
Requirements}{\specsURL} to have both canned algorithms and general
purpose tools. The general flavor of the package may may seem strange
(and probably irritating!) at first.  Please give it a chance.

We suggest that you first take time to read a number of key pieces of
documentation. Please remember to keep notes on the documentation that
you read: Is it clear?  Does it cover what you need to know?  Is there
jargon present?  Do the examples actually work?

Start by reading the guide to {\it\htmladdnormallink{Getting
Started in AIPS++}{\gsURL}}. Then you should be in a good position to
try out some of the examples in that document. Next you may wish to
read the guide to \htmladdnormallink{Getting Results
in AIPS++}{\grURL}.

If that leaves you curious about Glish, then try the {\it
\htmladdnormallink{Glish tutorial}{\GlishtutorialURL}}. This document
contains a very good introduction to the use of Glish, and also
touches on some more sophisticated uses of Glish.

We suggest that as you proceed, you report bugs and ``features'' as
you find them using one of the various methods described in the
next section. We also need more general and wide-ranging reactions
to the software, but our experience with our users so far is
that you should give the system a little time beforehand.

\section{How to get help on using AIPS++ and how to report bugs}

If you are having trouble doing something that you think the system
should do, and you've read the documentation, you can get human
help using the {\tt ask()} command from inside AIPS++. 

If you know what to do and it just doesn't work, then report a bug.
There are a number of ways of doing this. The easiest is to use the
{\tt bug()} command from inside AIPS++. The advantage of this approach
is that it gives us information we need about your environment. An
alternative and sometimes more straightforward approach is to use the
WWW interface to the \htmladdnormallink{AIPS++ Bug reporting
system.}{http://aips2.nrao.edu/aips++/docs/contactus/reportabug.html}  Please
also use this mechanism to request or suggest enhancements to the
current system. You can also review all existing bugs from the 
\htmladdnormallink{AIPS++ Defect Page}{http://aips2.nrao.edu/docs/contactus/trackabug.html}.

Finally, if you are totally frustrated and everything else has failed,
contact Athol Kemball (505 835 7330,
\htmladdnormallink{akemball@nrao.edu}{mailto:akemball@nrao.edu})
or Joe McMullin (505 835 7327, 
\htmladdnormallink{jmcmulli@nrao.edu}{mailto:jmcmulli@nrao.edu})

\section{Known problems}

\subsection{Existing defects}

Existing defects may be reviewed from the
\htmladdnormallink{AIPS++ Defect Page}{http://aips2.nrao.edu/docs/contactus/trackabug.html}.

\subsection{Disk space use}

The MeasurementSet disk space use is quite large at the moment:
typically a factor of three over the space required for a FITS file
containing the same data.  Extra scratch columns are added to the
table for corrected and model visibility data, and for the imaging
weights. In addition, there is no compression of the visibility
data. We are working on this issue at present.

\subsection{File locking under Suse}

Linux 2.0 did not support locking of nfs-files.  It simply always
granted such a lock request.  This has the problem that multiple
processes accessing the same nfs-file can write the file at the same
time.

Linux 2.2 supports the lockd deamon in the kernel.  However, for
nfs-file locking the statd daemon is also needed.  RedHat 6.0 contains
the statd daemon, but unfortunately SUSE 6.1 does not. Hence, a
nfs-file lock request results in a ENOLCK error on SUSE 6.1 systems.

AIPS++ has a fix to circumvent this problem.  It simply ignores this
error for Linux systems and treats it as a success. This effectively
mirrors the old Linux behaviour.

However, SUSE 6.1 users can install the statd daemon themselves.
This is preferred, because it means that locking is fully supported.
It can be done as follows (according to Jeff Uphoff):

It needs to be built from the knfsd source package, available at
ftp.kernel.org (or one of its many mirrors; see
http://www.kernel.org/mirrors/ for mirror info) in:

/pub/linux/devel/gcc/knfsd-1.4.1.tar.gz

(If there's a higher/newer version number there by the time you look then
by all means use it rather than 1.4.1; this stuff is currently in very
active development, primarily bug-squashing.)

Install the generate statd binary in /usr/sbin and add it to your
/etc/rc.d/init.d startup scripts; there are examples in the knfsd
tar-ball.

\section{Synthesis User comments}

The following guidelines for successful reduction of synthesis data
in AIPS++ have been generated by the users.  These comments apply to
the state of the software at the release date.  Since AIPS++ is
continually improving, please check the online AIPS++ documentation
for recent changes which may impact your reductions, and contact the
AIPS++ group if you have questions.

\begin{itemize}

\item Recommended Data Processing 

   AIPS++ is written to accomodate many reduction systems and to
provide general and accurate algorithms.  At the present time,
however, the price of this generality is that some tasks run
considerably slower than that in AIPS, and some reduction steps
associated with large data bases (greater than 4 hours of VLA
continuum data) may cause swapping problems if there is limited
memory.

We advise analyzing small continuum data sets at first to
learn AIPS++.  Then, proceed to larger continuum data sets and small
spectral line data sets.

\item Data Editing 

MSPLOT combines the functionality of the AIPS task TVFLG and difmap VPLOT,
although some functionality is not yet available (see section 3.2 "What
is not present").  In addition, applying edits from one dataset to another
is currently somewhat difficult; see the recipes page for help or contact
AIPS++ personnel.

The MSPLOT "Display as Image" option, which is similar to TVFLG, has the
most new functionality.  The scope of the edits is controlled by the
buttons at the top - read the pop-up info displayed as the cursor
passes over the buttons to learn the action of that toggle.  See also
the Viewer documentation for the actions of the built-in viewer controls.

The flagger tool
is straightforward to use. The autoflag feature is still undergoing
testing and heavy development.


\item Calibration
Much of the power of the AIPS++ calibration approach comes from its
implementation of the measurement equation formalism.
We strongly suggest that the user read through the
section "Volume 2 - Generic Processing" of Getting Results in AIPS++
(http://aips2.nrao.edu/docs/gettingresults/grvol2/grvol2.html) for
a description of the AIPS++ calibration philosophy and the measurement
equation, and also the description of VLA calibration in
"Volume 3 - Telescope Specific Processing" of the same document
(http://aips2.nrao.edu/docs/gettingresults/grvol3/node2.html) for
examples.  As an aid in the learning process, we suggest that you
first try to emulate an existing script from the Recipes \hfil\break
(http:aips2.nrao.edu/daily/docs/recipes/index.html)
which is closest to your calibration needs.

\end{itemize}


\clearpage

\section{Changes visible to users}

\subsection{Changes from version 1.5}

This release contains a number of new features and improvements to
existing features in release 1.5. These are briefly described below:

\vskip 1cm

\begin{tabular}{|l|l|}
\hline
Package and Module & What \\
\hline
general.images&                 Coordinate system editor; improved\\
              &                 mask handling and convolution\\
general.ms&                     MS concatenation, basic lister\\
general.measures&               New programming guide; other improvements\\
general.fitting&                New fitting capabilites\\
synthesis.calibrater&           Solver and polarization improvements\\
synthesis.flagger&              Improved flagging capabilities\\
synthesis.imager&               Consolidation of imaging and deconvolution\\
                &               methods; mosaic wizard\\
synthesis.simulator&            Improvements in speed and capability\\
synthesis.msplot &              Interactive editing; renamed from visplot\\
synthesis.map&                  Beta version of new high-level synthesis tool\\
dish.dish&                      Consolidated as a tool; new scripting\\
dish.ssa&                       New scan-based single-dish analysis tool\\
display.viewer&                 New vector display and catalog overlays\\
              &                 3-D slice display\\
atca.atcafille&                 New features; renamed from rpfitsfiller\\
nrao.gbtmsfiller&               Improved data format support\\
nrao.vlafiller&                 Improved features\\
\hline
\end{tabular}

\subsection{Version 1.6.1, updates to 1.6}
Version 1.6 has been updated to v1.6.1. The update fixes the problems listed below.
Where relevant, an AIPS++ defect number has been added in parentheses. Further
information on specific defects may be obtained from our web page at:
\htmladdnormallink{http://aips2.nrao.edu/docs/contactus/trackabug.html}{http://aips2.nrao.edu/docs/contactus/trackabug.html}.
\begin{itemize}
\item  Simulator GUI fixed.
\item Aipsview updated.
\item Corrects the sign of PJones PA rotation for linear polarization - it affects only ATCA data at present.
\item Polarization conversion is now done (3177).
\item Some minor documentation changes.

\end{itemize}


\section{Acknowledgements}

We thank Tim Pearson and Martin Shepherd for allowing use of 
\htmladdnormallink{PGPLOT}{http://astro.caltech.edu/\~{}tjp/pgplot},
and for help with the Glish binding to PGPLOT. 

\section*{Appendix A: Glish Copyright}

Glish is covered by the following copyright:

{\em
	Copyright (c) 1993 The Regents of the University of California.

	All rights reserved.

	Copyright (c) 1997,1998,1999,2000,2001,2002 Associated Universities Inc.

	All rights reserved.

	This code is derived from software contributed to Berkeley by
	Vern Paxson and software contributed to Associated Universities
	Inc. by Darrell Schiebel.

	The United States Government has rights in this work pursuant
	to contract no. DE-AC03-76SF00098 between the United States
	Department of Energy and the University of California, contract
	no. DE-AC02-89ER40486 between the United States Department of Energy
	and the Universities Research Association, Inc. and Cooperative
	Research Agreement \#AST-9223814 between the United States National
	Science Foundation and Associated Universities, Inc.

	Redistribution and use in source and binary forms are permitted
	provided that: (1) source distributions retain this entire
	copyright notice and comment, and (2) distributions including
	binaries display the following acknowledgement:  ``This product
	includes software developed by the University of California,
	Berkeley, the National Radio Astronomy Observatory (NRAO), and
	their contributors'' in the documentation or other materials
	provided with the distribution and in all advertising materials
	mentioning features or use of this software.  Neither the names of
	the University or NRAO or the names of their contributors may be
	used to endorse or promote products derived from this software
	without specific prior written permission.

	THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR
	IMPLIED WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED
	WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
	PURPOSE.
}

\section*{Appendix B: AIPS++ Copyright}

AIPS++ is covered by the following copyright:

{\em Copyright (C) 1996,1997,1998,1999,2000,2001,2002 Associated Universities, Inc. Washington DC, USA.

This program is free software; you can redistribute it and/or modify it
under the terms of the GNU General Public License as published by the Free
Software Foundation; either version 2 of the License, or (at your option)
any later version.
 
This program is distributed in the hope that it will be useful, but WITHOUT
ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
more details.
 
You should have received a copy of the GNU General Public License along
with this program; if not, write to the Free Software Foundation, Inc.,
675 Massachusetts Ave, Cambridge, MA 02139, USA.
 
Correspondence concerning AIPS++ should be addressed as follows:

Internet email: aips2-request@nrao.edu

Postal address: AIPS++ Project Office, National Radio Astronomy
Observatory, 520 Edgemont Road, Charlottesville, VA 22903-2475 USA.}

\end{document}
