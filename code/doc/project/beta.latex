\documentclass{article}
\usepackage{heqn,html,makeidx,epsf}
\pagestyle{headings}

\textheight  8.5truein
\textwidth   6truein
\topmargin   0.25truein
\oddsidemargin 0.25truein
\evensidemargin 0.25truein
\newcommand{\status}[3]{{\footnotesize{: \bf Responsible person:} #1, {\bf Status:} #2, {\bf Notes:} #3} }
%
% define hyperlink URLs:
%

\def\thisdocURL{http://aips2.nrao.edu/aips++/docs/project/beta.html}
%
% URLS to Help system
%
\externallabels{../../reference/helpatoms}{../../reference/helpatoms/labels.pl}
%
% Add home page navigation button -- edit the URL!
%

\htmladdtonavigation{\htmladdnormallink
  {\htmladdimg{../../gif/home.gif}}{{../../html/aips++.html}}}
\def\ltoh{LaTeX2HTML}

\makeindex

\begin{document}

%
%  Page formatting for Postscript output
%

\title{
{\bf Planning for Releases of AIPS++}
}

\author
{
Tim Cornwell\\
National Radio Astronomy Observatory\\
P.O. Box O, Socorro, NM, 87801, USA
}

\date
{
{Text last updated: 1996 December 2}\\
{HTML version available at:}\\
\texttt{{\thisdocURL}} 
}

\begin{latexonly}
\markright{Planning for Releases of AIPS++}
\maketitle
\end{latexonly}

%
% Page formatting for HTML output
%


\begin{rawhtml}
<TABLE BORDER=0 CELLPADDING=2 WIDTH="100%"> 
<TR VALIGN=TOP> 
<TD><FONT COLOR="maroon"><H1>Planning for Releases of AIPS++</H1></FONT><BR></TD>
<TD>Tim Cornwell<BR> 
NRAO, Socorro<BR> 
New Mexico, U.S.A.<BR>
</TD>
</TR> 
<TD>whole document as <A HREF="../beta.ps">Postscript</A><BR></TD> 
<TD>HTML updated: 1996 December 2</TD> 
</TR> 
</TABLE>
<HR> 
<P><FONT COLOR="red">N.B. This document uses HTML 3 Tables, and
in-line images to display mathematical expressions.<BR>Turn <EM>Image
Loading</EM> <STRONG>ON</STRONG>, and set your font size in the range
12 to 14pt for optimal browsing.</FONT></P>
\end{rawhtml}

\tableofcontents

\pagebreak

%
% optional post-title formatting for PostScript
%
\parindent0pt
\parskip2.5ex plus 0.5ex minus 0.5ex

\section{Purpose}

This document describes the release philosophy and schedule for 1997
and 1998. It has been updated following comments by the AIPS++ STAG
given in the \htmladdnormallink{1996 report}{../../notes/198/198.html}.

\section{Introduction}

We plan various releases of AIPS++ in 1997 and 1998. In this document,
I describe in varying degrees of detail what we intend to deliver in
each of these releases.

We plan to make two major releases, one in 1997 and one in 1998. The
first is designated as a ``Limited Public Release'' since it will
contain only a subset of the functionality expected to be present
eventually. The second release, in 1998, is expected to have a more
rounded set of capabilities. The limited public release is preceded by
an explicit ``beta'' release.

\begin{description}
\item{Beta Release: AIPS++ V0.9} Due Early 1997
\begin{itemize}
\item Targeted to consortium sites and a few friendly astronomers
\item Contains basic environment, tools, synthesis applications.
\item Will get early exposure for AIPS++
\end{itemize}
\item{Limited Public Release: AIPS++ V1.0} Due Mid 1997
\begin{itemize}
\item Open release, targeted to both astronomers and programmers
\item Contains basic environment, tools, synthesis applications.
\item GUI frontends to major Distributed Objects and applications
\item Interfaces should be fixed at this point,
\item Will provide environment for code development.
\end{itemize}
\item{AIPS++ V2} Due Mid 1998
\begin{itemize}
\item Synthesis package (including some functionality for VLBI)
\item Single dish package
\item Image Analysis package
\item General toolkit
\item Visualization toolkit and applications
\item Contributed code
\end{itemize}
\end{description}

It is essential that the first impressions made by these releases of
AIPS++ be good ones. Hence given a choice between adding functionality
and improving quality of what already exists, we will go with the
latter. Furthermore, it is vital that these releases be timely. The
priority is timeliness, quality, functionality. If the planning given
here is correct, these don't conflict too much.

\section{The beta release (AIPS++ V0.9) and LPR (AIPS++ V1.0)}

\subsection{Goals}

The principal goals of the beta release and the LPR are:

\begin{itemize}
\item Provide astronomers with a first look at functionality in a number of different
areas: synthesis, image analysis, general tool-kit
\item Get experience with distribution and support of AIPS++ outside consortium sites,
\end{itemize}

\subsection{Planned general capabilities}

\begin{itemize}
\item The AIPS++ interface will be primarily via Glish ($\beta$), so that existing 
command-line apps will be wrapped. There will only be of order two or fewer
substantial GUI-based applications.
\item In suitable cases, the Glish ``closure object'' format for Glish functionality
will be used.
\status{Brian and Tim}{Done: Note 198}{Document describing coding standards
and documentation.}
\item All capabilities available to users will be documented ($\beta$)
\status{Wes}{On-going}{}
\item Tutorials for processing will be present ({\em LPR}).
\item Test suites for applications to be present ({\em LPR}).
\item We will provide meaningful error messages for at least the usual failure conditions ($\beta$)
\item We will provide a "dictionary" of arguments for Glish functions and methods ($\beta$)
\item We will organize applications code ($\beta$) according to package/module
and then one of:
\begin{description}
\item[application] object.method(): an example is imager
\item[server object] object.method(): an example is table
\item[solitary object] unique.method(): an example is logger
\item[function] function(): an example is uvfits2ms()
\item[simple function] function(): builtin or other function who's inputs aren't logged. An
example is sin()
\end{description}
\item We will provide a number of GUI tools to be invoked from Glish:
\begin{itemize}
\item logging window w/filters ($\beta$), 
\status{Brian}{Initial versions in place}{Filtering probably deferred until {\em LPR} release.}
\item table editor (faster, change cells/keywords) ($\beta$), 
\status{Paul}{tablebrowser in place}{Editing probably deferred until {\em LPR} release.}
%\item plot window ($\beta$),
%\status{Yanti}{Not yet started}{Waiting for tkpgplot}.
\item image display window ($\beta$)
\status{Tim}{Adequate version available}{}
\item file chooser
\status{Wes}{In place, but needs documentation}{}
\item web browser ($\beta$)
\status{Wes and Tim}{Started but needs more work}{Simple interface to standard browser allowing one
to send commands from Glish to a browser.}
\end{itemize}
\item We will supply standard application services available to C++ clients.
\begin{itemize}
\item Logging ($\beta$)
\status{Brian}{In place}{Needs to be used everywhere}
\item Simple image display ({\em LPR})
\item Simple plotting ({\em LPR})
\item Confirmation ($\beta$)
\end{itemize}
\item Performance goals
\status{Tim and Mark W}{Under continuous monitoring}{}
\item AIPS/AIPS++ interoperability aids
\status{Athol}{Being planned}{Software and documentation to aid
users in moving between AIPS and AIPS++}
\end{itemize}

\subsection{Contents}

For the beta release and LPR, we will aim for only two packages: aips and
synthesis, though single dish (the dish package) might be included if possible.

\subsubsection{package=aips}

\begin{description}
\item [module=input/output ($\beta$)]: textio allows reading and writing AIPS++ tables to and from ascii
format tables.
\begin{itemize}
\item   textio := aips.make\_textio(logger, host, root\_dir)
\item   textio.table2text(table\_handle\_or\_name, file\_root, recurse)
\item   textio.text2table(filename, new\_table\_name, recurse)
\end{itemize}
\status{Doug}{To start November 1}{Doug will be responsible for writing a 
user's guide to the use of AIPS++ for analysing/manipulating tables from
{\em e.g.} ascii, AIPS, MIRIAD}

\item[module=image ($\beta$)]: allows manipulation of AIPS++ images from within Glish

\begin{itemize}
\item   image := get\_image(filename, logger, displayer, plotter, host, root\_dir)
\item   image := make\_image(filename, shape, coords, make\_mask,
                                default\_value, tile\_shape, displayer, 
                                plotter, logger, host, root\_dir)
\item   image := image.clone(filename, root\_dir)
\item   image := image.project(template\_image, original\_image)
\item   image := image.fouriertransform(image, axes)
\item   image := image.convolve(image, psf, axes)
\item   image := image.subimage(blc, trc, keep, filename)
\item   region := image.make\_region(mask\_image, keep, filename)
\item   image.summary()
\item   image.statistics()
\item   image.display()
\item   array := image.get\_chunk(blc,trc)
\item   image.put\_chunk(blc,array)
\item   imcoord := image.coords()
\item   image.combine()
\item   image.moments()
\item   image.fit1d()
\item   image.imlin()
\end{itemize}
\status{Brian}{In progress, needs documentation}{Brian has written a DO
interface to use Neil's code. We definitely need some more capabilities
in Fourier transformation and convolution.}

\item[module=inputs ($\beta$)]: attachs inputs to a Glish object so that
control parameters may be set, displayed, stored, retrieved and defaulted.
\begin{itemize}
\item   inputs - a one level deep record (cannot add/remove fields)
with the current values
\item   inputs.defaults() = default values
\item   inputs.set(variablename, value);
\item   inputs.save(filename)
\item   inputs.get(filename)
\item   inputs.inputs();
\end{itemize}
\status{Tim}{Initial version done and documented}{Used in imager.g}

\item[module=measures]: various useful conversions

\begin{itemize}
\item   string\_date := measures.time(mjd, form="ymd clean"); ($\beta$)
\end{itemize}
\status{Wim}{In progress}{Wim has written initial DOs and GUIs for
both Units and Measures.}

\item[module=measurementset (raw data) ({\em LPR})]: MeasurementSet allows various 
operations on MeasurementSets.
\begin{itemize}
\item   ms := aips.get\_ms(filename, logger, host)
\item   ms.summary()
\item   ms.statistics()
\item   newms := ms.sort(keep)
\item   newms := ms.select(keep)
\item   ms.flag() ({\em LPR})
\item   ms.display() ({\em LPR})
\end{itemize}
\status{No-one}{Deferred}{}

\item[module=logging ($\beta$)]: logging of messages from apps and
from Glish

\begin{itemize}
\item   messages.log(message, severity, location)
\item   messages.print(how\_many, severity)
\item   messages.purge(how\_many, severity)
\item   table := messages.table()
\end{itemize}
\status{Brian}{Due Dec 4}{}

\item[module=table ($\beta$)]: allows access to Tables from within Glish.

\begin{itemize}
\item   gtable functionality recast as Glish object
\end{itemize}
\status{Tim}{Finished and documented}{}

\item[module=plotting (general) ($\beta$)]: plotting capabilities from within Glish.

\begin{itemize}
\item gplot1d: high-level plotting widget
\status{John/Paul}{Done}{object-style interface written by Tim, some
questions over running more than one at once.}
\item tkpgplot: a tk widget allowing PGPLOT format calls
\status{Yanti}{Started Sept 3, due to be finished mid December. Better
interface will probably have to wait until the {\em LPR}.}{}
\end{itemize}

\item[module=mathematical ($\beta$)]: various mathematical operations:

\begin{itemize}
\item   statistics, FFT/Convolution/shift, fit polynomials, 
\item   fit 1 and 2-d gaussians.
\item   ``IMFIT'' like fitter.
\end{itemize}
\status{Brian}{All done and documented except fitting}{Fitting deferred.}

\item[module=display ($\beta$)]: allows display of images and arrays from within
Glish:

\begin{itemize}
\item display:=displayobject(command, logger);
\item display.image(image);
\item display.array(array);
\item region:=display.getregion(ID);
\item editmaskimage(image, maskimage);
\item aipsview: support for AIPS++ images and coordinates
\item initialization better e.g. contour levels
\end{itemize}
\status{Tim}{Initial version done and documented}{Used in imager.g}

\item [module=utility ($\beta$)]

\begin{itemize}
\item utility:=utilityobject(logger);
\item filename:=utility.choosefile(initialfilename, prompt);
\item status:=utility.shellcmd(command, async=F, log=T);
\item All functions previously in gmisc
\end{itemize}
\status{Tim}{Initial version in place and documented}{Will fill up as time goes on}

\end{description}

\subsubsection{package=synthesis}

\begin{description}
\item[module=input/output ({\em LPR})]: Fillers to a MeasurementSet. These are site priorities 
rather than project wide.
\begin{itemize}
\item   atload
\status{Mark W}{Initial version done}{Needs more use.}
\item   bimafiller
\status{Peter}{Due Dec 1}{}
\item   vlafiller
\status{Gareth}{Inactive}{Needs someone with some time}
\item  uvfitsfiller
\status{Mark W}{Done}{Available as uvfits2ms global function}
\item   wsrtfiller
\status{Friso}{Prototype done, new version due}{}
\end{itemize}

\item[module=imager]: imager is an application object that provides access to
the synthesis processing in AIPS++. It is a glish closure object with inputs,
logging.

\begin{itemize}
\item improved performance ($\beta$)
\item control panel GUI including integrated editing ({\em LPR})
\item improved interactive flagging ($\beta$)
\item improved documentation ($\beta$)
\end{itemize}

We also need to make changes to the distributed objects used in imager.

\begin{itemize}
\item all DOs:
\begin{itemize}
\item multi-IF ($\beta$)
\item spectral line ($\beta$)
\status{Mark W}{Due Dec 1}{Will also improve performance}
\end{itemize}
\item flagger: 
\begin{itemize}
\item finish various approachs ($\beta$)
\status{Jan}{In progress}{}
\end{itemize}
\item calibrater: 
\begin{itemize}
\item cross calibration ($\beta$)
\item cal tables: define format, attach to MS, allow versioning ({\em LPR})
\item faster gain solutions ({\em LPR})
\end{itemize}
\item imagemaker:
\begin{itemize}
\item allow shifts of various sorts ($\beta$)
\end{itemize}
\item imagesolver: 
\begin{itemize}
\item fit to beam ($\beta$)
\item phase shifts [using Measures if possible] ($\beta$)
\item faster gridding ($\beta$) \status{Sanjay}{Temporary version done 96/10/1. Needs
better solution in long-term}.
\item gridding and FFTs for arbitrarily-sized images ({\em LPR})
\item Clark Clean ($\beta$)
\item mosaicing ({\em LPR})
\item Nonsymmetric Fourier plane sampling ({\em LPR})
\end{itemize}
\item weighter
\begin{itemize}
\item robust weighting ({\em LPR})
\end{itemize}
\end{itemize}

\item[module=simulating]: msmaker makes an MS from scratch. A higher priority is to
document corrupter: the inverse of the calibrater.
\begin{itemize}
\item   msmaker.initialize ({\em LPR})
\item   msmaker.set ({\em LPR})
\item   msmaker.write ({\em LPR})
\item   corrupter.initialize ($\beta$)
\item   corrupter.set ($\beta$)
\item   corrupter.corrupt ($\beta$)
\item   corrupter.write ($\beta$)
\end{itemize}
\status{Mark W}{DOs in place}{Needs documentation and perhaps a glish closure object
interface similar to imager.}

\end{description}

\subsection{Logistics}
\begin{itemize}
\item Code-copping of user level functionality (including .g and .help
files) has to be complete. We will move code into aips or synthesis or dish, {\em etc.} 
as appropriate
\status{Ralph}{On-going}{}
\item Alpha testing
\status{Tim}{On-going}{}
\item Selection of Beta Sites
\begin{itemize}
\item   We limit downloading to those we know about.
\item   Consortium sites not yet involved (e.g. NRAO 12m) 
\item   Members of AIPS++ Scientific and Technical Advisory Group 
\item   Targeted astronomical programmers 
\item   A few friends chosen to provide good testing of astronomical 
        applications (e.g. Groningen group, Grant Denn)
\end{itemize}
\status{Tim}{Now getting started}{}
\item Platforms supported: Gnu compiler on Solaris, HP/UX, SGI/IRIX, and
Dec Alpha ($\beta$). For {\em LPR}, we will support Linux as well.
\item Installation: For $\beta$, binaries and code tree and distribution of
patches. For {\em LPR}, binaries and/or code development system.
\item Distribution media: For $\beta$, ftp. For {\em LPR}, also CDROM.
\status{Pat}{Not yet started}{}
\end{itemize}

\section{Release V2}

V2 should contain substantially more functionality than will be
present in the LPR. With this release, it should be possible to go
end-to-end on reducing data from most consortium
telescopes. Scientific analysis should be aided by image analysis and
visualization capabilities.

\subsection{Goals}

\begin{itemize}
\item Provide fully-featured functionality in a number of different
areas: synthesis, image analysis, general tool-kit
\item Provide sub-set of initial functionality in other areas: image
visualization, VLBI processing, single dish,
\item Provide stable environment for code development,
\item Distribute contributed code. In the LPR, we should encourage
submission of code for both incorporation into the code of AIPS++, and
distribution as-is.
\end{itemize}

\subsection{Contents}

Here we show both new packages and additions to the packages delivered in the LPR.

\subsubsection{package=aips}

\begin{description}

\item[module=mathematics]:
\begin{itemize}
\item Optimization support
\item Linear Algebra support (including deconvolution)
\end{itemize}

\item[module=plotting (general) ]: plotting capabilities from within Glish.

\begin{itemize}
\item Better plotting interface using tkpgplot
\end{itemize}

\item[module=mathematical ]: various mathematical operations:

\begin{itemize}
\item   fit 1 and 2-d gaussians.
\item   ``IMFIT'' like fitter.
\end{itemize}

\item[module=display ]: allows display of images and arrays from within
Glish. Supports new visualization toolkit. Allows visualization of
$n>3$ images.

\begin{itemize}
\item display.visualize(image);
\end{itemize}

\end{description}

\subsubsection{package=dish}

\begin{description}
\item[module=input/output]: Fillers to a MeasurementSet. These are site priorities 
rather than project wide.
\begin{itemize}
\item gbtfiller
\item 12mfiller
\end{itemize}
\item[module=sdcalc]: a gui-based glish app for analysis of single
dish spectra data.
\item[module=sdimager]: a package for single dish imaging {\em e.g.}
On-The-Fly imaging, Beam-switching, etc.
\end{description}

\subsubsection{package=synthesis}

\begin{description}
\item[module=input/output]: Fillers to a MeasurementSet. These are site priorities 
rather than project wide.
\begin{itemize}
\item  vlbafiller
\end{itemize}

\item[module=imager]: 

\begin{itemize}
\item improved performance
\item state memory to minimize work
\item multiple control panels for different contexts
\item MEM and Pixons
\item gridding and FFTs for arbitrarily-sized images
\item wide-field
\item multi-field processing
\item Nonsymmetric Fourier plane sampling
\end{itemize}

\item[module=simulating]: Full-up simulation of an observing procedure
for some consortium telescopes.

\end{description}

\end{document}

