
<change id=0029>
 <author> Mark Holdaway </author>
 <date> 2000/08/03 </date>
 <avers> 1.4 </avers>
 <area> Tool </area>
 <package> appsglish </package>
 <module> imager </module>
 <type> Code Documentation </type>
 <category> Change </category>
 <defects>  </defects>
 <summary>
new setmfcontrol() function for controlling mf and wf deconvolutions
 </summary>
 <description>
Previously, cycle control parameters cluttered up the interface to the
clean and mem functions.  Now they have been moved to the setmfcontrol()
function.
 </description>
</change>

<change id=0030>
 <author> Mark Holdaway </author>
 <date> 2000/08/04 </date>
 <avers> 1.4 </avers>
 <area> Tool </area>
 <package> appsglish </package>
 <module> imager </module>
 <type> Code </type>
 <category> Bugfix </category>
 <defects> AOCso01378 </defects>
 <summary>
Large images didn't work in imager's mfmultiscale algorithm
 </summary>
 <description>
The specific problem was that images of size 1024 square or larger failed
in imager's mfmultiscale algorithm.  This was a symptom of a more general
problem, that large lattices (and therefore images as well) did not correctly perform lattice expression language's max() function, which 
could be used in many places besides the imager tool.

Please be adviced that past processing of large images could be incorrect,
but the errors are likely to have been catastrophic rather than subtle.
 </description>
</change>

<change id=0092>
 <author> Tim Cornwell </author>
 <date> 2001/04/09 </date>
 <avers> 1.5 </avers>
 <area> Tool </area>
 <package> appsglish </package>
 <module> imager </module>
 <type> Code Documentation </type>
 <category> Change </category>
 <defects>  </defects>
 <summary>
Added tests for Single dish imaging
 </summary>
 <description>

I've added a test for single dish imaging: imagersdtest. This fills
a single dish measurementset from the GBT FITS files in the data
repository, and then makes the image. The single dish measurement
set is also calibrated using a simple method. This should be replaced
once we have SD calibration in place
 </description>
</change>

<change id=0110>
 <author> Tim Cornwell </author>
 <date> 2001/11/29 </date>
 <avers> 1.7 </avers>
 <area> Tool </area>
 <package> appsglish </package>
 <module> imager </module>
 <type> Code Documentation </type>
 <category> New </category>
 <defects>  </defects>
 <summary>
Support for near field imaging
 </summary>
 <description>

imager now supports near field imaging. imager.setimage takes a distance to the object which is used for refocusing the array to that distance using the appropriate delay correction. The distance is attached to the image as miscInfo. The deconvolution methods and makeimage should all work correctly with this capability. While I have tested the algorithm with simulated data, I have not yet been able to find a good real world test case. Hence the sign of the phase correction may be inverted. If you try this out on real data, try both positive and negative distances.

The default is that no refocus is applied (of course).

Equivalent changes to simulator will be checked in shortly.
 </description>
</change>

<change id=0114>
 <author> Athol Kemball </author>
 <date> 2002/01/18 </date>
 <avers> 1.7 </avers>
 <area> Tool </area>
 <package> appsglish </package>
 <module> imager </module>
 <type> Code </type>
 <category> New </category>
 <defects>  </defects>
 <summary>
Add optional compression of imager scratch columns
 </summary>
 <description>

Optional compression of imager scratch columns is now
possible using a "compress" parameter in imager()
or imager.open(). Set to default F for now. This uses
CompressComplex and CompressFloat for MODEL_DATA,
CORRECTED_DATA and IMAGING_WEIGHT.
 </description>
</change>

<change id=0154>
 <author> Tim Cornwell </author>
 <date> 2003/07/16 </date>
 <avers> 1.8 </avers>
 <area> Tool </area>
 <package> appsglish </package>
 <module> imager </module>
 <type> Code Documentation </type>
 <category> New </category>
 <defects>  </defects>
 <summary>
Image-based primary beam models can now be used
 </summary>
 <description>

The primary beam correction routines will now accept the Jones matrix
in image form. Two images may be specified using vpmanager.setpbimage.
These are the real and imaginary parts of the E jones matrix, in Az-El
coordinates. The primary beam will be converted to Ra,Dec appropriately
(i.e. according to the parallactic angle) and corrected during 
deconvolution. imager.pb now also takes a parallactic angle argument.
 </description>
</change>
