# atomsdisplayp.g: help atoms for the displayp package. 
# Copyright (C) 1999,2000
# Associated Universities, Inc. Washington DC, USA.
#
# This library is free software; you can redistribute it and/or modify it
# under the terms of the GNU Library General Public License as published by
# the Free Software Foundation; either version 2 of the License, or (at your
# option) any later version.
#
# This library is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Library General Public
# License for more details.
#
# You should have received a copy of the GNU Library General Public License
# along with this library; if not, write to the Free Software Foundation,
# Inc., 675 Massachusetts Ave, Cambridge, MA 02139, USA.
#
# Correspondence concerning AIPS++ should be addressed as follows:
#        Internet email: aips2-request@nrao.edu.
#        Postal address: AIPS++ Project Office
#                        National Radio Astronomy Observatory
#                        520 Edgemont Road
#                        Charlottesville, VA 22903-2475 USA
#
# $Id: atomsdisplayp.g,v 19.1 2004/08/25 02:44:00 cvsmgr Exp $

pragma include once
val help::pkg.displayp := [=];

help::pkg.displayp.aipsview := [=];
help::pkg.displayp.aipsview.objs := [=];
help::pkg.displayp.aipsview.funs := [=];
help::pkg.displayp.aipsview.d := 'Package for display and plotting using aipsview';
help::pkg.displayp.aipsview.objs.display := [=];
help::pkg.displayp.aipsview.objs.display.m := [=];
help::pkg.displayp.aipsview.objs.display.d := 'Display images and Glish arrays';
help::pkg.displayp.aipsview.objs.display.c.display := [=];
help::pkg.displayp.aipsview.objs.display.c.display.d := 'Construct a display tool';
help::pkg.displayp.aipsview.objs.display.c.display.s := 'display()';
help::pkg.displayp.aipsview.objs.display.m.initialize := [=];
help::pkg.displayp.aipsview.objs.display.m.initialize.d := 'Start the aipsview process';
help::pkg.displayp.aipsview.objs.display.m.initialize.s := 'initialize()';
help::pkg.displayp.aipsview.objs.display.m.summary := [=];
help::pkg.displayp.aipsview.objs.display.m.summary.d := 'Generate a summary of the data being displayed';
help::pkg.displayp.aipsview.objs.display.m.summary.s := 'summary()';
help::pkg.displayp.aipsview.objs.display.m.image := [=];
help::pkg.displayp.aipsview.objs.display.m.image.d := 'Display an \aipspp or FITS image';
help::pkg.displayp.aipsview.objs.display.m.image.a.name := [=];
help::pkg.displayp.aipsview.objs.display.m.image.a.name.d := 'Name of image';
help::pkg.displayp.aipsview.objs.display.m.image.a.name.def := '';
help::pkg.displayp.aipsview.objs.display.m.image.a.name.a := 'table name or file name (for FITS files)';
help::pkg.displayp.aipsview.objs.display.m.image.a.usefits := [=];
help::pkg.displayp.aipsview.objs.display.m.image.a.usefits.d := 'Convert to FITS before displaying?';
help::pkg.displayp.aipsview.objs.display.m.image.a.usefits.def := 'F';
help::pkg.displayp.aipsview.objs.display.m.image.a.usefits.a := 'Bool';
help::pkg.displayp.aipsview.objs.display.m.image.s := 'image(name, usefits)';
help::pkg.displayp.aipsview.objs.display.m.array := [=];
help::pkg.displayp.aipsview.objs.display.m.array.d := 'Display a Glish array';
help::pkg.displayp.aipsview.objs.display.m.array.s := 'array()';
help::pkg.displayp.aipsview.objs.display.m.makemask := [=];
help::pkg.displayp.aipsview.objs.display.m.makemask.d := 'Make a mask image interactively';
help::pkg.displayp.aipsview.objs.display.m.makemask.a.guideimage := [=];
help::pkg.displayp.aipsview.objs.display.m.makemask.a.guideimage.d := 'Name of the guide image';
help::pkg.displayp.aipsview.objs.display.m.makemask.a.guideimage.def := '';
help::pkg.displayp.aipsview.objs.display.m.makemask.a.guideimage.a := 'name of FITS or \aipspp image';
help::pkg.displayp.aipsview.objs.display.m.makemask.s := 'makemask(guideimage)';
help::pkg.displayp.aipsview.objs.display.m.getregion := [=];
help::pkg.displayp.aipsview.objs.display.m.getregion.d := 'Return a region of the image selected interactively';
help::pkg.displayp.aipsview.objs.display.m.getregion.a.imageID := [=];
help::pkg.displayp.aipsview.objs.display.m.getregion.a.imageID.d := 'Image ID as returned by the image,array or summary functions';
help::pkg.displayp.aipsview.objs.display.m.getregion.a.imageID.def := '';
help::pkg.displayp.aipsview.objs.display.m.getregion.a.imageID.a := 'Image ID';
help::pkg.displayp.aipsview.objs.display.m.getregion.s := 'getregion(imageID)';
help::pkg.displayp.aipsview.objs.display.m.getlocation := [=];
help::pkg.displayp.aipsview.objs.display.m.getlocation.d := 'Return parameters of a pixel selected interactively';
help::pkg.displayp.aipsview.objs.display.m.getlocation.a.imageID := [=];
help::pkg.displayp.aipsview.objs.display.m.getlocation.a.imageID.d := 'Image ID as returned by the image,array or summary functions';
help::pkg.displayp.aipsview.objs.display.m.getlocation.a.imageID.def := '';
help::pkg.displayp.aipsview.objs.display.m.getlocation.a.imageID.a := 'Image ID';
help::pkg.displayp.aipsview.objs.display.m.getlocation.s := 'getlocation(imageID)';

help::pkg.displayp.plotter := [=];
help::pkg.displayp.plotter.objs := [=];
help::pkg.displayp.plotter.funs := [=];
help::pkg.displayp.plotter.d := 'module for Plotting';
help::pkg.displayp.plotter.objs.plotter := [=];
help::pkg.displayp.plotter.objs.plotter.m := [=];
help::pkg.displayp.plotter.objs.plotter.d := 'Simple(minded) plotting';
help::pkg.displayp.plotter.objs.plotter.c.plotter := [=];
help::pkg.displayp.plotter.objs.plotter.c.plotter.d := 'Construct plotter object';
help::pkg.displayp.plotter.objs.plotter.c.plotter.a.async := [=];
help::pkg.displayp.plotter.objs.plotter.c.plotter.a.async.d := 'Execute commands asynchronously?';
help::pkg.displayp.plotter.objs.plotter.c.plotter.a.async.def := 'F';
help::pkg.displayp.plotter.objs.plotter.c.plotter.a.async.a := 'Bool';
help::pkg.displayp.plotter.objs.plotter.c.plotter.s := 'plotter(async)';
help::pkg.displayp.plotter.objs.plotter.m.summary := [=];
help::pkg.displayp.plotter.objs.plotter.m.summary.d := 'Summarize plots';
help::pkg.displayp.plotter.objs.plotter.m.summary.s := 'summary()';
help::pkg.displayp.plotter.objs.plotter.m.lastreturn := [=];
help::pkg.displayp.plotter.objs.plotter.m.lastreturn.d := 'Return last return';
help::pkg.displayp.plotter.objs.plotter.m.lastreturn.s := 'lastreturn()';
help::pkg.displayp.plotter.objs.plotter.m.drawblockenter := [=];
help::pkg.displayp.plotter.objs.plotter.m.drawblockenter.d := 'Start buffering plot commands';
help::pkg.displayp.plotter.objs.plotter.m.drawblockenter.s := 'drawblockenter()';
help::pkg.displayp.plotter.objs.plotter.m.drawblockexit := [=];
help::pkg.displayp.plotter.objs.plotter.m.drawblockexit.d := 'Stop buffering plot commands and flush buffer';
help::pkg.displayp.plotter.objs.plotter.m.drawblockexit.s := 'drawblockexit()';
help::pkg.displayp.plotter.objs.plotter.m.plotxy := [=];
help::pkg.displayp.plotter.objs.plotter.m.plotxy.d := 'plot x versus y';
help::pkg.displayp.plotter.objs.plotter.m.plotxy.a.x := [=];
help::pkg.displayp.plotter.objs.plotter.m.plotxy.a.x.d := 'X vector';
help::pkg.displayp.plotter.objs.plotter.m.plotxy.a.x.def := '';
help::pkg.displayp.plotter.objs.plotter.m.plotxy.a.x.a := 'vector';
help::pkg.displayp.plotter.objs.plotter.m.plotxy.a.y := [=];
help::pkg.displayp.plotter.objs.plotter.m.plotxy.a.y.d := 'Y vector';
help::pkg.displayp.plotter.objs.plotter.m.plotxy.a.y.def := '';
help::pkg.displayp.plotter.objs.plotter.m.plotxy.a.y.a := 'vector';
help::pkg.displayp.plotter.objs.plotter.m.plotxy.a.dataSetName := [=];
help::pkg.displayp.plotter.objs.plotter.m.plotxy.a.dataSetName.d := 'Descriptive name';
help::pkg.displayp.plotter.objs.plotter.m.plotxy.a.dataSetName.def := '';
help::pkg.displayp.plotter.objs.plotter.m.plotxy.a.dataSetName.a := 'String';
help::pkg.displayp.plotter.objs.plotter.m.plotxy.a.style := [=];
help::pkg.displayp.plotter.objs.plotter.m.plotxy.a.style.d := 'Style of line';
help::pkg.displayp.plotter.objs.plotter.m.plotxy.a.style.def := 'linespoints';
help::pkg.displayp.plotter.objs.plotter.m.plotxy.a.style.a := 'linespoints|lines|points|histogram';
help::pkg.displayp.plotter.objs.plotter.m.plotxy.s := 'plotxy(x, y, dataSetName, style)';
help::pkg.displayp.plotter.objs.plotter.m.plotxy2 := [=];
help::pkg.displayp.plotter.objs.plotter.m.plotxy2.d := 'plot x versus y, y relative to second y axis';
help::pkg.displayp.plotter.objs.plotter.m.plotxy2.a.x := [=];
help::pkg.displayp.plotter.objs.plotter.m.plotxy2.a.x.d := 'X vector';
help::pkg.displayp.plotter.objs.plotter.m.plotxy2.a.x.def := '';
help::pkg.displayp.plotter.objs.plotter.m.plotxy2.a.x.a := 'vector';
help::pkg.displayp.plotter.objs.plotter.m.plotxy2.a.y := [=];
help::pkg.displayp.plotter.objs.plotter.m.plotxy2.a.y.d := 'Y vector';
help::pkg.displayp.plotter.objs.plotter.m.plotxy2.a.y.def := '';
help::pkg.displayp.plotter.objs.plotter.m.plotxy2.a.y.a := 'vector';
help::pkg.displayp.plotter.objs.plotter.m.plotxy2.a.dataSetName := [=];
help::pkg.displayp.plotter.objs.plotter.m.plotxy2.a.dataSetName.d := 'Descriptive name';
help::pkg.displayp.plotter.objs.plotter.m.plotxy2.a.dataSetName.def := '';
help::pkg.displayp.plotter.objs.plotter.m.plotxy2.a.dataSetName.a := 'String';
help::pkg.displayp.plotter.objs.plotter.m.plotxy2.a.style := [=];
help::pkg.displayp.plotter.objs.plotter.m.plotxy2.a.style.d := 'Style of line';
help::pkg.displayp.plotter.objs.plotter.m.plotxy2.a.style.def := 'linespoints';
help::pkg.displayp.plotter.objs.plotter.m.plotxy2.a.style.a := 'linespoints|lines|points|histogram';
help::pkg.displayp.plotter.objs.plotter.m.plotxy2.s := 'plotxy2(x, y, dataSetName, style)';
help::pkg.displayp.plotter.objs.plotter.m.ploty := [=];
help::pkg.displayp.plotter.objs.plotter.m.ploty.d := 'plot y, with implicit x';
help::pkg.displayp.plotter.objs.plotter.m.ploty.a.y := [=];
help::pkg.displayp.plotter.objs.plotter.m.ploty.a.y.d := 'Y vector';
help::pkg.displayp.plotter.objs.plotter.m.ploty.a.y.def := '';
help::pkg.displayp.plotter.objs.plotter.m.ploty.a.y.a := 'vector';
help::pkg.displayp.plotter.objs.plotter.m.ploty.a.dataSetName := [=];
help::pkg.displayp.plotter.objs.plotter.m.ploty.a.dataSetName.d := 'Descriptive name';
help::pkg.displayp.plotter.objs.plotter.m.ploty.a.dataSetName.def := '';
help::pkg.displayp.plotter.objs.plotter.m.ploty.a.dataSetName.a := 'String';
help::pkg.displayp.plotter.objs.plotter.m.ploty.a.style := [=];
help::pkg.displayp.plotter.objs.plotter.m.ploty.a.style.d := 'Style of line';
help::pkg.displayp.plotter.objs.plotter.m.ploty.a.style.def := 'linespoints';
help::pkg.displayp.plotter.objs.plotter.m.ploty.a.style.a := 'linespoints|lines|points|histogram';
help::pkg.displayp.plotter.objs.plotter.m.ploty.s := 'ploty(y, dataSetName, style)';
help::pkg.displayp.plotter.objs.plotter.m.timey := [=];
help::pkg.displayp.plotter.objs.plotter.m.timey.d := 'plot x versus y, where x is expected in time units(s)';
help::pkg.displayp.plotter.objs.plotter.m.timey.a.x := [=];
help::pkg.displayp.plotter.objs.plotter.m.timey.a.x.d := 'X vector';
help::pkg.displayp.plotter.objs.plotter.m.timey.a.x.def := '';
help::pkg.displayp.plotter.objs.plotter.m.timey.a.x.a := 'vector';
help::pkg.displayp.plotter.objs.plotter.m.timey.a.y := [=];
help::pkg.displayp.plotter.objs.plotter.m.timey.a.y.d := 'Y vector';
help::pkg.displayp.plotter.objs.plotter.m.timey.a.y.def := '';
help::pkg.displayp.plotter.objs.plotter.m.timey.a.y.a := 'vector';
help::pkg.displayp.plotter.objs.plotter.m.timey.a.dataSetName := [=];
help::pkg.displayp.plotter.objs.plotter.m.timey.a.dataSetName.d := 'Descriptive name';
help::pkg.displayp.plotter.objs.plotter.m.timey.a.dataSetName.def := '';
help::pkg.displayp.plotter.objs.plotter.m.timey.a.dataSetName.a := 'String';
help::pkg.displayp.plotter.objs.plotter.m.timey.a.style := [=];
help::pkg.displayp.plotter.objs.plotter.m.timey.a.style.d := 'Style of line';
help::pkg.displayp.plotter.objs.plotter.m.timey.a.style.def := 'linespoints';
help::pkg.displayp.plotter.objs.plotter.m.timey.a.style.a := 'linespoints|lines|points|histogram';
help::pkg.displayp.plotter.objs.plotter.m.timey.s := 'timey(x, y, dataSetName, style)';
help::pkg.displayp.plotter.objs.plotter.m.timey2 := [=];
help::pkg.displayp.plotter.objs.plotter.m.timey2.d := 'plot x versus y, y relative to second y axis (x is again in time units(s)';
help::pkg.displayp.plotter.objs.plotter.m.timey2.a.x := [=];
help::pkg.displayp.plotter.objs.plotter.m.timey2.a.x.d := 'X vector';
help::pkg.displayp.plotter.objs.plotter.m.timey2.a.x.def := '';
help::pkg.displayp.plotter.objs.plotter.m.timey2.a.x.a := 'vector';
help::pkg.displayp.plotter.objs.plotter.m.timey2.a.y := [=];
help::pkg.displayp.plotter.objs.plotter.m.timey2.a.y.d := 'Y vector';
help::pkg.displayp.plotter.objs.plotter.m.timey2.a.y.def := '';
help::pkg.displayp.plotter.objs.plotter.m.timey2.a.y.a := 'vector';
help::pkg.displayp.plotter.objs.plotter.m.timey2.a.dataSetName := [=];
help::pkg.displayp.plotter.objs.plotter.m.timey2.a.dataSetName.d := 'Descriptive name';
help::pkg.displayp.plotter.objs.plotter.m.timey2.a.dataSetName.def := '';
help::pkg.displayp.plotter.objs.plotter.m.timey2.a.dataSetName.a := 'String';
help::pkg.displayp.plotter.objs.plotter.m.timey2.a.style := [=];
help::pkg.displayp.plotter.objs.plotter.m.timey2.a.style.d := 'Style of line';
help::pkg.displayp.plotter.objs.plotter.m.timey2.a.style.def := 'linespoints';
help::pkg.displayp.plotter.objs.plotter.m.timey2.a.style.a := 'linespoints|lines|points|histogram';
help::pkg.displayp.plotter.objs.plotter.m.timey2.s := 'timey2(x, y, dataSetName, style)';
help::pkg.displayp.plotter.objs.plotter.m.clear := [=];
help::pkg.displayp.plotter.objs.plotter.m.clear.d := 'erases the current plot';
help::pkg.displayp.plotter.objs.plotter.m.clear.s := 'clear()';
help::pkg.displayp.plotter.objs.plotter.m.marker := [=];
help::pkg.displayp.plotter.objs.plotter.m.marker.d := 'Switch on lines to follow the cursor';
help::pkg.displayp.plotter.objs.plotter.m.marker.a.markerType := [=];
help::pkg.displayp.plotter.objs.plotter.m.marker.a.markerType.d := 'Type of lines to follow the cursor';
help::pkg.displayp.plotter.objs.plotter.m.marker.a.markerType.def := '';
help::pkg.displayp.plotter.objs.plotter.m.marker.a.markerType.a := '"x"|"y"|"xy"|"none"';
help::pkg.displayp.plotter.objs.plotter.m.marker.s := 'marker(markerType)';
help::pkg.displayp.plotter.objs.plotter.m.numberofselections := [=];
help::pkg.displayp.plotter.objs.plotter.m.numberofselections.d := 'returns the number of interactively designated regions of interest';
help::pkg.displayp.plotter.objs.plotter.m.numberofselections.s := 'numberofselections()';
help::pkg.displayp.plotter.objs.plotter.m.getselection := [=];
help::pkg.displayp.plotter.objs.plotter.m.getselection.d := 'returns a record containing selected x and y vectors';
help::pkg.displayp.plotter.objs.plotter.m.getselection.s := 'getselection()';
help::pkg.displayp.plotter.objs.plotter.m.getselectionmask := [=];
help::pkg.displayp.plotter.objs.plotter.m.getselectionmask.d := 'returns a record containing all x and y vectors and mask of points';
help::pkg.displayp.plotter.objs.plotter.m.getselectionmask.s := 'getselectionmask()';
help::pkg.displayp.plotter.objs.plotter.m.getx := [=];
help::pkg.displayp.plotter.objs.plotter.m.getx.d := 'returns a vector of all x values in the dataset';
help::pkg.displayp.plotter.objs.plotter.m.getx.a.dataset := [=];
help::pkg.displayp.plotter.objs.plotter.m.getx.a.dataset.d := 'Data Set';
help::pkg.displayp.plotter.objs.plotter.m.getx.a.dataset.def := '';
help::pkg.displayp.plotter.objs.plotter.m.getx.a.dataset.a := 'Data Set Number (0,1,2,..)';
help::pkg.displayp.plotter.objs.plotter.m.getx.s := 'getx(dataset)';
help::pkg.displayp.plotter.objs.plotter.m.gety := [=];
help::pkg.displayp.plotter.objs.plotter.m.gety.d := 'returns a vector of all y values in the dataset';
help::pkg.displayp.plotter.objs.plotter.m.gety.a.dataset := [=];
help::pkg.displayp.plotter.objs.plotter.m.gety.a.dataset.d := 'Data Set';
help::pkg.displayp.plotter.objs.plotter.m.gety.a.dataset.def := '';
help::pkg.displayp.plotter.objs.plotter.m.gety.a.dataset.a := 'Data Set Number (0,1,2,..)';
help::pkg.displayp.plotter.objs.plotter.m.gety.s := 'gety(dataset)';
help::pkg.displayp.plotter.objs.plotter.m.setpointsize := [=];
help::pkg.displayp.plotter.objs.plotter.m.setpointsize.d := 'set point size';
help::pkg.displayp.plotter.objs.plotter.m.setpointsize.a.dataSetNumber := [=];
help::pkg.displayp.plotter.objs.plotter.m.setpointsize.a.dataSetNumber.d := 'Unique number identifying a data set';
help::pkg.displayp.plotter.objs.plotter.m.setpointsize.a.dataSetNumber.def := '';
help::pkg.displayp.plotter.objs.plotter.m.setpointsize.a.dataSetNumber.a := 'Int';
help::pkg.displayp.plotter.objs.plotter.m.setpointsize.a.size := [=];
help::pkg.displayp.plotter.objs.plotter.m.setpointsize.a.size.d := 'Point size';
help::pkg.displayp.plotter.objs.plotter.m.setpointsize.a.size.def := '';
help::pkg.displayp.plotter.objs.plotter.m.setpointsize.a.size.a := 'Int';
help::pkg.displayp.plotter.objs.plotter.m.setpointsize.s := 'setpointsize(dataSetNumber, size)';
help::pkg.displayp.plotter.objs.plotter.m.setpointcolor := [=];
help::pkg.displayp.plotter.objs.plotter.m.setpointcolor.d := 'set point color';
help::pkg.displayp.plotter.objs.plotter.m.setpointcolor.a.dataSetNumber := [=];
help::pkg.displayp.plotter.objs.plotter.m.setpointcolor.a.dataSetNumber.d := 'Unique number identifying a data set';
help::pkg.displayp.plotter.objs.plotter.m.setpointcolor.a.dataSetNumber.def := '';
help::pkg.displayp.plotter.objs.plotter.m.setpointcolor.a.dataSetNumber.a := 'Int';
help::pkg.displayp.plotter.objs.plotter.m.setpointcolor.a.color := [=];
help::pkg.displayp.plotter.objs.plotter.m.setpointcolor.a.color.d := 'Color';
help::pkg.displayp.plotter.objs.plotter.m.setpointcolor.a.color.def := '';
help::pkg.displayp.plotter.objs.plotter.m.setpointcolor.a.color.a := 'String(red,green,blue,etc)';
help::pkg.displayp.plotter.objs.plotter.m.setpointcolor.s := 'setpointcolor(dataSetNumber, color)';
help::pkg.displayp.plotter.objs.plotter.m.setpointstyle := [=];
help::pkg.displayp.plotter.objs.plotter.m.setpointstyle.d := 'set point style';
help::pkg.displayp.plotter.objs.plotter.m.setpointstyle.a.dataSetNumber := [=];
help::pkg.displayp.plotter.objs.plotter.m.setpointstyle.a.dataSetNumber.d := 'Unique number identifying a data set';
help::pkg.displayp.plotter.objs.plotter.m.setpointstyle.a.dataSetNumber.def := '';
help::pkg.displayp.plotter.objs.plotter.m.setpointstyle.a.dataSetNumber.a := 'Int';
help::pkg.displayp.plotter.objs.plotter.m.setpointstyle.s := 'setpointstyle(dataSetNumber)';
help::pkg.displayp.plotter.objs.plotter.m.setlinecolor := [=];
help::pkg.displayp.plotter.objs.plotter.m.setlinecolor.d := 'set line color';
help::pkg.displayp.plotter.objs.plotter.m.setlinecolor.a.dataSetNumber := [=];
help::pkg.displayp.plotter.objs.plotter.m.setlinecolor.a.dataSetNumber.d := 'Unique number identifying a data set';
help::pkg.displayp.plotter.objs.plotter.m.setlinecolor.a.dataSetNumber.def := '';
help::pkg.displayp.plotter.objs.plotter.m.setlinecolor.a.dataSetNumber.a := 'Int';
help::pkg.displayp.plotter.objs.plotter.m.setlinecolor.a.color := [=];
help::pkg.displayp.plotter.objs.plotter.m.setlinecolor.a.color.d := 'Color';
help::pkg.displayp.plotter.objs.plotter.m.setlinecolor.a.color.def := '';
help::pkg.displayp.plotter.objs.plotter.m.setlinecolor.a.color.a := 'String("red", "blue", etc)';
help::pkg.displayp.plotter.objs.plotter.m.setlinecolor.s := 'setlinecolor(dataSetNumber, color)';
help::pkg.displayp.plotter.objs.plotter.m.setlinewidth := [=];
help::pkg.displayp.plotter.objs.plotter.m.setlinewidth.d := 'set line width';
help::pkg.displayp.plotter.objs.plotter.m.setlinewidth.a.dataSetNumber := [=];
help::pkg.displayp.plotter.objs.plotter.m.setlinewidth.a.dataSetNumber.d := 'Unique number identifying a data set';
help::pkg.displayp.plotter.objs.plotter.m.setlinewidth.a.dataSetNumber.def := '';
help::pkg.displayp.plotter.objs.plotter.m.setlinewidth.a.dataSetNumber.a := 'Int';
help::pkg.displayp.plotter.objs.plotter.m.setlinewidth.a.width := [=];
help::pkg.displayp.plotter.objs.plotter.m.setlinewidth.a.width.d := 'Width of line';
help::pkg.displayp.plotter.objs.plotter.m.setlinewidth.a.width.def := '';
help::pkg.displayp.plotter.objs.plotter.m.setlinewidth.a.width.a := 'Float';
help::pkg.displayp.plotter.objs.plotter.m.setlinewidth.s := 'setlinewidth(dataSetNumber, width)';
help::pkg.displayp.plotter.objs.plotter.m.setlinestyle := [=];
help::pkg.displayp.plotter.objs.plotter.m.setlinestyle.d := 'set line style';
help::pkg.displayp.plotter.objs.plotter.m.setlinestyle.a.dataSetNumber := [=];
help::pkg.displayp.plotter.objs.plotter.m.setlinestyle.a.dataSetNumber.d := 'Unique number identifying a data set';
help::pkg.displayp.plotter.objs.plotter.m.setlinestyle.a.dataSetNumber.def := '';
help::pkg.displayp.plotter.objs.plotter.m.setlinestyle.a.dataSetNumber.a := 'Int';
help::pkg.displayp.plotter.objs.plotter.m.setlinestyle.a.style := [=];
help::pkg.displayp.plotter.objs.plotter.m.setlinestyle.a.style.d := 'Style of line';
help::pkg.displayp.plotter.objs.plotter.m.setlinestyle.a.style.def := '';
help::pkg.displayp.plotter.objs.plotter.m.setlinestyle.a.style.a := '"none"|"solid"|"dashed"|"dotted"';
help::pkg.displayp.plotter.objs.plotter.m.setlinestyle.s := 'setlinestyle(dataSetNumber, style)';
help::pkg.displayp.plotter.objs.plotter.m.setxaxislabel := [=];
help::pkg.displayp.plotter.objs.plotter.m.setxaxislabel.d := 'set x axis label';
help::pkg.displayp.plotter.objs.plotter.m.setxaxislabel.a.label := [=];
help::pkg.displayp.plotter.objs.plotter.m.setxaxislabel.a.label.d := 'Axis label';
help::pkg.displayp.plotter.objs.plotter.m.setxaxislabel.a.label.def := '';
help::pkg.displayp.plotter.objs.plotter.m.setxaxislabel.a.label.a := 'any string';
help::pkg.displayp.plotter.objs.plotter.m.setxaxislabel.s := 'setxaxislabel(label)';
help::pkg.displayp.plotter.objs.plotter.m.setyaxislabel := [=];
help::pkg.displayp.plotter.objs.plotter.m.setyaxislabel.d := 'set y axis label';
help::pkg.displayp.plotter.objs.plotter.m.setyaxislabel.a.label := [=];
help::pkg.displayp.plotter.objs.plotter.m.setyaxislabel.a.label.d := 'Axis label';
help::pkg.displayp.plotter.objs.plotter.m.setyaxislabel.a.label.def := '';
help::pkg.displayp.plotter.objs.plotter.m.setyaxislabel.a.label.a := 'any string';
help::pkg.displayp.plotter.objs.plotter.m.setyaxislabel.s := 'setyaxislabel(label)';
help::pkg.displayp.plotter.objs.plotter.m.setxscale := [=];
help::pkg.displayp.plotter.objs.plotter.m.setxscale.d := 'modify the x axis so that it runs only from min to max';
help::pkg.displayp.plotter.objs.plotter.m.setxscale.a.min := [=];
help::pkg.displayp.plotter.objs.plotter.m.setxscale.a.min.d := 'Minimum plotted value on axis';
help::pkg.displayp.plotter.objs.plotter.m.setxscale.a.min.def := '';
help::pkg.displayp.plotter.objs.plotter.m.setxscale.a.min.a := 'Float';
help::pkg.displayp.plotter.objs.plotter.m.setxscale.a.max := [=];
help::pkg.displayp.plotter.objs.plotter.m.setxscale.a.max.d := 'Maximum plotted value on axis';
help::pkg.displayp.plotter.objs.plotter.m.setxscale.a.max.def := '';
help::pkg.displayp.plotter.objs.plotter.m.setxscale.a.max.a := 'Float';
help::pkg.displayp.plotter.objs.plotter.m.setxscale.s := 'setxscale(min, max)';
help::pkg.displayp.plotter.objs.plotter.m.setyscale := [=];
help::pkg.displayp.plotter.objs.plotter.m.setyscale.d := 'modify the y axis so that it runs only from min to max';
help::pkg.displayp.plotter.objs.plotter.m.setyscale.a.min := [=];
help::pkg.displayp.plotter.objs.plotter.m.setyscale.a.min.d := 'Minimum plotted value on axis';
help::pkg.displayp.plotter.objs.plotter.m.setyscale.a.min.def := '';
help::pkg.displayp.plotter.objs.plotter.m.setyscale.a.min.a := 'Float';
help::pkg.displayp.plotter.objs.plotter.m.setyscale.a.max := [=];
help::pkg.displayp.plotter.objs.plotter.m.setyscale.a.max.d := 'Maximum plotted value on axis';
help::pkg.displayp.plotter.objs.plotter.m.setyscale.a.max.def := '';
help::pkg.displayp.plotter.objs.plotter.m.setyscale.a.max.a := 'Float';
help::pkg.displayp.plotter.objs.plotter.m.setyscale.s := 'setyscale(min, max)';
help::pkg.displayp.plotter.objs.plotter.m.querydata := [=];
help::pkg.displayp.plotter.objs.plotter.m.querydata.d := 'describes current data sets and current selections';
help::pkg.displayp.plotter.objs.plotter.m.querydata.s := 'querydata()';
help::pkg.displayp.plotter.objs.plotter.m.reversex := [=];
help::pkg.displayp.plotter.objs.plotter.m.reversex.d := 'reverse current X axis';
help::pkg.displayp.plotter.objs.plotter.m.reversex.s := 'reversex()';
help::pkg.displayp.plotter.objs.plotter.m.reversey := [=];
help::pkg.displayp.plotter.objs.plotter.m.reversey.d := 'reverse current Y axis';
help::pkg.displayp.plotter.objs.plotter.m.reversey.s := 'reversey()';
help::pkg.displayp.plotter.objs.plotter.m.psprint := [=];
help::pkg.displayp.plotter.objs.plotter.m.psprint.d := ' print what is currently visible';
help::pkg.displayp.plotter.objs.plotter.m.psprint.a.gui := [=];
help::pkg.displayp.plotter.objs.plotter.m.psprint.a.gui.d := 'use gui';
help::pkg.displayp.plotter.objs.plotter.m.psprint.a.gui.def := 'T';
help::pkg.displayp.plotter.objs.plotter.m.psprint.a.gui.a := 'bool';
help::pkg.displayp.plotter.objs.plotter.m.psprint.s := 'psprint(gui)';
help::pkg.displayp.plotter.objs.plotter.m.psprinttofile := [=];
help::pkg.displayp.plotter.objs.plotter.m.psprinttofile.d := 'saves a postscript rendering of the currently visible plot';
help::pkg.displayp.plotter.objs.plotter.m.psprinttofile.a.filename := [=];
help::pkg.displayp.plotter.objs.plotter.m.psprinttofile.a.filename.d := 'File name to print to';
help::pkg.displayp.plotter.objs.plotter.m.psprinttofile.a.filename.def := '';
help::pkg.displayp.plotter.objs.plotter.m.psprinttofile.a.filename.a := 'valid file name';
help::pkg.displayp.plotter.objs.plotter.m.psprinttofile.s := 'psprinttofile(filename)';
help::pkg.displayp.plotter.objs.pgplotter := [=];
help::pkg.displayp.plotter.objs.pgplotter.m := [=];
help::pkg.displayp.plotter.objs.pgplotter.d := 'pgplotter tool';
help::pkg.displayp.plotter.objs.pgplotter.c.pgplotter := [=];
help::pkg.displayp.plotter.objs.pgplotter.c.pgplotter.d := 'Create a pgplotter tool in standalone GUI';
help::pkg.displayp.plotter.objs.pgplotter.c.pgplotter.a.plotfile := [=];
help::pkg.displayp.plotter.objs.pgplotter.c.pgplotter.a.plotfile.d := 'Name of the plot file to attach to';
help::pkg.displayp.plotter.objs.pgplotter.c.pgplotter.a.plotfile.def := 'aips++plot.plot';
help::pkg.displayp.plotter.objs.pgplotter.c.pgplotter.a.plotfile.a := 'string';
help::pkg.displayp.plotter.objs.pgplotter.c.pgplotter.a.size := [=];
help::pkg.displayp.plotter.objs.pgplotter.c.pgplotter.a.size.d := 'Size in pixels for the drawing area';
help::pkg.displayp.plotter.objs.pgplotter.c.pgplotter.a.size.def := '[600,450]';
help::pkg.displayp.plotter.objs.pgplotter.c.pgplotter.a.size.a := 'integer[2]';
help::pkg.displayp.plotter.objs.pgplotter.c.pgplotter.a.foreground := [=];
help::pkg.displayp.plotter.objs.pgplotter.c.pgplotter.a.foreground.d := 'Foreground colour';
help::pkg.displayp.plotter.objs.pgplotter.c.pgplotter.a.foreground.def := 'white';
help::pkg.displayp.plotter.objs.pgplotter.c.pgplotter.a.foreground.a := 'string (valid colour name';
help::pkg.displayp.plotter.objs.pgplotter.c.pgplotter.a.background := [=];
help::pkg.displayp.plotter.objs.pgplotter.c.pgplotter.a.background.d := 'Background colour';
help::pkg.displayp.plotter.objs.pgplotter.c.pgplotter.a.background.def := 'black';
help::pkg.displayp.plotter.objs.pgplotter.c.pgplotter.a.background.a := 'string (valid colour name)';
help::pkg.displayp.plotter.objs.pgplotter.c.pgplotter.a.mincolors := [=];
help::pkg.displayp.plotter.objs.pgplotter.c.pgplotter.a.mincolors.d := 'Minimum number of colors we require';
help::pkg.displayp.plotter.objs.pgplotter.c.pgplotter.a.mincolors.def := '2';
help::pkg.displayp.plotter.objs.pgplotter.c.pgplotter.a.mincolors.a := 'integer';
help::pkg.displayp.plotter.objs.pgplotter.c.pgplotter.a.maxcolors := [=];
help::pkg.displayp.plotter.objs.pgplotter.c.pgplotter.a.maxcolors.d := 'Maximum number of colors we will take';
help::pkg.displayp.plotter.objs.pgplotter.c.pgplotter.a.maxcolors.def := '100';
help::pkg.displayp.plotter.objs.pgplotter.c.pgplotter.a.maxcolors.a := 'integer';
help::pkg.displayp.plotter.objs.pgplotter.c.pgplotter.s := 'pgplotter(plotfile, size, foreground, background, mincolors, maxcolors)';
help::pkg.displayp.plotter.objs.pgplotter.m.commandgui := [=];
help::pkg.displayp.plotter.objs.pgplotter.m.commandgui.d := 'Create the add commands GUI';
help::pkg.displayp.plotter.objs.pgplotter.m.commandgui.s := 'commandgui()';
help::pkg.displayp.plotter.objs.pgplotter.m.editgui := [=];
help::pkg.displayp.plotter.objs.pgplotter.m.editgui.d := 'Create the add commands GUI';
help::pkg.displayp.plotter.objs.pgplotter.m.editgui.s := 'editgui()';
help::pkg.displayp.plotter.objs.pgplotter.m.addtool := [=];
help::pkg.displayp.plotter.objs.pgplotter.m.addtool.d := 'Add a tool to the Tools menu';
help::pkg.displayp.plotter.objs.pgplotter.m.addtool.a.name := [=];
help::pkg.displayp.plotter.objs.pgplotter.m.addtool.a.name.d := 'name of the tool';
help::pkg.displayp.plotter.objs.pgplotter.m.addtool.a.name.def := '';
help::pkg.displayp.plotter.objs.pgplotter.m.addtool.a.name.a := 'string';
help::pkg.displayp.plotter.objs.pgplotter.m.addtool.a.start := [=];
help::pkg.displayp.plotter.objs.pgplotter.m.addtool.a.start.d := 'function to call when the Tool GUI becomes visible';
help::pkg.displayp.plotter.objs.pgplotter.m.addtool.a.start.def := '';
help::pkg.displayp.plotter.objs.pgplotter.m.addtool.a.start.a := 'function';
help::pkg.displayp.plotter.objs.pgplotter.m.addtool.a.suspend := [=];
help::pkg.displayp.plotter.objs.pgplotter.m.addtool.a.suspend.d := 'function to call with the Tool GUI is dismissed';
help::pkg.displayp.plotter.objs.pgplotter.m.addtool.a.suspend.def := '';
help::pkg.displayp.plotter.objs.pgplotter.m.addtool.a.suspend.a := 'function';
help::pkg.displayp.plotter.objs.pgplotter.m.addtool.s := 'addtool(name, start, suspend)';
help::pkg.displayp.plotter.objs.pgplotter.m.tool := [=];
help::pkg.displayp.plotter.objs.pgplotter.m.tool.d := 'Show or hide a particular Tool';
help::pkg.displayp.plotter.objs.pgplotter.m.tool.a.name := [=];
help::pkg.displayp.plotter.objs.pgplotter.m.tool.a.name.d := 'name of the tool';
help::pkg.displayp.plotter.objs.pgplotter.m.tool.a.name.def := '';
help::pkg.displayp.plotter.objs.pgplotter.m.tool.a.name.a := 'string';
help::pkg.displayp.plotter.objs.pgplotter.m.tool.a.show := [=];
help::pkg.displayp.plotter.objs.pgplotter.m.tool.a.show.d := 'show or hide the tool';
help::pkg.displayp.plotter.objs.pgplotter.m.tool.a.show.def := 'T';
help::pkg.displayp.plotter.objs.pgplotter.m.tool.a.show.a := 'boolean';
help::pkg.displayp.plotter.objs.pgplotter.m.tool.s := 'tool(name, show)';
help::pkg.displayp.plotter.objs.pgplotter.m.done := [=];
help::pkg.displayp.plotter.objs.pgplotter.m.done.d := 'Finished with this tool';
help::pkg.displayp.plotter.objs.pgplotter.m.done.s := 'done()';
help::pkg.displayp.plotter.objs.pgplotwidget := [=];
help::pkg.displayp.plotter.objs.pgplotwidget.m := [=];
help::pkg.displayp.plotter.objs.pgplotwidget.d := 'pgplot widget for embedding in a larger GUI';
help::pkg.displayp.plotter.objs.pgplotwidget.c.pgplotwidget := [=];
help::pkg.displayp.plotter.objs.pgplotwidget.c.pgplotwidget.d := 'Create a pgplot widget in a supplied frame';
help::pkg.displayp.plotter.objs.pgplotwidget.c.pgplotwidget.a.parentframe := [=];
help::pkg.displayp.plotter.objs.pgplotwidget.c.pgplotwidget.a.parentframe.d := 'frame to attach to';
help::pkg.displayp.plotter.objs.pgplotwidget.c.pgplotwidget.a.parentframe.def := '';
help::pkg.displayp.plotter.objs.pgplotwidget.c.pgplotwidget.a.parentframe.a := 'frame';
help::pkg.displayp.plotter.objs.pgplotwidget.c.pgplotwidget.a.size := [=];
help::pkg.displayp.plotter.objs.pgplotwidget.c.pgplotwidget.a.size.d := 'Size in pixels for the drawing area';
help::pkg.displayp.plotter.objs.pgplotwidget.c.pgplotwidget.a.size.def := '[600,450]';
help::pkg.displayp.plotter.objs.pgplotwidget.c.pgplotwidget.a.size.a := 'integer[2]';
help::pkg.displayp.plotter.objs.pgplotwidget.c.pgplotwidget.a.foreground := [=];
help::pkg.displayp.plotter.objs.pgplotwidget.c.pgplotwidget.a.foreground.d := 'Foreground colour';
help::pkg.displayp.plotter.objs.pgplotwidget.c.pgplotwidget.a.foreground.def := 'white';
help::pkg.displayp.plotter.objs.pgplotwidget.c.pgplotwidget.a.foreground.a := 'string (valid colour name';
help::pkg.displayp.plotter.objs.pgplotwidget.c.pgplotwidget.a.background := [=];
help::pkg.displayp.plotter.objs.pgplotwidget.c.pgplotwidget.a.background.d := 'Background colour';
help::pkg.displayp.plotter.objs.pgplotwidget.c.pgplotwidget.a.background.def := 'black';
help::pkg.displayp.plotter.objs.pgplotwidget.c.pgplotwidget.a.background.a := 'string (valid colour name)';
help::pkg.displayp.plotter.objs.pgplotwidget.c.pgplotwidget.a.padx := [=];
help::pkg.displayp.plotter.objs.pgplotwidget.c.pgplotwidget.a.padx.d := 'x border padding in pixels';
help::pkg.displayp.plotter.objs.pgplotwidget.c.pgplotwidget.a.padx.def := '2';
help::pkg.displayp.plotter.objs.pgplotwidget.c.pgplotwidget.a.padx.a := 'float';
help::pkg.displayp.plotter.objs.pgplotwidget.c.pgplotwidget.a.pady := [=];
help::pkg.displayp.plotter.objs.pgplotwidget.c.pgplotwidget.a.pady.d := 'y border padding in pixels';
help::pkg.displayp.plotter.objs.pgplotwidget.c.pgplotwidget.a.pady.def := '2';
help::pkg.displayp.plotter.objs.pgplotwidget.c.pgplotwidget.a.pady.a := 'float';
help::pkg.displayp.plotter.objs.pgplotwidget.c.pgplotwidget.a.mincolors := [=];
help::pkg.displayp.plotter.objs.pgplotwidget.c.pgplotwidget.a.mincolors.d := 'Minimum number of colors we require';
help::pkg.displayp.plotter.objs.pgplotwidget.c.pgplotwidget.a.mincolors.def := '2';
help::pkg.displayp.plotter.objs.pgplotwidget.c.pgplotwidget.a.mincolors.a := 'integer';
help::pkg.displayp.plotter.objs.pgplotwidget.c.pgplotwidget.a.maxcolors := [=];
help::pkg.displayp.plotter.objs.pgplotwidget.c.pgplotwidget.a.maxcolors.d := 'Maximum number of colors we will take';
help::pkg.displayp.plotter.objs.pgplotwidget.c.pgplotwidget.a.maxcolors.def := '100';
help::pkg.displayp.plotter.objs.pgplotwidget.c.pgplotwidget.a.maxcolors.a := 'integer';
help::pkg.displayp.plotter.objs.pgplotwidget.c.pgplotwidget.a.havemessages := [=];
help::pkg.displayp.plotter.objs.pgplotwidget.c.pgplotwidget.a.havemessages.d := 'Display messages on the screen?';
help::pkg.displayp.plotter.objs.pgplotwidget.c.pgplotwidget.a.havemessages.def := 'T';
help::pkg.displayp.plotter.objs.pgplotwidget.c.pgplotwidget.a.havemessages.a := 'boolean';
help::pkg.displayp.plotter.objs.pgplotwidget.c.pgplotwidget.s := 'pgplotwidget(parentframe, size, foreground, background, padx, pady, mincolors, maxcolors, havemessages)';
help::pkg.displayp.plotter.objs.pgplotwidget.m.plotxy := [=];
help::pkg.displayp.plotter.objs.pgplotwidget.m.plotxy.d := 'Plot X,Y vectors as lines or points with auto-scaling';
help::pkg.displayp.plotter.objs.pgplotwidget.m.plotxy.a.x := [=];
help::pkg.displayp.plotter.objs.pgplotwidget.m.plotxy.a.x.d := 'X values';
help::pkg.displayp.plotter.objs.pgplotwidget.m.plotxy.a.x.def := '';
help::pkg.displayp.plotter.objs.pgplotwidget.m.plotxy.a.x.a := 'non-complex numeric array';
help::pkg.displayp.plotter.objs.pgplotwidget.m.plotxy.a.y := [=];
help::pkg.displayp.plotter.objs.pgplotwidget.m.plotxy.a.y.d := 'y values';
help::pkg.displayp.plotter.objs.pgplotwidget.m.plotxy.a.y.def := '';
help::pkg.displayp.plotter.objs.pgplotwidget.m.plotxy.a.y.a := 'non-complex numeric array';
help::pkg.displayp.plotter.objs.pgplotwidget.m.plotxy.a.plotlines := [=];
help::pkg.displayp.plotter.objs.pgplotwidget.m.plotxy.a.plotlines.d := 'Plot lines or points?';
help::pkg.displayp.plotter.objs.pgplotwidget.m.plotxy.a.plotlines.def := 'T (lines)';
help::pkg.displayp.plotter.objs.pgplotwidget.m.plotxy.a.plotlines.a := 'boolean';
help::pkg.displayp.plotter.objs.pgplotwidget.m.plotxy.a.newplot := [=];
help::pkg.displayp.plotter.objs.pgplotwidget.m.plotxy.a.newplot.d := 'Start a new plot or overplot';
help::pkg.displayp.plotter.objs.pgplotwidget.m.plotxy.a.newplot.def := 'T (new plot)';
help::pkg.displayp.plotter.objs.pgplotwidget.m.plotxy.a.newplot.a := 'boolean';
help::pkg.displayp.plotter.objs.pgplotwidget.m.plotxy.a.xtitle := [=];
help::pkg.displayp.plotter.objs.pgplotwidget.m.plotxy.a.xtitle.d := 'x axis title (ignored if newplot is F)';
help::pkg.displayp.plotter.objs.pgplotwidget.m.plotxy.a.xtitle.def := 'none';
help::pkg.displayp.plotter.objs.pgplotwidget.m.plotxy.a.xtitle.a := 'string';
help::pkg.displayp.plotter.objs.pgplotwidget.m.plotxy.a.ytitle := [=];
help::pkg.displayp.plotter.objs.pgplotwidget.m.plotxy.a.ytitle.d := 'y axis title (ignored if newplot is F)';
help::pkg.displayp.plotter.objs.pgplotwidget.m.plotxy.a.ytitle.def := 'none';
help::pkg.displayp.plotter.objs.pgplotwidget.m.plotxy.a.ytitle.a := 'string';
help::pkg.displayp.plotter.objs.pgplotwidget.m.plotxy.a.title := [=];
help::pkg.displayp.plotter.objs.pgplotwidget.m.plotxy.a.title.d := 'overall plot title (ignored if newplot is F)';
help::pkg.displayp.plotter.objs.pgplotwidget.m.plotxy.a.title.def := 'none';
help::pkg.displayp.plotter.objs.pgplotwidget.m.plotxy.a.title.a := 'string';
help::pkg.displayp.plotter.objs.pgplotwidget.m.plotxy.s := 'plotxy(x, y, plotlines, newplot, xtitle, ytitle, title)';
help::pkg.displayp.plotter.objs.pgplotwidget.m.displaylist := [=];
help::pkg.displayp.plotter.objs.pgplotwidget.m.displaylist.d := 'Access the displaylist plot commands are kept in';
help::pkg.displayp.plotter.objs.pgplotwidget.m.displaylist.s := 'displaylist()';
help::pkg.displayp.plotter.objs.pgplotwidget.m.setcallback := [=];
help::pkg.displayp.plotter.objs.pgplotwidget.m.setcallback.d := 'set a function to be called for mouse or keyboard events';
help::pkg.displayp.plotter.objs.pgplotwidget.m.setcallback.a.name := [=];
help::pkg.displayp.plotter.objs.pgplotwidget.m.setcallback.a.name.d := 'events for which to call supply callback';
help::pkg.displayp.plotter.objs.pgplotwidget.m.setcallback.a.name.def := '';
help::pkg.displayp.plotter.objs.pgplotwidget.m.setcallback.a.name.a := 'motion,key,button,button[1-3],buttonup';
help::pkg.displayp.plotter.objs.pgplotwidget.m.setcallback.a.callback := [=];
help::pkg.displayp.plotter.objs.pgplotwidget.m.setcallback.a.callback.d := 'function to call on event';
help::pkg.displayp.plotter.objs.pgplotwidget.m.setcallback.a.callback.def := '';
help::pkg.displayp.plotter.objs.pgplotwidget.m.setcallback.a.callback.a := 'single argument function';
help::pkg.displayp.plotter.objs.pgplotwidget.m.setcallback.s := 'setcallback(name, callback)';
help::pkg.displayp.plotter.objs.pgplotwidget.m.deactivatecallback := [=];
help::pkg.displayp.plotter.objs.pgplotwidget.m.deactivatecallback.d := 'deactivate a callback';
help::pkg.displayp.plotter.objs.pgplotwidget.m.deactivatecallback.a.which := [=];
help::pkg.displayp.plotter.objs.pgplotwidget.m.deactivatecallback.a.which.d := 'callback index to remove';
help::pkg.displayp.plotter.objs.pgplotwidget.m.deactivatecallback.a.which.def := '';
help::pkg.displayp.plotter.objs.pgplotwidget.m.deactivatecallback.a.which.a := 'integer';
help::pkg.displayp.plotter.objs.pgplotwidget.m.deactivatecallback.s := 'deactivatecallback(which)';
help::pkg.displayp.plotter.objs.pgplotwidget.m.activatecallback := [=];
help::pkg.displayp.plotter.objs.pgplotwidget.m.activatecallback.d := 'activate a callback';
help::pkg.displayp.plotter.objs.pgplotwidget.m.activatecallback.a.which := [=];
help::pkg.displayp.plotter.objs.pgplotwidget.m.activatecallback.a.which.d := 'callback index to reactivate';
help::pkg.displayp.plotter.objs.pgplotwidget.m.activatecallback.a.which.def := '';
help::pkg.displayp.plotter.objs.pgplotwidget.m.activatecallback.a.which.a := 'integer';
help::pkg.displayp.plotter.objs.pgplotwidget.m.activatecallback.s := 'activatecallback(which)';
help::pkg.displayp.plotter.objs.pgplotwidget.m.record := [=];
help::pkg.displayp.plotter.objs.pgplotwidget.m.record.d := 'Save the drawing commands?';
help::pkg.displayp.plotter.objs.pgplotwidget.m.record.a.newstate := [=];
help::pkg.displayp.plotter.objs.pgplotwidget.m.record.a.newstate.d := 'Record or not?';
help::pkg.displayp.plotter.objs.pgplotwidget.m.record.a.newstate.def := '';
help::pkg.displayp.plotter.objs.pgplotwidget.m.record.a.newstate.a := 'boolean';
help::pkg.displayp.plotter.objs.pgplotwidget.m.record.s := 'record(newstate)';
help::pkg.displayp.plotter.objs.pgplotwidget.m.play := [=];
help::pkg.displayp.plotter.objs.pgplotwidget.m.play.d := 'Execute a series of plot commands';
help::pkg.displayp.plotter.objs.pgplotwidget.m.play.a.commands := [=];
help::pkg.displayp.plotter.objs.pgplotwidget.m.play.a.commands.d := 'list of plot commands to execute';
help::pkg.displayp.plotter.objs.pgplotwidget.m.play.a.commands.def := '';
help::pkg.displayp.plotter.objs.pgplotwidget.m.play.a.commands.a := 'displaylist or record';
help::pkg.displayp.plotter.objs.pgplotwidget.m.play.a.record := [=];
help::pkg.displayp.plotter.objs.pgplotwidget.m.play.a.record.d := 'save commands in our internal displaylist?';
help::pkg.displayp.plotter.objs.pgplotwidget.m.play.a.record.def := '';
help::pkg.displayp.plotter.objs.pgplotwidget.m.play.a.record.a := 'boolean';
help::pkg.displayp.plotter.objs.pgplotwidget.m.play.s := 'play(commands, record)';
help::pkg.displayp.plotter.objs.pgplotwidget.m.postscript := [=];
help::pkg.displayp.plotter.objs.pgplotwidget.m.postscript.d := 'Save the plot as a PostScript file';
help::pkg.displayp.plotter.objs.pgplotwidget.m.postscript.a.file := [=];
help::pkg.displayp.plotter.objs.pgplotwidget.m.postscript.a.file.d := 'file name';
help::pkg.displayp.plotter.objs.pgplotwidget.m.postscript.a.file.def := 'aipsplot.ps';
help::pkg.displayp.plotter.objs.pgplotwidget.m.postscript.a.file.a := 'string';
help::pkg.displayp.plotter.objs.pgplotwidget.m.postscript.a.color := [=];
help::pkg.displayp.plotter.objs.pgplotwidget.m.postscript.a.color.d := 'write in color postscript?';
help::pkg.displayp.plotter.objs.pgplotwidget.m.postscript.a.color.def := 'T';
help::pkg.displayp.plotter.objs.pgplotwidget.m.postscript.a.color.a := 'boolean';
help::pkg.displayp.plotter.objs.pgplotwidget.m.postscript.a.landscape := [=];
help::pkg.displayp.plotter.objs.pgplotwidget.m.postscript.a.landscape.d := 'write landscape?';
help::pkg.displayp.plotter.objs.pgplotwidget.m.postscript.a.landscape.def := 'T';
help::pkg.displayp.plotter.objs.pgplotwidget.m.postscript.a.landscape.a := 'boolean';
help::pkg.displayp.plotter.objs.pgplotwidget.m.postscript.s := 'postscript(file, color, landscape)';
help::pkg.displayp.plotter.objs.pgplotwidget.m.plotfile := [=];
help::pkg.displayp.plotter.objs.pgplotwidget.m.plotfile.d := 'Save the plot in native format';
help::pkg.displayp.plotter.objs.pgplotwidget.m.plotfile.a.file := [=];
help::pkg.displayp.plotter.objs.pgplotwidget.m.plotfile.a.file.d := 'file name';
help::pkg.displayp.plotter.objs.pgplotwidget.m.plotfile.a.file.def := 'aips++plot.plot';
help::pkg.displayp.plotter.objs.pgplotwidget.m.plotfile.a.file.a := 'string';
help::pkg.displayp.plotter.objs.pgplotwidget.m.plotfile.s := 'plotfile(file)';
help::pkg.displayp.plotter.objs.pgplotwidget.m.restore := [=];
help::pkg.displayp.plotter.objs.pgplotwidget.m.restore.d := 'Retrieve a plot';
help::pkg.displayp.plotter.objs.pgplotwidget.m.restore.a.file := [=];
help::pkg.displayp.plotter.objs.pgplotwidget.m.restore.a.file.d := 'file name';
help::pkg.displayp.plotter.objs.pgplotwidget.m.restore.a.file.def := 'aips++plot.plot';
help::pkg.displayp.plotter.objs.pgplotwidget.m.restore.a.file.a := 'string';
help::pkg.displayp.plotter.objs.pgplotwidget.m.restore.s := 'restore(file)';
help::pkg.displayp.plotter.objs.pgplotwidget.m.refresh := [=];
help::pkg.displayp.plotter.objs.pgplotwidget.m.refresh.d := 'replay the display list';
help::pkg.displayp.plotter.objs.pgplotwidget.m.refresh.s := 'refresh()';
help::pkg.displayp.plotter.objs.pgplotwidget.m.size := [=];
help::pkg.displayp.plotter.objs.pgplotwidget.m.size.d := 'size in pixels of the pgplotwidget';
help::pkg.displayp.plotter.objs.pgplotwidget.m.size.s := 'size()';
help::pkg.displayp.plotter.objs.pgplotwidget.m.done := [=];
help::pkg.displayp.plotter.objs.pgplotwidget.m.done.d := 'destroy the widget, release resources';
help::pkg.displayp.plotter.objs.pgplotwidget.m.done.s := 'done()';
help::pkg.displayp.plotter.objs.pgplotwidget.m.clear := [=];
help::pkg.displayp.plotter.objs.pgplotwidget.m.clear.d := 'empty the display list';
help::pkg.displayp.plotter.objs.pgplotwidget.m.clear.s := 'clear()';
help::pkg.displayp.plotter.objs.pgplotwidget.m.message := [=];
help::pkg.displayp.plotter.objs.pgplotwidget.m.message.d := 'write in the message line';
help::pkg.displayp.plotter.objs.pgplotwidget.m.message.a.message := [=];
help::pkg.displayp.plotter.objs.pgplotwidget.m.message.a.message.d := 'message to write';
help::pkg.displayp.plotter.objs.pgplotwidget.m.message.a.message.def := '';
help::pkg.displayp.plotter.objs.pgplotwidget.m.message.a.message.a := 'string';
help::pkg.displayp.plotter.objs.pgplotwidget.m.message.s := 'message(message)';
help::pkg.displayp.plotter.objs.pgplotwidget.m.settings := [=];
help::pkg.displayp.plotter.objs.pgplotwidget.m.settings.d := 'Set many PGPLOT attributes at once';
help::pkg.displayp.plotter.objs.pgplotwidget.m.settings.s := 'settings()';
help::pkg.displayp.plotter.objs.pgplotwidget.m.cursor := [=];
help::pkg.displayp.plotter.objs.pgplotwidget.m.cursor.d := 'Set the cursor';
help::pkg.displayp.plotter.objs.pgplotwidget.m.cursor.s := 'cursor()';
help::pkg.displayp.plotter.objs.pgplotwidget.m.lastchange := [=];
help::pkg.displayp.plotter.objs.pgplotwidget.m.lastchange.d := 'Version of the last change';
help::pkg.displayp.plotter.objs.pgplotwidget.m.lastchange.s := 'lastchange()';
help::pkg.displayp.plotter.objs.pgplotwidget.m.curs := [=];
help::pkg.displayp.plotter.objs.pgplotwidget.m.curs.d := 'Get a key and position';
help::pkg.displayp.plotter.objs.pgplotwidget.m.curs.a.x := [=];
help::pkg.displayp.plotter.objs.pgplotwidget.m.curs.a.x.d := 'estimated X position';
help::pkg.displayp.plotter.objs.pgplotwidget.m.curs.a.x.def := '0';
help::pkg.displayp.plotter.objs.pgplotwidget.m.curs.a.x.a := 'float';
help::pkg.displayp.plotter.objs.pgplotwidget.m.curs.a.y := [=];
help::pkg.displayp.plotter.objs.pgplotwidget.m.curs.a.y.d := 'estimated Y position';
help::pkg.displayp.plotter.objs.pgplotwidget.m.curs.a.y.def := '0';
help::pkg.displayp.plotter.objs.pgplotwidget.m.curs.a.y.a := 'float';
help::pkg.displayp.plotter.objs.pgplotwidget.m.curs.s := 'curs(x, y)';
help::pkg.displayp.plotter.objs.pgplotwidget.m.addredrawfunction := [=];
help::pkg.displayp.plotter.objs.pgplotwidget.m.addredrawfunction.d := 'Add a function to redraw a command in the displaylist';
help::pkg.displayp.plotter.objs.pgplotwidget.m.addredrawfunction.a.name := [=];
help::pkg.displayp.plotter.objs.pgplotwidget.m.addredrawfunction.a.name.d := 'name of the draw function';
help::pkg.displayp.plotter.objs.pgplotwidget.m.addredrawfunction.a.name.def := '';
help::pkg.displayp.plotter.objs.pgplotwidget.m.addredrawfunction.a.name.a := 'string';
help::pkg.displayp.plotter.objs.pgplotwidget.m.addredrawfunction.a.redrawfunction := [=];
help::pkg.displayp.plotter.objs.pgplotwidget.m.addredrawfunction.a.redrawfunction.d := 'function to redraw a command from the displaylist';
help::pkg.displayp.plotter.objs.pgplotwidget.m.addredrawfunction.a.redrawfunction.def := '';
help::pkg.displayp.plotter.objs.pgplotwidget.m.addredrawfunction.a.redrawfunction.a := 'function';
help::pkg.displayp.plotter.objs.pgplotwidget.m.addredrawfunction.s := 'addredrawfunction(name, redrawfunction)';
help::pkg.displayp.plotter.funs.pgplottertest := [=];
help::pkg.displayp.plotter.funs.pgplottertest.a := [=];
help::pkg.displayp.plotter.funs.pgplottertest.d := 'Test pgplotter by drawing the examples';
help::pkg.displayp.plotter.funs.pgplottertest.s := 'pgplottertest()';

help::pkg.displayp.viewer := [=];
help::pkg.displayp.viewer.objs := [=];
help::pkg.displayp.viewer.funs := [=];
help::pkg.displayp.viewer.d := 'Viewing \aipspp\ \images\ and \glish\ arrays';
help::pkg.displayp.viewer.objs.viewer := [=];
help::pkg.displayp.viewer.objs.viewer.m := [=];
help::pkg.displayp.viewer.objs.viewer.d := 'Tool for viewing \aipspp\ images and arrays';
help::pkg.displayp.viewer.objs.viewer.c.viewer := [=];
help::pkg.displayp.viewer.objs.viewer.c.viewer.d := 'Create a \VT';
help::pkg.displayp.viewer.objs.viewer.c.viewer.a.title := [=];
help::pkg.displayp.viewer.objs.viewer.c.viewer.a.title.d := 'Title of this \VT\ which appears in windows';
help::pkg.displayp.viewer.objs.viewer.c.viewer.a.title.def := ' viewer ';
help::pkg.displayp.viewer.objs.viewer.c.viewer.a.title.a := 'String';
help::pkg.displayp.viewer.objs.viewer.c.viewer.a.deleteatexit := [=];
help::pkg.displayp.viewer.objs.viewer.c.viewer.a.deleteatexit.d := 'Delete this \VT\ when \glish\ exits?';
help::pkg.displayp.viewer.objs.viewer.c.viewer.a.deleteatexit.def := 'T';
help::pkg.displayp.viewer.objs.viewer.c.viewer.a.deleteatexit.a := 'Boolean';
help::pkg.displayp.viewer.objs.viewer.c.viewer.a.widgetset := [=];
help::pkg.displayp.viewer.objs.viewer.c.viewer.a.widgetset.d := '\widgetserverT\ to use for the GUIs';
help::pkg.displayp.viewer.objs.viewer.c.viewer.a.widgetset.def := 'dws';
help::pkg.displayp.viewer.objs.viewer.c.viewer.a.widgetset.a := '\widgetserverT';
help::pkg.displayp.viewer.objs.viewer.c.viewer.s := 'viewer(title, deleteatexit, widgetset)';
help::pkg.displayp.viewer.objs.viewer.m.type := [=];
help::pkg.displayp.viewer.objs.viewer.m.type.d := 'Return the type of this \tool';
help::pkg.displayp.viewer.objs.viewer.m.type.s := 'type()';
help::pkg.displayp.viewer.objs.viewer.m.title := [=];
help::pkg.displayp.viewer.objs.viewer.m.title.d := 'Return the (construction) title of this \tool';
help::pkg.displayp.viewer.objs.viewer.m.title.s := 'title()';
help::pkg.displayp.viewer.objs.viewer.m.widgetset := [=];
help::pkg.displayp.viewer.objs.viewer.m.widgetset.d := 'Return the \widgetserverT\ used by this \tool';
help::pkg.displayp.viewer.objs.viewer.m.widgetset.s := 'widgetset()';
help::pkg.displayp.viewer.objs.viewer.m.dying := [=];
help::pkg.displayp.viewer.objs.viewer.m.dying.d := 'Is this \VT\ in the process of destroying itself?';
help::pkg.displayp.viewer.objs.viewer.m.dying.s := 'dying()';
help::pkg.displayp.viewer.objs.viewer.m.done := [=];
help::pkg.displayp.viewer.objs.viewer.m.done.d := 'Close down (destroy) this \VT';
help::pkg.displayp.viewer.objs.viewer.m.done.s := 'done()';
help::pkg.displayp.viewer.objs.viewer.m.gui := [=];
help::pkg.displayp.viewer.objs.viewer.m.gui.d := 'Create and show a new \VdataMT\ and/or \VdisplaypanelT\ on the screen';
help::pkg.displayp.viewer.objs.viewer.m.gui.a.datamanager := [=];
help::pkg.displayp.viewer.objs.viewer.m.gui.a.datamanager.d := 'Show a new \VdataMT?';
help::pkg.displayp.viewer.objs.viewer.m.gui.a.datamanager.def := 'T';
help::pkg.displayp.viewer.objs.viewer.m.gui.a.datamanager.a := 'Boolean';
help::pkg.displayp.viewer.objs.viewer.m.gui.a.displaypanel := [=];
help::pkg.displayp.viewer.objs.viewer.m.gui.a.displaypanel.d := 'Show a new \VdisplaypanelT?';
help::pkg.displayp.viewer.objs.viewer.m.gui.a.displaypanel.def := 'T';
help::pkg.displayp.viewer.objs.viewer.m.gui.a.displaypanel.a := 'Boolean';
help::pkg.displayp.viewer.objs.viewer.m.gui.s := 'gui(datamanager, displaypanel)';
help::pkg.displayp.viewer.objs.viewer.m.registerdatamanager := [=];
help::pkg.displayp.viewer.objs.viewer.m.registerdatamanager.d := 'Register a \VdataMT\ with this \VT';
help::pkg.displayp.viewer.objs.viewer.m.registerdatamanager.a.datamanager := [=];
help::pkg.displayp.viewer.objs.viewer.m.registerdatamanager.a.datamanager.d := '\VdataMT\ to register';
help::pkg.displayp.viewer.objs.viewer.m.registerdatamanager.a.datamanager.def := '';
help::pkg.displayp.viewer.objs.viewer.m.registerdatamanager.a.datamanager.a := '\VdataMT';
help::pkg.displayp.viewer.objs.viewer.m.registerdatamanager.s := 'registerdatamanager(datamanager)';
help::pkg.displayp.viewer.objs.viewer.m.newdatamanager := [=];
help::pkg.displayp.viewer.objs.viewer.m.newdatamanager.d := 'Create and show a new \VdataMT\ on the screen';
help::pkg.displayp.viewer.objs.viewer.m.newdatamanager.a.parent := [=];
help::pkg.displayp.viewer.objs.viewer.m.newdatamanager.a.parent.d := 'parent frame in which to place the \VdataMT';
help::pkg.displayp.viewer.objs.viewer.m.newdatamanager.a.parent.def := 'F';
help::pkg.displayp.viewer.objs.viewer.m.newdatamanager.a.parent.a := 'agent or F';
help::pkg.displayp.viewer.objs.viewer.m.newdatamanager.a.show := [=];
help::pkg.displayp.viewer.objs.viewer.m.newdatamanager.a.show.d := 'show the \VdataMT?';
help::pkg.displayp.viewer.objs.viewer.m.newdatamanager.a.show.def := 'T';
help::pkg.displayp.viewer.objs.viewer.m.newdatamanager.a.show.a := 'Boolean';
help::pkg.displayp.viewer.objs.viewer.m.newdatamanager.a.showload := [=];
help::pkg.displayp.viewer.objs.viewer.m.newdatamanager.a.showload.d := 'show the "Load data" rollup?';
help::pkg.displayp.viewer.objs.viewer.m.newdatamanager.a.showload.def := 'F';
help::pkg.displayp.viewer.objs.viewer.m.newdatamanager.a.showload.a := 'Boolean';
help::pkg.displayp.viewer.objs.viewer.m.newdatamanager.a.showedit := [=];
help::pkg.displayp.viewer.objs.viewer.m.newdatamanager.a.showedit.d := 'show the "Adjust data" rollup?';
help::pkg.displayp.viewer.objs.viewer.m.newdatamanager.a.showedit.def := 'F';
help::pkg.displayp.viewer.objs.viewer.m.newdatamanager.a.showedit.a := 'Boolean';
help::pkg.displayp.viewer.objs.viewer.m.newdatamanager.a.hasdismiss := [=];
help::pkg.displayp.viewer.objs.viewer.m.newdatamanager.a.hasdismiss.d := 'add a "Dismiss" button to the GUI?';
help::pkg.displayp.viewer.objs.viewer.m.newdatamanager.a.hasdismiss.def := 'F';
help::pkg.displayp.viewer.objs.viewer.m.newdatamanager.a.hasdismiss.a := 'Boolean';
help::pkg.displayp.viewer.objs.viewer.m.newdatamanager.a.hasdone := [=];
help::pkg.displayp.viewer.objs.viewer.m.newdatamanager.a.hasdone.d := 'add a "Done" button to the GUI?';
help::pkg.displayp.viewer.objs.viewer.m.newdatamanager.a.hasdone.def := 'F';
help::pkg.displayp.viewer.objs.viewer.m.newdatamanager.a.hasdone.a := 'Boolean';
help::pkg.displayp.viewer.objs.viewer.m.newdatamanager.a.widgetset := [=];
help::pkg.displayp.viewer.objs.viewer.m.newdatamanager.a.widgetset.d := '\widgetserverT\ to use to build the GUI';
help::pkg.displayp.viewer.objs.viewer.m.newdatamanager.a.widgetset.def := 'unset';
help::pkg.displayp.viewer.objs.viewer.m.newdatamanager.a.widgetset.a := '\widgetserverT\ or unset';
help::pkg.displayp.viewer.objs.viewer.m.newdatamanager.s := 'newdatamanager(parent, show, showload, showedit, hasdismiss, hasdone, widgetset)';
help::pkg.displayp.viewer.objs.viewer.m.registerdisplaypanel := [=];
help::pkg.displayp.viewer.objs.viewer.m.registerdisplaypanel.d := 'Register a \VdisplaypanelT\ with this \VT';
help::pkg.displayp.viewer.objs.viewer.m.registerdisplaypanel.a.displaypanel := [=];
help::pkg.displayp.viewer.objs.viewer.m.registerdisplaypanel.a.displaypanel.d := '\VdisplaypanelT\ to register';
help::pkg.displayp.viewer.objs.viewer.m.registerdisplaypanel.a.displaypanel.def := '';
help::pkg.displayp.viewer.objs.viewer.m.registerdisplaypanel.a.displaypanel.a := '\VdataMT';
help::pkg.displayp.viewer.objs.viewer.m.registerdisplaypanel.s := 'registerdisplaypanel(displaypanel)';
help::pkg.displayp.viewer.objs.viewer.m.newdisplaypanel := [=];
help::pkg.displayp.viewer.objs.viewer.m.newdisplaypanel.d := 'Create and show a new \VdisplaypanelT\ on the screen';
help::pkg.displayp.viewer.objs.viewer.m.newdisplaypanel.a.parent := [=];
help::pkg.displayp.viewer.objs.viewer.m.newdisplaypanel.a.parent.d := 'parent frame in which to place the \VdisplaypanelT';
help::pkg.displayp.viewer.objs.viewer.m.newdisplaypanel.a.parent.def := 'F';
help::pkg.displayp.viewer.objs.viewer.m.newdisplaypanel.a.parent.a := 'agent or F';
help::pkg.displayp.viewer.objs.viewer.m.newdisplaypanel.a.width := [=];
help::pkg.displayp.viewer.objs.viewer.m.newdisplaypanel.a.width.d := 'width of the drawing area on screen';
help::pkg.displayp.viewer.objs.viewer.m.newdisplaypanel.a.width.def := '400';
help::pkg.displayp.viewer.objs.viewer.m.newdisplaypanel.a.width.a := 'Integer';
help::pkg.displayp.viewer.objs.viewer.m.newdisplaypanel.a.height := [=];
help::pkg.displayp.viewer.objs.viewer.m.newdisplaypanel.a.height.d := 'height of the drawing area on screen';
help::pkg.displayp.viewer.objs.viewer.m.newdisplaypanel.a.height.def := '300';
help::pkg.displayp.viewer.objs.viewer.m.newdisplaypanel.a.height.a := 'Integer';
help::pkg.displayp.viewer.objs.viewer.m.newdisplaypanel.a.maptype := [=];
help::pkg.displayp.viewer.objs.viewer.m.newdisplaypanel.a.maptype.d := 'how colors will be addressed on this \VdisplaypanelT';
help::pkg.displayp.viewer.objs.viewer.m.newdisplaypanel.a.maptype.def := ' index ';
help::pkg.displayp.viewer.objs.viewer.m.newdisplaypanel.a.maptype.a := ' index   rgb   hsv ';
help::pkg.displayp.viewer.objs.viewer.m.newdisplaypanel.a.newcmap := [=];
help::pkg.displayp.viewer.objs.viewer.m.newdisplaypanel.a.newcmap.d := 'install a private colormap?';
help::pkg.displayp.viewer.objs.viewer.m.newdisplaypanel.a.newcmap.def := 'unset';
help::pkg.displayp.viewer.objs.viewer.m.newdisplaypanel.a.newcmap.a := 'Boolean or unset';
help::pkg.displayp.viewer.objs.viewer.m.newdisplaypanel.a.mincolors := [=];
help::pkg.displayp.viewer.objs.viewer.m.newdisplaypanel.a.mincolors.d := 'minimum number of colors to allocate';
help::pkg.displayp.viewer.objs.viewer.m.newdisplaypanel.a.mincolors.def := 'unset';
help::pkg.displayp.viewer.objs.viewer.m.newdisplaypanel.a.mincolors.a := 'Integer or unset';
help::pkg.displayp.viewer.objs.viewer.m.newdisplaypanel.a.maxcolors := [=];
help::pkg.displayp.viewer.objs.viewer.m.newdisplaypanel.a.maxcolors.d := 'maximum number of colors to allocate';
help::pkg.displayp.viewer.objs.viewer.m.newdisplaypanel.a.maxcolors.def := 'unset';
help::pkg.displayp.viewer.objs.viewer.m.newdisplaypanel.a.maxcolors.a := 'Integer or unset';
help::pkg.displayp.viewer.objs.viewer.m.newdisplaypanel.a.autoregister := [=];
help::pkg.displayp.viewer.objs.viewer.m.newdisplaypanel.a.autoregister.d := 'accept auto-register data on this \VdisplaypanelT?';
help::pkg.displayp.viewer.objs.viewer.m.newdisplaypanel.a.autoregister.def := 'F';
help::pkg.displayp.viewer.objs.viewer.m.newdisplaypanel.a.autoregister.a := 'Boolean';
help::pkg.displayp.viewer.objs.viewer.m.newdisplaypanel.a.holdsdata := [=];
help::pkg.displayp.viewer.objs.viewer.m.newdisplaypanel.a.holdsdata.d := 'is this \VdisplaypanelT\ going to hold data?';
help::pkg.displayp.viewer.objs.viewer.m.newdisplaypanel.a.holdsdata.def := 'T';
help::pkg.displayp.viewer.objs.viewer.m.newdisplaypanel.a.holdsdata.a := 'Boolean';
help::pkg.displayp.viewer.objs.viewer.m.newdisplaypanel.a.show := [=];
help::pkg.displayp.viewer.objs.viewer.m.newdisplaypanel.a.show.d := 'show the \VdisplaypanelT?';
help::pkg.displayp.viewer.objs.viewer.m.newdisplaypanel.a.show.def := 'T';
help::pkg.displayp.viewer.objs.viewer.m.newdisplaypanel.a.show.a := 'Boolean';
help::pkg.displayp.viewer.objs.viewer.m.newdisplaypanel.a.hasgui := [=];
help::pkg.displayp.viewer.objs.viewer.m.newdisplaypanel.a.hasgui.d := 'adorn the \VdisplaypanelT\ with elements of a \guilong?';
help::pkg.displayp.viewer.objs.viewer.m.newdisplaypanel.a.hasgui.def := 'unset';
help::pkg.displayp.viewer.objs.viewer.m.newdisplaypanel.a.hasgui.a := 'unset or Boolean';
help::pkg.displayp.viewer.objs.viewer.m.newdisplaypanel.a.guihasmenubar := [=];
help::pkg.displayp.viewer.objs.viewer.m.newdisplaypanel.a.guihasmenubar.d := 'add the menubar if a \guishort\ is added?';
help::pkg.displayp.viewer.objs.viewer.m.newdisplaypanel.a.guihasmenubar.def := 'T';
help::pkg.displayp.viewer.objs.viewer.m.newdisplaypanel.a.guihasmenubar.a := 'Boolean';
help::pkg.displayp.viewer.objs.viewer.m.newdisplaypanel.a.guihastoolbox := [=];
help::pkg.displayp.viewer.objs.viewer.m.newdisplaypanel.a.guihastoolbox.d := 'add the toolbox if a \guishort\ is added?';
help::pkg.displayp.viewer.objs.viewer.m.newdisplaypanel.a.guihastoolbox.def := 'T';
help::pkg.displayp.viewer.objs.viewer.m.newdisplaypanel.a.guihastoolbox.a := 'Boolean';
help::pkg.displayp.viewer.objs.viewer.m.newdisplaypanel.a.guihasanimator := [=];
help::pkg.displayp.viewer.objs.viewer.m.newdisplaypanel.a.guihasanimator.d := 'add the animator tapedeck if a \guishort\ is added?';
help::pkg.displayp.viewer.objs.viewer.m.newdisplaypanel.a.guihasanimator.def := 'T';
help::pkg.displayp.viewer.objs.viewer.m.newdisplaypanel.a.guihasanimator.a := 'Boolean';
help::pkg.displayp.viewer.objs.viewer.m.newdisplaypanel.a.guihasbuttons := [=];
help::pkg.displayp.viewer.objs.viewer.m.newdisplaypanel.a.guihasbuttons.d := 'add the button bar if a \guishort\ is added?';
help::pkg.displayp.viewer.objs.viewer.m.newdisplaypanel.a.guihasbuttons.def := 'T';
help::pkg.displayp.viewer.objs.viewer.m.newdisplaypanel.a.guihasbuttons.a := 'Boolean';
help::pkg.displayp.viewer.objs.viewer.m.newdisplaypanel.a.hasdismiss := [=];
help::pkg.displayp.viewer.objs.viewer.m.newdisplaypanel.a.hasdismiss.d := 'add a "Dismiss" button to the GUI?';
help::pkg.displayp.viewer.objs.viewer.m.newdisplaypanel.a.hasdismiss.def := 'F';
help::pkg.displayp.viewer.objs.viewer.m.newdisplaypanel.a.hasdismiss.a := 'Boolean';
help::pkg.displayp.viewer.objs.viewer.m.newdisplaypanel.a.hasdone := [=];
help::pkg.displayp.viewer.objs.viewer.m.newdisplaypanel.a.hasdone.d := 'add a "Done" button to the GUI?';
help::pkg.displayp.viewer.objs.viewer.m.newdisplaypanel.a.hasdone.def := 'F';
help::pkg.displayp.viewer.objs.viewer.m.newdisplaypanel.a.hasdone.a := 'Boolean';
help::pkg.displayp.viewer.objs.viewer.m.newdisplaypanel.a.widgetset := [=];
help::pkg.displayp.viewer.objs.viewer.m.newdisplaypanel.a.widgetset.d := '\widgetserverT\ to use to build the GUI';
help::pkg.displayp.viewer.objs.viewer.m.newdisplaypanel.a.widgetset.def := 'unset';
help::pkg.displayp.viewer.objs.viewer.m.newdisplaypanel.a.widgetset.a := '\widgetserverT\ or unset';
help::pkg.displayp.viewer.objs.viewer.m.newdisplaypanel.s := 'newdisplaypanel(parent, width, height, maptype, newcmap, mincolors, maxcolors, autoregister, holdsdata, show, hasgui, guihasmenubar, guihastoolbox, guihasanimator, guihasbuttons, hasdismiss, hasdone, widgetset)';
help::pkg.displayp.viewer.objs.viewer.m.hold := [=];
help::pkg.displayp.viewer.objs.viewer.m.hold.d := 'Prevent refreshes occuring on all \VdisplaypanelTs';
help::pkg.displayp.viewer.objs.viewer.m.hold.s := 'hold()';
help::pkg.displayp.viewer.objs.viewer.m.release := [=];
help::pkg.displayp.viewer.objs.viewer.m.release.d := 'Allow refreshes to occur on all \VdisplaypanelTs';
help::pkg.displayp.viewer.objs.viewer.m.release.s := 'release()';
help::pkg.displayp.viewer.objs.viewer.m.disable := [=];
help::pkg.displayp.viewer.objs.viewer.m.disable.d := 'Disable the GUIs of all \VdisplaypanelTs\ and \VdataMTs';
help::pkg.displayp.viewer.objs.viewer.m.disable.s := 'disable()';
help::pkg.displayp.viewer.objs.viewer.m.enable := [=];
help::pkg.displayp.viewer.objs.viewer.m.enable.d := 'Enable the GUIs of all \VdisplaypanelTs\ and \VdataMTs';
help::pkg.displayp.viewer.objs.viewer.m.enable.s := 'enable()';
help::pkg.displayp.viewer.objs.viewer.m.updatedatasets := [=];
help::pkg.displayp.viewer.objs.viewer.m.updatedatasets.d := 'Update the list of global images 	and arrays kept by the \VT';
help::pkg.displayp.viewer.objs.viewer.m.updatedatasets.s := 'updatedatasets()';
help::pkg.displayp.viewer.objs.viewer.m.validdatasets := [=];
help::pkg.displayp.viewer.objs.viewer.m.validdatasets.d := 'Return a list of datasets suitable for a particular type of rendering';
help::pkg.displayp.viewer.objs.viewer.m.validdatasets.a.dataformat := [=];
help::pkg.displayp.viewer.objs.viewer.m.validdatasets.a.dataformat.d := 'rendering type';
help::pkg.displayp.viewer.objs.viewer.m.validdatasets.a.dataformat.def := '';
help::pkg.displayp.viewer.objs.viewer.m.validdatasets.a.dataformat.a := ' raster   contour ';
help::pkg.displayp.viewer.objs.viewer.m.validdatasets.s := 'validdatasets(dataformat)';
help::pkg.displayp.viewer.objs.viewer.m.datasetfromname := [=];
help::pkg.displayp.viewer.objs.viewer.m.datasetfromname.d := 'Return information about a dataset from its name';
help::pkg.displayp.viewer.objs.viewer.m.datasetfromname.a.name := [=];
help::pkg.displayp.viewer.objs.viewer.m.datasetfromname.a.name.d := 'viewer-calculated name of a dataset';
help::pkg.displayp.viewer.objs.viewer.m.datasetfromname.a.name.def := '';
help::pkg.displayp.viewer.objs.viewer.m.datasetfromname.a.name.a := 'String';
help::pkg.displayp.viewer.objs.viewer.m.datasetfromname.s := 'datasetfromname(name)';
help::pkg.displayp.viewer.objs.viewer.m.alldisplaytypes := [=];
help::pkg.displayp.viewer.objs.viewer.m.alldisplaytypes.d := 'Return information about available  	data representations';
help::pkg.displayp.viewer.objs.viewer.m.alldisplaytypes.s := 'alldisplaytypes()';
help::pkg.displayp.viewer.objs.viewer.m.validdisplaytypes := [=];
help::pkg.displayp.viewer.objs.viewer.m.validdisplaytypes.d := 'Return a list of displaytypes  	suitable for a particular type of dataset';
help::pkg.displayp.viewer.objs.viewer.m.validdisplaytypes.a.dataformat := [=];
help::pkg.displayp.viewer.objs.viewer.m.validdisplaytypes.a.dataformat.d := 'dataset type';
help::pkg.displayp.viewer.objs.viewer.m.validdisplaytypes.a.dataformat.def := '';
help::pkg.displayp.viewer.objs.viewer.m.validdisplaytypes.a.dataformat.a := ' image   array ';
help::pkg.displayp.viewer.objs.viewer.m.validdisplaytypes.s := 'validdisplaytypes(dataformat)';
help::pkg.displayp.viewer.objs.viewer.m.displaytypefromname := [=];
help::pkg.displayp.viewer.objs.viewer.m.displaytypefromname.d := 'Find displaytype information for a given displaytype  listname ';
help::pkg.displayp.viewer.objs.viewer.m.displaytypefromname.a.name := [=];
help::pkg.displayp.viewer.objs.viewer.m.displaytypefromname.a.name.d := ' listname  of target displaytype';
help::pkg.displayp.viewer.objs.viewer.m.displaytypefromname.a.name.def := '';
help::pkg.displayp.viewer.objs.viewer.m.displaytypefromname.a.name.a := 'String';
help::pkg.displayp.viewer.objs.viewer.m.displaytypefromname.s := 'displaytypefromname(name)';
help::pkg.displayp.viewer.objs.viewer.m.loaddata := [=];
help::pkg.displayp.viewer.objs.viewer.m.loaddata.d := 'Create a \VdisplaydataT\ for future use';
help::pkg.displayp.viewer.objs.viewer.m.loaddata.a.data := [=];
help::pkg.displayp.viewer.objs.viewer.m.loaddata.a.data.d := 'data to load';
help::pkg.displayp.viewer.objs.viewer.m.loaddata.a.data.def := '';
help::pkg.displayp.viewer.objs.viewer.m.loaddata.a.data.a := 'string, array or image object';
help::pkg.displayp.viewer.objs.viewer.m.loaddata.a.drawtype := [=];
help::pkg.displayp.viewer.objs.viewer.m.loaddata.a.drawtype.d := 'type of \VdisplaydataT\ to create';
help::pkg.displayp.viewer.objs.viewer.m.loaddata.a.drawtype.def := '';
help::pkg.displayp.viewer.objs.viewer.m.loaddata.a.drawtype.a := ' raster   contour';
help::pkg.displayp.viewer.objs.viewer.m.loaddata.a.autoregister := [=];
help::pkg.displayp.viewer.objs.viewer.m.loaddata.a.autoregister.d := 'auto-register this on any auto-register \VdisplaypanelTs?';
help::pkg.displayp.viewer.objs.viewer.m.loaddata.a.autoregister.def := 'F';
help::pkg.displayp.viewer.objs.viewer.m.loaddata.a.autoregister.a := 'Boolean';
help::pkg.displayp.viewer.objs.viewer.m.loaddata.s := 'loaddata(data, drawtype, autoregister)';
help::pkg.displayp.viewer.objs.viewer.m.createdata := [=];
help::pkg.displayp.viewer.objs.viewer.m.createdata.d := 'Create a \VdisplaydataT\ for future use';
help::pkg.displayp.viewer.objs.viewer.m.createdata.a.dataset := [=];
help::pkg.displayp.viewer.objs.viewer.m.createdata.a.dataset.d := 'dataset record describing data';
help::pkg.displayp.viewer.objs.viewer.m.createdata.a.dataset.def := '';
help::pkg.displayp.viewer.objs.viewer.m.createdata.a.dataset.a := 'dataset record';
help::pkg.displayp.viewer.objs.viewer.m.createdata.s := 'createdata(dataset)';
help::pkg.displayp.viewer.objs.viewer.m.deletedata := [=];
help::pkg.displayp.viewer.objs.viewer.m.deletedata.d := 'Delete a \VdisplaydataT';
help::pkg.displayp.viewer.objs.viewer.m.deletedata.a.displaydata := [=];
help::pkg.displayp.viewer.objs.viewer.m.deletedata.a.displaydata.d := '\VdisplaydataT\ to delete';
help::pkg.displayp.viewer.objs.viewer.m.deletedata.a.displaydata.def := '';
help::pkg.displayp.viewer.objs.viewer.m.deletedata.a.displaydata.a := '\VdisplaydataT';
help::pkg.displayp.viewer.objs.viewer.m.deletedata.a.doneit := [=];
help::pkg.displayp.viewer.objs.viewer.m.deletedata.a.doneit.d := 'truly delete the \VdisplaydataT?';
help::pkg.displayp.viewer.objs.viewer.m.deletedata.a.doneit.def := 'T';
help::pkg.displayp.viewer.objs.viewer.m.deletedata.a.doneit.a := 'Boolean';
help::pkg.displayp.viewer.objs.viewer.m.deletedata.a.quiet := [=];
help::pkg.displayp.viewer.objs.viewer.m.deletedata.a.quiet.d := 'prevent emission of updated list of \VdisplaydataTs?';
help::pkg.displayp.viewer.objs.viewer.m.deletedata.a.quiet.def := 'F';
help::pkg.displayp.viewer.objs.viewer.m.deletedata.a.quiet.a := 'Boolean';
help::pkg.displayp.viewer.objs.viewer.m.deletedata.s := 'deletedata(displaydata, doneit, quiet)';
help::pkg.displayp.viewer.objs.viewer.m.deleteall := [=];
help::pkg.displayp.viewer.objs.viewer.m.deleteall.d := 'Delete all \VdisplaydataTs';
help::pkg.displayp.viewer.objs.viewer.m.deleteall.a.doneit := [=];
help::pkg.displayp.viewer.objs.viewer.m.deleteall.a.doneit.d := 'truly delete the \VdisplaydataTs?';
help::pkg.displayp.viewer.objs.viewer.m.deleteall.a.doneit.def := 'T';
help::pkg.displayp.viewer.objs.viewer.m.deleteall.a.doneit.a := 'Boolean';
help::pkg.displayp.viewer.objs.viewer.m.deleteall.a.quiet := [=];
help::pkg.displayp.viewer.objs.viewer.m.deleteall.a.quiet.d := 'prevent emission of updated list of \VdisplaydataTs?';
help::pkg.displayp.viewer.objs.viewer.m.deleteall.a.quiet.def := 'F';
help::pkg.displayp.viewer.objs.viewer.m.deleteall.a.quiet.a := 'Boolean';
help::pkg.displayp.viewer.objs.viewer.m.deleteall.s := 'deleteall(doneit, quiet)';
help::pkg.displayp.viewer.objs.viewer.m.emitdisplaydatalist := [=];
help::pkg.displayp.viewer.objs.viewer.m.emitdisplaydatalist.d := 'Emit the current list of \VdisplaydataTs\ known to this \VT';
help::pkg.displayp.viewer.objs.viewer.m.emitdisplaydatalist.s := 'emitdisplaydatalist()';
help::pkg.displayp.viewer.objs.viewer.m.displaydatafromname := [=];
help::pkg.displayp.viewer.objs.viewer.m.displaydatafromname.d := 'Return a handle to a \VdisplaydataT\ from its name';
help::pkg.displayp.viewer.objs.viewer.m.displaydatafromname.a.name := [=];
help::pkg.displayp.viewer.objs.viewer.m.displaydatafromname.a.name.d := '\VdisplaydataT\ name';
help::pkg.displayp.viewer.objs.viewer.m.displaydatafromname.a.name.def := '';
help::pkg.displayp.viewer.objs.viewer.m.displaydatafromname.a.name.a := 'String';
help::pkg.displayp.viewer.objs.viewer.m.displaydatafromname.s := 'displaydatafromname(name)';
help::pkg.displayp.viewer.objs.viewer.m.alldisplaydatas := [=];
help::pkg.displayp.viewer.objs.viewer.m.alldisplaydatas.d := 'Return a list of all \VdisplaydataTs\ known to this \VT';
help::pkg.displayp.viewer.objs.viewer.m.alldisplaydatas.s := 'alldisplaydatas()';
help::pkg.displayp.viewer.objs.viewer.m.toolkitlist := [=];
help::pkg.displayp.viewer.objs.viewer.m.toolkitlist.d := 'Return information about the available toolkit items and their current mappings to keys/buttons';
help::pkg.displayp.viewer.objs.viewer.m.toolkitlist.s := 'toolkitlist()';
help::pkg.displayp.viewer.objs.viewer.m.emittoolkitlist := [=];
help::pkg.displayp.viewer.objs.viewer.m.emittoolkitlist.d := 'Emit an event describing the toolkitlist for this \VT';
help::pkg.displayp.viewer.objs.viewer.m.emittoolkitlist.s := 'emittoolkitlist()';
help::pkg.displayp.viewer.objs.viewer.m.toolkitchange := [=];
help::pkg.displayp.viewer.objs.viewer.m.toolkitchange.d := 'Modify the mapping of toolkit items to keys/buttons';
help::pkg.displayp.viewer.objs.viewer.m.toolkitchange.a.newmap := [=];
help::pkg.displayp.viewer.objs.viewer.m.toolkitchange.a.newmap.d := 'new mapping record';
help::pkg.displayp.viewer.objs.viewer.m.toolkitchange.a.newmap.def := '';
help::pkg.displayp.viewer.objs.viewer.m.toolkitchange.a.newmap.a := 'record';
help::pkg.displayp.viewer.objs.viewer.m.toolkitchange.s := 'toolkitchange(newmap)';
help::pkg.displayp.viewer.objs.viewer.m.colormapmanager := [=];
help::pkg.displayp.viewer.objs.viewer.m.colormapmanager.d := 'Return the \VcolormapMT\ for this \VT';
help::pkg.displayp.viewer.objs.viewer.m.colormapmanager.s := 'colormapmanager()';
help::pkg.displayp.viewer.objs.viewer.m.newcolormapmanagergui := [=];
help::pkg.displayp.viewer.objs.viewer.m.newcolormapmanagergui.d := 'Create and optionally display a new GUI to control this \VT s \VcolormapMT';
help::pkg.displayp.viewer.objs.viewer.m.newcolormapmanagergui.a.parent := [=];
help::pkg.displayp.viewer.objs.viewer.m.newcolormapmanagergui.a.parent.d := 'parent frame in which to place the \VdataMT';
help::pkg.displayp.viewer.objs.viewer.m.newcolormapmanagergui.a.parent.def := 'F';
help::pkg.displayp.viewer.objs.viewer.m.newcolormapmanagergui.a.parent.a := 'agent or F';
help::pkg.displayp.viewer.objs.viewer.m.newcolormapmanagergui.a.show := [=];
help::pkg.displayp.viewer.objs.viewer.m.newcolormapmanagergui.a.show.d := 'show the \VdataMT?';
help::pkg.displayp.viewer.objs.viewer.m.newcolormapmanagergui.a.show.def := 'T';
help::pkg.displayp.viewer.objs.viewer.m.newcolormapmanagergui.a.show.a := 'Boolean';
help::pkg.displayp.viewer.objs.viewer.m.newcolormapmanagergui.a.hasdismiss := [=];
help::pkg.displayp.viewer.objs.viewer.m.newcolormapmanagergui.a.hasdismiss.d := 'add a "Dismiss" button to the GUI?';
help::pkg.displayp.viewer.objs.viewer.m.newcolormapmanagergui.a.hasdismiss.def := 'F';
help::pkg.displayp.viewer.objs.viewer.m.newcolormapmanagergui.a.hasdismiss.a := 'Boolean';
help::pkg.displayp.viewer.objs.viewer.m.newcolormapmanagergui.a.hasdone := [=];
help::pkg.displayp.viewer.objs.viewer.m.newcolormapmanagergui.a.hasdone.d := 'add a "Done" button to the GUI?';
help::pkg.displayp.viewer.objs.viewer.m.newcolormapmanagergui.a.hasdone.def := 'F';
help::pkg.displayp.viewer.objs.viewer.m.newcolormapmanagergui.a.hasdone.a := 'Boolean';
help::pkg.displayp.viewer.objs.viewer.m.newcolormapmanagergui.a.widgetset := [=];
help::pkg.displayp.viewer.objs.viewer.m.newcolormapmanagergui.a.widgetset.d := '\widgetserverT\ to use to build the GUI';
help::pkg.displayp.viewer.objs.viewer.m.newcolormapmanagergui.a.widgetset.def := 'unset';
help::pkg.displayp.viewer.objs.viewer.m.newcolormapmanagergui.a.widgetset.a := '\widgetserverT\ or unset';
help::pkg.displayp.viewer.objs.viewer.m.newcolormapmanagergui.s := 'newcolormapmanagergui(parent, show, hasdismiss, hasdone, widgetset)';
help::pkg.displayp.viewer.objs.viewer.m.generatefilename := [=];
help::pkg.displayp.viewer.objs.viewer.m.generatefilename.d := 'Generate a unique filename, normally for PostScript output';
help::pkg.displayp.viewer.objs.viewer.m.generatefilename.a.base := [=];
help::pkg.displayp.viewer.objs.viewer.m.generatefilename.a.base.d := 'base name for file';
help::pkg.displayp.viewer.objs.viewer.m.generatefilename.a.base.def := 'unset';
help::pkg.displayp.viewer.objs.viewer.m.generatefilename.a.base.a := 'String or unset';
help::pkg.displayp.viewer.objs.viewer.m.generatefilename.a.ext := [=];
help::pkg.displayp.viewer.objs.viewer.m.generatefilename.a.ext.d := 'file extension';
help::pkg.displayp.viewer.objs.viewer.m.generatefilename.a.ext.def := '  ';
help::pkg.displayp.viewer.objs.viewer.m.generatefilename.a.ext.a := 'String';
help::pkg.displayp.viewer.objs.viewer.m.generatefilename.s := 'generatefilename(base, ext)';
help::pkg.displayp.viewer.objs.viewercolormapmanager := [=];
help::pkg.displayp.viewer.objs.viewercolormapmanager.m := [=];
help::pkg.displayp.viewer.objs.viewercolormapmanager.d := 'Tool for managing colormaps used by the Viewer tool';
help::pkg.displayp.viewer.objs.viewercolormapmanager.c.viewercolormapmanager := [=];
help::pkg.displayp.viewer.objs.viewercolormapmanager.c.viewercolormapmanager.d := 'Create a \VcolormapMT';
help::pkg.displayp.viewer.objs.viewercolormapmanager.c.viewercolormapmanager.a.viewer := [=];
help::pkg.displayp.viewer.objs.viewercolormapmanager.c.viewercolormapmanager.a.viewer.d := 'The \VT\ which will use this \VcolormapMT';
help::pkg.displayp.viewer.objs.viewercolormapmanager.c.viewercolormapmanager.a.viewer.def := '';
help::pkg.displayp.viewer.objs.viewercolormapmanager.c.viewercolormapmanager.a.viewer.a := '\VT';
help::pkg.displayp.viewer.objs.viewercolormapmanager.c.viewercolormapmanager.s := 'viewercolormapmanager(viewer)';
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.type := [=];
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.type.d := 'Return the type of this \tool';
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.type.s := 'type()';
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.viewer := [=];
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.viewer.d := 'Return the \VT\ which manages this \tool';
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.viewer.s := 'viewer()';
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.done := [=];
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.done.d := 'Close down (destroy) this \VcolormapMT';
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.done.s := 'done()';
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.gui := [=];
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.gui.d := 'Create a new \guilong\ for this \tool';
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.gui.a.parent := [=];
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.gui.a.parent.d := 'parent frame for \guishort';
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.gui.a.parent.def := 'F';
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.gui.a.parent.a := 'agent or F';
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.gui.a.show := [=];
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.gui.a.show.d := 'map the \guishort\ to the screen immediately?';
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.gui.a.show.def := 'T';
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.gui.a.show.a := 'Boolean';
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.gui.a.hasdismiss := [=];
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.gui.a.hasdismiss.d := 'place a  Dismiss  button in the \guishort?';
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.gui.a.hasdismiss.def := 'F';
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.gui.a.hasdismiss.a := 'Boolean';
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.gui.a.hasdone := [=];
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.gui.a.hasdone.d := 'place a  Done  button in the \guishort?';
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.gui.a.hasdone.def := 'F';
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.gui.a.hasdone.a := 'Boolean';
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.gui.a.widgetset := [=];
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.gui.a.widgetset.d := '\widgetserverT\ to use for the \guishort';
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.gui.a.widgetset.def := 'dws';
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.gui.a.widgetset.a := '\widgetserverT';
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.gui.s := 'gui(parent, show, hasdismiss, hasdone, widgetset)';
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.colormapnames := [=];
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.colormapnames.d := 'Return the names of the available colormaps';
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.colormapnames.s := 'colormapnames()';
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.colormap := [=];
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.colormap.d := 'Return a handle to a named colormap';
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.colormap.a.name := [=];
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.colormap.a.name.d := 'name of requested colormap';
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.colormap.a.name.def := '';
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.colormap.a.name.a := 'string';
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.colormap.s := 'colormap(name)';
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.nmaps := [=];
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.nmaps.d := 'Return the number of colormaps available';
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.nmaps.s := 'nmaps()';
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.getshift := [=];
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.getshift.d := 'Return the shift setting of a named colormap';
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.getshift.a.name := [=];
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.getshift.a.name.d := 'name of colormap to query';
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.getshift.a.name.def := '';
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.getshift.a.name.a := 'string';
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.getshift.s := 'getshift(name)';
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.setshift := [=];
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.setshift.d := 'Set the shift of a named colormap';
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.setshift.a.name := [=];
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.setshift.a.name.d := 'name of colormap to modify';
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.setshift.a.name.def := '';
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.setshift.a.name.a := 'string';
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.setshift.a.value := [=];
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.setshift.a.value.d := 'new shift value';
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.setshift.a.value.def := '';
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.setshift.a.value.a := 'float in range 0 to 1';
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.setshift.s := 'setshift(name, value)';
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.getslope := [=];
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.getslope.d := 'Return the slope setting of a named colormap';
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.getslope.a.name := [=];
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.getslope.a.name.d := 'name of colormap to query';
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.getslope.a.name.def := '';
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.getslope.a.name.a := 'string';
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.getslope.s := 'getslope(name)';
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.setslope := [=];
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.setslope.d := 'Set the slope of a named colormap';
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.setslope.a.name := [=];
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.setslope.a.name.d := 'name of colormap to modify';
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.setslope.a.name.def := '';
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.setslope.a.name.a := 'string';
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.setslope.a.value := [=];
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.setslope.a.value.d := 'new slope value';
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.setslope.a.value.def := '';
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.setslope.a.value.a := 'float in range 0 to 1';
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.setslope.s := 'setslope(name, value)';
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.getbrightness := [=];
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.getbrightness.d := 'Return the brightness setting of a named colormap';
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.getbrightness.a.name := [=];
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.getbrightness.a.name.d := 'name of colormap to query';
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.getbrightness.a.name.def := '';
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.getbrightness.a.name.a := 'string';
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.getbrightness.s := 'getbrightness(name)';
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.setbrightness := [=];
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.setbrightness.d := 'Set the brightness of a named colormap';
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.setbrightness.a.name := [=];
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.setbrightness.a.name.d := 'name of colormap to modify';
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.setbrightness.a.name.def := '';
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.setbrightness.a.name.a := 'string';
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.setbrightness.a.value := [=];
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.setbrightness.a.value.d := 'new brightness value';
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.setbrightness.a.value.def := '';
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.setbrightness.a.value.a := 'float in range 0 to 1';
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.setbrightness.s := 'setbrightness(name, value)';
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.getcontrast := [=];
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.getcontrast.d := 'Return the contrast setting of a named colormap';
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.getcontrast.a.name := [=];
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.getcontrast.a.name.d := 'name of colormap to query';
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.getcontrast.a.name.def := '';
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.getcontrast.a.name.a := 'string';
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.getcontrast.s := 'getcontrast(name)';
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.setcontrast := [=];
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.setcontrast.d := 'Set the contrast of a named colormap';
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.setcontrast.a.name := [=];
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.setcontrast.a.name.d := 'name of colormap to modify';
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.setcontrast.a.name.def := '';
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.setcontrast.a.name.a := 'string';
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.setcontrast.a.value := [=];
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.setcontrast.a.value.d := 'new contrast value';
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.setcontrast.a.value.def := '';
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.setcontrast.a.value.a := 'float in range 0 to 1';
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.setcontrast.s := 'setcontrast(name, value)';
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.getinvertflags := [=];
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.getinvertflags.d := 'Get the current red, green and blue invert state';
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.getinvertflags.a.name := [=];
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.getinvertflags.a.name.d := 'name of colormap to query';
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.getinvertflags.a.name.def := '';
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.getinvertflags.a.name.a := 'string';
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.getinvertflags.s := 'getinvertflags(name)';
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.setinvertflags := [=];
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.setinvertflags.d := 'Set the red, green and blue invert state of a colormap';
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.setinvertflags.a.name := [=];
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.setinvertflags.a.name.d := 'name of colormap to modify';
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.setinvertflags.a.name.def := '';
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.setinvertflags.a.name.a := 'string';
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.setinvertflags.a.value := [=];
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.setinvertflags.a.value.d := 'length 3 vector describing invert state';
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.setinvertflags.a.value.def := '';
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.setinvertflags.a.value.a := 'vector of booleans';
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.setinvertflags.s := 'setinvertflags(name, value)';
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.reset := [=];
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.reset.d := 'reset the named colormap to its default state';
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.reset.a.name := [=];
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.reset.a.name.d := 'name of colormap to restore to initial state';
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.reset.a.name.def := '';
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.reset.a.name.a := 'string';
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.reset.s := 'reset(name)';
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.resetall := [=];
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.resetall.d := 'reset all colormaps to initial state';
help::pkg.displayp.viewer.objs.viewercolormapmanager.m.resetall.s := 'resetall()';
help::pkg.displayp.viewer.objs.viewerdisplaydata := [=];
help::pkg.displayp.viewer.objs.viewerdisplaydata.m := [=];
help::pkg.displayp.viewer.objs.viewerdisplaydata.d := 'Tool for managing the drawing of \aipspp\ data';
help::pkg.displayp.viewer.objs.viewerdisplaydata.c.viewerdisplaydata := [=];
help::pkg.displayp.viewer.objs.viewerdisplaydata.c.viewerdisplaydata.d := 'Create a \VdisplaydataT';
help::pkg.displayp.viewer.objs.viewerdisplaydata.c.viewerdisplaydata.a.viewer := [=];
help::pkg.displayp.viewer.objs.viewerdisplaydata.c.viewerdisplaydata.a.viewer.d := 'the \VT\ which will manage this \tool';
help::pkg.displayp.viewer.objs.viewerdisplaydata.c.viewerdisplaydata.a.viewer.def := '';
help::pkg.displayp.viewer.objs.viewerdisplaydata.c.viewerdisplaydata.a.viewer.a := '\VT';
help::pkg.displayp.viewer.objs.viewerdisplaydata.c.viewerdisplaydata.a.name := [=];
help::pkg.displayp.viewer.objs.viewerdisplaydata.c.viewerdisplaydata.a.name.d := 'a unique name for this \VdisplaydataT';
help::pkg.displayp.viewer.objs.viewerdisplaydata.c.viewerdisplaydata.a.name.def := '';
help::pkg.displayp.viewer.objs.viewerdisplaydata.c.viewerdisplaydata.a.name.a := 'string';
help::pkg.displayp.viewer.objs.viewerdisplaydata.c.viewerdisplaydata.a.drawtype := [=];
help::pkg.displayp.viewer.objs.viewerdisplaydata.c.viewerdisplaydata.a.drawtype.d := 'a string describing the type of drawing';
help::pkg.displayp.viewer.objs.viewerdisplaydata.c.viewerdisplaydata.a.drawtype.def := '';
help::pkg.displayp.viewer.objs.viewerdisplaydata.c.viewerdisplaydata.a.drawtype.a := ' raster  or  contour ';
help::pkg.displayp.viewer.objs.viewerdisplaydata.c.viewerdisplaydata.a.data := [=];
help::pkg.displayp.viewer.objs.viewerdisplaydata.c.viewerdisplaydata.a.data.d := 'The data source to draw, either an \aipspp\ \image\ name, or a \glish\ array';
help::pkg.displayp.viewer.objs.viewerdisplaydata.c.viewerdisplaydata.a.data.def := '';
help::pkg.displayp.viewer.objs.viewerdisplaydata.c.viewerdisplaydata.a.data.a := 'string or array';
help::pkg.displayp.viewer.objs.viewerdisplaydata.c.viewerdisplaydata.s := 'viewerdisplaydata(viewer, name, drawtype, data)';
help::pkg.displayp.viewer.objs.viewerdisplaydata.m.type := [=];
help::pkg.displayp.viewer.objs.viewerdisplaydata.m.type.d := 'Return the type of this \tool';
help::pkg.displayp.viewer.objs.viewerdisplaydata.m.type.s := 'type()';
help::pkg.displayp.viewer.objs.viewerdisplaydata.m.viewer := [=];
help::pkg.displayp.viewer.objs.viewerdisplaydata.m.viewer.d := 'Return the \VT\ which manages this \tool';
help::pkg.displayp.viewer.objs.viewerdisplaydata.m.viewer.s := 'viewer()';
help::pkg.displayp.viewer.objs.viewerdisplaydata.m.done := [=];
help::pkg.displayp.viewer.objs.viewerdisplaydata.m.done.d := 'Close down (destroy) this \VdisplaydataT';
help::pkg.displayp.viewer.objs.viewerdisplaydata.m.done.s := 'done()';
help::pkg.displayp.viewer.objs.viewerdisplaydata.m.newdisplaydatagui := [=];
help::pkg.displayp.viewer.objs.viewerdisplaydata.m.newdisplaydatagui.d := 'Create a new \guilong\ for this \tool';
help::pkg.displayp.viewer.objs.viewerdisplaydata.m.newdisplaydatagui.a.parent := [=];
help::pkg.displayp.viewer.objs.viewerdisplaydata.m.newdisplaydatagui.a.parent.d := 'parent frame for \guishort';
help::pkg.displayp.viewer.objs.viewerdisplaydata.m.newdisplaydatagui.a.parent.def := 'F';
help::pkg.displayp.viewer.objs.viewerdisplaydata.m.newdisplaydatagui.a.parent.a := 'agent or F';
help::pkg.displayp.viewer.objs.viewerdisplaydata.m.newdisplaydatagui.a.uneditable := [=];
help::pkg.displayp.viewer.objs.viewerdisplaydata.m.newdisplaydatagui.a.uneditable.d := 'parameters which should not be editable';
help::pkg.displayp.viewer.objs.viewerdisplaydata.m.newdisplaydatagui.a.uneditable.def := '``  ';
help::pkg.displayp.viewer.objs.viewerdisplaydata.m.newdisplaydatagui.a.uneditable.a := 'vector of strings';
help::pkg.displayp.viewer.objs.viewerdisplaydata.m.newdisplaydatagui.a.show := [=];
help::pkg.displayp.viewer.objs.viewerdisplaydata.m.newdisplaydatagui.a.show.d := 'map the \guishort\ to the screen immediately?';
help::pkg.displayp.viewer.objs.viewerdisplaydata.m.newdisplaydatagui.a.show.def := 'T';
help::pkg.displayp.viewer.objs.viewerdisplaydata.m.newdisplaydatagui.a.show.a := 'Boolean';
help::pkg.displayp.viewer.objs.viewerdisplaydata.m.newdisplaydatagui.a.hasdismiss := [=];
help::pkg.displayp.viewer.objs.viewerdisplaydata.m.newdisplaydatagui.a.hasdismiss.d := 'place a  Dismiss  button in the \guishort?';
help::pkg.displayp.viewer.objs.viewerdisplaydata.m.newdisplaydatagui.a.hasdismiss.def := 'F';
help::pkg.displayp.viewer.objs.viewerdisplaydata.m.newdisplaydatagui.a.hasdismiss.a := 'Boolean';
help::pkg.displayp.viewer.objs.viewerdisplaydata.m.newdisplaydatagui.a.hasdone := [=];
help::pkg.displayp.viewer.objs.viewerdisplaydata.m.newdisplaydatagui.a.hasdone.d := 'place a  Done  button in the \guishort?';
help::pkg.displayp.viewer.objs.viewerdisplaydata.m.newdisplaydatagui.a.hasdone.def := 'F';
help::pkg.displayp.viewer.objs.viewerdisplaydata.m.newdisplaydatagui.a.hasdone.a := 'Boolean';
help::pkg.displayp.viewer.objs.viewerdisplaydata.m.newdisplaydatagui.a.widgetset := [=];
help::pkg.displayp.viewer.objs.viewerdisplaydata.m.newdisplaydatagui.a.widgetset.d := '\widgetserverT\ to use for the \guishort';
help::pkg.displayp.viewer.objs.viewerdisplaydata.m.newdisplaydatagui.a.widgetset.def := 'dws';
help::pkg.displayp.viewer.objs.viewerdisplaydata.m.newdisplaydatagui.a.widgetset.a := '\widgetserverT';
help::pkg.displayp.viewer.objs.viewerdisplaydata.m.newdisplaydatagui.s := 'newdisplaydatagui(parent, uneditable, show, hasdismiss, hasdone, widgetset)';
help::pkg.displayp.viewer.objs.viewerdisplaydata.m.drawtype := [=];
help::pkg.displayp.viewer.objs.viewerdisplaydata.m.drawtype.d := 'Return the drawing type of this \tool';
help::pkg.displayp.viewer.objs.viewerdisplaydata.m.drawtype.s := 'drawtype()';
help::pkg.displayp.viewer.objs.viewerdisplaydata.m.name := [=];
help::pkg.displayp.viewer.objs.viewerdisplaydata.m.name.d := 'Return the (unique) name of this \tool';
help::pkg.displayp.viewer.objs.viewerdisplaydata.m.name.s := 'name()';
help::pkg.displayp.viewer.objs.viewerdisplaydata.m.getoptions := [=];
help::pkg.displayp.viewer.objs.viewerdisplaydata.m.getoptions.d := 'Return a record describing the state of this \tool';
help::pkg.displayp.viewer.objs.viewerdisplaydata.m.getoptions.s := 'getoptions()';
help::pkg.displayp.viewer.objs.viewerdisplaydata.m.setoptions := [=];
help::pkg.displayp.viewer.objs.viewerdisplaydata.m.setoptions.d := 'Set the state of this \tool';
help::pkg.displayp.viewer.objs.viewerdisplaydata.m.setoptions.a.newopts := [=];
help::pkg.displayp.viewer.objs.viewerdisplaydata.m.setoptions.a.newopts.d := 'options record describing requested state';
help::pkg.displayp.viewer.objs.viewerdisplaydata.m.setoptions.a.newopts.def := '';
help::pkg.displayp.viewer.objs.viewerdisplaydata.m.setoptions.a.newopts.a := 'record';
help::pkg.displayp.viewer.objs.viewerdisplaydata.m.setoptions.a.emit := [=];
help::pkg.displayp.viewer.objs.viewerdisplaydata.m.setoptions.a.emit.d := 'emit the options that have been installed';
help::pkg.displayp.viewer.objs.viewerdisplaydata.m.setoptions.a.emit.def := 'T';
help::pkg.displayp.viewer.objs.viewerdisplaydata.m.setoptions.a.emit.a := 'Boolean';
help::pkg.displayp.viewer.objs.viewerdisplaydata.m.setoptions.a.id := [=];
help::pkg.displayp.viewer.objs.viewerdisplaydata.m.setoptions.a.id.d := 'option request identification tag';
help::pkg.displayp.viewer.objs.viewerdisplaydata.m.setoptions.a.id.def := '-1';
help::pkg.displayp.viewer.objs.viewerdisplaydata.m.setoptions.a.id.a := 'Numeric';
help::pkg.displayp.viewer.objs.viewerdisplaydata.m.setoptions.s := 'setoptions(newopts, emit, id)';
help::pkg.displayp.viewer.objs.viewerdisplaydata.m.saveoptions := [=];
help::pkg.displayp.viewer.objs.viewerdisplaydata.m.saveoptions.d := 'Save the state of this \tool';
help::pkg.displayp.viewer.objs.viewerdisplaydata.m.saveoptions.a.setname := [=];
help::pkg.displayp.viewer.objs.viewerdisplaydata.m.saveoptions.a.setname.d := 'name under which to store this state';
help::pkg.displayp.viewer.objs.viewerdisplaydata.m.saveoptions.a.setname.def := '';
help::pkg.displayp.viewer.objs.viewerdisplaydata.m.saveoptions.a.setname.a := 'string';
help::pkg.displayp.viewer.objs.viewerdisplaydata.m.saveoptions.s := 'saveoptions(setname)';
help::pkg.displayp.viewer.objs.viewerdisplaydata.m.restoreoptions := [=];
help::pkg.displayp.viewer.objs.viewerdisplaydata.m.restoreoptions.d := 'Restore a previously saved state of this \tool';
help::pkg.displayp.viewer.objs.viewerdisplaydata.m.restoreoptions.a.setname := [=];
help::pkg.displayp.viewer.objs.viewerdisplaydata.m.restoreoptions.a.setname.d := 'name of state to retrieve';
help::pkg.displayp.viewer.objs.viewerdisplaydata.m.restoreoptions.a.setname.def := '';
help::pkg.displayp.viewer.objs.viewerdisplaydata.m.restoreoptions.a.setname.a := 'string';
help::pkg.displayp.viewer.objs.viewerdisplaydata.m.restoreoptions.s := 'restoreoptions(setname)';
help::pkg.displayp.viewer.objs.viewerdisplaypanel := [=];
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m := [=];
help::pkg.displayp.viewer.objs.viewerdisplaypanel.d := 'Tool for providing drawing windows (canvases)';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel := [=];
help::pkg.displayp.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.d := 'Create a \VdisplaypanelT';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.a.parent := [=];
help::pkg.displayp.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.a.parent.d := 'parent frame for the panel';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.a.parent.def := 'F';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.a.parent.a := 'agent or F';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.a.viewer := [=];
help::pkg.displayp.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.a.viewer.d := 'the \VT\ which will manager this \tool';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.a.viewer.def := '';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.a.viewer.a := '\VT';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.a.width := [=];
help::pkg.displayp.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.a.width.d := 'width in pixels of the drawing area';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.a.width.def := '250';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.a.width.a := 'integer';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.a.height := [=];
help::pkg.displayp.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.a.height.d := 'height in pixels of the drawing area';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.a.height.def := '250';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.a.height.a := 'integer';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.a.maptype := [=];
help::pkg.displayp.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.a.maptype.d := 'how colors will be addressed on this \VdisplaypanelT';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.a.maptype.def := ' index ';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.a.maptype.a := ' index   rgb   hsv ';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.a.newcmap := [=];
help::pkg.displayp.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.a.newcmap.d := 'install a private colormap? (ignored if a parent frame is provided)';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.a.newcmap.def := 'F';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.a.newcmap.a := 'boolean';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.a.mincolors := [=];
help::pkg.displayp.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.a.mincolors.d := 'minimum number of colors to allocate';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.a.mincolors.def := 'unset';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.a.mincolors.a := 'Integer or unset';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.a.maxcolors := [=];
help::pkg.displayp.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.a.maxcolors.d := 'maximum number of colors to allocate';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.a.maxcolors.def := 'unset';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.a.maxcolors.a := 'Integer or unset';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.a.autoregister := [=];
help::pkg.displayp.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.a.autoregister.d := 'accept auto-register data on this \VdisplaypanelT?';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.a.autoregister.def := 'F';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.a.autoregister.a := 'boolean';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.a.holdsdata := [=];
help::pkg.displayp.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.a.holdsdata.d := 'is this \VdisplaypanelT\ going to hold data?';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.a.holdsdata.def := 'T';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.a.holdsdata.a := 'boolean';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.a.show := [=];
help::pkg.displayp.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.a.show.d := 'show the \VdisplaypanelT?';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.a.show.def := 'T';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.a.show.a := 'boolean';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.a.widgetset := [=];
help::pkg.displayp.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.a.widgetset.d := '\widgetserverT\ to use to build the \guishort';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.a.widgetset.def := 'unset';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.a.widgetset.a := '\widgetserverT\ or unset';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.s := 'viewerdisplaypanel(parent, viewer, width, height, maptype, newcmap, mincolors, maxcolors, autoregister, holdsdata, show, widgetset)';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.type := [=];
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.type.d := 'Return the type of this \tool';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.type.s := 'type()';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.viewer := [=];
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.viewer.d := 'Return the \VT\ which manages this \tool';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.viewer.s := 'viewer()';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.dying := [=];
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.dying.d := 'Is this \VdisplaypanelT\ in the process of destroying itself?';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.dying.s := 'dying()';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.done := [=];
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.done.d := 'Close down (destroy) this \VdisplaypanelT';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.done.s := 'done()';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.upperframe := [=];
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.upperframe.d := 'Return the upper frame in the \VdisplaypanelT\ window';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.upperframe.s := 'upperframe()';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.lowerframe := [=];
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.lowerframe.d := 'Return the lower frame in the \VdisplaypanelT\ window';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.lowerframe.s := 'lowerframe()';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.leftframe := [=];
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.leftframe.d := 'Return the left frame in the \VdisplaypanelT\ window';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.leftframe.s := 'leftframe()';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.rightframe := [=];
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.rightframe.d := 'Return the right frame in the \VdisplaypanelT\ window';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.rightframe.s := 'rightframe()';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.writexpm := [=];
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.writexpm.d := 'Write an X11 Pixmap of the \VdisplaypanelT\ to disk';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.writexpm.a.filenam := [=];
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.writexpm.a.filenam.d := 'name of X11 Pixmap file';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.writexpm.a.filenam.def := '';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.writexpm.a.filenam.a := 'string';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.writexpm.s := 'writexpm(filenam)';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.autoregister := [=];
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.autoregister.d := 'Set or query the auto-register state of this \VdisplaypanelT';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.autoregister.a.set := [=];
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.autoregister.a.set.d := 'Auto-register on or off';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.autoregister.a.set.def := 'unset';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.autoregister.a.set.a := 'boolean or unset';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.autoregister.s := 'autoregister(set)';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.holdsdata := [=];
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.holdsdata.d := 'Returns whether this \VdisplaypanelT\ can hold \VdisplaydataTs';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.holdsdata.s := 'holdsdata()';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.status := [=];
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.status.d := 'Return a record describing various attributes of the \VdisplaypanelT';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.status.s := 'status()';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.getoptions := [=];
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.getoptions.d := 'Return a record describing some modifiable state of this \tool';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.getoptions.s := 'getoptions()';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.setoptions := [=];
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.setoptions.d := 'Set the modifiable state of this \tool';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.setoptions.a.options := [=];
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.setoptions.a.options.d := 'options record describing the requested state';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.setoptions.a.options.def := '';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.setoptions.a.options.a := 'record';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.setoptions.s := 'setoptions(options)';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.index := [=];
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.index.d := 'Return the currently displayed frame number';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.index.s := 'index()';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.hold := [=];
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.hold.d := 'Prevent refreshes occuring on this \VdisplaypanelT';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.hold.s := 'hold()';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.release := [=];
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.release.d := 'Allow refreshes to occur on this \VdisplaypanelT';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.release.s := 'release()';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.disablecontrols := [=];
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.disablecontrols.d := 'Temporarily disable the controls on this \VdisplaypanelT';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.disablecontrols.s := 'disablecontrols()';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.enablecontrols := [=];
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.enablecontrols.d := 'Re-enable the controls on this \VdisplaypanelT';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.enablecontrols.s := 'enablecontrols()';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.animator := [=];
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.animator.d := 'Return the \VanimatorT\ used by this \tool';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.animator.s := 'animator()';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.canvasmanager := [=];
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.canvasmanager.d := 'Return the \VcanvasMT\ used by this \tool';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.canvasmanager.s := 'canvasmanager()';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.newcanvasmanagergui := [=];
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.newcanvasmanagergui.d := 'Create and (probably) show a new \guilong\ for this \tool s \VcanvasMT';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.newcanvasmanagergui.a.parent := [=];
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.newcanvasmanagergui.a.parent.d := 'parent frame in which to place the \VcanvasMT';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.newcanvasmanagergui.a.parent.def := 'F';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.newcanvasmanagergui.a.parent.a := 'agent or F';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.newcanvasmanagergui.a.show := [=];
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.newcanvasmanagergui.a.show.d := 'show the \VcanvasMT?';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.newcanvasmanagergui.a.show.def := 'T';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.newcanvasmanagergui.a.show.a := 'boolean';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.newcanvasmanagergui.a.hasdismiss := [=];
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.newcanvasmanagergui.a.hasdismiss.d := 'add a "Dismiss" button to the \guishort?';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.newcanvasmanagergui.a.hasdismiss.def := 'F';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.newcanvasmanagergui.a.hasdismiss.a := 'boolean';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.newcanvasmanagergui.a.hasdone := [=];
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.newcanvasmanagergui.a.hasdone.d := 'add a "Done" button to the \guishort?';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.newcanvasmanagergui.a.hasdone.def := 'F';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.newcanvasmanagergui.a.hasdone.a := 'boolean';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.newcanvasmanagergui.a.widgetset := [=];
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.newcanvasmanagergui.a.widgetset.d := '\widgetserverT\ to use to build the \guishort';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.newcanvasmanagergui.a.widgetset.def := 'unset';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.newcanvasmanagergui.a.widgetset.a := '\widgetserverT\ or unset';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.newcanvasmanagergui.s := 'newcanvasmanagergui(parent, show, hasdismiss, hasdone, widgetset)';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.canvasprintmanager := [=];
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.canvasprintmanager.d := 'Return the \VcanvasprintMT\ used by this \VdisplaypanelT';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.canvasprintmanager.s := 'canvasprintmanager()';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.newcanvasprintmanagergui := [=];
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.newcanvasprintmanagergui.d := 'Create and (probably) show a new \guilong\ for this \tool s \VcanvasprintMT';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.newcanvasprintmanagergui.a.parent := [=];
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.newcanvasprintmanagergui.a.parent.d := 'parent frame in which to place the \VcanvasprintMT';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.newcanvasprintmanagergui.a.parent.def := 'F';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.newcanvasprintmanagergui.a.parent.a := 'agent or F';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.newcanvasprintmanagergui.a.show := [=];
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.newcanvasprintmanagergui.a.show.d := 'show the \VcanvasprintMT?';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.newcanvasprintmanagergui.a.show.def := 'T';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.newcanvasprintmanagergui.a.show.a := 'boolean';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.newcanvasprintmanagergui.a.hasdismiss := [=];
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.newcanvasprintmanagergui.a.hasdismiss.d := 'add a "Dismiss" button to the \guishort?';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.newcanvasprintmanagergui.a.hasdismiss.def := 'F';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.newcanvasprintmanagergui.a.hasdismiss.a := 'boolean';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.newcanvasprintmanagergui.a.hasdone := [=];
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.newcanvasprintmanagergui.a.hasdone.d := 'add a "Done" button to the \guishort?';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.newcanvasprintmanagergui.a.hasdone.def := 'F';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.newcanvasprintmanagergui.a.hasdone.a := 'boolean';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.newcanvasprintmanagergui.a.widgetset := [=];
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.newcanvasprintmanagergui.a.widgetset.d := '\widgetserverT\ to use to build the \guishort';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.newcanvasprintmanagergui.a.widgetset.def := 'unset';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.newcanvasprintmanagergui.a.widgetset.a := '\widgetserverT\ or unset';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.newcanvasprintmanagergui.s := 'newcanvasprintmanagergui(parent, show, hasdismiss, hasdone, widgetset)';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.addgui := [=];
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.addgui.d := 'Add various \guishort\ components to this \VdisplaypanelT';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.addgui.a.guihasmenubar := [=];
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.addgui.a.guihasmenubar.d := 'add a menu bar (top)?';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.addgui.a.guihasmenubar.def := 'T';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.addgui.a.guihasmenubar.a := 'boolean';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.addgui.a.guihascontrolbox := [=];
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.addgui.a.guihascontrolbox.d := 'add a control box (left)?';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.addgui.a.guihascontrolbox.def := 'T';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.addgui.a.guihascontrolbox.a := 'boolean';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.addgui.a.guihasanimator := [=];
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.addgui.a.guihasanimator.d := 'add an animator/tapedeck (right)?';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.addgui.a.guihasanimator.def := 'T';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.addgui.a.guihasanimator.a := 'boolean';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.addgui.a.guihasbuttons := [=];
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.addgui.a.guihasbuttons.d := 'add buttons (bottom)?';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.addgui.a.guihasbuttons.def := 'T';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.addgui.a.guihasbuttons.a := 'boolean';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.addgui.a.hasdismiss := [=];
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.addgui.a.hasdismiss.d := 'add a ``Dismiss   button to the \guishort?';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.addgui.a.hasdismiss.def := 'T';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.addgui.a.hasdismiss.a := 'boolean';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.addgui.a.hasdone := [=];
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.addgui.a.hasdone.d := 'add a ``Done   button to the \guishort?';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.addgui.a.hasdone.def := 'T';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.addgui.a.hasdone.a := 'boolean';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.addgui.s := 'addgui(guihasmenubar, guihascontrolbox, guihasanimator, guihasbuttons, hasdismiss, hasdone)';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.testpattern := [=];
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.testpattern.d := 'Turn a test pattern on or off on the \VdisplaypanelT';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.testpattern.a.onoff := [=];
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.testpattern.a.onoff.d := 'turn pattern on (T) or off (F)';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.testpattern.a.onoff.def := '';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.testpattern.a.onoff.a := 'boolean';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.testpattern.s := 'testpattern(onoff)';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.registercolormap := [=];
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.registercolormap.d := 'Explicitly register a colormap on the \VdisplaypanelT';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.registercolormap.a.map := [=];
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.registercolormap.a.map.d := 'name of colormap to register';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.registercolormap.a.map.def := '';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.registercolormap.a.map.a := 'string';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.registercolormap.s := 'registercolormap(map)';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.unregistercolormap := [=];
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.unregistercolormap.d := 'Explicitly unregister a colormap on the \VdisplaypanelT';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.unregistercolormap.a.map := [=];
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.unregistercolormap.a.map.d := 'name of colormap to unregister';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.unregistercolormap.a.map.def := '';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.unregistercolormap.a.map.a := 'string';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.unregistercolormap.s := 'unregistercolormap(map)';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.register := [=];
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.register.d := 'Register a \VdisplaydataT\ for drawing';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.register.a.displaydata := [=];
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.register.a.displaydata.d := '\VdisplaydataT\ to register';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.register.a.displaydata.def := '';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.register.a.displaydata.a := '\VdisplaydataT';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.register.s := 'register(displaydata)';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.unregister := [=];
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.unregister.d := 'Unregister a \VdisplaydataT\ from this \VdisplaypanelT';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.unregister.a.displaydata := [=];
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.unregister.a.displaydata.d := '\VdisplaydataT\ to unregister';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.unregister.a.displaydata.def := '';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.unregister.a.displaydata.a := '\VdisplaydataT';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.unregister.s := 'unregister(displaydata)';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.unregisterall := [=];
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.unregisterall.d := 'Unregister all \VdisplaydataTs\ from this \VdisplaypanelT';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.unregisterall.s := 'unregisterall()';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.unzoom := [=];
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.unzoom.d := 'Unzoom the current view';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.unzoom.s := 'unzoom()';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.setzoom := [=];
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.setzoom.d := 'Set a specific zoom';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.setzoom.a.blc := [=];
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.setzoom.a.blc.d := 'bottom-left linear coordinates of zoom';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.setzoom.a.blc.def := '';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.setzoom.a.blc.a := '2-vector';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.setzoom.a.trc := [=];
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.setzoom.a.trc.d := 'top-right linear coordinates of zoom';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.setzoom.a.trc.def := '';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.setzoom.a.trc.a := '2-vector';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.setzoom.s := 'setzoom(blc, trc)';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.zoom := [=];
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.zoom.d := 'Zoom by a given factor';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.zoom.a.xfac := [=];
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.zoom.a.xfac.d := 'scale factor in X direction';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.zoom.a.xfac.def := '2.0';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.zoom.a.xfac.a := 'float';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.zoom.a.yfac := [=];
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.zoom.a.yfac.d := 'scale factor in Y direction';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.zoom.a.yfac.def := 'unset';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.zoom.a.yfac.a := 'unset or float';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.zoom.s := 'zoom(xfac, yfac)';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.adjust := [=];
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.adjust.d := 'Display adjustment panels for the registered \VdisplaydataTs';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.adjust.s := 'adjust()';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.registrationflags := [=];
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.registrationflags.d := 'Return a record describing which \VdisplaydataTs\ are registered on this \tool';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.registrationflags.s := 'registrationflags()';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.getdisplaydatas := [=];
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.getdisplaydatas.d := 'Unsure what this really does';
help::pkg.displayp.viewer.objs.viewerdisplaypanel.m.getdisplaydatas.s := 'getdisplaydatas()';

