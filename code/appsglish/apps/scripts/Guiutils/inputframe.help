%% Copyright (C) 1999
%% Associated Universities, Inc. Washington DC, USA.
%%
%% This library is free software; you can redistribute it and/or modify it
%% under the terms of the GNU Library General Public License as published by
%% the Free Software Foundation; either version 2 of the License, or (at your
%% option) any later version.
%%
%% This library is distributed in the hope that it will be useful, but WITHOUT
%% ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
%% FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Library General Public
%% License for more details.
%%
%% You should have received a copy of the GNU Library General Public License
%% along with this library; if not, write to the Free Software Foundation,
%% Inc., 675 Massachusetts Ave, Cambridge, MA 02139, USA.
%%
%% Correspondence concerning AIPS++ should be addressed as follows:
%%        Internet email: aips2-request@nrao.edu.
%%        Postal address: AIPS++ Project Office
%%                        National Radio Astronomy Observatory
%%                        520 Edgemont Road
%%                        Charlottesville, VA 22903-2475 USA
%%
%% $Id: inputframe.help,v 19.2 2004/08/25 01:59:52 cvsmgr Exp $
\begin{ahobject}{gui}{Standard Input Forms generated from Glish records}
\ahinclude{inputframe.g}
\begin{ahdescription}
The GUI tool provies a way for generating standard input forms.  Input forms 
are supported in two ways:
\begin{enumerate}
\item Stand-alone input form,
\item Input form imbedded in a glishTk frame,
\end{enumerate}
Additionally the input forms may be selected either via tabs or a scrolling
list.
The inputform and tabform methods use a \textit{screen input record} or a 
collection of screen input records (passed as a record).
The  \textit{screen input record} has the following members

\begin{tabular}{ll}
title & text in the window title\\
label & text in the window\\
actions & (a.label a.function)record of functions\\
layout & ignored for now\\
data & record of datums\\
progress & T or F (Shows a progress bar, not implemented)\\
\end{tabular}

\medskip
Each member of a \textit{data record} is a datum and has the following
members

\begin{tabular}{ll}
label & Description of datum field\\
type & one of the following: string, vector\_string, float, double\\
     & long, integer, file, table, time, date, or\\
     & text - string with more than oneline of text\\
required & boolean, T if required for processing\\
hint & check, radio, list, menu\\
enums & vector of allowed values\\
multiple & boolean for allowing multiple choices of enums\\
range.min & minimum value\\
range.max & maximum value\\
default & default value\\
verify & function to verify input\\
mask & display mask (not implemented)\\
help.url & a URL to drive a web browser (not implemented)\\
help.text & text for help of this field (not implemented)\\
\end{tabular}

If a user keys in a value starting with a \$, the Glish variable with that same
name (minus the \$) will be used for that input value.

\end{ahdescription}
\ahfuncs{}
\begin{ahfunction}{inputform}{Creates a input form, either stand-alone or in a
frame}
\begin{ahargs}
\ahaddarg{scrnInputs}{Screen input record}{}{any valid screen input record}
\ahaddarg{title}{Label or window title of input form}{\aipspp\ Input Form}{Any String}
\ahaddarg{dismiss}{Dismiss flag}{T}{Flag to dismiss the form after returning from one of the action events}
\ahaddarg{parent}{The parent frame}{F}{Either F or the frame to put the input form}
\end{ahargs}
\end{ahfunction}
\begin{ahfunction}{tabform}{Creates a tab-styled input form, either stand-alone or in a
frame}
\begin{ahargs}
\ahaddarg{methods}{Collection of screen input records used by inputform}{}{any valid record of screen input records}
\ahaddarg{title}{Label or window title of input form}{\aipspp\ Tab Input Form}{Any String}
\ahaddarg{dismiss}{Dismiss flag}{T}{Flag to dismiss the form after returning from one of the action events}
\ahaddarg{parent}{The parent frame}{F}{Either F or the frame to put the tab-input form}
\ahaddarg{tabcount}{Number of functions that cause a list box to be used}{5}{any integer but should be less than 7}
\ahaddarg{side}{Which side to pack the list box on}{left}{top, bottom, left, right}
\end{ahargs}
\begin{ahdescription}
The function's argument may have a two attributes, disallow and show.  The 
disallow attributes tells the tabframe not to allow the array of functions
to display or execute that function.  The show option will gray out a function 
in the tab list rather than hide it.
\end{ahdescription}
\end{ahfunction}
\end{ahobject}
