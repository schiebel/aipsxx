%% Copyright (C) 1999
%% Associated Universities, Inc. Washington DC, USA.
%%
%% This library is free software; you can redistribute it and/or modify it
%% under the terms of the GNU Library General Public License as published by
%% the Free Software Foundation; either version 2 of the License, or (at your
%% option) any later version.
%%
%% This library is distributed in the hope that it will be useful, but WITHOUT
%% ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
%% FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Library General Public
%% License for more details.
%%
%% You should have received a copy of the GNU Library General Public License
%% along with this library; if not, write to the Free Software Foundation,
%% Inc., 675 Massachusetts Ave, Cambridge, MA 02139, USA.
%%
%% Correspondence concerning AIPS++ should be addressed as follows:
%%        Internet email: aips2-request@nrao.edu.
%%        Postal address: AIPS++ Project Office
%%                        National Radio Astronomy Observatory
%%                        520 Edgemont Road
%%                        Charlottesville, VA 22903-2475 USA
%%
%% $Id: assay.help,v 19.2 2004/08/25 02:07:20 cvsmgr Exp $
\begin{ahobject}{assay}{Assay test and demo functions}

\ahinclude{assay.g}

\ahkeyword{assay}{}

\ahmethods{}

\begin{ahdescription}
The assay class is used to track the results of running
the test and demonstration functions. It is useful for verifying
an installation. It can also assay any list of functions. The
functions must not require arguments.

The functions to be tested should use the Glish fail mechanism
for assay to be meaningful.

The standard tests and demonstrations are those that are expected
to not fail in a working installation.
\end{ahdescription}

\begin{ahexample}
\begin{verbatim}
- include "assay.g"
T 
- assay().trytests()
\end{verbatim}
\end{ahexample}

\begin{ahfunction}{try}{Try each of a list of functions}
\begin{ahdescription}
For each function in the list, run the function
({\em without arguments}) and trap any fails. At the
end, the failures and corresponding messages are logged,
and the number of failures is returned.

Note that the argument is a list of function {\em names},
not the functions themselves.
\end{ahdescription}
\begin{ahargs}
\ahaddarg{functionlist}{The list of functions}{}{}
\end{ahargs}
\ahreturns{Int - Number that failed}
\begin{ahexample}
\begin{verbatim}
- include "assay.g"
T 
- assay().try('foo bar tabletest')
foo failed:  argument must be defined
bar failed:  argument must be defined
2 
\end{verbatim}
\end{ahexample}
\end{ahfunction}

\begin{ahfunction}{tests}{Returns names of the standard tests}
\end{ahfunction}

\begin{ahfunction}{demos}{Returns names of the standard demonstrations}
\end{ahfunction}

\begin{ahfunction}{trytests}{Tries the standard tests}
\begin{ahargs}
\ahaddarg{tests}{Names of tests}{All tests}{String}
\end{ahargs}
\ahreturns{Int - Number that failed}
\end{ahfunction}

\begin{ahfunction}{trydemos}{Tries the standard demonstrations}
\begin{ahargs}
\ahaddarg{demos}{Names of demos}{All demos}{String}
\end{ahargs}
\ahreturns{Int - Number that failed}
\end{ahfunction}

\end{ahobject}

