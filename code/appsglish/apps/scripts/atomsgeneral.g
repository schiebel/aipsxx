# atomsgeneral.g: help atoms for the general package. 
# Copyright (C) 1999
# Associated Universities, Inc. Washington DC, USA.
#
# This library is free software; you can redistribute it and/or modify it
# under the terms of the GNU Library General Public License as published by
# the Free Software Foundation; either version 2 of the License, or (at your
# option) any later version.
#
# This library is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Library General Public
# License for more details.
#
# You should have received a copy of the GNU Library General Public License
# along with this library; if not, write to the Free Software Foundation,
# Inc., 675 Massachusetts Ave, Cambridge, MA 02139, USA.
#
# Correspondence concerning AIPS++ should be addressed as follows:
#        Internet email: aips2-request@nrao.edu.
#        Postal address: AIPS++ Project Office
#                        National Radio Astronomy Observatory
#                        520 Edgemont Road
#                        Charlottesville, VA 22903-2475 USA
#
# $Id: atomsgeneral.g,v 19.973 2006/10/17 01:30:47 wyoung Exp $

pragma include once
val help::pkg.general := [=];
help::pkg.general::d := 'package for general use astronomical processing';

help::pkg.general.deconvolver := [=];
help::pkg.general.deconvolver.objs := [=];
help::pkg.general.deconvolver.funs := [=];
help::pkg.general.deconvolver.d := 'Module for deconvolving images';
help::pkg.general.deconvolver.objs.deconvolver := [=];
help::pkg.general.deconvolver.objs.deconvolver.m := [=];
help::pkg.general.deconvolver.objs.deconvolver.c := [=];
help::pkg.general.deconvolver.objs.deconvolver.d := 'deconvolver tool';
help::pkg.general.deconvolver.objs.deconvolver.c.deconvolver := [=];
help::pkg.general.deconvolver.objs.deconvolver.c.deconvolver.d := 'Construct a deconvolver tool';
help::pkg.general.deconvolver.objs.deconvolver.c.deconvolver.a.dirtyname := [=];
help::pkg.general.deconvolver.objs.deconvolver.c.deconvolver.a.dirtyname.d := 'Dirty image to be processed';
help::pkg.general.deconvolver.objs.deconvolver.c.deconvolver.a.dirtyname.def := '\' dirty\' ';
help::pkg.general.deconvolver.objs.deconvolver.c.deconvolver.a.dirtyname.a := 'Table name';
help::pkg.general.deconvolver.objs.deconvolver.c.deconvolver.a.psfname := [=];
help::pkg.general.deconvolver.objs.deconvolver.c.deconvolver.a.psfname.d := 'point spread function to be processed';
help::pkg.general.deconvolver.objs.deconvolver.c.deconvolver.a.psfname.def := '\' psf\' ';
help::pkg.general.deconvolver.objs.deconvolver.c.deconvolver.a.psfname.a := 'Table name';
help::pkg.general.deconvolver.objs.deconvolver.c.deconvolver.s := 'deconvolver(dirtyname, psfname)';
help::pkg.general.deconvolver.objs.deconvolver.c.deconvolvertester := [=];
help::pkg.general.deconvolver.objs.deconvolver.c.deconvolvertester.d := 'Construct a deconvolver tool for testing';
help::pkg.general.deconvolver.objs.deconvolver.c.deconvolvertester.a.filename := [=];
help::pkg.general.deconvolver.objs.deconvolver.c.deconvolvertester.a.filename.d := 'Name of MS to create';
help::pkg.general.deconvolver.objs.deconvolver.c.deconvolvertester.a.filename.def := '3C273XC1.ms';
help::pkg.general.deconvolver.objs.deconvolver.c.deconvolvertester.a.filename.a := 'String';
help::pkg.general.deconvolver.objs.deconvolver.c.deconvolvertester.a.size := [=];
help::pkg.general.deconvolver.objs.deconvolver.c.deconvolvertester.a.size.d := 'Number of pixels on a side';
help::pkg.general.deconvolver.objs.deconvolver.c.deconvolvertester.a.size.def := '128';
help::pkg.general.deconvolver.objs.deconvolver.c.deconvolvertester.a.size.a := 'Int';
help::pkg.general.deconvolver.objs.deconvolver.c.deconvolvertester.a.stokes := [=];
help::pkg.general.deconvolver.objs.deconvolver.c.deconvolvertester.a.stokes.d := 'Stokes parameters to image (e.g. \' IQUV\' )';
help::pkg.general.deconvolver.objs.deconvolver.c.deconvolvertester.a.stokes.def := '\' I\' ';
help::pkg.general.deconvolver.objs.deconvolver.c.deconvolvertester.a.stokes.a := '\' I\' |\' IV\' |\' IQU\' |\' IQUV\' ';
help::pkg.general.deconvolver.objs.deconvolver.c.deconvolvertester.a.coordinates := [=];
help::pkg.general.deconvolver.objs.deconvolver.c.deconvolvertester.a.coordinates.d := 'Coordinate system to use e.g. \' j2000,\' gal\' ';
help::pkg.general.deconvolver.objs.deconvolver.c.deconvolvertester.a.coordinates.def := '\' j2000\' ';
help::pkg.general.deconvolver.objs.deconvolver.c.deconvolvertester.a.coordinates.a := 'String';
help::pkg.general.deconvolver.objs.deconvolver.c.deconvolvertester.s := 'deconvolvertester(filename, size, stokes, coordinates)';
help::pkg.general.deconvolver.objs.deconvolver.m.open := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.open.d := 'Open a new dirty image and PSF';
help::pkg.general.deconvolver.objs.deconvolver.m.open.a.dirty := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.open.a.dirty.d := 'Dirty image to be processed';
help::pkg.general.deconvolver.objs.deconvolver.m.open.a.dirty.def := '\' dirty\' ';
help::pkg.general.deconvolver.objs.deconvolver.m.open.a.dirty.a := 'Table name';
help::pkg.general.deconvolver.objs.deconvolver.m.open.a.psf := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.open.a.psf.d := 'point spread function to be processed';
help::pkg.general.deconvolver.objs.deconvolver.m.open.a.psf.def := '\' psf\' ';
help::pkg.general.deconvolver.objs.deconvolver.m.open.a.psf.a := 'Table name';
help::pkg.general.deconvolver.objs.deconvolver.m.open.s := 'open(dirty, psf)';
help::pkg.general.deconvolver.objs.deconvolver.m.reopen := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.reopen.d := 'Reopen the dirty image and PSF';
help::pkg.general.deconvolver.objs.deconvolver.m.reopen.s := 'reopen()';
help::pkg.general.deconvolver.objs.deconvolver.m.close := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.close.d := 'Close the deconvolver tool';
help::pkg.general.deconvolver.objs.deconvolver.m.close.s := 'close()';
help::pkg.general.deconvolver.objs.deconvolver.m.done := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.done.d := 'Terminate the deconvolver process';
help::pkg.general.deconvolver.objs.deconvolver.m.done.s := 'done()';
help::pkg.general.deconvolver.objs.deconvolver.m.summary := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.summary.d := 'Summarize the current state';
help::pkg.general.deconvolver.objs.deconvolver.m.summary.s := 'summary()';
help::pkg.general.deconvolver.objs.deconvolver.m.boxmask := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.boxmask.d := 'Construct a mask from blc, trc';
help::pkg.general.deconvolver.objs.deconvolver.m.boxmask.a.mask := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.boxmask.a.mask.d := 'name of mask image';
help::pkg.general.deconvolver.objs.deconvolver.m.boxmask.a.mask.def := '';
help::pkg.general.deconvolver.objs.deconvolver.m.boxmask.a.mask.a := 'String';
help::pkg.general.deconvolver.objs.deconvolver.m.boxmask.a.blc := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.boxmask.a.blc.d := 'Bottom left corner';
help::pkg.general.deconvolver.objs.deconvolver.m.boxmask.a.blc.def := '[1,1,1,1]';
help::pkg.general.deconvolver.objs.deconvolver.m.boxmask.a.blc.a := 'Vector';
help::pkg.general.deconvolver.objs.deconvolver.m.boxmask.a.trc := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.boxmask.a.trc.d := 'Top right corner';
help::pkg.general.deconvolver.objs.deconvolver.m.boxmask.a.trc.def := 'image shape';
help::pkg.general.deconvolver.objs.deconvolver.m.boxmask.a.trc.a := 'Vector';
help::pkg.general.deconvolver.objs.deconvolver.m.boxmask.a.value := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.boxmask.a.value.d := 'Value to fill in';
help::pkg.general.deconvolver.objs.deconvolver.m.boxmask.a.value.def := '1.0';
help::pkg.general.deconvolver.objs.deconvolver.m.boxmask.a.value.a := 'Float';
help::pkg.general.deconvolver.objs.deconvolver.m.boxmask.s := 'boxmask(mask, blc, trc, value)';
help::pkg.general.deconvolver.objs.deconvolver.m.clipimage := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.clipimage.d := 'Zero all pixels where Stokes I is below a threshold';
help::pkg.general.deconvolver.objs.deconvolver.m.clipimage.a.image := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.clipimage.a.image.d := 'name of image';
help::pkg.general.deconvolver.objs.deconvolver.m.clipimage.a.image.def := '';
help::pkg.general.deconvolver.objs.deconvolver.m.clipimage.a.image.a := 'String';
help::pkg.general.deconvolver.objs.deconvolver.m.clipimage.a.threshold := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.clipimage.a.threshold.d := 'Threshold';
help::pkg.general.deconvolver.objs.deconvolver.m.clipimage.a.threshold.def := '\' 0Jy\' ';
help::pkg.general.deconvolver.objs.deconvolver.m.clipimage.a.threshold.a := 'String';
help::pkg.general.deconvolver.objs.deconvolver.m.clipimage.s := 'clipimage(image, threshold)';
help::pkg.general.deconvolver.objs.deconvolver.m.clarkclean := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.clarkclean.d := 'Make a clean image using the Clark Clean a threshold';
help::pkg.general.deconvolver.objs.deconvolver.m.clarkclean.a.niter := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.clarkclean.a.niter.d := 'Number of iterations';
help::pkg.general.deconvolver.objs.deconvolver.m.clarkclean.a.niter.def := '1000';
help::pkg.general.deconvolver.objs.deconvolver.m.clarkclean.a.niter.a := 'Int';
help::pkg.general.deconvolver.objs.deconvolver.m.clarkclean.a.gain := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.clarkclean.a.gain.d := 'Loop Gain for CLEANing';
help::pkg.general.deconvolver.objs.deconvolver.m.clarkclean.a.gain.def := '0.1';
help::pkg.general.deconvolver.objs.deconvolver.m.clarkclean.a.gain.a := 'Double';
help::pkg.general.deconvolver.objs.deconvolver.m.clarkclean.a.threshold := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.clarkclean.a.threshold.d := 'Flux level at which to stop CLEANing';
help::pkg.general.deconvolver.objs.deconvolver.m.clarkclean.a.threshold.def := '\' 0Jy\' ';
help::pkg.general.deconvolver.objs.deconvolver.m.clarkclean.a.threshold.a := 'Quantity';
help::pkg.general.deconvolver.objs.deconvolver.m.clarkclean.a.displayprogress := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.clarkclean.a.displayprogress.d := 'Display the progress of the cleaning?';
help::pkg.general.deconvolver.objs.deconvolver.m.clarkclean.a.displayprogress.def := 'F';
help::pkg.general.deconvolver.objs.deconvolver.m.clarkclean.a.displayprogress.a := 'Bool';
help::pkg.general.deconvolver.objs.deconvolver.m.clarkclean.a.model := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.clarkclean.a.model.d := 'Name of images';
help::pkg.general.deconvolver.objs.deconvolver.m.clarkclean.a.model.def := '';
help::pkg.general.deconvolver.objs.deconvolver.m.clarkclean.a.model.a := 'String';
help::pkg.general.deconvolver.objs.deconvolver.m.clarkclean.a.mask := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.clarkclean.a.mask.d := 'Name of mask images used for CLEANing';
help::pkg.general.deconvolver.objs.deconvolver.m.clarkclean.a.mask.def := '';
help::pkg.general.deconvolver.objs.deconvolver.m.clarkclean.a.mask.a := 'String';
help::pkg.general.deconvolver.objs.deconvolver.m.clarkclean.a.histbins := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.clarkclean.a.histbins.d := 'Number of bins in the pixel-flux histogram';
help::pkg.general.deconvolver.objs.deconvolver.m.clarkclean.a.histbins.def := '500';
help::pkg.general.deconvolver.objs.deconvolver.m.clarkclean.a.histbins.a := 'Int';
help::pkg.general.deconvolver.objs.deconvolver.m.clarkclean.a.psfpatchsize := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.clarkclean.a.psfpatchsize.d := 'Size of PSF for minor cycle';
help::pkg.general.deconvolver.objs.deconvolver.m.clarkclean.a.psfpatchsize.def := '[51,51]';
help::pkg.general.deconvolver.objs.deconvolver.m.clarkclean.a.psfpatchsize.a := 'Vector of Int';
help::pkg.general.deconvolver.objs.deconvolver.m.clarkclean.a.maxextpsf := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.clarkclean.a.maxextpsf.d := 'maximum external sidelobe, used to set depth of minor cycle clean';
help::pkg.general.deconvolver.objs.deconvolver.m.clarkclean.a.maxextpsf.def := '0.2';
help::pkg.general.deconvolver.objs.deconvolver.m.clarkclean.a.maxextpsf.a := 'Double';
help::pkg.general.deconvolver.objs.deconvolver.m.clarkclean.a.speedup := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.clarkclean.a.speedup.d := 'Cleaning speedup exponent';
help::pkg.general.deconvolver.objs.deconvolver.m.clarkclean.a.speedup.def := '0';
help::pkg.general.deconvolver.objs.deconvolver.m.clarkclean.a.speedup.a := 'Int';
help::pkg.general.deconvolver.objs.deconvolver.m.clarkclean.a.maxnumpix := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.clarkclean.a.maxnumpix.d := 'Maximum number of pixels used in each minor cycle';
help::pkg.general.deconvolver.objs.deconvolver.m.clarkclean.a.maxnumpix.def := '10000';
help::pkg.general.deconvolver.objs.deconvolver.m.clarkclean.a.maxnumpix.a := 'Int';
help::pkg.general.deconvolver.objs.deconvolver.m.clarkclean.a.maxnummajcycles := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.clarkclean.a.maxnummajcycles.d := 'Max number of major cycles; -1 = no restrictions';
help::pkg.general.deconvolver.objs.deconvolver.m.clarkclean.a.maxnummajcycles.def := '-1';
help::pkg.general.deconvolver.objs.deconvolver.m.clarkclean.a.maxnummajcycles.a := 'Int';
help::pkg.general.deconvolver.objs.deconvolver.m.clarkclean.a.maxnummineriter := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.clarkclean.a.maxnummineriter.d := 'Max number of minor iterations; -1 = no restrictions';
help::pkg.general.deconvolver.objs.deconvolver.m.clarkclean.a.maxnummineriter.def := '-1';
help::pkg.general.deconvolver.objs.deconvolver.m.clarkclean.a.maxnummineriter.a := 'Int';
help::pkg.general.deconvolver.objs.deconvolver.m.clarkclean.s := 'clarkclean(niter, gain, threshold, displayprogress, model, mask, histbins, psfpatchsize, maxextpsf, speedup, maxnumpix, maxnummajcycles, maxnummineriter)';
help::pkg.general.deconvolver.objs.deconvolver.m.dirtyname := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.dirtyname.d := 'Return the name of the dirty-image table';
help::pkg.general.deconvolver.objs.deconvolver.m.dirtyname.s := 'dirtyname()';
help::pkg.general.deconvolver.objs.deconvolver.m.psfname := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.psfname.d := 'Return the name of the PSF-image table';
help::pkg.general.deconvolver.objs.deconvolver.m.psfname.s := 'psfname()';
help::pkg.general.deconvolver.objs.deconvolver.m.make := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.make.d := 'Make an empty image';
help::pkg.general.deconvolver.objs.deconvolver.m.make.a.image := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.make.a.image.d := 'Name of the new image on the disk';
help::pkg.general.deconvolver.objs.deconvolver.m.make.a.image.def := '\' \' ';
help::pkg.general.deconvolver.objs.deconvolver.m.make.a.image.a := 'String';
help::pkg.general.deconvolver.objs.deconvolver.m.make.a.async := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.make.a.async.d := 'Run asynchronously in the background?';
help::pkg.general.deconvolver.objs.deconvolver.m.make.a.async.def := '!dowait';
help::pkg.general.deconvolver.objs.deconvolver.m.make.a.async.a := 'Bool';
help::pkg.general.deconvolver.objs.deconvolver.m.make.s := 'make(image, async)';
help::pkg.general.deconvolver.objs.deconvolver.m.convolve := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.convolve.d := 'Convolves an image with the PSF';
help::pkg.general.deconvolver.objs.deconvolver.m.convolve.a.convolvemodel := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.convolve.a.convolvemodel.d := 'Name of the output image on the disk to hold the result of the convolution';
help::pkg.general.deconvolver.objs.deconvolver.m.convolve.a.convolvemodel.def := '\' \' ';
help::pkg.general.deconvolver.objs.deconvolver.m.convolve.a.convolvemodel.a := 'String';
help::pkg.general.deconvolver.objs.deconvolver.m.convolve.a.model := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.convolve.a.model.d := 'The input image to be convolved with the PSF';
help::pkg.general.deconvolver.objs.deconvolver.m.convolve.a.model.def := '\' \' ';
help::pkg.general.deconvolver.objs.deconvolver.m.convolve.a.model.a := 'String';
help::pkg.general.deconvolver.objs.deconvolver.m.convolve.s := 'convolve(convolvemodel, model)';
help::pkg.general.deconvolver.objs.deconvolver.m.makegaussian := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.makegaussian.d := 'Make an image with a single gaussian component';
help::pkg.general.deconvolver.objs.deconvolver.m.makegaussian.a.gaussianimage := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.makegaussian.a.gaussianimage.d := 'Name of the output image on the disk';
help::pkg.general.deconvolver.objs.deconvolver.m.makegaussian.a.gaussianimage.def := '\' \' ';
help::pkg.general.deconvolver.objs.deconvolver.m.makegaussian.a.gaussianimage.a := 'String';
help::pkg.general.deconvolver.objs.deconvolver.m.makegaussian.a.bmaj := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.makegaussian.a.bmaj.d := 'The major axis of the gaussian';
help::pkg.general.deconvolver.objs.deconvolver.m.makegaussian.a.bmaj.def := '\' 0rad\' ';
help::pkg.general.deconvolver.objs.deconvolver.m.makegaussian.a.bmaj.a := 'String';
help::pkg.general.deconvolver.objs.deconvolver.m.makegaussian.a.bmin := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.makegaussian.a.bmin.d := 'The minor axis of the gaussian';
help::pkg.general.deconvolver.objs.deconvolver.m.makegaussian.a.bmin.def := '\' 0rad\' ';
help::pkg.general.deconvolver.objs.deconvolver.m.makegaussian.a.bmin.a := 'String';
help::pkg.general.deconvolver.objs.deconvolver.m.makegaussian.a.bpa := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.makegaussian.a.bpa.d := 'The Position Angle of the gaussian';
help::pkg.general.deconvolver.objs.deconvolver.m.makegaussian.a.bpa.def := '\' 0deg\' ';
help::pkg.general.deconvolver.objs.deconvolver.m.makegaussian.a.bpa.a := 'String';
help::pkg.general.deconvolver.objs.deconvolver.m.makegaussian.a.normalize := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.makegaussian.a.normalize.d := 'Normalize the area under the gaussian to 1.0?';
help::pkg.general.deconvolver.objs.deconvolver.m.makegaussian.a.normalize.def := 'T';
help::pkg.general.deconvolver.objs.deconvolver.m.makegaussian.a.normalize.a := 'Bool';
help::pkg.general.deconvolver.objs.deconvolver.m.makegaussian.a.async := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.makegaussian.a.async.d := 'Run asynchronously in the background?';
help::pkg.general.deconvolver.objs.deconvolver.m.makegaussian.a.async.def := '!dowait';
help::pkg.general.deconvolver.objs.deconvolver.m.makegaussian.a.async.a := 'Bool';
help::pkg.general.deconvolver.objs.deconvolver.m.makegaussian.s := 'makegaussian(gaussianimage, bmaj, bmin, bpa, normalize, async)';
help::pkg.general.deconvolver.objs.deconvolver.m.type := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.type.d := 'Return the type of the of the tool';
help::pkg.general.deconvolver.objs.deconvolver.m.type.s := 'type()';
help::pkg.general.deconvolver.objs.deconvolver.m.id := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.id.d := 'Return the Glish ID of the tool';
help::pkg.general.deconvolver.objs.deconvolver.m.id.s := 'id()';
help::pkg.general.deconvolver.objs.deconvolver.m.state := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.state.d := 'Return the ``state   of the tool';
help::pkg.general.deconvolver.objs.deconvolver.m.state.s := 'state()';
help::pkg.general.deconvolver.objs.deconvolver.m.updatestate := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.updatestate.d := '[A GUI builders related function]Update the GUI to reflect the currect state';
help::pkg.general.deconvolver.objs.deconvolver.m.updatestate.a.f := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.updatestate.a.f.d := 'Glish variable for the GUI to be updated';
help::pkg.general.deconvolver.objs.deconvolver.m.updatestate.a.f.def := '\' \' ';
help::pkg.general.deconvolver.objs.deconvolver.m.updatestate.a.f.a := '';
help::pkg.general.deconvolver.objs.deconvolver.m.updatestate.a.method := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.updatestate.a.method.d := 'The method to be used for updating';
help::pkg.general.deconvolver.objs.deconvolver.m.updatestate.a.method.def := '\' INIT\' ';
help::pkg.general.deconvolver.objs.deconvolver.m.updatestate.a.method.a := '\' INIT\' ,\' DONE\' ,or \' close\' ';
help::pkg.general.deconvolver.objs.deconvolver.m.updatestate.s := 'updatestate(f, method)';
help::pkg.general.deconvolver.objs.deconvolver.m.pixon := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.pixon.d := 'Deconvolve using the Pixon algorithm';
help::pkg.general.deconvolver.objs.deconvolver.m.pixon.a.sigma := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.pixon.a.sigma.d := 'Noise level to try to achieve';
help::pkg.general.deconvolver.objs.deconvolver.m.pixon.a.sigma.def := '\' 0.001Jy\' ';
help::pkg.general.deconvolver.objs.deconvolver.m.pixon.a.sigma.a := 'String';
help::pkg.general.deconvolver.objs.deconvolver.m.pixon.a.model := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.pixon.a.model.d := 'Name of image';
help::pkg.general.deconvolver.objs.deconvolver.m.pixon.a.model.def := '';
help::pkg.general.deconvolver.objs.deconvolver.m.pixon.a.model.a := 'String';
help::pkg.general.deconvolver.objs.deconvolver.m.pixon.a.imageplane := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.pixon.a.imageplane.d := 'Is this an image plane problem (like single dish)?';
help::pkg.general.deconvolver.objs.deconvolver.m.pixon.a.imageplane.def := 'F';
help::pkg.general.deconvolver.objs.deconvolver.m.pixon.a.imageplane.a := 'Bool';
help::pkg.general.deconvolver.objs.deconvolver.m.pixon.a.async := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.pixon.a.async.d := 'Run asynchronously in the background?';
help::pkg.general.deconvolver.objs.deconvolver.m.pixon.a.async.def := '!dowait';
help::pkg.general.deconvolver.objs.deconvolver.m.pixon.a.async.a := 'Bool';
help::pkg.general.deconvolver.objs.deconvolver.m.pixon.s := 'pixon(sigma, model, imageplane, async)';
help::pkg.general.deconvolver.objs.deconvolver.m.clean := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.clean.d := 'Make a clean image with Hogbom or MultiScale Clean';
help::pkg.general.deconvolver.objs.deconvolver.m.clean.a.algorithm := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.clean.a.algorithm.d := 'Algorithm to use';
help::pkg.general.deconvolver.objs.deconvolver.m.clean.a.algorithm.def := '\' msclean\' ';
help::pkg.general.deconvolver.objs.deconvolver.m.clean.a.algorithm.a := 'String:\' hogbom\' |\' msclean\' |\' fullmsclean\' ';
help::pkg.general.deconvolver.objs.deconvolver.m.clean.a.niter := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.clean.a.niter.d := 'Number of Iterations, set to zero for no CLEANing';
help::pkg.general.deconvolver.objs.deconvolver.m.clean.a.niter.def := '1000';
help::pkg.general.deconvolver.objs.deconvolver.m.clean.a.niter.a := 'Int';
help::pkg.general.deconvolver.objs.deconvolver.m.clean.a.gain := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.clean.a.gain.d := 'Loop Gain for CLEANing, try 0.7 for msclean or fullmsclean';
help::pkg.general.deconvolver.objs.deconvolver.m.clean.a.gain.def := '0.1';
help::pkg.general.deconvolver.objs.deconvolver.m.clean.a.gain.a := 'Double';
help::pkg.general.deconvolver.objs.deconvolver.m.clean.a.threshold := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.clean.a.threshold.d := 'Flux level at which to stop CLEANing';
help::pkg.general.deconvolver.objs.deconvolver.m.clean.a.threshold.def := '\' 0Jy\' ';
help::pkg.general.deconvolver.objs.deconvolver.m.clean.a.threshold.a := 'String';
help::pkg.general.deconvolver.objs.deconvolver.m.clean.a.model := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.clean.a.model.d := 'Name of images';
help::pkg.general.deconvolver.objs.deconvolver.m.clean.a.model.def := '';
help::pkg.general.deconvolver.objs.deconvolver.m.clean.a.model.a := 'String';
help::pkg.general.deconvolver.objs.deconvolver.m.clean.a.mask := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.clean.a.mask.d := 'Name of mask images used for CLEANing';
help::pkg.general.deconvolver.objs.deconvolver.m.clean.a.mask.def := '';
help::pkg.general.deconvolver.objs.deconvolver.m.clean.a.mask.a := 'String';
help::pkg.general.deconvolver.objs.deconvolver.m.clean.a.async := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.clean.a.async.d := 'Run asynchronously in the background?';
help::pkg.general.deconvolver.objs.deconvolver.m.clean.a.async.def := '!dowait';
help::pkg.general.deconvolver.objs.deconvolver.m.clean.a.async.a := 'Bool';
help::pkg.general.deconvolver.objs.deconvolver.m.clean.s := 'clean(algorithm, niter, gain, threshold, model, mask, async)';
help::pkg.general.deconvolver.objs.deconvolver.m.setscales := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.setscales.d := 'Set the scale sizes for MultiScale Clean';
help::pkg.general.deconvolver.objs.deconvolver.m.setscales.a.scalemethod := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.setscales.a.scalemethod.d := 'Method by which scales are set';
help::pkg.general.deconvolver.objs.deconvolver.m.setscales.a.scalemethod.def := 'nscales';
help::pkg.general.deconvolver.objs.deconvolver.m.setscales.a.scalemethod.a := 'String: \' nscales\' |\' uservector\' ';
help::pkg.general.deconvolver.objs.deconvolver.m.setscales.a.nscales := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.setscales.a.nscales.d := 'Number of scales';
help::pkg.general.deconvolver.objs.deconvolver.m.setscales.a.nscales.def := '5';
help::pkg.general.deconvolver.objs.deconvolver.m.setscales.a.nscales.a := 'Int';
help::pkg.general.deconvolver.objs.deconvolver.m.setscales.a.uservector := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.setscales.a.uservector.d := 'Vector of scale sizes to use';
help::pkg.general.deconvolver.objs.deconvolver.m.setscales.a.uservector.def := '[0, 3, 10]';
help::pkg.general.deconvolver.objs.deconvolver.m.setscales.a.uservector.a := 'Vector of Doubles';
help::pkg.general.deconvolver.objs.deconvolver.m.setscales.s := 'setscales(scalemethod, nscales, uservector)';
help::pkg.general.deconvolver.objs.deconvolver.m.ft := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.ft.d := 'Fourier transform the specified model';
help::pkg.general.deconvolver.objs.deconvolver.m.ft.a.model := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.ft.a.model.d := 'Name of image';
help::pkg.general.deconvolver.objs.deconvolver.m.ft.a.model.def := '';
help::pkg.general.deconvolver.objs.deconvolver.m.ft.a.model.a := 'strings';
help::pkg.general.deconvolver.objs.deconvolver.m.ft.a.transform := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.ft.a.transform.d := 'Name of transform image';
help::pkg.general.deconvolver.objs.deconvolver.m.ft.a.transform.def := '';
help::pkg.general.deconvolver.objs.deconvolver.m.ft.a.transform.a := 'strings';
help::pkg.general.deconvolver.objs.deconvolver.m.ft.a.async := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.ft.a.async.d := 'Run asynchronously in the background?';
help::pkg.general.deconvolver.objs.deconvolver.m.ft.a.async.def := '!dowait';
help::pkg.general.deconvolver.objs.deconvolver.m.ft.a.async.a := 'Bool';
help::pkg.general.deconvolver.objs.deconvolver.m.ft.s := 'ft(model, transform, async)';
help::pkg.general.deconvolver.objs.deconvolver.m.restore := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.restore.d := 'Restore the residuals';
help::pkg.general.deconvolver.objs.deconvolver.m.restore.a.model := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.restore.a.model.d := 'Name of input model';
help::pkg.general.deconvolver.objs.deconvolver.m.restore.a.model.def := '';
help::pkg.general.deconvolver.objs.deconvolver.m.restore.a.model.a := 'String';
help::pkg.general.deconvolver.objs.deconvolver.m.restore.a.image := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.restore.a.image.d := 'Name of output restored image';
help::pkg.general.deconvolver.objs.deconvolver.m.restore.a.image.def := '';
help::pkg.general.deconvolver.objs.deconvolver.m.restore.a.image.a := 'String';
help::pkg.general.deconvolver.objs.deconvolver.m.restore.a.bmaj := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.restore.a.bmaj.d := 'Major axis of beam';
help::pkg.general.deconvolver.objs.deconvolver.m.restore.a.bmaj.def := '';
help::pkg.general.deconvolver.objs.deconvolver.m.restore.a.bmaj.a := 'Quantity record';
help::pkg.general.deconvolver.objs.deconvolver.m.restore.a.bmin := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.restore.a.bmin.d := 'Minor axis of beam';
help::pkg.general.deconvolver.objs.deconvolver.m.restore.a.bmin.def := '';
help::pkg.general.deconvolver.objs.deconvolver.m.restore.a.bmin.a := 'Quantity record';
help::pkg.general.deconvolver.objs.deconvolver.m.restore.a.bpa := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.restore.a.bpa.d := 'Position angle of beam';
help::pkg.general.deconvolver.objs.deconvolver.m.restore.a.bpa.def := '';
help::pkg.general.deconvolver.objs.deconvolver.m.restore.a.bpa.a := 'Quantity record';
help::pkg.general.deconvolver.objs.deconvolver.m.restore.a.async := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.restore.a.async.d := 'Run asynchronously in the background';
help::pkg.general.deconvolver.objs.deconvolver.m.restore.a.async.def := '!dowait';
help::pkg.general.deconvolver.objs.deconvolver.m.restore.a.async.a := 'Bool';
help::pkg.general.deconvolver.objs.deconvolver.m.restore.s := 'restore(model, image, bmaj, bmin, bpa, async)';
help::pkg.general.deconvolver.objs.deconvolver.m.residual := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.residual.d := 'Find the residuals';
help::pkg.general.deconvolver.objs.deconvolver.m.residual.a.model := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.residual.a.model.d := 'Names of input models';
help::pkg.general.deconvolver.objs.deconvolver.m.residual.a.model.def := '';
help::pkg.general.deconvolver.objs.deconvolver.m.residual.a.model.a := 'String';
help::pkg.general.deconvolver.objs.deconvolver.m.residual.a.image := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.residual.a.image.d := 'Names of output residual images';
help::pkg.general.deconvolver.objs.deconvolver.m.residual.a.image.def := '';
help::pkg.general.deconvolver.objs.deconvolver.m.residual.a.image.a := 'String';
help::pkg.general.deconvolver.objs.deconvolver.m.residual.a.async := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.residual.a.async.d := 'Run asynchronously in the background';
help::pkg.general.deconvolver.objs.deconvolver.m.residual.a.async.def := '!dowait';
help::pkg.general.deconvolver.objs.deconvolver.m.residual.a.async.a := 'Bool';
help::pkg.general.deconvolver.objs.deconvolver.m.residual.s := 'residual(model, image, async)';
help::pkg.general.deconvolver.objs.deconvolver.m.smooth := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.smooth.d := 'smooth the image';
help::pkg.general.deconvolver.objs.deconvolver.m.smooth.a.model := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.smooth.a.model.d := 'Name of input model';
help::pkg.general.deconvolver.objs.deconvolver.m.smooth.a.model.def := '';
help::pkg.general.deconvolver.objs.deconvolver.m.smooth.a.model.a := 'String';
help::pkg.general.deconvolver.objs.deconvolver.m.smooth.a.image := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.smooth.a.image.d := 'Name of output smoothed image';
help::pkg.general.deconvolver.objs.deconvolver.m.smooth.a.image.def := '';
help::pkg.general.deconvolver.objs.deconvolver.m.smooth.a.image.a := 'String';
help::pkg.general.deconvolver.objs.deconvolver.m.smooth.a.bmaj := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.smooth.a.bmaj.d := 'Major axis of beam';
help::pkg.general.deconvolver.objs.deconvolver.m.smooth.a.bmaj.def := '';
help::pkg.general.deconvolver.objs.deconvolver.m.smooth.a.bmaj.a := 'Quantity record';
help::pkg.general.deconvolver.objs.deconvolver.m.smooth.a.bmin := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.smooth.a.bmin.d := 'Minor axis of beam';
help::pkg.general.deconvolver.objs.deconvolver.m.smooth.a.bmin.def := '';
help::pkg.general.deconvolver.objs.deconvolver.m.smooth.a.bmin.a := 'Quantity record';
help::pkg.general.deconvolver.objs.deconvolver.m.smooth.a.bpa := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.smooth.a.bpa.d := 'Position angle of beam';
help::pkg.general.deconvolver.objs.deconvolver.m.smooth.a.bpa.def := '';
help::pkg.general.deconvolver.objs.deconvolver.m.smooth.a.bpa.a := 'Quantity record';
help::pkg.general.deconvolver.objs.deconvolver.m.smooth.a.normalize := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.smooth.a.normalize.d := 'Normalize volume of psf to unity';
help::pkg.general.deconvolver.objs.deconvolver.m.smooth.a.normalize.def := 'T';
help::pkg.general.deconvolver.objs.deconvolver.m.smooth.a.normalize.a := 'Bool';
help::pkg.general.deconvolver.objs.deconvolver.m.smooth.a.async := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.smooth.a.async.d := 'Run asynchronously in the background';
help::pkg.general.deconvolver.objs.deconvolver.m.smooth.a.async.def := '!dowait';
help::pkg.general.deconvolver.objs.deconvolver.m.smooth.a.async.a := 'Bool';
help::pkg.general.deconvolver.objs.deconvolver.m.smooth.s := 'smooth(model, image, bmaj, bmin, bpa, normalize, async)';
help::pkg.general.deconvolver.objs.deconvolver.m.mem := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.mem.d := 'Make the mem image';
help::pkg.general.deconvolver.objs.deconvolver.m.mem.a.entropy := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.mem.a.entropy.d := 'entropy to use';
help::pkg.general.deconvolver.objs.deconvolver.m.mem.a.entropy.def := '\' entropy\' ';
help::pkg.general.deconvolver.objs.deconvolver.m.mem.a.entropy.a := 'String:\' entropy\' |\' emptiness\' ';
help::pkg.general.deconvolver.objs.deconvolver.m.mem.a.niter := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.mem.a.niter.d := 'Number of Iterations, set to zero for no MEMing';
help::pkg.general.deconvolver.objs.deconvolver.m.mem.a.niter.def := '20';
help::pkg.general.deconvolver.objs.deconvolver.m.mem.a.niter.a := 'Int';
help::pkg.general.deconvolver.objs.deconvolver.m.mem.a.sigma := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.mem.a.sigma.d := 'Noise level to try to achieve';
help::pkg.general.deconvolver.objs.deconvolver.m.mem.a.sigma.def := '\' 0.001Jy\' ';
help::pkg.general.deconvolver.objs.deconvolver.m.mem.a.sigma.a := 'String';
help::pkg.general.deconvolver.objs.deconvolver.m.mem.a.targetflux := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.mem.a.targetflux.d := 'Total image flux to try to achieve';
help::pkg.general.deconvolver.objs.deconvolver.m.mem.a.targetflux.def := '\' 1.0Jy\' ';
help::pkg.general.deconvolver.objs.deconvolver.m.mem.a.targetflux.a := 'String';
help::pkg.general.deconvolver.objs.deconvolver.m.mem.a.constrainflux := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.mem.a.constrainflux.d := 'Use targetflux as a constraint? (or starting flux)';
help::pkg.general.deconvolver.objs.deconvolver.m.mem.a.constrainflux.def := 'F';
help::pkg.general.deconvolver.objs.deconvolver.m.mem.a.constrainflux.a := 'Bool';
help::pkg.general.deconvolver.objs.deconvolver.m.mem.a.model := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.mem.a.model.d := 'Name of input/output model image';
help::pkg.general.deconvolver.objs.deconvolver.m.mem.a.model.def := '';
help::pkg.general.deconvolver.objs.deconvolver.m.mem.a.model.a := 'String';
help::pkg.general.deconvolver.objs.deconvolver.m.mem.a.prior := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.mem.a.prior.d := 'Name of prior (default) image used for mem';
help::pkg.general.deconvolver.objs.deconvolver.m.mem.a.prior.def := '';
help::pkg.general.deconvolver.objs.deconvolver.m.mem.a.prior.a := 'String';
help::pkg.general.deconvolver.objs.deconvolver.m.mem.a.mask := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.mem.a.mask.d := 'Mask image restricting emission (all pixels 0 or 1)';
help::pkg.general.deconvolver.objs.deconvolver.m.mem.a.mask.def := '';
help::pkg.general.deconvolver.objs.deconvolver.m.mem.a.mask.a := 'String';
help::pkg.general.deconvolver.objs.deconvolver.m.mem.a.imageplane := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.mem.a.imageplane.d := 'Is this an image plane problem (like single dish)?';
help::pkg.general.deconvolver.objs.deconvolver.m.mem.a.imageplane.def := 'F';
help::pkg.general.deconvolver.objs.deconvolver.m.mem.a.imageplane.a := 'Bool';
help::pkg.general.deconvolver.objs.deconvolver.m.mem.a.async := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.mem.a.async.d := 'Run asynchronously in the background?';
help::pkg.general.deconvolver.objs.deconvolver.m.mem.a.async.def := '!dowait';
help::pkg.general.deconvolver.objs.deconvolver.m.mem.a.async.a := 'Bool';
help::pkg.general.deconvolver.objs.deconvolver.m.mem.s := 'mem(entropy, niter, sigma, targetflux, constrainflux, model, prior, mask, imageplane, async)';
help::pkg.general.deconvolver.objs.deconvolver.m.makeprior := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.makeprior.d := 'Make the mem s prior image, or make a mask';
help::pkg.general.deconvolver.objs.deconvolver.m.makeprior.a.prior := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.makeprior.a.prior.d := 'output prior image';
help::pkg.general.deconvolver.objs.deconvolver.m.makeprior.a.prior.def := '';
help::pkg.general.deconvolver.objs.deconvolver.m.makeprior.a.prior.a := 'String';
help::pkg.general.deconvolver.objs.deconvolver.m.makeprior.a.templateimage := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.makeprior.a.templateimage.d := 'starting point for prior image';
help::pkg.general.deconvolver.objs.deconvolver.m.makeprior.a.templateimage.def := '';
help::pkg.general.deconvolver.objs.deconvolver.m.makeprior.a.templateimage.a := 'String';
help::pkg.general.deconvolver.objs.deconvolver.m.makeprior.a.clipfrom := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.makeprior.a.clipfrom.d := 'Clip any pixel below this level';
help::pkg.general.deconvolver.objs.deconvolver.m.makeprior.a.clipfrom.def := '\' 0.0Jy\' ';
help::pkg.general.deconvolver.objs.deconvolver.m.makeprior.a.clipfrom.a := 'String';
help::pkg.general.deconvolver.objs.deconvolver.m.makeprior.a.clipto := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.makeprior.a.clipto.d := 'Any clipped pixel will be given this value';
help::pkg.general.deconvolver.objs.deconvolver.m.makeprior.a.clipto.def := '\' 0.0Jy\' ';
help::pkg.general.deconvolver.objs.deconvolver.m.makeprior.a.clipto.a := 'String';
help::pkg.general.deconvolver.objs.deconvolver.m.makeprior.a.blc := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.makeprior.a.blc.d := 'Bottom left hand corner for box; outside box is clipped';
help::pkg.general.deconvolver.objs.deconvolver.m.makeprior.a.blc.def := '';
help::pkg.general.deconvolver.objs.deconvolver.m.makeprior.a.blc.a := 'integer[]';
help::pkg.general.deconvolver.objs.deconvolver.m.makeprior.a.trc := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.makeprior.a.trc.d := 'Top right hand corner for box; outside box is clipped';
help::pkg.general.deconvolver.objs.deconvolver.m.makeprior.a.trc.def := '';
help::pkg.general.deconvolver.objs.deconvolver.m.makeprior.a.trc.a := 'integer[]';
help::pkg.general.deconvolver.objs.deconvolver.m.makeprior.a.async := [=];
help::pkg.general.deconvolver.objs.deconvolver.m.makeprior.a.async.d := 'Run asynchronously in the background?';
help::pkg.general.deconvolver.objs.deconvolver.m.makeprior.a.async.def := '!dowait';
help::pkg.general.deconvolver.objs.deconvolver.m.makeprior.a.async.a := 'Bool';
help::pkg.general.deconvolver.objs.deconvolver.m.makeprior.s := 'makeprior(prior, templateimage, clipfrom, clipto, blc, trc, async)';

help::pkg.general.images := [=];
help::pkg.general.images.objs := [=];
help::pkg.general.images.funs := [=];
help::pkg.general.images.d := 'Access and analysis of images';
help::pkg.general.images.objs.image := [=];
help::pkg.general.images.objs.image.m := [=];
help::pkg.general.images.objs.image.c := [=];
help::pkg.general.images.objs.image.d := 'Operations on images';
help::pkg.general.images.objs.image.c.image := [=];
help::pkg.general.images.objs.image.c.image.d := 'Construct an image tool from an AIPS++\ image file';
help::pkg.general.images.objs.image.c.image.a.infile := [=];
help::pkg.general.images.objs.image.c.image.a.infile.d := 'Input image file name';
help::pkg.general.images.objs.image.c.image.a.infile.def := '';
help::pkg.general.images.objs.image.c.image.a.infile.a := 'String';
help::pkg.general.images.objs.image.c.image.s := 'image(infile)';
help::pkg.general.images.objs.image.c.imagecalc := [=];
help::pkg.general.images.objs.image.c.imagecalc.d := 'Construct an AIPS++\ image via the image calculator';
help::pkg.general.images.objs.image.c.imagecalc.a.outfile := [=];
help::pkg.general.images.objs.image.c.imagecalc.a.outfile.d := 'Output image file name';
help::pkg.general.images.objs.image.c.imagecalc.a.outfile.def := 'unset';
help::pkg.general.images.objs.image.c.imagecalc.a.outfile.a := 'String';
help::pkg.general.images.objs.image.c.imagecalc.a.pixels := [=];
help::pkg.general.images.objs.image.c.imagecalc.a.pixels.d := 'LEL expression';
help::pkg.general.images.objs.image.c.imagecalc.a.pixels.def := '';
help::pkg.general.images.objs.image.c.imagecalc.a.pixels.a := 'String';
help::pkg.general.images.objs.image.c.imagecalc.a.overwrite := [=];
help::pkg.general.images.objs.image.c.imagecalc.a.overwrite.d := 'Overwrite (unprompted) pre-existing output file ?';
help::pkg.general.images.objs.image.c.imagecalc.a.overwrite.def := 'F';
help::pkg.general.images.objs.image.c.imagecalc.a.overwrite.a := 'T or F';
help::pkg.general.images.objs.image.c.imagecalc.s := 'imagecalc(outfile, pixels, overwrite)';
help::pkg.general.images.objs.image.c.imageconcat := [=];
help::pkg.general.images.objs.image.c.imageconcat.d := 'Construct an AIPS++\ image by concatenating images';
help::pkg.general.images.objs.image.c.imageconcat.a.outfile := [=];
help::pkg.general.images.objs.image.c.imageconcat.a.outfile.d := 'Output image file name';
help::pkg.general.images.objs.image.c.imageconcat.a.outfile.def := 'unset';
help::pkg.general.images.objs.image.c.imageconcat.a.outfile.a := 'String';
help::pkg.general.images.objs.image.c.imageconcat.a.infiles := [=];
help::pkg.general.images.objs.image.c.imageconcat.a.infiles.d := 'List of input AIPS++\ image files to concatenate; wild cards accepted';
help::pkg.general.images.objs.image.c.imageconcat.a.infiles.def := '';
help::pkg.general.images.objs.image.c.imageconcat.a.infiles.a := 'String or vector of strings';
help::pkg.general.images.objs.image.c.imageconcat.a.axis := [=];
help::pkg.general.images.objs.image.c.imageconcat.a.axis.d := 'Concatenation pixel axis';
help::pkg.general.images.objs.image.c.imageconcat.a.axis.def := 'Spectral axis if there is one';
help::pkg.general.images.objs.image.c.imageconcat.a.axis.a := 'positive integer';
help::pkg.general.images.objs.image.c.imageconcat.a.relax := [=];
help::pkg.general.images.objs.image.c.imageconcat.a.relax.d := 'Relax constraints that axis coordinate descriptors match';
help::pkg.general.images.objs.image.c.imageconcat.a.relax.def := 'F';
help::pkg.general.images.objs.image.c.imageconcat.a.relax.a := 'Bool';
help::pkg.general.images.objs.image.c.imageconcat.a.tempclose := [=];
help::pkg.general.images.objs.image.c.imageconcat.a.tempclose.d := 'Keep all lattices closed until needed';
help::pkg.general.images.objs.image.c.imageconcat.a.tempclose.def := 'T';
help::pkg.general.images.objs.image.c.imageconcat.a.tempclose.a := 'Bool';
help::pkg.general.images.objs.image.c.imageconcat.a.overwrite := [=];
help::pkg.general.images.objs.image.c.imageconcat.a.overwrite.d := 'Overwrite (unprompted) pre-existing output file ?';
help::pkg.general.images.objs.image.c.imageconcat.a.overwrite.def := 'F';
help::pkg.general.images.objs.image.c.imageconcat.a.overwrite.a := 'T or F';
help::pkg.general.images.objs.image.c.imageconcat.s := 'imageconcat(outfile, infiles, axis, relax, tempclose, overwrite)';
help::pkg.general.images.objs.image.c.imagefromarray := [=];
help::pkg.general.images.objs.image.c.imagefromarray.d := 'Construct an AIPS++\ image from a Glish array';
help::pkg.general.images.objs.image.c.imagefromarray.a.outfile := [=];
help::pkg.general.images.objs.image.c.imagefromarray.a.outfile.d := 'Output image file name';
help::pkg.general.images.objs.image.c.imagefromarray.a.outfile.def := 'unset';
help::pkg.general.images.objs.image.c.imagefromarray.a.outfile.a := 'String';
help::pkg.general.images.objs.image.c.imagefromarray.a.pixels := [=];
help::pkg.general.images.objs.image.c.imagefromarray.a.pixels.d := 'Numeric Glish array';
help::pkg.general.images.objs.image.c.imagefromarray.a.pixels.def := '';
help::pkg.general.images.objs.image.c.imagefromarray.a.pixels.a := '';
help::pkg.general.images.objs.image.c.imagefromarray.a.csys := [=];
help::pkg.general.images.objs.image.c.imagefromarray.a.csys.d := 'Coordinate System';
help::pkg.general.images.objs.image.c.imagefromarray.a.csys.def := 'unset';
help::pkg.general.images.objs.image.c.imagefromarray.a.csys.a := 'Coordsys tool';
help::pkg.general.images.objs.image.c.imagefromarray.a.linear := [=];
help::pkg.general.images.objs.image.c.imagefromarray.a.linear.d := 'Make a linear Coordinate System if csys not given';
help::pkg.general.images.objs.image.c.imagefromarray.a.linear.def := 'F';
help::pkg.general.images.objs.image.c.imagefromarray.a.linear.a := 'T or F';
help::pkg.general.images.objs.image.c.imagefromarray.a.overwrite := [=];
help::pkg.general.images.objs.image.c.imagefromarray.a.overwrite.d := 'Overwrite (unprompted) pre-existing output file ?';
help::pkg.general.images.objs.image.c.imagefromarray.a.overwrite.def := 'F';
help::pkg.general.images.objs.image.c.imagefromarray.a.overwrite.a := 'T or F';
help::pkg.general.images.objs.image.c.imagefromarray.a.log := [=];
help::pkg.general.images.objs.image.c.imagefromarray.a.log.d := 'Write image creation messages to logger';
help::pkg.general.images.objs.image.c.imagefromarray.a.log.def := 'T';
help::pkg.general.images.objs.image.c.imagefromarray.a.log.a := 'T or F';
help::pkg.general.images.objs.image.c.imagefromarray.s := 'imagefromarray(outfile, pixels, csys, linear, overwrite, log)';
help::pkg.general.images.objs.image.c.imagefromascii := [=];
help::pkg.general.images.objs.image.c.imagefromascii.d := 'Construct an AIPS++\ image by conversion from an ascii file';
help::pkg.general.images.objs.image.c.imagefromascii.a.outfile := [=];
help::pkg.general.images.objs.image.c.imagefromascii.a.outfile.d := 'Output image file name';
help::pkg.general.images.objs.image.c.imagefromascii.a.outfile.def := 'unset';
help::pkg.general.images.objs.image.c.imagefromascii.a.outfile.a := 'String';
help::pkg.general.images.objs.image.c.imagefromascii.a.infile := [=];
help::pkg.general.images.objs.image.c.imagefromascii.a.infile.d := 'Input ascii disk file name';
help::pkg.general.images.objs.image.c.imagefromascii.a.infile.def := '';
help::pkg.general.images.objs.image.c.imagefromascii.a.infile.a := 'String';
help::pkg.general.images.objs.image.c.imagefromascii.a.shape := [=];
help::pkg.general.images.objs.image.c.imagefromascii.a.shape.d := 'Shape of image';
help::pkg.general.images.objs.image.c.imagefromascii.a.shape.def := '';
help::pkg.general.images.objs.image.c.imagefromascii.a.shape.a := 'Vector of integers';
help::pkg.general.images.objs.image.c.imagefromascii.a.sep := [=];
help::pkg.general.images.objs.image.c.imagefromascii.a.sep.d := 'Separator in ascii file';
help::pkg.general.images.objs.image.c.imagefromascii.a.sep.def := '\'  \' ';
help::pkg.general.images.objs.image.c.imagefromascii.a.sep.a := 'String';
help::pkg.general.images.objs.image.c.imagefromascii.a.csys := [=];
help::pkg.general.images.objs.image.c.imagefromascii.a.csys.d := 'Coordinate System';
help::pkg.general.images.objs.image.c.imagefromascii.a.csys.def := 'unset';
help::pkg.general.images.objs.image.c.imagefromascii.a.csys.a := 'Coordsys tool';
help::pkg.general.images.objs.image.c.imagefromascii.a.linear := [=];
help::pkg.general.images.objs.image.c.imagefromascii.a.linear.d := 'Make a linear Coordinate System if csys not given';
help::pkg.general.images.objs.image.c.imagefromascii.a.linear.def := 'F';
help::pkg.general.images.objs.image.c.imagefromascii.a.linear.a := 'T or F';
help::pkg.general.images.objs.image.c.imagefromascii.a.overwrite := [=];
help::pkg.general.images.objs.image.c.imagefromascii.a.overwrite.d := 'Overwrite (unprompted) pre-existing output file ?';
help::pkg.general.images.objs.image.c.imagefromascii.a.overwrite.def := 'F';
help::pkg.general.images.objs.image.c.imagefromascii.a.overwrite.a := 'T or F';
help::pkg.general.images.objs.image.c.imagefromascii.s := 'imagefromascii(outfile, infile, shape, sep, csys, linear, overwrite)';
help::pkg.general.images.objs.image.c.imagefromfits := [=];
help::pkg.general.images.objs.image.c.imagefromfits.d := 'Construct an AIPS++\ image by conversion from a FITS image file';
help::pkg.general.images.objs.image.c.imagefromfits.a.outfile := [=];
help::pkg.general.images.objs.image.c.imagefromfits.a.outfile.d := 'Output image file name';
help::pkg.general.images.objs.image.c.imagefromfits.a.outfile.def := 'unset';
help::pkg.general.images.objs.image.c.imagefromfits.a.outfile.a := 'String';
help::pkg.general.images.objs.image.c.imagefromfits.a.infile := [=];
help::pkg.general.images.objs.image.c.imagefromfits.a.infile.d := 'Input FITS disk file name';
help::pkg.general.images.objs.image.c.imagefromfits.a.infile.def := '';
help::pkg.general.images.objs.image.c.imagefromfits.a.infile.a := 'String';
help::pkg.general.images.objs.image.c.imagefromfits.a.whichrep := [=];
help::pkg.general.images.objs.image.c.imagefromfits.a.whichrep.d := 'If this FITS file contains multiple coordinate representations, which one should we read';
help::pkg.general.images.objs.image.c.imagefromfits.a.whichrep.def := '1';
help::pkg.general.images.objs.image.c.imagefromfits.a.whichrep.a := 'positive integer';
help::pkg.general.images.objs.image.c.imagefromfits.a.whichhdu := [=];
help::pkg.general.images.objs.image.c.imagefromfits.a.whichhdu.d := 'If this FITS file contains multiple images, which one should we read';
help::pkg.general.images.objs.image.c.imagefromfits.a.whichhdu.def := '1';
help::pkg.general.images.objs.image.c.imagefromfits.a.whichhdu.a := 'positive integer';
help::pkg.general.images.objs.image.c.imagefromfits.a.zeroblanks := [=];
help::pkg.general.images.objs.image.c.imagefromfits.a.zeroblanks.d := 'If there are blanked pixels, set them to zero instead of NaN';
help::pkg.general.images.objs.image.c.imagefromfits.a.zeroblanks.def := 'F';
help::pkg.general.images.objs.image.c.imagefromfits.a.zeroblanks.a := 'T or F';
help::pkg.general.images.objs.image.c.imagefromfits.a.overwrite := [=];
help::pkg.general.images.objs.image.c.imagefromfits.a.overwrite.d := 'Overwrite (unprompted) pre-existing output file ?';
help::pkg.general.images.objs.image.c.imagefromfits.a.overwrite.def := 'F';
help::pkg.general.images.objs.image.c.imagefromfits.a.overwrite.a := 'T or F';
help::pkg.general.images.objs.image.c.imagefromfits.a.old := [=];
help::pkg.general.images.objs.image.c.imagefromfits.a.old.d := 'Use old non-WCS based FITS parser?';
help::pkg.general.images.objs.image.c.imagefromfits.a.old.def := 'F';
help::pkg.general.images.objs.image.c.imagefromfits.a.old.a := 'T or F';
help::pkg.general.images.objs.image.c.imagefromfits.s := 'imagefromfits(outfile, infile, whichrep, whichhdu, zeroblanks, overwrite, old)';
help::pkg.general.images.objs.image.c.imagefromforeign := [=];
help::pkg.general.images.objs.image.c.imagefromforeign.d := 'Construct an AIPS++\ image from a foreign package image file';
help::pkg.general.images.objs.image.c.imagefromforeign.a.outfile := [=];
help::pkg.general.images.objs.image.c.imagefromforeign.a.outfile.d := 'Output image file name';
help::pkg.general.images.objs.image.c.imagefromforeign.a.outfile.def := 'unset';
help::pkg.general.images.objs.image.c.imagefromforeign.a.outfile.a := 'String';
help::pkg.general.images.objs.image.c.imagefromforeign.a.infile := [=];
help::pkg.general.images.objs.image.c.imagefromforeign.a.infile.d := 'Input foreign image disk file name';
help::pkg.general.images.objs.image.c.imagefromforeign.a.infile.def := '';
help::pkg.general.images.objs.image.c.imagefromforeign.a.infile.a := 'String';
help::pkg.general.images.objs.image.c.imagefromforeign.a.format := [=];
help::pkg.general.images.objs.image.c.imagefromforeign.a.format.d := 'Format type';
help::pkg.general.images.objs.image.c.imagefromforeign.a.format.def := '\' miriad\' ';
help::pkg.general.images.objs.image.c.imagefromforeign.a.format.a := 'String from \' miriad\' , \' gipsy\' ';
help::pkg.general.images.objs.image.c.imagefromforeign.a.overwrite := [=];
help::pkg.general.images.objs.image.c.imagefromforeign.a.overwrite.d := 'Overwrite (unprompted) pre-existing output file ?';
help::pkg.general.images.objs.image.c.imagefromforeign.a.overwrite.def := 'F';
help::pkg.general.images.objs.image.c.imagefromforeign.a.overwrite.a := 'T or F';
help::pkg.general.images.objs.image.c.imagefromforeign.s := 'imagefromforeign(outfile, infile, format, overwrite)';
help::pkg.general.images.objs.image.c.imagefromimage := [=];
help::pkg.general.images.objs.image.c.imagefromimage.d := 'Construct a (sub)image from a region of an AIPS++\ image';
help::pkg.general.images.objs.image.c.imagefromimage.a.outfile := [=];
help::pkg.general.images.objs.image.c.imagefromimage.a.outfile.d := 'Output sub-image file name';
help::pkg.general.images.objs.image.c.imagefromimage.a.outfile.def := 'unset';
help::pkg.general.images.objs.image.c.imagefromimage.a.outfile.a := 'String';
help::pkg.general.images.objs.image.c.imagefromimage.a.infile := [=];
help::pkg.general.images.objs.image.c.imagefromimage.a.infile.d := 'Input image file name';
help::pkg.general.images.objs.image.c.imagefromimage.a.infile.def := '';
help::pkg.general.images.objs.image.c.imagefromimage.a.infile.a := 'String';
help::pkg.general.images.objs.image.c.imagefromimage.a.region := [=];
help::pkg.general.images.objs.image.c.imagefromimage.a.region.d := 'The region of interest';
help::pkg.general.images.objs.image.c.imagefromimage.a.region.def := 'Whole image';
help::pkg.general.images.objs.image.c.imagefromimage.a.region.a := 'Region tool';
help::pkg.general.images.objs.image.c.imagefromimage.a.mask := [=];
help::pkg.general.images.objs.image.c.imagefromimage.a.mask.d := 'OTF mask';
help::pkg.general.images.objs.image.c.imagefromimage.a.mask.def := 'None';
help::pkg.general.images.objs.image.c.imagefromimage.a.mask.a := 'Boolean LEL expression or mask region';
help::pkg.general.images.objs.image.c.imagefromimage.a.dropdeg := [=];
help::pkg.general.images.objs.image.c.imagefromimage.a.dropdeg.d := 'Drop degenerate axes';
help::pkg.general.images.objs.image.c.imagefromimage.a.dropdeg.def := 'F';
help::pkg.general.images.objs.image.c.imagefromimage.a.dropdeg.a := 'T or F';
help::pkg.general.images.objs.image.c.imagefromimage.a.overwrite := [=];
help::pkg.general.images.objs.image.c.imagefromimage.a.overwrite.d := 'Overwrite (unprompted) pre-existing output file ?';
help::pkg.general.images.objs.image.c.imagefromimage.a.overwrite.def := 'F';
help::pkg.general.images.objs.image.c.imagefromimage.a.overwrite.a := 'T or F';
help::pkg.general.images.objs.image.c.imagefromimage.s := 'imagefromimage(outfile, infile, region, mask, dropdeg, overwrite)';
help::pkg.general.images.objs.image.c.imagefromshape := [=];
help::pkg.general.images.objs.image.c.imagefromshape.d := 'Construct an empty AIPS++\ image from a shape';
help::pkg.general.images.objs.image.c.imagefromshape.a.outfile := [=];
help::pkg.general.images.objs.image.c.imagefromshape.a.outfile.d := 'Name of output image file';
help::pkg.general.images.objs.image.c.imagefromshape.a.outfile.def := 'unset';
help::pkg.general.images.objs.image.c.imagefromshape.a.outfile.a := '';
help::pkg.general.images.objs.image.c.imagefromshape.a.shape := [=];
help::pkg.general.images.objs.image.c.imagefromshape.a.shape.d := 'Shape of image';
help::pkg.general.images.objs.image.c.imagefromshape.a.shape.def := '';
help::pkg.general.images.objs.image.c.imagefromshape.a.shape.a := '';
help::pkg.general.images.objs.image.c.imagefromshape.a.csys := [=];
help::pkg.general.images.objs.image.c.imagefromshape.a.csys.d := 'Coordinate System';
help::pkg.general.images.objs.image.c.imagefromshape.a.csys.def := 'unset';
help::pkg.general.images.objs.image.c.imagefromshape.a.csys.a := 'Coordsys tool';
help::pkg.general.images.objs.image.c.imagefromshape.a.linear := [=];
help::pkg.general.images.objs.image.c.imagefromshape.a.linear.d := 'Make a linear Coordinate System if csys not given ?';
help::pkg.general.images.objs.image.c.imagefromshape.a.linear.def := 'F';
help::pkg.general.images.objs.image.c.imagefromshape.a.linear.a := 'T or F';
help::pkg.general.images.objs.image.c.imagefromshape.a.overwrite := [=];
help::pkg.general.images.objs.image.c.imagefromshape.a.overwrite.d := 'Overwrite (unprompted) pre-existing output file ?';
help::pkg.general.images.objs.image.c.imagefromshape.a.overwrite.def := 'F';
help::pkg.general.images.objs.image.c.imagefromshape.a.overwrite.a := 'T or F';
help::pkg.general.images.objs.image.c.imagefromshape.a.log := [=];
help::pkg.general.images.objs.image.c.imagefromshape.a.log.d := 'Write image creation messages to logger';
help::pkg.general.images.objs.image.c.imagefromshape.a.log.def := 'T';
help::pkg.general.images.objs.image.c.imagefromshape.a.log.a := 'T or F';
help::pkg.general.images.objs.image.c.imagefromshape.s := 'imagefromshape(outfile, shape, csys, linear, overwrite, log)';
help::pkg.general.images.objs.image.c.imagemaketestimage := [=];
help::pkg.general.images.objs.image.c.imagemaketestimage.d := 'Construct an AIPS++\ image from a test FITS file';
help::pkg.general.images.objs.image.c.imagemaketestimage.a.outfile := [=];
help::pkg.general.images.objs.image.c.imagemaketestimage.a.outfile.d := 'Output image file name';
help::pkg.general.images.objs.image.c.imagemaketestimage.a.outfile.def := 'unset';
help::pkg.general.images.objs.image.c.imagemaketestimage.a.outfile.a := 'String';
help::pkg.general.images.objs.image.c.imagemaketestimage.s := 'imagemaketestimage(outfile)';
help::pkg.general.images.objs.image.m.adddegaxes := [=];
help::pkg.general.images.objs.image.m.adddegaxes.d := 'Add degenerate axes of the specified type to the image';
help::pkg.general.images.objs.image.m.adddegaxes.a.outfile := [=];
help::pkg.general.images.objs.image.m.adddegaxes.a.outfile.d := 'Output image file name';
help::pkg.general.images.objs.image.m.adddegaxes.a.outfile.def := 'unset';
help::pkg.general.images.objs.image.m.adddegaxes.a.outfile.a := 'String';
help::pkg.general.images.objs.image.m.adddegaxes.a.direction := [=];
help::pkg.general.images.objs.image.m.adddegaxes.a.direction.d := 'Add direction axes ?';
help::pkg.general.images.objs.image.m.adddegaxes.a.direction.def := 'F';
help::pkg.general.images.objs.image.m.adddegaxes.a.direction.a := 'T or F';
help::pkg.general.images.objs.image.m.adddegaxes.a.spectral := [=];
help::pkg.general.images.objs.image.m.adddegaxes.a.spectral.d := 'Add spectral axis ?';
help::pkg.general.images.objs.image.m.adddegaxes.a.spectral.def := 'F';
help::pkg.general.images.objs.image.m.adddegaxes.a.spectral.a := 'T or F';
help::pkg.general.images.objs.image.m.adddegaxes.a.stokes := [=];
help::pkg.general.images.objs.image.m.adddegaxes.a.stokes.d := 'Add Stokes axis ?';
help::pkg.general.images.objs.image.m.adddegaxes.a.stokes.def := '\' \' ';
help::pkg.general.images.objs.image.m.adddegaxes.a.stokes.a := 'Stokes';
help::pkg.general.images.objs.image.m.adddegaxes.a.linear := [=];
help::pkg.general.images.objs.image.m.adddegaxes.a.linear.d := 'Add linear axis ?';
help::pkg.general.images.objs.image.m.adddegaxes.a.linear.def := 'F';
help::pkg.general.images.objs.image.m.adddegaxes.a.linear.a := 'T or F';
help::pkg.general.images.objs.image.m.adddegaxes.a.tabular := [=];
help::pkg.general.images.objs.image.m.adddegaxes.a.tabular.d := 'Add tabular axis ?';
help::pkg.general.images.objs.image.m.adddegaxes.a.tabular.def := 'F';
help::pkg.general.images.objs.image.m.adddegaxes.a.tabular.a := 'T or F';
help::pkg.general.images.objs.image.m.adddegaxes.a.overwrite := [=];
help::pkg.general.images.objs.image.m.adddegaxes.a.overwrite.d := 'Overwrite (unprompted) pre-existing output file ?';
help::pkg.general.images.objs.image.m.adddegaxes.a.overwrite.def := 'F';
help::pkg.general.images.objs.image.m.adddegaxes.a.overwrite.a := 'T or F';
help::pkg.general.images.objs.image.m.adddegaxes.s := 'adddegaxes(outfile, direction, spectral, stokes, linear, tabular, overwrite)';
help::pkg.general.images.objs.image.m.addnoise := [=];
help::pkg.general.images.objs.image.m.addnoise.d := 'Add noise to the image';
help::pkg.general.images.objs.image.m.addnoise.a.type := [=];
help::pkg.general.images.objs.image.m.addnoise.a.type.d := 'Type of distribution';
help::pkg.general.images.objs.image.m.addnoise.a.type.def := '\' normal\' ';
help::pkg.general.images.objs.image.m.addnoise.a.type.a := 'String - see below';
help::pkg.general.images.objs.image.m.addnoise.a.pars := [=];
help::pkg.general.images.objs.image.m.addnoise.a.pars.d := 'Parameters of distribution';
help::pkg.general.images.objs.image.m.addnoise.a.pars.def := '[0,1]';
help::pkg.general.images.objs.image.m.addnoise.a.pars.a := 'Numeric vector';
help::pkg.general.images.objs.image.m.addnoise.a.region := [=];
help::pkg.general.images.objs.image.m.addnoise.a.region.d := 'Region of interest';
help::pkg.general.images.objs.image.m.addnoise.a.region.def := 'Whole image';
help::pkg.general.images.objs.image.m.addnoise.a.region.a := 'Region tool';
help::pkg.general.images.objs.image.m.addnoise.a.zero := [=];
help::pkg.general.images.objs.image.m.addnoise.a.zero.d := 'Zero image first ?';
help::pkg.general.images.objs.image.m.addnoise.a.zero.def := 'F';
help::pkg.general.images.objs.image.m.addnoise.a.zero.a := 'T or F';
help::pkg.general.images.objs.image.m.addnoise.s := 'addnoise(type, pars, region, zero)';
help::pkg.general.images.objs.image.m.convolve := [=];
help::pkg.general.images.objs.image.m.convolve.d := 'Convolve image with a Glish array or another image';
help::pkg.general.images.objs.image.m.convolve.a.outfile := [=];
help::pkg.general.images.objs.image.m.convolve.a.outfile.d := 'Output image file name';
help::pkg.general.images.objs.image.m.convolve.a.outfile.def := 'unset';
help::pkg.general.images.objs.image.m.convolve.a.outfile.a := 'String';
help::pkg.general.images.objs.image.m.convolve.a.kernel := [=];
help::pkg.general.images.objs.image.m.convolve.a.kernel.d := 'Convolution kernel - array or image filename';
help::pkg.general.images.objs.image.m.convolve.a.kernel.def := '';
help::pkg.general.images.objs.image.m.convolve.a.kernel.a := 'Numeric Glish array or string';
help::pkg.general.images.objs.image.m.convolve.a.scale := [=];
help::pkg.general.images.objs.image.m.convolve.a.scale.d := 'Scale factor';
help::pkg.general.images.objs.image.m.convolve.a.scale.def := 'Autoscale';
help::pkg.general.images.objs.image.m.convolve.a.scale.a := 'Float';
help::pkg.general.images.objs.image.m.convolve.a.region := [=];
help::pkg.general.images.objs.image.m.convolve.a.region.d := 'Region of interest';
help::pkg.general.images.objs.image.m.convolve.a.region.def := 'Whole image';
help::pkg.general.images.objs.image.m.convolve.a.region.a := 'Region tool';
help::pkg.general.images.objs.image.m.convolve.a.mask := [=];
help::pkg.general.images.objs.image.m.convolve.a.mask.d := 'OTF mask';
help::pkg.general.images.objs.image.m.convolve.a.mask.def := 'None';
help::pkg.general.images.objs.image.m.convolve.a.mask.a := 'Boolean LEL expression or mask region';
help::pkg.general.images.objs.image.m.convolve.a.overwrite := [=];
help::pkg.general.images.objs.image.m.convolve.a.overwrite.d := 'Overwrite (unprompted) pre-existing output file ?';
help::pkg.general.images.objs.image.m.convolve.a.overwrite.def := 'F';
help::pkg.general.images.objs.image.m.convolve.a.overwrite.a := 'T or F';
help::pkg.general.images.objs.image.m.convolve.a.async := [=];
help::pkg.general.images.objs.image.m.convolve.a.async.d := 'Run asynchronously?';
help::pkg.general.images.objs.image.m.convolve.a.async.def := '!dowait';
help::pkg.general.images.objs.image.m.convolve.a.async.a := 'Bool';
help::pkg.general.images.objs.image.m.convolve.s := 'convolve(outfile, kernel, scale, region, mask, overwrite, async)';
help::pkg.general.images.objs.image.m.boundingbox := [=];
help::pkg.general.images.objs.image.m.boundingbox.d := 'Get the bounding box of the specified region';
help::pkg.general.images.objs.image.m.boundingbox.a.region := [=];
help::pkg.general.images.objs.image.m.boundingbox.a.region.d := 'The region of interest';
help::pkg.general.images.objs.image.m.boundingbox.a.region.def := 'Whole image';
help::pkg.general.images.objs.image.m.boundingbox.a.region.a := 'Region tool';
help::pkg.general.images.objs.image.m.boundingbox.s := 'boundingbox(region)';
help::pkg.general.images.objs.image.m.brightnessunit := [=];
help::pkg.general.images.objs.image.m.brightnessunit.d := 'Get the image brightness unit';
help::pkg.general.images.objs.image.m.brightnessunit.s := 'brightnessunit()';
help::pkg.general.images.objs.image.m.calc := [=];
help::pkg.general.images.objs.image.m.calc.d := 'Image calculator';
help::pkg.general.images.objs.image.m.calc.a.pixels := [=];
help::pkg.general.images.objs.image.m.calc.a.pixels.d := 'LEL expression';
help::pkg.general.images.objs.image.m.calc.a.pixels.def := '';
help::pkg.general.images.objs.image.m.calc.a.pixels.a := 'String';
help::pkg.general.images.objs.image.m.calc.s := 'calc(pixels)';
help::pkg.general.images.objs.image.m.calcmask := [=];
help::pkg.general.images.objs.image.m.calcmask.d := 'Image mask calculator';
help::pkg.general.images.objs.image.m.calcmask.a.mask := [=];
help::pkg.general.images.objs.image.m.calcmask.a.mask.d := 'Boolean LEL expression';
help::pkg.general.images.objs.image.m.calcmask.a.mask.def := '';
help::pkg.general.images.objs.image.m.calcmask.a.mask.a := 'Boolean LEL expression or mask region';
help::pkg.general.images.objs.image.m.calcmask.a.name := [=];
help::pkg.general.images.objs.image.m.calcmask.a.name.d := 'Mask name';
help::pkg.general.images.objs.image.m.calcmask.a.name.def := 'Auto new name';
help::pkg.general.images.objs.image.m.calcmask.a.name.a := 'String';
help::pkg.general.images.objs.image.m.calcmask.a.default := [=];
help::pkg.general.images.objs.image.m.calcmask.a.default.d := 'Make specified mask the default mask ?';
help::pkg.general.images.objs.image.m.calcmask.a.default.def := 'T';
help::pkg.general.images.objs.image.m.calcmask.a.default.a := 'Bool';
help::pkg.general.images.objs.image.m.calcmask.s := 'calcmask(mask, name, default)';
help::pkg.general.images.objs.image.m.close := [=];
help::pkg.general.images.objs.image.m.close.d := 'Close the image tool';
help::pkg.general.images.objs.image.m.close.s := 'close()';
help::pkg.general.images.objs.image.m.continuumsub := [=];
help::pkg.general.images.objs.image.m.continuumsub.d := 'Image plane continuum subtraction';
help::pkg.general.images.objs.image.m.continuumsub.a.outline := [=];
help::pkg.general.images.objs.image.m.continuumsub.a.outline.d := 'Output line image filename';
help::pkg.general.images.objs.image.m.continuumsub.a.outline.def := 'unset';
help::pkg.general.images.objs.image.m.continuumsub.a.outline.a := 'String';
help::pkg.general.images.objs.image.m.continuumsub.a.outcont := [=];
help::pkg.general.images.objs.image.m.continuumsub.a.outcont.d := 'Output continuum image filename';
help::pkg.general.images.objs.image.m.continuumsub.a.outcont.def := '\' continuumsub.im\' ';
help::pkg.general.images.objs.image.m.continuumsub.a.outcont.a := 'String';
help::pkg.general.images.objs.image.m.continuumsub.a.region := [=];
help::pkg.general.images.objs.image.m.continuumsub.a.region.d := 'Region over which continuum subtraction is desired';
help::pkg.general.images.objs.image.m.continuumsub.a.region.def := 'whole image';
help::pkg.general.images.objs.image.m.continuumsub.a.region.a := 'Region';
help::pkg.general.images.objs.image.m.continuumsub.a.channels := [=];
help::pkg.general.images.objs.image.m.continuumsub.a.channels.d := 'Channels to use for continuum estimation';
help::pkg.general.images.objs.image.m.continuumsub.a.channels.def := 'All';
help::pkg.general.images.objs.image.m.continuumsub.a.channels.a := 'Vector<Int>';
help::pkg.general.images.objs.image.m.continuumsub.a.pol := [=];
help::pkg.general.images.objs.image.m.continuumsub.a.pol.d := 'Polarization to process';
help::pkg.general.images.objs.image.m.continuumsub.a.pol.def := 'unset';
help::pkg.general.images.objs.image.m.continuumsub.a.pol.a := 'String from "I Q U V XX RR" etc.';
help::pkg.general.images.objs.image.m.continuumsub.a.fitorder := [=];
help::pkg.general.images.objs.image.m.continuumsub.a.fitorder.d := 'Polynomial order for continuum estimation';
help::pkg.general.images.objs.image.m.continuumsub.a.fitorder.def := '0';
help::pkg.general.images.objs.image.m.continuumsub.a.fitorder.a := 'Int';
help::pkg.general.images.objs.image.m.continuumsub.a.overwrite := [=];
help::pkg.general.images.objs.image.m.continuumsub.a.overwrite.d := 'Auto-overwrite output files if they exist?';
help::pkg.general.images.objs.image.m.continuumsub.a.overwrite.def := 'F';
help::pkg.general.images.objs.image.m.continuumsub.a.overwrite.a := 'Boolean';
help::pkg.general.images.objs.image.m.continuumsub.s := 'continuumsub(outline, outcont, region, channels, pol, fitorder, overwrite)';
help::pkg.general.images.objs.image.m.convertflux := [=];
help::pkg.general.images.objs.image.m.convertflux.d := 'Convert flux density between peak and integral';
help::pkg.general.images.objs.image.m.convertflux.a.value := [=];
help::pkg.general.images.objs.image.m.convertflux.a.value.d := 'Flux density to convert';
help::pkg.general.images.objs.image.m.convertflux.a.value.def := '';
help::pkg.general.images.objs.image.m.convertflux.a.value.a := 'Quantity';
help::pkg.general.images.objs.image.m.convertflux.a.major := [=];
help::pkg.general.images.objs.image.m.convertflux.a.major.d := 'Major axis of component';
help::pkg.general.images.objs.image.m.convertflux.a.major.def := '';
help::pkg.general.images.objs.image.m.convertflux.a.major.a := 'Quantity';
help::pkg.general.images.objs.image.m.convertflux.a.minor := [=];
help::pkg.general.images.objs.image.m.convertflux.a.minor.d := 'Minor axis of component';
help::pkg.general.images.objs.image.m.convertflux.a.minor.def := '';
help::pkg.general.images.objs.image.m.convertflux.a.minor.a := 'Quantity';
help::pkg.general.images.objs.image.m.convertflux.a.type := [=];
help::pkg.general.images.objs.image.m.convertflux.a.type.d := 'Type of component';
help::pkg.general.images.objs.image.m.convertflux.a.type.def := 'Gaussian';
help::pkg.general.images.objs.image.m.convertflux.a.type.a := 'String from Gaussian, Disk';
help::pkg.general.images.objs.image.m.convertflux.a.topeak := [=];
help::pkg.general.images.objs.image.m.convertflux.a.topeak.d := 'Convert to peak or integral flux desnity';
help::pkg.general.images.objs.image.m.convertflux.a.topeak.def := 'T';
help::pkg.general.images.objs.image.m.convertflux.a.topeak.a := 'Bool';
help::pkg.general.images.objs.image.m.convertflux.s := 'convertflux(value, major, minor, type, topeak)';
help::pkg.general.images.objs.image.m.convertsm := [=];
help::pkg.general.images.objs.image.m.convertsm.d := 'Convert image for older versions';
help::pkg.general.images.objs.image.m.convertsm.a.outfile := [=];
help::pkg.general.images.objs.image.m.convertsm.a.outfile.d := 'Output file name';
help::pkg.general.images.objs.image.m.convertsm.a.outfile.def := 'unset';
help::pkg.general.images.objs.image.m.convertsm.a.outfile.a := 'String';
help::pkg.general.images.objs.image.m.convertsm.a.overwrite := [=];
help::pkg.general.images.objs.image.m.convertsm.a.overwrite.d := 'Overwrite output file if already exists ?';
help::pkg.general.images.objs.image.m.convertsm.a.overwrite.def := 'T';
help::pkg.general.images.objs.image.m.convertsm.a.overwrite.a := 'Bool';
help::pkg.general.images.objs.image.m.convertsm.s := 'convertsm(outfile, overwrite)';
help::pkg.general.images.objs.image.m.convolve2d := [=];
help::pkg.general.images.objs.image.m.convolve2d.d := 'Convolve image by a 2D kernel';
help::pkg.general.images.objs.image.m.convolve2d.a.outfile := [=];
help::pkg.general.images.objs.image.m.convolve2d.a.outfile.d := 'Output image file name';
help::pkg.general.images.objs.image.m.convolve2d.a.outfile.def := 'unset';
help::pkg.general.images.objs.image.m.convolve2d.a.outfile.a := 'String';
help::pkg.general.images.objs.image.m.convolve2d.a.axes := [=];
help::pkg.general.images.objs.image.m.convolve2d.a.axes.d := 'Axes to convolve';
help::pkg.general.images.objs.image.m.convolve2d.a.axes.def := '[1,2]';
help::pkg.general.images.objs.image.m.convolve2d.a.axes.a := 'Vector (length 2) of integers';
help::pkg.general.images.objs.image.m.convolve2d.a.type := [=];
help::pkg.general.images.objs.image.m.convolve2d.a.type.d := 'Type of convolution kernel';
help::pkg.general.images.objs.image.m.convolve2d.a.type.def := '\' gaussian\' ';
help::pkg.general.images.objs.image.m.convolve2d.a.type.a := 'String from \' gaussian\' ';
help::pkg.general.images.objs.image.m.convolve2d.a.major := [=];
help::pkg.general.images.objs.image.m.convolve2d.a.major.d := 'Major axis';
help::pkg.general.images.objs.image.m.convolve2d.a.major.def := '';
help::pkg.general.images.objs.image.m.convolve2d.a.major.a := 'Quantity, string, numeric';
help::pkg.general.images.objs.image.m.convolve2d.a.minor := [=];
help::pkg.general.images.objs.image.m.convolve2d.a.minor.d := 'Minor axis';
help::pkg.general.images.objs.image.m.convolve2d.a.minor.def := '';
help::pkg.general.images.objs.image.m.convolve2d.a.minor.a := 'Quantity, string, numeric';
help::pkg.general.images.objs.image.m.convolve2d.a.pa := [=];
help::pkg.general.images.objs.image.m.convolve2d.a.pa.d := 'Position Angle';
help::pkg.general.images.objs.image.m.convolve2d.a.pa.def := '0deg';
help::pkg.general.images.objs.image.m.convolve2d.a.pa.a := 'Quantity, string, numeric';
help::pkg.general.images.objs.image.m.convolve2d.a.scale := [=];
help::pkg.general.images.objs.image.m.convolve2d.a.scale.d := 'Scale factor';
help::pkg.general.images.objs.image.m.convolve2d.a.scale.def := 'Autoscale';
help::pkg.general.images.objs.image.m.convolve2d.a.scale.a := 'Float';
help::pkg.general.images.objs.image.m.convolve2d.a.region := [=];
help::pkg.general.images.objs.image.m.convolve2d.a.region.d := 'Region of interest';
help::pkg.general.images.objs.image.m.convolve2d.a.region.def := 'Whole image';
help::pkg.general.images.objs.image.m.convolve2d.a.region.a := 'Region tool';
help::pkg.general.images.objs.image.m.convolve2d.a.mask := [=];
help::pkg.general.images.objs.image.m.convolve2d.a.mask.d := 'OTF mask';
help::pkg.general.images.objs.image.m.convolve2d.a.mask.def := 'None';
help::pkg.general.images.objs.image.m.convolve2d.a.mask.a := 'Boolean LEL expression or mask region';
help::pkg.general.images.objs.image.m.convolve2d.a.overwrite := [=];
help::pkg.general.images.objs.image.m.convolve2d.a.overwrite.d := 'Overwrite (unprompted) pre-existing output file ?';
help::pkg.general.images.objs.image.m.convolve2d.a.overwrite.def := 'F';
help::pkg.general.images.objs.image.m.convolve2d.a.overwrite.a := 'T or F';
help::pkg.general.images.objs.image.m.convolve2d.a.async := [=];
help::pkg.general.images.objs.image.m.convolve2d.a.async.d := 'Run asynchronously?';
help::pkg.general.images.objs.image.m.convolve2d.a.async.def := '!dowait';
help::pkg.general.images.objs.image.m.convolve2d.a.async.a := 'Bool';
help::pkg.general.images.objs.image.m.convolve2d.s := 'convolve2d(outfile, axes, type, major, minor, pa, scale, region, mask, overwrite, async)';
help::pkg.general.images.objs.image.m.coordsys := [=];
help::pkg.general.images.objs.image.m.coordsys.d := 'Get the Coordinate System of the image';
help::pkg.general.images.objs.image.m.coordsys.a.axes := [=];
help::pkg.general.images.objs.image.m.coordsys.a.axes.d := 'Axes to which the Coordinate System pertains';
help::pkg.general.images.objs.image.m.coordsys.a.axes.def := 'All axes';
help::pkg.general.images.objs.image.m.coordsys.a.axes.a := 'Vector of integers';
help::pkg.general.images.objs.image.m.coordsys.s := 'coordsys(axes)';
help::pkg.general.images.objs.image.m.coordmeasures := [=];
help::pkg.general.images.objs.image.m.coordmeasures.d := 'Convert from pixel to world coordinate wrapped as Measures';
help::pkg.general.images.objs.image.m.coordmeasures.a.pixel := [=];
help::pkg.general.images.objs.image.m.coordmeasures.a.pixel.d := 'Absolute pixel coordinate';
help::pkg.general.images.objs.image.m.coordmeasures.a.pixel.def := 'Reference pixel';
help::pkg.general.images.objs.image.m.coordmeasures.a.pixel.a := 'Numeric vector';
help::pkg.general.images.objs.image.m.coordmeasures.a.intensity := [=];
help::pkg.general.images.objs.image.m.coordmeasures.a.intensity.d := 'Returned intensity quantity for pixel';
help::pkg.general.images.objs.image.m.coordmeasures.a.intensity.def := '';
help::pkg.general.images.objs.image.m.coordmeasures.a.intensity.a := 'Quantity';
help::pkg.general.images.objs.image.m.coordmeasures.a.direction := [=];
help::pkg.general.images.objs.image.m.coordmeasures.a.direction.d := 'Returned direction measure for pixel';
help::pkg.general.images.objs.image.m.coordmeasures.a.direction.def := '';
help::pkg.general.images.objs.image.m.coordmeasures.a.direction.a := 'Direction measure';
help::pkg.general.images.objs.image.m.coordmeasures.a.frequency := [=];
help::pkg.general.images.objs.image.m.coordmeasures.a.frequency.d := 'Returned frequency measure for pixel';
help::pkg.general.images.objs.image.m.coordmeasures.a.frequency.def := '';
help::pkg.general.images.objs.image.m.coordmeasures.a.frequency.a := 'Frequency measure';
help::pkg.general.images.objs.image.m.coordmeasures.a.velocity := [=];
help::pkg.general.images.objs.image.m.coordmeasures.a.velocity.d := 'Returned radial velocity measure for pixel';
help::pkg.general.images.objs.image.m.coordmeasures.a.velocity.def := '';
help::pkg.general.images.objs.image.m.coordmeasures.a.velocity.a := 'Radio definition RadialVelocity measure';
help::pkg.general.images.objs.image.m.coordmeasures.s := 'coordmeasures(pixel, intensity, direction, frequency, velocity)';
help::pkg.general.images.objs.image.m.decompose := [=];
help::pkg.general.images.objs.image.m.decompose.d := 'Separate a complex image into individual components';
help::pkg.general.images.objs.image.m.decompose.a.region := [=];
help::pkg.general.images.objs.image.m.decompose.a.region.d := '';
help::pkg.general.images.objs.image.m.decompose.a.region.def := 'unset';
help::pkg.general.images.objs.image.m.decompose.a.region.a := 'Region tool';
help::pkg.general.images.objs.image.m.decompose.a.mask := [=];
help::pkg.general.images.objs.image.m.decompose.a.mask.d := '';
help::pkg.general.images.objs.image.m.decompose.a.mask.def := 'unset';
help::pkg.general.images.objs.image.m.decompose.a.mask.a := 'Boolean LEL expression or mask region';
help::pkg.general.images.objs.image.m.decompose.a.simple := [=];
help::pkg.general.images.objs.image.m.decompose.a.simple.d := 'Skip contour deblending and scan for local maxima';
help::pkg.general.images.objs.image.m.decompose.a.simple.def := 'F';
help::pkg.general.images.objs.image.m.decompose.a.simple.a := 'T or F';
help::pkg.general.images.objs.image.m.decompose.a.threshold := [=];
help::pkg.general.images.objs.image.m.decompose.a.threshold.d := 'Value of minimum contour';
help::pkg.general.images.objs.image.m.decompose.a.threshold.def := 'unset';
help::pkg.general.images.objs.image.m.decompose.a.threshold.a := 'Positive Float';
help::pkg.general.images.objs.image.m.decompose.a.ncontour := [=];
help::pkg.general.images.objs.image.m.decompose.a.ncontour.d := 'Number of contours to use in deblending';
help::pkg.general.images.objs.image.m.decompose.a.ncontour.def := '11';
help::pkg.general.images.objs.image.m.decompose.a.ncontour.a := 'Int of 2 or greater';
help::pkg.general.images.objs.image.m.decompose.a.minrange := [=];
help::pkg.general.images.objs.image.m.decompose.a.minrange.d := 'Minimum number of closed contours in a component';
help::pkg.general.images.objs.image.m.decompose.a.minrange.def := '1';
help::pkg.general.images.objs.image.m.decompose.a.minrange.a := 'Positive Integer';
help::pkg.general.images.objs.image.m.decompose.a.naxis := [=];
help::pkg.general.images.objs.image.m.decompose.a.naxis.d := 'Max number of perpendicular steps between contiguous pixels';
help::pkg.general.images.objs.image.m.decompose.a.naxis.def := '2';
help::pkg.general.images.objs.image.m.decompose.a.naxis.a := '1, 2, or 3';
help::pkg.general.images.objs.image.m.decompose.a.fit := [=];
help::pkg.general.images.objs.image.m.decompose.a.fit.d := 'Fit to the components after deblending?';
help::pkg.general.images.objs.image.m.decompose.a.fit.def := 'T';
help::pkg.general.images.objs.image.m.decompose.a.fit.a := 'T or F';
help::pkg.general.images.objs.image.m.decompose.a.maxrms := [=];
help::pkg.general.images.objs.image.m.decompose.a.maxrms.d := 'Maximum RMS of fit residuals to not retry fit';
help::pkg.general.images.objs.image.m.decompose.a.maxrms.def := 'unset';
help::pkg.general.images.objs.image.m.decompose.a.maxrms.a := 'Positive Float';
help::pkg.general.images.objs.image.m.decompose.a.maxretry := [=];
help::pkg.general.images.objs.image.m.decompose.a.maxretry.d := 'Maximum number of times to retry the fit';
help::pkg.general.images.objs.image.m.decompose.a.maxretry.def := 'unset';
help::pkg.general.images.objs.image.m.decompose.a.maxretry.a := 'Non-negative Integer';
help::pkg.general.images.objs.image.m.decompose.a.maxiter := [=];
help::pkg.general.images.objs.image.m.decompose.a.maxiter.d := 'Maximum number of iterations allowed in a single fit';
help::pkg.general.images.objs.image.m.decompose.a.maxiter.def := '256';
help::pkg.general.images.objs.image.m.decompose.a.maxiter.a := 'Positive Integer';
help::pkg.general.images.objs.image.m.decompose.a.convcriteria := [=];
help::pkg.general.images.objs.image.m.decompose.a.convcriteria.d := 'Criterion to establish convergence';
help::pkg.general.images.objs.image.m.decompose.a.convcriteria.def := '0.0001';
help::pkg.general.images.objs.image.m.decompose.a.convcriteria.a := 'Positive Float';
help::pkg.general.images.objs.image.m.decompose.s := 'decompose(region, mask, simple, threshold, ncontour, minrange, naxis, fit, maxrms, maxretry, maxiter, convcriteria)';
help::pkg.general.images.objs.image.m.deconvolvecomponentlist := [=];
help::pkg.general.images.objs.image.m.deconvolvecomponentlist.d := 'Deconvolve a componentlist from the restoring beam';
help::pkg.general.images.objs.image.m.deconvolvecomponentlist.a.complist := [=];
help::pkg.general.images.objs.image.m.deconvolvecomponentlist.a.complist.d := 'Componentlist to deconvolve';
help::pkg.general.images.objs.image.m.deconvolvecomponentlist.a.complist.def := '';
help::pkg.general.images.objs.image.m.deconvolvecomponentlist.a.complist.a := 'Componentlist tool';
help::pkg.general.images.objs.image.m.deconvolvecomponentlist.s := 'deconvolvecomponentlist(complist)';
help::pkg.general.images.objs.image.m.delete := [=];
help::pkg.general.images.objs.image.m.delete.d := 'Delete the image file associated with this image tool';
help::pkg.general.images.objs.image.m.delete.a.done := [=];
help::pkg.general.images.objs.image.m.delete.a.done.d := 'Destroy this tool after deletion';
help::pkg.general.images.objs.image.m.delete.a.done.def := 'T';
help::pkg.general.images.objs.image.m.delete.a.done.a := 'T or F';
help::pkg.general.images.objs.image.m.delete.s := 'delete(done)';
help::pkg.general.images.objs.image.m.done := [=];
help::pkg.general.images.objs.image.m.done.d := 'Destroy this image tool';
help::pkg.general.images.objs.image.m.done.a.delete := [=];
help::pkg.general.images.objs.image.m.done.a.delete.d := 'Delete disk file as well ?';
help::pkg.general.images.objs.image.m.done.a.delete.def := 'F';
help::pkg.general.images.objs.image.m.done.a.delete.a := 'T or F';
help::pkg.general.images.objs.image.m.done.s := 'done(delete)';
help::pkg.general.images.objs.image.m.fft := [=];
help::pkg.general.images.objs.image.m.fft.d := 'FFT the image';
help::pkg.general.images.objs.image.m.fft.a.real := [=];
help::pkg.general.images.objs.image.m.fft.a.real.d := 'Output real image file name';
help::pkg.general.images.objs.image.m.fft.a.real.def := '';
help::pkg.general.images.objs.image.m.fft.a.real.a := 'String';
help::pkg.general.images.objs.image.m.fft.a.imag := [=];
help::pkg.general.images.objs.image.m.fft.a.imag.d := 'Output imaginary image file name';
help::pkg.general.images.objs.image.m.fft.a.imag.def := '';
help::pkg.general.images.objs.image.m.fft.a.imag.a := 'String';
help::pkg.general.images.objs.image.m.fft.a.amp := [=];
help::pkg.general.images.objs.image.m.fft.a.amp.d := 'Output amplitude image file name';
help::pkg.general.images.objs.image.m.fft.a.amp.def := '';
help::pkg.general.images.objs.image.m.fft.a.amp.a := 'String';
help::pkg.general.images.objs.image.m.fft.a.phase := [=];
help::pkg.general.images.objs.image.m.fft.a.phase.d := 'Output phase image file name';
help::pkg.general.images.objs.image.m.fft.a.phase.def := '';
help::pkg.general.images.objs.image.m.fft.a.phase.a := 'String';
help::pkg.general.images.objs.image.m.fft.a.axes := [=];
help::pkg.general.images.objs.image.m.fft.a.axes.d := 'Specify pixel axes to FFT';
help::pkg.general.images.objs.image.m.fft.a.axes.def := 'Sky plane(s)';
help::pkg.general.images.objs.image.m.fft.a.axes.a := 'Vector of integers';
help::pkg.general.images.objs.image.m.fft.a.region := [=];
help::pkg.general.images.objs.image.m.fft.a.region.d := 'The region of interest';
help::pkg.general.images.objs.image.m.fft.a.region.def := 'Whole image';
help::pkg.general.images.objs.image.m.fft.a.region.a := 'Region tool';
help::pkg.general.images.objs.image.m.fft.a.mask := [=];
help::pkg.general.images.objs.image.m.fft.a.mask.d := 'OTF mask';
help::pkg.general.images.objs.image.m.fft.a.mask.def := 'None';
help::pkg.general.images.objs.image.m.fft.a.mask.a := 'Boolean LEL expression or mask region';
help::pkg.general.images.objs.image.m.fft.s := 'fft(real, imag, amp, phase, axes, region, mask)';
help::pkg.general.images.objs.image.m.findsources := [=];
help::pkg.general.images.objs.image.m.findsources.d := 'Find point sources in the sky';
help::pkg.general.images.objs.image.m.findsources.a.nmax := [=];
help::pkg.general.images.objs.image.m.findsources.a.nmax.d := 'Maximum number of sources to find';
help::pkg.general.images.objs.image.m.findsources.a.nmax.def := '20';
help::pkg.general.images.objs.image.m.findsources.a.nmax.a := 'Positive Integer';
help::pkg.general.images.objs.image.m.findsources.a.cutoff := [=];
help::pkg.general.images.objs.image.m.findsources.a.cutoff.d := 'Fractional cutoff level';
help::pkg.general.images.objs.image.m.findsources.a.cutoff.def := '0.1';
help::pkg.general.images.objs.image.m.findsources.a.cutoff.a := 'Float';
help::pkg.general.images.objs.image.m.findsources.a.region := [=];
help::pkg.general.images.objs.image.m.findsources.a.region.d := 'The 2-D region of interest to fit';
help::pkg.general.images.objs.image.m.findsources.a.region.def := 'Whole image';
help::pkg.general.images.objs.image.m.findsources.a.region.a := 'Region tool';
help::pkg.general.images.objs.image.m.findsources.a.mask := [=];
help::pkg.general.images.objs.image.m.findsources.a.mask.d := 'OTF mask';
help::pkg.general.images.objs.image.m.findsources.a.mask.def := 'None';
help::pkg.general.images.objs.image.m.findsources.a.mask.a := 'Boolean LEL expression or mask region';
help::pkg.general.images.objs.image.m.findsources.a.point := [=];
help::pkg.general.images.objs.image.m.findsources.a.point.d := 'Find only point sources ?';
help::pkg.general.images.objs.image.m.findsources.a.point.def := 'T';
help::pkg.general.images.objs.image.m.findsources.a.point.a := 'T or F';
help::pkg.general.images.objs.image.m.findsources.a.width := [=];
help::pkg.general.images.objs.image.m.findsources.a.width.d := 'Half-width of fit grid when point=F';
help::pkg.general.images.objs.image.m.findsources.a.width.def := '5';
help::pkg.general.images.objs.image.m.findsources.a.width.a := 'Integer';
help::pkg.general.images.objs.image.m.findsources.a.negfind := [=];
help::pkg.general.images.objs.image.m.findsources.a.negfind.d := 'Find negative sources as well as positive ?';
help::pkg.general.images.objs.image.m.findsources.a.negfind.def := 'F';
help::pkg.general.images.objs.image.m.findsources.a.negfind.a := 'T or F';
help::pkg.general.images.objs.image.m.findsources.s := 'findsources(nmax, cutoff, region, mask, point, width, negfind)';
help::pkg.general.images.objs.image.m.fitallprofiles := [=];
help::pkg.general.images.objs.image.m.fitallprofiles.d := 'Fit all 1-dimensional profiles in a region';
help::pkg.general.images.objs.image.m.fitallprofiles.a.region := [=];
help::pkg.general.images.objs.image.m.fitallprofiles.a.region.d := 'The region of interest';
help::pkg.general.images.objs.image.m.fitallprofiles.a.region.def := 'Whole image';
help::pkg.general.images.objs.image.m.fitallprofiles.a.region.a := 'Region tool';
help::pkg.general.images.objs.image.m.fitallprofiles.a.axis := [=];
help::pkg.general.images.objs.image.m.fitallprofiles.a.axis.d := 'The profile axis';
help::pkg.general.images.objs.image.m.fitallprofiles.a.axis.def := 'Spectral';
help::pkg.general.images.objs.image.m.fitallprofiles.a.axis.a := 'Integer or unset';
help::pkg.general.images.objs.image.m.fitallprofiles.a.mask := [=];
help::pkg.general.images.objs.image.m.fitallprofiles.a.mask.d := 'OTF mask';
help::pkg.general.images.objs.image.m.fitallprofiles.a.mask.def := 'None';
help::pkg.general.images.objs.image.m.fitallprofiles.a.mask.a := 'Boolean LEL expression or mask region';
help::pkg.general.images.objs.image.m.fitallprofiles.a.ngauss := [=];
help::pkg.general.images.objs.image.m.fitallprofiles.a.ngauss.d := 'Number of Gaussian elements';
help::pkg.general.images.objs.image.m.fitallprofiles.a.ngauss.def := '1';
help::pkg.general.images.objs.image.m.fitallprofiles.a.ngauss.a := 'Int';
help::pkg.general.images.objs.image.m.fitallprofiles.a.poly := [=];
help::pkg.general.images.objs.image.m.fitallprofiles.a.poly.d := 'Order of polynomial element';
help::pkg.general.images.objs.image.m.fitallprofiles.a.poly.def := 'None';
help::pkg.general.images.objs.image.m.fitallprofiles.a.poly.a := 'Int';
help::pkg.general.images.objs.image.m.fitallprofiles.a.sigma := [=];
help::pkg.general.images.objs.image.m.fitallprofiles.a.sigma.d := 'Weights image';
help::pkg.general.images.objs.image.m.fitallprofiles.a.sigma.def := 'unset';
help::pkg.general.images.objs.image.m.fitallprofiles.a.sigma.a := 'String or unset';
help::pkg.general.images.objs.image.m.fitallprofiles.a.fit := [=];
help::pkg.general.images.objs.image.m.fitallprofiles.a.fit.d := 'Output fitted image file name';
help::pkg.general.images.objs.image.m.fitallprofiles.a.fit.def := 'None';
help::pkg.general.images.objs.image.m.fitallprofiles.a.fit.a := 'String or unset';
help::pkg.general.images.objs.image.m.fitallprofiles.a.resid := [=];
help::pkg.general.images.objs.image.m.fitallprofiles.a.resid.d := 'Output fitted residuals image file name';
help::pkg.general.images.objs.image.m.fitallprofiles.a.resid.def := 'None';
help::pkg.general.images.objs.image.m.fitallprofiles.a.resid.a := 'String or unset';
help::pkg.general.images.objs.image.m.fitallprofiles.s := 'fitallprofiles(region, axis, mask, ngauss, poly, sigma, fit, resid)';
help::pkg.general.images.objs.image.m.fitprofile := [=];
help::pkg.general.images.objs.image.m.fitprofile.d := 'Fit 1-dimensional profile with functional forms';
help::pkg.general.images.objs.image.m.fitprofile.a.values := [=];
help::pkg.general.images.objs.image.m.fitprofile.a.values.d := 'Output fitted or estimated profile';
help::pkg.general.images.objs.image.m.fitprofile.a.values.def := 'None';
help::pkg.general.images.objs.image.m.fitprofile.a.values.a := 'Numeric Glish array';
help::pkg.general.images.objs.image.m.fitprofile.a.resid := [=];
help::pkg.general.images.objs.image.m.fitprofile.a.resid.d := 'Output residual profile';
help::pkg.general.images.objs.image.m.fitprofile.a.resid.def := '';
help::pkg.general.images.objs.image.m.fitprofile.a.resid.a := 'Numeric Glish array';
help::pkg.general.images.objs.image.m.fitprofile.a.region := [=];
help::pkg.general.images.objs.image.m.fitprofile.a.region.d := 'The region of interest';
help::pkg.general.images.objs.image.m.fitprofile.a.region.def := 'Whole image';
help::pkg.general.images.objs.image.m.fitprofile.a.region.a := 'Region tool';
help::pkg.general.images.objs.image.m.fitprofile.a.axis := [=];
help::pkg.general.images.objs.image.m.fitprofile.a.axis.d := 'The profile axis';
help::pkg.general.images.objs.image.m.fitprofile.a.axis.def := 'Spectral';
help::pkg.general.images.objs.image.m.fitprofile.a.axis.a := 'Integer or unset';
help::pkg.general.images.objs.image.m.fitprofile.a.mask := [=];
help::pkg.general.images.objs.image.m.fitprofile.a.mask.d := 'OTF mask';
help::pkg.general.images.objs.image.m.fitprofile.a.mask.def := 'None';
help::pkg.general.images.objs.image.m.fitprofile.a.mask.a := 'Boolean LEL expression or mask region';
help::pkg.general.images.objs.image.m.fitprofile.a.estimate := [=];
help::pkg.general.images.objs.image.m.fitprofile.a.estimate.d := 'Initial estimate';
help::pkg.general.images.objs.image.m.fitprofile.a.estimate.def := 'Unset';
help::pkg.general.images.objs.image.m.fitprofile.a.estimate.a := 'Record';
help::pkg.general.images.objs.image.m.fitprofile.a.ngauss := [=];
help::pkg.general.images.objs.image.m.fitprofile.a.ngauss.d := 'Number of Gaussian elements';
help::pkg.general.images.objs.image.m.fitprofile.a.ngauss.def := '1';
help::pkg.general.images.objs.image.m.fitprofile.a.ngauss.a := 'Int';
help::pkg.general.images.objs.image.m.fitprofile.a.poly := [=];
help::pkg.general.images.objs.image.m.fitprofile.a.poly.d := 'Order of polynomial element';
help::pkg.general.images.objs.image.m.fitprofile.a.poly.def := 'Unset';
help::pkg.general.images.objs.image.m.fitprofile.a.poly.a := 'Int';
help::pkg.general.images.objs.image.m.fitprofile.a.fit := [=];
help::pkg.general.images.objs.image.m.fitprofile.a.fit.d := 'Do fit or get estimate';
help::pkg.general.images.objs.image.m.fitprofile.a.fit.def := 'T';
help::pkg.general.images.objs.image.m.fitprofile.a.fit.a := 'T or F';
help::pkg.general.images.objs.image.m.fitprofile.a.sigma := [=];
help::pkg.general.images.objs.image.m.fitprofile.a.sigma.d := 'Weights image';
help::pkg.general.images.objs.image.m.fitprofile.a.sigma.def := 'unset';
help::pkg.general.images.objs.image.m.fitprofile.a.sigma.a := 'String or unset';
help::pkg.general.images.objs.image.m.fitprofile.s := 'fitprofile(values, resid, region, axis, mask, estimate, ngauss, poly, fit, sigma)';
help::pkg.general.images.objs.image.m.fitpolynomial := [=];
help::pkg.general.images.objs.image.m.fitpolynomial.d := 'Fit 1-dimensional polynomials to profiles';
help::pkg.general.images.objs.image.m.fitpolynomial.a.residfile := [=];
help::pkg.general.images.objs.image.m.fitpolynomial.a.residfile.d := 'Output fitted residuals image file name';
help::pkg.general.images.objs.image.m.fitpolynomial.a.residfile.def := 'unset';
help::pkg.general.images.objs.image.m.fitpolynomial.a.residfile.a := 'String or unset';
help::pkg.general.images.objs.image.m.fitpolynomial.a.fitfile := [=];
help::pkg.general.images.objs.image.m.fitpolynomial.a.fitfile.d := 'Output fitted image file name';
help::pkg.general.images.objs.image.m.fitpolynomial.a.fitfile.def := 'unset';
help::pkg.general.images.objs.image.m.fitpolynomial.a.fitfile.a := 'String or unset';
help::pkg.general.images.objs.image.m.fitpolynomial.a.sigmafile := [=];
help::pkg.general.images.objs.image.m.fitpolynomial.a.sigmafile.d := 'Input weights image for fitting';
help::pkg.general.images.objs.image.m.fitpolynomial.a.sigmafile.def := 'unset';
help::pkg.general.images.objs.image.m.fitpolynomial.a.sigmafile.a := 'String or unset';
help::pkg.general.images.objs.image.m.fitpolynomial.a.axis := [=];
help::pkg.general.images.objs.image.m.fitpolynomial.a.axis.d := 'The profile axis to fit';
help::pkg.general.images.objs.image.m.fitpolynomial.a.axis.def := 'Spectral axis if exists else last';
help::pkg.general.images.objs.image.m.fitpolynomial.a.axis.a := 'Integer or unset';
help::pkg.general.images.objs.image.m.fitpolynomial.a.order := [=];
help::pkg.general.images.objs.image.m.fitpolynomial.a.order.d := 'The order of the polynomial';
help::pkg.general.images.objs.image.m.fitpolynomial.a.order.def := '0';
help::pkg.general.images.objs.image.m.fitpolynomial.a.order.a := 'Integer or unset';
help::pkg.general.images.objs.image.m.fitpolynomial.a.region := [=];
help::pkg.general.images.objs.image.m.fitpolynomial.a.region.d := 'The region of interest';
help::pkg.general.images.objs.image.m.fitpolynomial.a.region.def := 'Whole image';
help::pkg.general.images.objs.image.m.fitpolynomial.a.region.a := 'Region tool';
help::pkg.general.images.objs.image.m.fitpolynomial.a.mask := [=];
help::pkg.general.images.objs.image.m.fitpolynomial.a.mask.d := 'OTF mask';
help::pkg.general.images.objs.image.m.fitpolynomial.a.mask.def := 'None';
help::pkg.general.images.objs.image.m.fitpolynomial.a.mask.a := 'Boolean LEL expression or mask region';
help::pkg.general.images.objs.image.m.fitpolynomial.a.overwrite := [=];
help::pkg.general.images.objs.image.m.fitpolynomial.a.overwrite.d := 'Overwrite (unprompted) pre-existing output files ?';
help::pkg.general.images.objs.image.m.fitpolynomial.a.overwrite.def := 'F';
help::pkg.general.images.objs.image.m.fitpolynomial.a.overwrite.a := 'T or F';
help::pkg.general.images.objs.image.m.fitpolynomial.s := 'fitpolynomial(residfile, fitfile, sigmafile, axis, order, region, mask, overwrite)';
help::pkg.general.images.objs.image.m.fitsky := [=];
help::pkg.general.images.objs.image.m.fitsky.d := 'Fit 2-dimensional models to the sky';
help::pkg.general.images.objs.image.m.fitsky.a.pixels := [=];
help::pkg.general.images.objs.image.m.fitsky.a.pixels.d := 'Output residual pixels';
help::pkg.general.images.objs.image.m.fitsky.a.pixels.def := '';
help::pkg.general.images.objs.image.m.fitsky.a.pixels.a := 'Numeric Glish array';
help::pkg.general.images.objs.image.m.fitsky.a.pixelmask := [=];
help::pkg.general.images.objs.image.m.fitsky.a.pixelmask.d := 'Output mask of region';
help::pkg.general.images.objs.image.m.fitsky.a.pixelmask.def := '';
help::pkg.general.images.objs.image.m.fitsky.a.pixelmask.a := 'Boolean Glish array';
help::pkg.general.images.objs.image.m.fitsky.a.converged := [=];
help::pkg.general.images.objs.image.m.fitsky.a.converged.d := 'Did the fit converge ?';
help::pkg.general.images.objs.image.m.fitsky.a.converged.def := '';
help::pkg.general.images.objs.image.m.fitsky.a.converged.a := 'T or F';
help::pkg.general.images.objs.image.m.fitsky.a.region := [=];
help::pkg.general.images.objs.image.m.fitsky.a.region.d := 'The 2-D region of interest to fit';
help::pkg.general.images.objs.image.m.fitsky.a.region.def := 'Whole image';
help::pkg.general.images.objs.image.m.fitsky.a.region.a := 'Region tool';
help::pkg.general.images.objs.image.m.fitsky.a.mask := [=];
help::pkg.general.images.objs.image.m.fitsky.a.mask.d := 'OTF mask';
help::pkg.general.images.objs.image.m.fitsky.a.mask.def := 'None';
help::pkg.general.images.objs.image.m.fitsky.a.mask.a := 'Boolean LEL expression or mask region';
help::pkg.general.images.objs.image.m.fitsky.a.models := [=];
help::pkg.general.images.objs.image.m.fitsky.a.models.d := 'The model types to fit simultaneously';
help::pkg.general.images.objs.image.m.fitsky.a.models.def := 'gaussian';
help::pkg.general.images.objs.image.m.fitsky.a.models.a := 'Vector of strings from `gaussian\' ';
help::pkg.general.images.objs.image.m.fitsky.a.estimate := [=];
help::pkg.general.images.objs.image.m.fitsky.a.estimate.d := 'Initial estimate for the model';
help::pkg.general.images.objs.image.m.fitsky.a.estimate.def := 'Internal estimate made';
help::pkg.general.images.objs.image.m.fitsky.a.estimate.a := 'Componentlist tool';
help::pkg.general.images.objs.image.m.fitsky.a.fixed := [=];
help::pkg.general.images.objs.image.m.fitsky.a.fixed.d := 'Parameters to hold fixed per model';
help::pkg.general.images.objs.image.m.fitsky.a.fixed.def := 'All parameters vary';
help::pkg.general.images.objs.image.m.fitsky.a.fixed.a := 'String or vector of strings, one per model. Choose from ``fxyabp\' \' ';
help::pkg.general.images.objs.image.m.fitsky.a.includepix := [=];
help::pkg.general.images.objs.image.m.fitsky.a.includepix.d := 'Range of pixel values to include';
help::pkg.general.images.objs.image.m.fitsky.a.includepix.def := 'See below';
help::pkg.general.images.objs.image.m.fitsky.a.includepix.a := 'Vector of 1 or 2 Floats';
help::pkg.general.images.objs.image.m.fitsky.a.excludepix := [=];
help::pkg.general.images.objs.image.m.fitsky.a.excludepix.d := 'Range of pixel values to exclude';
help::pkg.general.images.objs.image.m.fitsky.a.excludepix.def := 'See below';
help::pkg.general.images.objs.image.m.fitsky.a.excludepix.a := 'Vector of 1 of 2 Floats';
help::pkg.general.images.objs.image.m.fitsky.a.fit := [=];
help::pkg.general.images.objs.image.m.fitsky.a.fit.d := 'Do fit or get estimate';
help::pkg.general.images.objs.image.m.fitsky.a.fit.def := 'T';
help::pkg.general.images.objs.image.m.fitsky.a.fit.a := 'T or F';
help::pkg.general.images.objs.image.m.fitsky.a.deconvolve := [=];
help::pkg.general.images.objs.image.m.fitsky.a.deconvolve.d := 'Deconvolve from restoring beam';
help::pkg.general.images.objs.image.m.fitsky.a.deconvolve.def := 'F';
help::pkg.general.images.objs.image.m.fitsky.a.deconvolve.a := 'T or F';
help::pkg.general.images.objs.image.m.fitsky.a.list := [=];
help::pkg.general.images.objs.image.m.fitsky.a.list.d := 'List informative messages to the logger';
help::pkg.general.images.objs.image.m.fitsky.a.list.def := 'T';
help::pkg.general.images.objs.image.m.fitsky.a.list.a := 'T or F';
help::pkg.general.images.objs.image.m.fitsky.s := 'fitsky(pixels, pixelmask, converged, region, mask, models, estimate, fixed, includepix, excludepix, fit, deconvolve, list)';
help::pkg.general.images.objs.image.m.getchunk := [=];
help::pkg.general.images.objs.image.m.getchunk.d := 'Get the pixel values from a regular region of the image into a Glish array';
help::pkg.general.images.objs.image.m.getchunk.a.blc := [=];
help::pkg.general.images.objs.image.m.getchunk.a.blc.d := 'Bottom-Left-Corner (beginning) of pixel section';
help::pkg.general.images.objs.image.m.getchunk.a.blc.def := 'Start of image';
help::pkg.general.images.objs.image.m.getchunk.a.blc.a := 'Vector of integers';
help::pkg.general.images.objs.image.m.getchunk.a.trc := [=];
help::pkg.general.images.objs.image.m.getchunk.a.trc.d := 'Top-Right-Corner (end) of pixel section';
help::pkg.general.images.objs.image.m.getchunk.a.trc.def := 'End of image';
help::pkg.general.images.objs.image.m.getchunk.a.trc.a := 'Vector of positive integers';
help::pkg.general.images.objs.image.m.getchunk.a.inc := [=];
help::pkg.general.images.objs.image.m.getchunk.a.inc.d := 'increment (stride) along axes';
help::pkg.general.images.objs.image.m.getchunk.a.inc.def := '1';
help::pkg.general.images.objs.image.m.getchunk.a.inc.a := 'Vector of positive integers';
help::pkg.general.images.objs.image.m.getchunk.a.axes := [=];
help::pkg.general.images.objs.image.m.getchunk.a.axes.d := 'Axes to average over';
help::pkg.general.images.objs.image.m.getchunk.a.axes.def := 'None';
help::pkg.general.images.objs.image.m.getchunk.a.axes.a := 'Vector of positive integers';
help::pkg.general.images.objs.image.m.getchunk.a.list := [=];
help::pkg.general.images.objs.image.m.getchunk.a.list.d := 'List bounding box to logger ?';
help::pkg.general.images.objs.image.m.getchunk.a.list.def := 'F';
help::pkg.general.images.objs.image.m.getchunk.a.list.a := 'T or F';
help::pkg.general.images.objs.image.m.getchunk.a.dropdeg := [=];
help::pkg.general.images.objs.image.m.getchunk.a.dropdeg.d := 'Drop degenerate axes ?';
help::pkg.general.images.objs.image.m.getchunk.a.dropdeg.def := 'F';
help::pkg.general.images.objs.image.m.getchunk.a.dropdeg.a := 'T or F';
help::pkg.general.images.objs.image.m.getchunk.a.getmask := [=];
help::pkg.general.images.objs.image.m.getchunk.a.getmask.d := 'Get the pixel mask as well';
help::pkg.general.images.objs.image.m.getchunk.a.getmask.def := 'F';
help::pkg.general.images.objs.image.m.getchunk.a.getmask.a := 'T or F';
help::pkg.general.images.objs.image.m.getchunk.s := 'getchunk(blc, trc, inc, axes, list, dropdeg, getmask)';
help::pkg.general.images.objs.image.m.getregion := [=];
help::pkg.general.images.objs.image.m.getregion.d := 'Get pixels and mask from a region-of-interest of the image';
help::pkg.general.images.objs.image.m.getregion.a.pixels := [=];
help::pkg.general.images.objs.image.m.getregion.a.pixels.d := 'The recovered pixel values';
help::pkg.general.images.objs.image.m.getregion.a.pixels.def := '';
help::pkg.general.images.objs.image.m.getregion.a.pixels.a := 'Glish array';
help::pkg.general.images.objs.image.m.getregion.a.pixelmask := [=];
help::pkg.general.images.objs.image.m.getregion.a.pixelmask.d := 'The recovered pixel mask values';
help::pkg.general.images.objs.image.m.getregion.a.pixelmask.def := '';
help::pkg.general.images.objs.image.m.getregion.a.pixelmask.a := 'Glish array';
help::pkg.general.images.objs.image.m.getregion.a.region := [=];
help::pkg.general.images.objs.image.m.getregion.a.region.d := 'The region of interest';
help::pkg.general.images.objs.image.m.getregion.a.region.def := 'Whole image';
help::pkg.general.images.objs.image.m.getregion.a.region.a := 'Region tool';
help::pkg.general.images.objs.image.m.getregion.a.axes := [=];
help::pkg.general.images.objs.image.m.getregion.a.axes.d := 'Axes to average over';
help::pkg.general.images.objs.image.m.getregion.a.axes.def := 'None';
help::pkg.general.images.objs.image.m.getregion.a.axes.a := 'Vector of positive integers';
help::pkg.general.images.objs.image.m.getregion.a.mask := [=];
help::pkg.general.images.objs.image.m.getregion.a.mask.d := 'OTF mask';
help::pkg.general.images.objs.image.m.getregion.a.mask.def := 'None';
help::pkg.general.images.objs.image.m.getregion.a.mask.a := 'Boolean LEL expression or mask region';
help::pkg.general.images.objs.image.m.getregion.a.list := [=];
help::pkg.general.images.objs.image.m.getregion.a.list.d := 'List the bounding box to the logger';
help::pkg.general.images.objs.image.m.getregion.a.list.def := 'F';
help::pkg.general.images.objs.image.m.getregion.a.list.a := 'T or F';
help::pkg.general.images.objs.image.m.getregion.a.dropdeg := [=];
help::pkg.general.images.objs.image.m.getregion.a.dropdeg.d := 'Drop degenerate axes';
help::pkg.general.images.objs.image.m.getregion.a.dropdeg.def := 'F';
help::pkg.general.images.objs.image.m.getregion.a.dropdeg.a := 'T or F';
help::pkg.general.images.objs.image.m.getregion.s := 'getregion(pixels, pixelmask, region, axes, mask, list, dropdeg)';
help::pkg.general.images.objs.image.m.getslice := [=];
help::pkg.general.images.objs.image.m.getslice.d := 'Get 1-D slice from the image';
help::pkg.general.images.objs.image.m.getslice.a.x := [=];
help::pkg.general.images.objs.image.m.getslice.a.x.d := 'Polyline x vertices in absolute pixel coordinates';
help::pkg.general.images.objs.image.m.getslice.a.x.def := '';
help::pkg.general.images.objs.image.m.getslice.a.x.a := 'Vector of float';
help::pkg.general.images.objs.image.m.getslice.a.y := [=];
help::pkg.general.images.objs.image.m.getslice.a.y.d := 'Polyline y vertices in absolute pixel coordinates';
help::pkg.general.images.objs.image.m.getslice.a.y.def := '';
help::pkg.general.images.objs.image.m.getslice.a.y.a := 'Vector of float';
help::pkg.general.images.objs.image.m.getslice.a.axes := [=];
help::pkg.general.images.objs.image.m.getslice.a.axes.d := 'Pixel axes of plane holding slice';
help::pkg.general.images.objs.image.m.getslice.a.axes.def := 'First two axes';
help::pkg.general.images.objs.image.m.getslice.a.axes.a := 'Vector of integers';
help::pkg.general.images.objs.image.m.getslice.a.coord := [=];
help::pkg.general.images.objs.image.m.getslice.a.coord.d := 'Specify pixel coordinate for other axes';
help::pkg.general.images.objs.image.m.getslice.a.coord.def := 'Unity';
help::pkg.general.images.objs.image.m.getslice.a.coord.a := 'Vector of integers';
help::pkg.general.images.objs.image.m.getslice.a.npts := [=];
help::pkg.general.images.objs.image.m.getslice.a.npts.d := 'Number of points in slice';
help::pkg.general.images.objs.image.m.getslice.a.npts.def := 'Auto determination';
help::pkg.general.images.objs.image.m.getslice.a.npts.a := 'Integer';
help::pkg.general.images.objs.image.m.getslice.a.method := [=];
help::pkg.general.images.objs.image.m.getslice.a.method.d := 'The interpolation method';
help::pkg.general.images.objs.image.m.getslice.a.method.def := '\' linear\' ';
help::pkg.general.images.objs.image.m.getslice.a.method.a := 'String from \' nearest\' , \' linear\' , \' cubic\' ';
help::pkg.general.images.objs.image.m.getslice.a.plot := [=];
help::pkg.general.images.objs.image.m.getslice.a.plot.d := 'Make a plot of the slice';
help::pkg.general.images.objs.image.m.getslice.a.plot.def := 'F';
help::pkg.general.images.objs.image.m.getslice.a.plot.a := 'T or F';
help::pkg.general.images.objs.image.m.getslice.s := 'getslice(x, y, axes, coord, npts, method, plot)';
help::pkg.general.images.objs.image.m.hanning := [=];
help::pkg.general.images.objs.image.m.hanning.d := 'Convolve one axis of image with a Hanning kernel';
help::pkg.general.images.objs.image.m.hanning.a.outfile := [=];
help::pkg.general.images.objs.image.m.hanning.a.outfile.d := 'Output image file name';
help::pkg.general.images.objs.image.m.hanning.a.outfile.def := 'unset';
help::pkg.general.images.objs.image.m.hanning.a.outfile.a := 'String';
help::pkg.general.images.objs.image.m.hanning.a.region := [=];
help::pkg.general.images.objs.image.m.hanning.a.region.d := 'Region of interest';
help::pkg.general.images.objs.image.m.hanning.a.region.def := 'Whole image';
help::pkg.general.images.objs.image.m.hanning.a.region.a := 'Region tool';
help::pkg.general.images.objs.image.m.hanning.a.mask := [=];
help::pkg.general.images.objs.image.m.hanning.a.mask.d := 'OTF mask';
help::pkg.general.images.objs.image.m.hanning.a.mask.def := 'None';
help::pkg.general.images.objs.image.m.hanning.a.mask.a := 'Boolean LEL expression or mask region';
help::pkg.general.images.objs.image.m.hanning.a.axis := [=];
help::pkg.general.images.objs.image.m.hanning.a.axis.d := 'Axis to convolve';
help::pkg.general.images.objs.image.m.hanning.a.axis.def := 'Spectral axis if there is one';
help::pkg.general.images.objs.image.m.hanning.a.axis.a := 'Positive integer';
help::pkg.general.images.objs.image.m.hanning.a.drop := [=];
help::pkg.general.images.objs.image.m.hanning.a.drop.d := 'Drop every other pixel on output ?';
help::pkg.general.images.objs.image.m.hanning.a.drop.def := 'T';
help::pkg.general.images.objs.image.m.hanning.a.drop.a := 'Bool';
help::pkg.general.images.objs.image.m.hanning.a.overwrite := [=];
help::pkg.general.images.objs.image.m.hanning.a.overwrite.d := 'Overwrite (unprompted) pre-existing output file ?';
help::pkg.general.images.objs.image.m.hanning.a.overwrite.def := 'F';
help::pkg.general.images.objs.image.m.hanning.a.overwrite.a := 'T or F';
help::pkg.general.images.objs.image.m.hanning.a.async := [=];
help::pkg.general.images.objs.image.m.hanning.a.async.d := 'Run asynchronously?';
help::pkg.general.images.objs.image.m.hanning.a.async.def := '!dowait';
help::pkg.general.images.objs.image.m.hanning.a.async.a := 'Bool';
help::pkg.general.images.objs.image.m.hanning.s := 'hanning(outfile, region, mask, axis, drop, overwrite, async)';
help::pkg.general.images.objs.image.m.haslock := [=];
help::pkg.general.images.objs.image.m.haslock.d := 'Does this image have any locks set ?';
help::pkg.general.images.objs.image.m.haslock.s := 'haslock()';
help::pkg.general.images.objs.image.m.histograms := [=];
help::pkg.general.images.objs.image.m.histograms.d := 'Compute histograms from the image';
help::pkg.general.images.objs.image.m.histograms.a.histout := [=];
help::pkg.general.images.objs.image.m.histograms.a.histout.d := 'Glish record containing the histograms';
help::pkg.general.images.objs.image.m.histograms.a.histout.def := 'No retrieval';
help::pkg.general.images.objs.image.m.histograms.a.histout.a := 'Glish variable';
help::pkg.general.images.objs.image.m.histograms.a.axes := [=];
help::pkg.general.images.objs.image.m.histograms.a.axes.d := 'List of axes to compute histograms over';
help::pkg.general.images.objs.image.m.histograms.a.axes.def := 'All axes';
help::pkg.general.images.objs.image.m.histograms.a.axes.a := 'Vector of integers';
help::pkg.general.images.objs.image.m.histograms.a.region := [=];
help::pkg.general.images.objs.image.m.histograms.a.region.d := 'Region of interest';
help::pkg.general.images.objs.image.m.histograms.a.region.def := 'Whole image';
help::pkg.general.images.objs.image.m.histograms.a.region.a := 'Region tool';
help::pkg.general.images.objs.image.m.histograms.a.mask := [=];
help::pkg.general.images.objs.image.m.histograms.a.mask.d := 'OTF mask';
help::pkg.general.images.objs.image.m.histograms.a.mask.def := 'None';
help::pkg.general.images.objs.image.m.histograms.a.mask.a := 'Boolean LEL expression or mask region';
help::pkg.general.images.objs.image.m.histograms.a.nbins := [=];
help::pkg.general.images.objs.image.m.histograms.a.nbins.d := 'Number of bins in histograms';
help::pkg.general.images.objs.image.m.histograms.a.nbins.def := '25';
help::pkg.general.images.objs.image.m.histograms.a.nbins.a := 'Positive integer';
help::pkg.general.images.objs.image.m.histograms.a.includepix := [=];
help::pkg.general.images.objs.image.m.histograms.a.includepix.d := 'Range of pixel values to include';
help::pkg.general.images.objs.image.m.histograms.a.includepix.def := 'Include all pixels';
help::pkg.general.images.objs.image.m.histograms.a.includepix.a := 'A vector of 1 or 2 Floats';
help::pkg.general.images.objs.image.m.histograms.a.gauss := [=];
help::pkg.general.images.objs.image.m.histograms.a.gauss.d := 'If T overlay a Gaussian on each histogram';
help::pkg.general.images.objs.image.m.histograms.a.gauss.def := 'F';
help::pkg.general.images.objs.image.m.histograms.a.gauss.a := 'Bool';
help::pkg.general.images.objs.image.m.histograms.a.cumu := [=];
help::pkg.general.images.objs.image.m.histograms.a.cumu.d := 'If T plot cumulative histograms, otherwise plot non-cumulatively';
help::pkg.general.images.objs.image.m.histograms.a.cumu.def := 'F';
help::pkg.general.images.objs.image.m.histograms.a.cumu.a := 'Bool';
help::pkg.general.images.objs.image.m.histograms.a.log := [=];
help::pkg.general.images.objs.image.m.histograms.a.log.d := 'If T plot the ordinate logarithmically, otherwise plot linearly';
help::pkg.general.images.objs.image.m.histograms.a.log.def := 'F';
help::pkg.general.images.objs.image.m.histograms.a.log.a := 'Bool';
help::pkg.general.images.objs.image.m.histograms.a.list := [=];
help::pkg.general.images.objs.image.m.histograms.a.list.d := 'If T then list some statistics as well';
help::pkg.general.images.objs.image.m.histograms.a.list.def := 'T';
help::pkg.general.images.objs.image.m.histograms.a.list.a := 'Bool';
help::pkg.general.images.objs.image.m.histograms.a.plotter := [=];
help::pkg.general.images.objs.image.m.histograms.a.plotter.d := 'The PGPLOT device name to make plots on';
help::pkg.general.images.objs.image.m.histograms.a.plotter.def := 'No plotting';
help::pkg.general.images.objs.image.m.histograms.a.plotter.a := 'Any valid PGPLOT device';
help::pkg.general.images.objs.image.m.histograms.a.nx := [=];
help::pkg.general.images.objs.image.m.histograms.a.nx.d := 'The number of subplots per page in the x direction';
help::pkg.general.images.objs.image.m.histograms.a.nx.def := '1';
help::pkg.general.images.objs.image.m.histograms.a.nx.a := 'Positive integer';
help::pkg.general.images.objs.image.m.histograms.a.ny := [=];
help::pkg.general.images.objs.image.m.histograms.a.ny.d := 'The number of subplots per page in the y direction';
help::pkg.general.images.objs.image.m.histograms.a.ny.def := '1';
help::pkg.general.images.objs.image.m.histograms.a.ny.a := 'Positive integer';
help::pkg.general.images.objs.image.m.histograms.a.size := [=];
help::pkg.general.images.objs.image.m.histograms.a.size.d := 'Size of plotter';
help::pkg.general.images.objs.image.m.histograms.a.size.def := '[600,450]';
help::pkg.general.images.objs.image.m.histograms.a.size.a := 'Vector of integers';
help::pkg.general.images.objs.image.m.histograms.a.force := [=];
help::pkg.general.images.objs.image.m.histograms.a.force.d := 'If T then force the stored statistical accumulations to be regenerated';
help::pkg.general.images.objs.image.m.histograms.a.force.def := 'F';
help::pkg.general.images.objs.image.m.histograms.a.force.a := 'Bool';
help::pkg.general.images.objs.image.m.histograms.a.disk := [=];
help::pkg.general.images.objs.image.m.histograms.a.disk.d := 'If T then force the storage image to disk';
help::pkg.general.images.objs.image.m.histograms.a.disk.def := 'F';
help::pkg.general.images.objs.image.m.histograms.a.disk.a := 'Bool';
help::pkg.general.images.objs.image.m.histograms.a.async := [=];
help::pkg.general.images.objs.image.m.histograms.a.async.d := 'Run asynchronously?';
help::pkg.general.images.objs.image.m.histograms.a.async.def := '!dowait - but always F if plotting';
help::pkg.general.images.objs.image.m.histograms.a.async.a := 'Bool';
help::pkg.general.images.objs.image.m.histograms.s := 'histograms(histout, axes, region, mask, nbins, includepix, gauss, cumu, log, list, plotter, nx, ny, size, force, disk, async)';
help::pkg.general.images.objs.image.m.history := [=];
help::pkg.general.images.objs.image.m.history.d := 'Recover and/or list the history file';
help::pkg.general.images.objs.image.m.history.a.list := [=];
help::pkg.general.images.objs.image.m.history.a.list.d := 'List history to the logger ?';
help::pkg.general.images.objs.image.m.history.a.list.def := 'F';
help::pkg.general.images.objs.image.m.history.a.list.a := 'T or F';
help::pkg.general.images.objs.image.m.history.a.browse := [=];
help::pkg.general.images.objs.image.m.history.a.browse.d := 'Browse history with table browser?';
help::pkg.general.images.objs.image.m.history.a.browse.def := 'T';
help::pkg.general.images.objs.image.m.history.a.browse.a := 'T or F';
help::pkg.general.images.objs.image.m.history.s := 'history(list, browse)';
help::pkg.general.images.objs.image.m.id := [=];
help::pkg.general.images.objs.image.m.id.d := 'Return the fundamental identifier of this tool';
help::pkg.general.images.objs.image.m.id.s := 'id()';
help::pkg.general.images.objs.image.m.insert := [=];
help::pkg.general.images.objs.image.m.insert.d := 'Insert specified image into this image';
help::pkg.general.images.objs.image.m.insert.a.infile := [=];
help::pkg.general.images.objs.image.m.insert.a.infile.d := 'Image file name or Image tool to insert';
help::pkg.general.images.objs.image.m.insert.a.infile.def := 'unset';
help::pkg.general.images.objs.image.m.insert.a.infile.a := 'String';
help::pkg.general.images.objs.image.m.insert.a.region := [=];
help::pkg.general.images.objs.image.m.insert.a.region.d := 'The region of interest of the input image';
help::pkg.general.images.objs.image.m.insert.a.region.def := 'Whole image';
help::pkg.general.images.objs.image.m.insert.a.region.a := 'Region tool';
help::pkg.general.images.objs.image.m.insert.a.locate := [=];
help::pkg.general.images.objs.image.m.insert.a.locate.d := 'Location of input image in output image';
help::pkg.general.images.objs.image.m.insert.a.locate.def := 'Centrally located';
help::pkg.general.images.objs.image.m.insert.a.locate.a := 'Vector';
help::pkg.general.images.objs.image.m.insert.s := 'insert(infile, region, locate)';
help::pkg.general.images.objs.image.m.isopen := [=];
help::pkg.general.images.objs.image.m.isopen.d := 'Is this Image \tool\ open ?';
help::pkg.general.images.objs.image.m.isopen.s := 'isopen()';
help::pkg.general.images.objs.image.m.ispersistent := [=];
help::pkg.general.images.objs.image.m.ispersistent.d := 'Is the image persistent ?';
help::pkg.general.images.objs.image.m.ispersistent.s := 'ispersistent()';
help::pkg.general.images.objs.image.m.lock := [=];
help::pkg.general.images.objs.image.m.lock.d := 'Acquire a lock on the image';
help::pkg.general.images.objs.image.m.lock.a.write := [=];
help::pkg.general.images.objs.image.m.lock.a.write.d := 'Acquire a read/write (T) or a readonly (F) lock';
help::pkg.general.images.objs.image.m.lock.a.write.def := 'T';
help::pkg.general.images.objs.image.m.lock.a.write.a := 'T or F';
help::pkg.general.images.objs.image.m.lock.a.nattempts := [=];
help::pkg.general.images.objs.image.m.lock.a.nattempts.d := 'Number of attempts';
help::pkg.general.images.objs.image.m.lock.a.nattempts.def := 'Forever';
help::pkg.general.images.objs.image.m.lock.a.nattempts.a := 'Non-negative integer';
help::pkg.general.images.objs.image.m.lock.s := 'lock(write, nattempts)';
help::pkg.general.images.objs.image.m.makecomplex := [=];
help::pkg.general.images.objs.image.m.makecomplex.d := 'Make a complex image';
help::pkg.general.images.objs.image.m.makecomplex.a.outfile := [=];
help::pkg.general.images.objs.image.m.makecomplex.a.outfile.d := 'Output Complex (disk) image file name';
help::pkg.general.images.objs.image.m.makecomplex.a.outfile.def := '';
help::pkg.general.images.objs.image.m.makecomplex.a.outfile.a := 'String';
help::pkg.general.images.objs.image.m.makecomplex.a.imag := [=];
help::pkg.general.images.objs.image.m.makecomplex.a.imag.d := 'Imaginary image file name';
help::pkg.general.images.objs.image.m.makecomplex.a.imag.def := '';
help::pkg.general.images.objs.image.m.makecomplex.a.imag.a := 'String';
help::pkg.general.images.objs.image.m.makecomplex.a.region := [=];
help::pkg.general.images.objs.image.m.makecomplex.a.region.d := 'The region of interest';
help::pkg.general.images.objs.image.m.makecomplex.a.region.def := 'Whole image';
help::pkg.general.images.objs.image.m.makecomplex.a.region.a := 'Region tool';
help::pkg.general.images.objs.image.m.makecomplex.a.overwrite := [=];
help::pkg.general.images.objs.image.m.makecomplex.a.overwrite.d := 'Overwrite (unprompted) pre-existing output file ?';
help::pkg.general.images.objs.image.m.makecomplex.a.overwrite.def := 'F';
help::pkg.general.images.objs.image.m.makecomplex.a.overwrite.a := 'T or F';
help::pkg.general.images.objs.image.m.makecomplex.s := 'makecomplex(outfile, imag, region, overwrite)';
help::pkg.general.images.objs.image.m.maskhandler := [=];
help::pkg.general.images.objs.image.m.maskhandler.d := 'Handle pixel masks';
help::pkg.general.images.objs.image.m.maskhandler.a.op := [=];
help::pkg.general.images.objs.image.m.maskhandler.a.op.d := 'The operation';
help::pkg.general.images.objs.image.m.maskhandler.a.op.def := '';
help::pkg.general.images.objs.image.m.maskhandler.a.op.a := 'String, one of `set\' , `default\' , `delete\' , `rename\' , `get\' , `copy\' ';
help::pkg.general.images.objs.image.m.maskhandler.a.name := [=];
help::pkg.general.images.objs.image.m.maskhandler.a.name.d := 'Name of mask or masks';
help::pkg.general.images.objs.image.m.maskhandler.a.name.def := '';
help::pkg.general.images.objs.image.m.maskhandler.a.name.a := 'Vector of strings';
help::pkg.general.images.objs.image.m.maskhandler.s := 'maskhandler(op, name)';
help::pkg.general.images.objs.image.m.maskhandlergui := [=];
help::pkg.general.images.objs.image.m.maskhandlergui.d := 'Handle masks using a GUI interface';
help::pkg.general.images.objs.image.m.maskhandlergui.a.parent := [=];
help::pkg.general.images.objs.image.m.maskhandlergui.a.parent.d := 'Parent frame to embed GUI in';
help::pkg.general.images.objs.image.m.maskhandlergui.a.parent.def := 'Create stand alone';
help::pkg.general.images.objs.image.m.maskhandlergui.a.parent.a := '\glish\/Tk agent';
help::pkg.general.images.objs.image.m.maskhandlergui.a.widgetset := [=];
help::pkg.general.images.objs.image.m.maskhandlergui.a.widgetset.d := 'The widgetset to use for the GUI';
help::pkg.general.images.objs.image.m.maskhandlergui.a.widgetset.def := 'dws';
help::pkg.general.images.objs.image.m.maskhandlergui.a.widgetset.a := 'A widgetserver tool';
help::pkg.general.images.objs.image.m.maskhandlergui.s := 'maskhandlergui(parent, widgetset)';
help::pkg.general.images.objs.image.m.miscinfo := [=];
help::pkg.general.images.objs.image.m.miscinfo.d := 'Get the miscellaneous information record from an image';
help::pkg.general.images.objs.image.m.miscinfo.s := 'miscinfo()';
help::pkg.general.images.objs.image.m.modify := [=];
help::pkg.general.images.objs.image.m.modify.d := 'Modify image with a model';
help::pkg.general.images.objs.image.m.modify.a.model := [=];
help::pkg.general.images.objs.image.m.modify.a.model.d := 'The model';
help::pkg.general.images.objs.image.m.modify.a.model.def := '';
help::pkg.general.images.objs.image.m.modify.a.model.a := 'Componentlist tool';
help::pkg.general.images.objs.image.m.modify.a.region := [=];
help::pkg.general.images.objs.image.m.modify.a.region.d := 'The 2-D region of interest';
help::pkg.general.images.objs.image.m.modify.a.region.def := 'Whole image';
help::pkg.general.images.objs.image.m.modify.a.region.a := 'Region tool';
help::pkg.general.images.objs.image.m.modify.a.mask := [=];
help::pkg.general.images.objs.image.m.modify.a.mask.d := 'OTF mask';
help::pkg.general.images.objs.image.m.modify.a.mask.def := 'None';
help::pkg.general.images.objs.image.m.modify.a.mask.a := 'Boolean LEL expression or mask region';
help::pkg.general.images.objs.image.m.modify.a.subtract := [=];
help::pkg.general.images.objs.image.m.modify.a.subtract.d := 'Subtract or add the model';
help::pkg.general.images.objs.image.m.modify.a.subtract.def := 'T';
help::pkg.general.images.objs.image.m.modify.a.subtract.a := 'T or F';
help::pkg.general.images.objs.image.m.modify.a.list := [=];
help::pkg.general.images.objs.image.m.modify.a.list.d := 'List informative messages to the logger';
help::pkg.general.images.objs.image.m.modify.a.list.def := 'T';
help::pkg.general.images.objs.image.m.modify.a.list.a := 'T or F';
help::pkg.general.images.objs.image.m.modify.a.async := [=];
help::pkg.general.images.objs.image.m.modify.a.async.d := 'Run asynchronously?';
help::pkg.general.images.objs.image.m.modify.a.async.def := '!dowait';
help::pkg.general.images.objs.image.m.modify.a.async.a := 'Bool';
help::pkg.general.images.objs.image.m.modify.s := 'modify(model, region, mask, subtract, list, async)';
help::pkg.general.images.objs.image.m.maxfit := [=];
help::pkg.general.images.objs.image.m.maxfit.d := 'Find maximum and do parabolic fit in the sky';
help::pkg.general.images.objs.image.m.maxfit.a.region := [=];
help::pkg.general.images.objs.image.m.maxfit.a.region.d := 'The 2-D region of interest to fit';
help::pkg.general.images.objs.image.m.maxfit.a.region.def := 'Whole image';
help::pkg.general.images.objs.image.m.maxfit.a.region.a := 'Region tool';
help::pkg.general.images.objs.image.m.maxfit.a.point := [=];
help::pkg.general.images.objs.image.m.maxfit.a.point.d := 'Find only point sources ?';
help::pkg.general.images.objs.image.m.maxfit.a.point.def := 'T';
help::pkg.general.images.objs.image.m.maxfit.a.point.a := 'T or F';
help::pkg.general.images.objs.image.m.maxfit.a.width := [=];
help::pkg.general.images.objs.image.m.maxfit.a.width.d := 'Half-width of fit grid when point=F';
help::pkg.general.images.objs.image.m.maxfit.a.width.def := '5';
help::pkg.general.images.objs.image.m.maxfit.a.width.a := 'Integer';
help::pkg.general.images.objs.image.m.maxfit.a.negfind := [=];
help::pkg.general.images.objs.image.m.maxfit.a.negfind.d := 'Find negative sources as well as positive ?';
help::pkg.general.images.objs.image.m.maxfit.a.negfind.def := 'F';
help::pkg.general.images.objs.image.m.maxfit.a.negfind.a := 'T or F';
help::pkg.general.images.objs.image.m.maxfit.a.list := [=];
help::pkg.general.images.objs.image.m.maxfit.a.list.d := 'List the fitted parameters to the logger ?';
help::pkg.general.images.objs.image.m.maxfit.a.list.def := 'T';
help::pkg.general.images.objs.image.m.maxfit.a.list.a := 'T or F';
help::pkg.general.images.objs.image.m.maxfit.s := 'maxfit(region, point, width, negfind, list)';
help::pkg.general.images.objs.image.m.moments := [=];
help::pkg.general.images.objs.image.m.moments.d := 'Compute moments from an image';
help::pkg.general.images.objs.image.m.moments.a.moments := [=];
help::pkg.general.images.objs.image.m.moments.a.moments.d := 'List of moments that you would like to compute';
help::pkg.general.images.objs.image.m.moments.a.moments.def := '0 (integrated spectrum)';
help::pkg.general.images.objs.image.m.moments.a.moments.a := 'Vector of integers';
help::pkg.general.images.objs.image.m.moments.a.axis := [=];
help::pkg.general.images.objs.image.m.moments.a.axis.d := 'The moment axis';
help::pkg.general.images.objs.image.m.moments.a.axis.def := 'The spectral axis if there is one';
help::pkg.general.images.objs.image.m.moments.a.axis.a := 'Positive integer';
help::pkg.general.images.objs.image.m.moments.a.region := [=];
help::pkg.general.images.objs.image.m.moments.a.region.d := 'Region of interest';
help::pkg.general.images.objs.image.m.moments.a.region.def := 'Whole image';
help::pkg.general.images.objs.image.m.moments.a.region.a := 'Region tool';
help::pkg.general.images.objs.image.m.moments.a.mask := [=];
help::pkg.general.images.objs.image.m.moments.a.mask.d := 'OTF mask';
help::pkg.general.images.objs.image.m.moments.a.mask.def := 'None';
help::pkg.general.images.objs.image.m.moments.a.mask.a := 'Boolean LEL expression or mask region';
help::pkg.general.images.objs.image.m.moments.a.method := [=];
help::pkg.general.images.objs.image.m.moments.a.method.d := 'List of windowing and/or fitting functions you would like to invoke';
help::pkg.general.images.objs.image.m.moments.a.method.def := 'Don\' t invoke the window or fit functions, and don\' t invoke any interactive functions';
help::pkg.general.images.objs.image.m.moments.a.method.a := 'Vector of strings from `window\' , `fit\' , and `interactive\' ';
help::pkg.general.images.objs.image.m.moments.a.smoothaxes := [=];
help::pkg.general.images.objs.image.m.moments.a.smoothaxes.d := 'List of axes to smooth';
help::pkg.general.images.objs.image.m.moments.a.smoothaxes.def := 'No smoothing';
help::pkg.general.images.objs.image.m.moments.a.smoothaxes.a := 'Vector of integers';
help::pkg.general.images.objs.image.m.moments.a.smoothtypes := [=];
help::pkg.general.images.objs.image.m.moments.a.smoothtypes.d := 'List of smoothing kernel types, one for each axis to smooth';
help::pkg.general.images.objs.image.m.moments.a.smoothtypes.def := 'No smoothing';
help::pkg.general.images.objs.image.m.moments.a.smoothtypes.a := 'Vector of strings from `gauss\' , `boxcar\' , `hanning\' ';
help::pkg.general.images.objs.image.m.moments.a.smoothwidths := [=];
help::pkg.general.images.objs.image.m.moments.a.smoothwidths.d := 'List of widths (full width for boxcar, full width at half maximum             for gaussian, 3 for Hanning) in pixels for the smoothing kernels';
help::pkg.general.images.objs.image.m.moments.a.smoothwidths.def := 'No smoothing';
help::pkg.general.images.objs.image.m.moments.a.smoothwidths.a := 'Vector of numeric, quantity or string';
help::pkg.general.images.objs.image.m.moments.a.includepix := [=];
help::pkg.general.images.objs.image.m.moments.a.includepix.d := 'Range of pixel values to include';
help::pkg.general.images.objs.image.m.moments.a.includepix.def := 'Include all pixels';
help::pkg.general.images.objs.image.m.moments.a.includepix.a := 'Vector of 1 or 2 Floats';
help::pkg.general.images.objs.image.m.moments.a.excludepix := [=];
help::pkg.general.images.objs.image.m.moments.a.excludepix.d := 'Range of pixel values to exclude';
help::pkg.general.images.objs.image.m.moments.a.excludepix.def := 'Exclude no pixels';
help::pkg.general.images.objs.image.m.moments.a.excludepix.a := 'Vector of 1 of 2 Floats';
help::pkg.general.images.objs.image.m.moments.a.peaksnr := [=];
help::pkg.general.images.objs.image.m.moments.a.peaksnr.d := 'The SNR ratio below which the spectrum will be rejected as noise (used by the window and fit functions only)';
help::pkg.general.images.objs.image.m.moments.a.peaksnr.def := '3';
help::pkg.general.images.objs.image.m.moments.a.peaksnr.a := 'A positive float';
help::pkg.general.images.objs.image.m.moments.a.stddev := [=];
help::pkg.general.images.objs.image.m.moments.a.stddev.d := 'Standard deviation of the noise signal in the image (used by the window and fit functions only)';
help::pkg.general.images.objs.image.m.moments.a.stddev.def := 'Automatic noise determination';
help::pkg.general.images.objs.image.m.moments.a.stddev.a := 'Positive float';
help::pkg.general.images.objs.image.m.moments.a.doppler := [=];
help::pkg.general.images.objs.image.m.moments.a.doppler.d := 'Velocity doppler definition for velocity computations along spectral axes';
help::pkg.general.images.objs.image.m.moments.a.doppler.def := 'RADIO';
help::pkg.general.images.objs.image.m.moments.a.doppler.a := 'String';
help::pkg.general.images.objs.image.m.moments.a.outfile := [=];
help::pkg.general.images.objs.image.m.moments.a.outfile.d := 'Output image file name (or root for multiple moments)';
help::pkg.general.images.objs.image.m.moments.a.outfile.def := 'input + an auto-determined suffix';
help::pkg.general.images.objs.image.m.moments.a.outfile.a := 'String';
help::pkg.general.images.objs.image.m.moments.a.smoothout := [=];
help::pkg.general.images.objs.image.m.moments.a.smoothout.d := 'Output file name for convolved image';
help::pkg.general.images.objs.image.m.moments.a.smoothout.def := 'Don\' t save the convolved image';
help::pkg.general.images.objs.image.m.moments.a.smoothout.a := 'String';
help::pkg.general.images.objs.image.m.moments.a.plotter := [=];
help::pkg.general.images.objs.image.m.moments.a.plotter.d := 'The PGPLOT device name to make plots on';
help::pkg.general.images.objs.image.m.moments.a.plotter.def := 'No plotting';
help::pkg.general.images.objs.image.m.moments.a.plotter.a := 'Any valid PGPLOT device';
help::pkg.general.images.objs.image.m.moments.a.nx := [=];
help::pkg.general.images.objs.image.m.moments.a.nx.d := 'The number of subplots per page in the x direction';
help::pkg.general.images.objs.image.m.moments.a.nx.def := '1';
help::pkg.general.images.objs.image.m.moments.a.nx.a := 'Any positive integer';
help::pkg.general.images.objs.image.m.moments.a.ny := [=];
help::pkg.general.images.objs.image.m.moments.a.ny.d := 'The number of subplots per page in the y direction';
help::pkg.general.images.objs.image.m.moments.a.ny.def := '1';
help::pkg.general.images.objs.image.m.moments.a.ny.a := 'Any positive integer';
help::pkg.general.images.objs.image.m.moments.a.yind := [=];
help::pkg.general.images.objs.image.m.moments.a.yind.d := 'Scale the y axis of the profile plots independently';
help::pkg.general.images.objs.image.m.moments.a.yind.def := 'False';
help::pkg.general.images.objs.image.m.moments.a.yind.a := 'Bool';
help::pkg.general.images.objs.image.m.moments.a.overwrite := [=];
help::pkg.general.images.objs.image.m.moments.a.overwrite.d := 'Overwrite (unprompted) pre-existing output file ?';
help::pkg.general.images.objs.image.m.moments.a.overwrite.def := 'F';
help::pkg.general.images.objs.image.m.moments.a.overwrite.a := 'T or F';
help::pkg.general.images.objs.image.m.moments.a.drop := [=];
help::pkg.general.images.objs.image.m.moments.a.drop.d := 'Drop moments axis from output images ?';
help::pkg.general.images.objs.image.m.moments.a.drop.def := 'T';
help::pkg.general.images.objs.image.m.moments.a.drop.a := 'T or F';
help::pkg.general.images.objs.image.m.moments.a.async := [=];
help::pkg.general.images.objs.image.m.moments.a.async.d := 'Run asynchronously?';
help::pkg.general.images.objs.image.m.moments.a.async.def := '!dowait - but always F if plotting';
help::pkg.general.images.objs.image.m.moments.a.async.a := 'Bool';
help::pkg.general.images.objs.image.m.moments.s := 'moments(moments, axis, region, mask, method, smoothaxes, smoothtypes, smoothwidths, includepix, excludepix, peaksnr, stddev, doppler, outfile, smoothout, plotter, nx, ny, yind, overwrite, drop, async)';
help::pkg.general.images.objs.image.m.momentsgui := [=];
help::pkg.general.images.objs.image.m.momentsgui.d := 'Compute moments from image via custom GUI interface';
help::pkg.general.images.objs.image.m.momentsgui.a.parent := [=];
help::pkg.general.images.objs.image.m.momentsgui.a.parent.d := 'Parent frame to embed GUI in';
help::pkg.general.images.objs.image.m.momentsgui.a.parent.def := 'Create stand alone';
help::pkg.general.images.objs.image.m.momentsgui.a.parent.a := '\glish\/Tk agent';
help::pkg.general.images.objs.image.m.momentsgui.a.widgetset := [=];
help::pkg.general.images.objs.image.m.momentsgui.a.widgetset.d := 'The widgetset to use for the GUI';
help::pkg.general.images.objs.image.m.momentsgui.a.widgetset.def := 'dws';
help::pkg.general.images.objs.image.m.momentsgui.a.widgetset.a := 'A widgetserver tool';
help::pkg.general.images.objs.image.m.momentsgui.s := 'momentsgui(parent, widgetset)';
help::pkg.general.images.objs.image.m.name := [=];
help::pkg.general.images.objs.image.m.name.d := 'Name of the image file this tool is attached to';
help::pkg.general.images.objs.image.m.name.a.strippath := [=];
help::pkg.general.images.objs.image.m.name.a.strippath.d := 'Strip off the path before the actual file name ?';
help::pkg.general.images.objs.image.m.name.a.strippath.def := 'False';
help::pkg.general.images.objs.image.m.name.a.strippath.a := 'Bool';
help::pkg.general.images.objs.image.m.name.s := 'name(strippath)';
help::pkg.general.images.objs.image.m.open := [=];
help::pkg.general.images.objs.image.m.open.d := 'Open a new image file with this image tool';
help::pkg.general.images.objs.image.m.open.a.infile := [=];
help::pkg.general.images.objs.image.m.open.a.infile.d := 'image file name';
help::pkg.general.images.objs.image.m.open.a.infile.def := '';
help::pkg.general.images.objs.image.m.open.a.infile.a := 'String';
help::pkg.general.images.objs.image.m.open.s := 'open(infile)';
help::pkg.general.images.objs.image.m.pixelvalue := [=];
help::pkg.general.images.objs.image.m.pixelvalue.d := 'Get value of image and mask at specified pixel coordinate';
help::pkg.general.images.objs.image.m.pixelvalue.a.pixel := [=];
help::pkg.general.images.objs.image.m.pixelvalue.a.pixel.d := 'Pixel coordinate';
help::pkg.general.images.objs.image.m.pixelvalue.a.pixel.def := 'Reference pixel';
help::pkg.general.images.objs.image.m.pixelvalue.a.pixel.a := 'Vector of integer';
help::pkg.general.images.objs.image.m.pixelvalue.s := 'pixelvalue(pixel)';
help::pkg.general.images.objs.image.m.putchunk := [=];
help::pkg.general.images.objs.image.m.putchunk.d := 'Put pixels from a Glish array into a regular region of the image';
help::pkg.general.images.objs.image.m.putchunk.a.pixels := [=];
help::pkg.general.images.objs.image.m.putchunk.a.pixels.d := 'Glish numeric array';
help::pkg.general.images.objs.image.m.putchunk.a.pixels.def := '';
help::pkg.general.images.objs.image.m.putchunk.a.pixels.a := '';
help::pkg.general.images.objs.image.m.putchunk.a.blc := [=];
help::pkg.general.images.objs.image.m.putchunk.a.blc.d := 'Bottom-Left-Corner (start) of location in image';
help::pkg.general.images.objs.image.m.putchunk.a.blc.def := 'Start of image';
help::pkg.general.images.objs.image.m.putchunk.a.blc.a := 'Vector of integers';
help::pkg.general.images.objs.image.m.putchunk.a.inc := [=];
help::pkg.general.images.objs.image.m.putchunk.a.inc.d := 'increment (stride) along axes';
help::pkg.general.images.objs.image.m.putchunk.a.inc.def := '1';
help::pkg.general.images.objs.image.m.putchunk.a.inc.a := 'Vector of integers';
help::pkg.general.images.objs.image.m.putchunk.a.list := [=];
help::pkg.general.images.objs.image.m.putchunk.a.list.d := 'List bounding box to logger ?';
help::pkg.general.images.objs.image.m.putchunk.a.list.def := 'F';
help::pkg.general.images.objs.image.m.putchunk.a.list.a := 'T or F';
help::pkg.general.images.objs.image.m.putchunk.a.locking := [=];
help::pkg.general.images.objs.image.m.putchunk.a.locking.d := 'Unlock image after use ?';
help::pkg.general.images.objs.image.m.putchunk.a.locking.def := 'T';
help::pkg.general.images.objs.image.m.putchunk.a.locking.a := 'T or F';
help::pkg.general.images.objs.image.m.putchunk.a.replicate := [=];
help::pkg.general.images.objs.image.m.putchunk.a.replicate.d := 'Replicate array through image';
help::pkg.general.images.objs.image.m.putchunk.a.replicate.def := 'F';
help::pkg.general.images.objs.image.m.putchunk.a.replicate.a := 'T or F';
help::pkg.general.images.objs.image.m.putchunk.s := 'putchunk(pixels, blc, inc, list, locking, replicate)';
help::pkg.general.images.objs.image.m.putregion := [=];
help::pkg.general.images.objs.image.m.putregion.d := 'Put pixels and mask into a  region-of-interest of the image';
help::pkg.general.images.objs.image.m.putregion.a.pixels := [=];
help::pkg.general.images.objs.image.m.putregion.a.pixels.d := 'The pixel values';
help::pkg.general.images.objs.image.m.putregion.a.pixels.def := 'None';
help::pkg.general.images.objs.image.m.putregion.a.pixels.a := 'Glish numeric array';
help::pkg.general.images.objs.image.m.putregion.a.pixelmask := [=];
help::pkg.general.images.objs.image.m.putregion.a.pixelmask.d := 'The pixel mask values';
help::pkg.general.images.objs.image.m.putregion.a.pixelmask.def := 'None';
help::pkg.general.images.objs.image.m.putregion.a.pixelmask.a := 'Glish Boolean array';
help::pkg.general.images.objs.image.m.putregion.a.region := [=];
help::pkg.general.images.objs.image.m.putregion.a.region.d := 'The region of interest';
help::pkg.general.images.objs.image.m.putregion.a.region.def := 'Whole image';
help::pkg.general.images.objs.image.m.putregion.a.region.a := 'Region tool';
help::pkg.general.images.objs.image.m.putregion.a.list := [=];
help::pkg.general.images.objs.image.m.putregion.a.list.d := 'List the bounding box and any mask creation to the logger';
help::pkg.general.images.objs.image.m.putregion.a.list.def := 'F';
help::pkg.general.images.objs.image.m.putregion.a.list.a := 'T or F';
help::pkg.general.images.objs.image.m.putregion.a.usemask := [=];
help::pkg.general.images.objs.image.m.putregion.a.usemask.d := 'Honour the mask when putting pixels';
help::pkg.general.images.objs.image.m.putregion.a.usemask.def := 'T';
help::pkg.general.images.objs.image.m.putregion.a.usemask.a := 'T or F';
help::pkg.general.images.objs.image.m.putregion.a.locking := [=];
help::pkg.general.images.objs.image.m.putregion.a.locking.d := 'Unlock image after use ?';
help::pkg.general.images.objs.image.m.putregion.a.locking.def := 'T';
help::pkg.general.images.objs.image.m.putregion.a.locking.a := 'T or F';
help::pkg.general.images.objs.image.m.putregion.a.replicate := [=];
help::pkg.general.images.objs.image.m.putregion.a.replicate.d := 'Replicate array through image';
help::pkg.general.images.objs.image.m.putregion.a.replicate.def := 'F';
help::pkg.general.images.objs.image.m.putregion.a.replicate.a := 'T or F';
help::pkg.general.images.objs.image.m.putregion.s := 'putregion(pixels, pixelmask, region, list, usemask, locking, replicate)';
help::pkg.general.images.objs.image.m.rebin := [=];
help::pkg.general.images.objs.image.m.rebin.d := 'rebin the image by the specified factors';
help::pkg.general.images.objs.image.m.rebin.a.outfile := [=];
help::pkg.general.images.objs.image.m.rebin.a.outfile.d := 'Output image file name';
help::pkg.general.images.objs.image.m.rebin.a.outfile.def := 'unset';
help::pkg.general.images.objs.image.m.rebin.a.outfile.a := 'String';
help::pkg.general.images.objs.image.m.rebin.a.bin := [=];
help::pkg.general.images.objs.image.m.rebin.a.bin.d := 'Binning factors for each axis';
help::pkg.general.images.objs.image.m.rebin.a.bin.def := '';
help::pkg.general.images.objs.image.m.rebin.a.bin.a := 'Vector of integers';
help::pkg.general.images.objs.image.m.rebin.a.region := [=];
help::pkg.general.images.objs.image.m.rebin.a.region.d := 'The region of interest';
help::pkg.general.images.objs.image.m.rebin.a.region.def := 'Whole image';
help::pkg.general.images.objs.image.m.rebin.a.region.a := 'Region tool';
help::pkg.general.images.objs.image.m.rebin.a.mask := [=];
help::pkg.general.images.objs.image.m.rebin.a.mask.d := 'OTF mask';
help::pkg.general.images.objs.image.m.rebin.a.mask.def := 'None';
help::pkg.general.images.objs.image.m.rebin.a.mask.a := 'Boolean LEL expression or mask region';
help::pkg.general.images.objs.image.m.rebin.a.dropdeg := [=];
help::pkg.general.images.objs.image.m.rebin.a.dropdeg.d := 'Drop degenerate axes';
help::pkg.general.images.objs.image.m.rebin.a.dropdeg.def := 'F';
help::pkg.general.images.objs.image.m.rebin.a.dropdeg.a := 'T or F';
help::pkg.general.images.objs.image.m.rebin.a.overwrite := [=];
help::pkg.general.images.objs.image.m.rebin.a.overwrite.d := 'Overwrite (unprompted) pre-existing output file ?';
help::pkg.general.images.objs.image.m.rebin.a.overwrite.def := 'F';
help::pkg.general.images.objs.image.m.rebin.a.overwrite.a := 'T or F';
help::pkg.general.images.objs.image.m.rebin.a.async := [=];
help::pkg.general.images.objs.image.m.rebin.a.async.d := 'Run asynchronously?';
help::pkg.general.images.objs.image.m.rebin.a.async.def := '!dowait';
help::pkg.general.images.objs.image.m.rebin.a.async.a := 'Bool';
help::pkg.general.images.objs.image.m.rebin.s := 'rebin(outfile, bin, region, mask, dropdeg, overwrite, async)';
help::pkg.general.images.objs.image.m.regrid := [=];
help::pkg.general.images.objs.image.m.regrid.d := 'regrid this image to the specified Coordinate System';
help::pkg.general.images.objs.image.m.regrid.a.outfile := [=];
help::pkg.general.images.objs.image.m.regrid.a.outfile.d := 'Output image file name';
help::pkg.general.images.objs.image.m.regrid.a.outfile.def := 'unset';
help::pkg.general.images.objs.image.m.regrid.a.outfile.a := 'String';
help::pkg.general.images.objs.image.m.regrid.a.shape := [=];
help::pkg.general.images.objs.image.m.regrid.a.shape.d := 'Shape of output image';
help::pkg.general.images.objs.image.m.regrid.a.shape.def := 'Input shape';
help::pkg.general.images.objs.image.m.regrid.a.shape.a := 'Vector of integers';
help::pkg.general.images.objs.image.m.regrid.a.csys := [=];
help::pkg.general.images.objs.image.m.regrid.a.csys.d := 'Coordinate System for output image';
help::pkg.general.images.objs.image.m.regrid.a.csys.def := 'Input CoordinateSystem';
help::pkg.general.images.objs.image.m.regrid.a.csys.a := 'Coordsys tool';
help::pkg.general.images.objs.image.m.regrid.a.axes := [=];
help::pkg.general.images.objs.image.m.regrid.a.axes.d := 'The output pixel axes to regrid';
help::pkg.general.images.objs.image.m.regrid.a.axes.def := 'All';
help::pkg.general.images.objs.image.m.regrid.a.axes.a := 'Vecor of integers';
help::pkg.general.images.objs.image.m.regrid.a.region := [=];
help::pkg.general.images.objs.image.m.regrid.a.region.d := 'The region of interest';
help::pkg.general.images.objs.image.m.regrid.a.region.def := 'Whole image';
help::pkg.general.images.objs.image.m.regrid.a.region.a := 'Region tool';
help::pkg.general.images.objs.image.m.regrid.a.mask := [=];
help::pkg.general.images.objs.image.m.regrid.a.mask.d := 'OTF mask';
help::pkg.general.images.objs.image.m.regrid.a.mask.def := 'None';
help::pkg.general.images.objs.image.m.regrid.a.mask.a := 'Boolean LEL expression or mask region';
help::pkg.general.images.objs.image.m.regrid.a.method := [=];
help::pkg.general.images.objs.image.m.regrid.a.method.d := 'The interpolation method';
help::pkg.general.images.objs.image.m.regrid.a.method.def := '\' linear\' ';
help::pkg.general.images.objs.image.m.regrid.a.method.a := 'String from \' nearest\' , \' linear\' , \' cubic\' ';
help::pkg.general.images.objs.image.m.regrid.a.decimate := [=];
help::pkg.general.images.objs.image.m.regrid.a.decimate.d := 'Decimation factor for coordinate grid computation';
help::pkg.general.images.objs.image.m.regrid.a.decimate.def := '10';
help::pkg.general.images.objs.image.m.regrid.a.decimate.a := 'Integer';
help::pkg.general.images.objs.image.m.regrid.a.replicate := [=];
help::pkg.general.images.objs.image.m.regrid.a.replicate.d := 'Replicate image rather than regrid ?';
help::pkg.general.images.objs.image.m.regrid.a.replicate.def := 'F';
help::pkg.general.images.objs.image.m.regrid.a.replicate.a := 'T or F';
help::pkg.general.images.objs.image.m.regrid.a.doref := [=];
help::pkg.general.images.objs.image.m.regrid.a.doref.d := 'Turn on reference frame changes';
help::pkg.general.images.objs.image.m.regrid.a.doref.def := 'T';
help::pkg.general.images.objs.image.m.regrid.a.doref.a := 'T or F';
help::pkg.general.images.objs.image.m.regrid.a.dropdeg := [=];
help::pkg.general.images.objs.image.m.regrid.a.dropdeg.d := 'Drop degenerate axes';
help::pkg.general.images.objs.image.m.regrid.a.dropdeg.def := 'F';
help::pkg.general.images.objs.image.m.regrid.a.dropdeg.a := 'T or F';
help::pkg.general.images.objs.image.m.regrid.a.overwrite := [=];
help::pkg.general.images.objs.image.m.regrid.a.overwrite.d := 'Overwrite (unprompted) pre-existing output file ?';
help::pkg.general.images.objs.image.m.regrid.a.overwrite.def := 'F';
help::pkg.general.images.objs.image.m.regrid.a.overwrite.a := 'T or F';
help::pkg.general.images.objs.image.m.regrid.a.force := [=];
help::pkg.general.images.objs.image.m.regrid.a.force.d := 'Force specified axes to be regridded';
help::pkg.general.images.objs.image.m.regrid.a.force.def := 'F';
help::pkg.general.images.objs.image.m.regrid.a.force.a := 'T or F';
help::pkg.general.images.objs.image.m.regrid.a.async := [=];
help::pkg.general.images.objs.image.m.regrid.a.async.d := 'Run asynchronously?';
help::pkg.general.images.objs.image.m.regrid.a.async.def := '!dowait';
help::pkg.general.images.objs.image.m.regrid.a.async.a := 'Bool';
help::pkg.general.images.objs.image.m.regrid.s := 'regrid(outfile, shape, csys, axes, region, mask, method, decimate, replicate, doref, dropdeg, overwrite, force, async)';
help::pkg.general.images.objs.image.m.rotate := [=];
help::pkg.general.images.objs.image.m.rotate.d := 'rotate the direction coordinate axes attached to the image and regrid the image to the rotated Coordinate System';
help::pkg.general.images.objs.image.m.rotate.a.outfile := [=];
help::pkg.general.images.objs.image.m.rotate.a.outfile.d := 'Output image file name';
help::pkg.general.images.objs.image.m.rotate.a.outfile.def := 'unset';
help::pkg.general.images.objs.image.m.rotate.a.outfile.a := 'String';
help::pkg.general.images.objs.image.m.rotate.a.shape := [=];
help::pkg.general.images.objs.image.m.rotate.a.shape.d := 'Shape of output image';
help::pkg.general.images.objs.image.m.rotate.a.shape.def := 'Input shape';
help::pkg.general.images.objs.image.m.rotate.a.shape.a := 'Vector of integers';
help::pkg.general.images.objs.image.m.rotate.a.pa := [=];
help::pkg.general.images.objs.image.m.rotate.a.pa.d := 'Angle by which to rotate';
help::pkg.general.images.objs.image.m.rotate.a.pa.def := '0deg';
help::pkg.general.images.objs.image.m.rotate.a.pa.a := 'Quantity, string, numeric';
help::pkg.general.images.objs.image.m.rotate.a.region := [=];
help::pkg.general.images.objs.image.m.rotate.a.region.d := 'The region of interest';
help::pkg.general.images.objs.image.m.rotate.a.region.def := 'Whole image';
help::pkg.general.images.objs.image.m.rotate.a.region.a := 'Region tool';
help::pkg.general.images.objs.image.m.rotate.a.mask := [=];
help::pkg.general.images.objs.image.m.rotate.a.mask.d := 'OTF mask';
help::pkg.general.images.objs.image.m.rotate.a.mask.def := 'None';
help::pkg.general.images.objs.image.m.rotate.a.mask.a := 'Boolean LEL expression or mask region';
help::pkg.general.images.objs.image.m.rotate.a.method := [=];
help::pkg.general.images.objs.image.m.rotate.a.method.d := 'The interpolation method';
help::pkg.general.images.objs.image.m.rotate.a.method.def := '\' cubic\' ';
help::pkg.general.images.objs.image.m.rotate.a.method.a := 'String from \' nearest\' , \' linear\' , \' cubic\' ';
help::pkg.general.images.objs.image.m.rotate.a.decimate := [=];
help::pkg.general.images.objs.image.m.rotate.a.decimate.d := 'Decimation factor for coordinate grid computation';
help::pkg.general.images.objs.image.m.rotate.a.decimate.def := '0';
help::pkg.general.images.objs.image.m.rotate.a.decimate.a := 'Integer';
help::pkg.general.images.objs.image.m.rotate.a.replicate := [=];
help::pkg.general.images.objs.image.m.rotate.a.replicate.d := 'Replicate image rather than regrid ?';
help::pkg.general.images.objs.image.m.rotate.a.replicate.def := 'F';
help::pkg.general.images.objs.image.m.rotate.a.replicate.a := 'T or F';
help::pkg.general.images.objs.image.m.rotate.a.overwrite := [=];
help::pkg.general.images.objs.image.m.rotate.a.overwrite.d := 'Overwrite (unprompted) pre-existing output file ?';
help::pkg.general.images.objs.image.m.rotate.a.overwrite.def := 'F';
help::pkg.general.images.objs.image.m.rotate.a.overwrite.a := 'T or F';
help::pkg.general.images.objs.image.m.rotate.a.async := [=];
help::pkg.general.images.objs.image.m.rotate.a.async.d := 'Run asynchronously?';
help::pkg.general.images.objs.image.m.rotate.a.async.def := '!dowait';
help::pkg.general.images.objs.image.m.rotate.a.async.a := 'Bool';
help::pkg.general.images.objs.image.m.rotate.s := 'rotate(outfile, shape, pa, region, mask, method, decimate, replicate, overwrite, async)';
help::pkg.general.images.objs.image.m.rename := [=];
help::pkg.general.images.objs.image.m.rename.d := 'Rename the image file associated with this image tool';
help::pkg.general.images.objs.image.m.rename.a.name := [=];
help::pkg.general.images.objs.image.m.rename.a.name.d := 'The new image file name';
help::pkg.general.images.objs.image.m.rename.a.name.def := '';
help::pkg.general.images.objs.image.m.rename.a.name.a := 'String';
help::pkg.general.images.objs.image.m.rename.a.overwrite := [=];
help::pkg.general.images.objs.image.m.rename.a.overwrite.d := 'Overwrite target file if it already exists';
help::pkg.general.images.objs.image.m.rename.a.overwrite.def := 'F';
help::pkg.general.images.objs.image.m.rename.a.overwrite.a := 'T or F';
help::pkg.general.images.objs.image.m.rename.s := 'rename(name, overwrite)';
help::pkg.general.images.objs.image.m.replacemaskedpixels := [=];
help::pkg.general.images.objs.image.m.replacemaskedpixels.d := 'replace the values of pixels which are masked bad';
help::pkg.general.images.objs.image.m.replacemaskedpixels.a.pixels := [=];
help::pkg.general.images.objs.image.m.replacemaskedpixels.a.pixels.d := 'The new value(s)';
help::pkg.general.images.objs.image.m.replacemaskedpixels.a.pixels.def := '';
help::pkg.general.images.objs.image.m.replacemaskedpixels.a.pixels.a := 'Numeric scalar or LEL expression';
help::pkg.general.images.objs.image.m.replacemaskedpixels.a.region := [=];
help::pkg.general.images.objs.image.m.replacemaskedpixels.a.region.d := 'The region of interest';
help::pkg.general.images.objs.image.m.replacemaskedpixels.a.region.def := 'Whole image';
help::pkg.general.images.objs.image.m.replacemaskedpixels.a.region.a := 'Region tool';
help::pkg.general.images.objs.image.m.replacemaskedpixels.a.mask := [=];
help::pkg.general.images.objs.image.m.replacemaskedpixels.a.mask.d := 'OTF mask';
help::pkg.general.images.objs.image.m.replacemaskedpixels.a.mask.def := 'None';
help::pkg.general.images.objs.image.m.replacemaskedpixels.a.mask.a := 'Boolean LEL expression or mask region';
help::pkg.general.images.objs.image.m.replacemaskedpixels.a.update := [=];
help::pkg.general.images.objs.image.m.replacemaskedpixels.a.update.d := 'Update mask as well ?';
help::pkg.general.images.objs.image.m.replacemaskedpixels.a.update.def := 'F';
help::pkg.general.images.objs.image.m.replacemaskedpixels.a.update.a := 'T or F';
help::pkg.general.images.objs.image.m.replacemaskedpixels.a.list := [=];
help::pkg.general.images.objs.image.m.replacemaskedpixels.a.list.d := 'List the bounding box to the logger';
help::pkg.general.images.objs.image.m.replacemaskedpixels.a.list.def := 'F';
help::pkg.general.images.objs.image.m.replacemaskedpixels.a.list.a := 'T or F';
help::pkg.general.images.objs.image.m.replacemaskedpixels.s := 'replacemaskedpixels(pixels, region, mask, update, list)';
help::pkg.general.images.objs.image.m.restoringbeam := [=];
help::pkg.general.images.objs.image.m.restoringbeam.d := 'Get the restoringbeam';
help::pkg.general.images.objs.image.m.restoringbeam.s := 'restoringbeam()';
help::pkg.general.images.objs.image.m.sepconvolve := [=];
help::pkg.general.images.objs.image.m.sepconvolve.d := 'Separable convolution';
help::pkg.general.images.objs.image.m.sepconvolve.a.outfile := [=];
help::pkg.general.images.objs.image.m.sepconvolve.a.outfile.d := 'Output image file name';
help::pkg.general.images.objs.image.m.sepconvolve.a.outfile.def := 'unset';
help::pkg.general.images.objs.image.m.sepconvolve.a.outfile.a := 'String';
help::pkg.general.images.objs.image.m.sepconvolve.a.axes := [=];
help::pkg.general.images.objs.image.m.sepconvolve.a.axes.d := 'Axes to convolve';
help::pkg.general.images.objs.image.m.sepconvolve.a.axes.def := '[1,2,...]';
help::pkg.general.images.objs.image.m.sepconvolve.a.axes.a := 'Vector of integers';
help::pkg.general.images.objs.image.m.sepconvolve.a.types := [=];
help::pkg.general.images.objs.image.m.sepconvolve.a.types.d := 'Type of convolution kernel';
help::pkg.general.images.objs.image.m.sepconvolve.a.types.def := '\' gaussian\' ';
help::pkg.general.images.objs.image.m.sepconvolve.a.types.a := 'Vector of strings from  `boxcar\' , `gaussian\' , and `hanning\' ';
help::pkg.general.images.objs.image.m.sepconvolve.a.widths := [=];
help::pkg.general.images.objs.image.m.sepconvolve.a.widths.d := 'Convolution kernel widths';
help::pkg.general.images.objs.image.m.sepconvolve.a.widths.def := '';
help::pkg.general.images.objs.image.m.sepconvolve.a.widths.a := 'Vector of numeric, quantity or string';
help::pkg.general.images.objs.image.m.sepconvolve.a.scale := [=];
help::pkg.general.images.objs.image.m.sepconvolve.a.scale.d := 'Scale factor';
help::pkg.general.images.objs.image.m.sepconvolve.a.scale.def := 'Autoscale';
help::pkg.general.images.objs.image.m.sepconvolve.a.scale.a := 'Float';
help::pkg.general.images.objs.image.m.sepconvolve.a.region := [=];
help::pkg.general.images.objs.image.m.sepconvolve.a.region.d := 'Region of interest';
help::pkg.general.images.objs.image.m.sepconvolve.a.region.def := 'Whole image';
help::pkg.general.images.objs.image.m.sepconvolve.a.region.a := 'Region tool';
help::pkg.general.images.objs.image.m.sepconvolve.a.mask := [=];
help::pkg.general.images.objs.image.m.sepconvolve.a.mask.d := 'OTF mask';
help::pkg.general.images.objs.image.m.sepconvolve.a.mask.def := 'None';
help::pkg.general.images.objs.image.m.sepconvolve.a.mask.a := 'Boolean LEL expression or mask region';
help::pkg.general.images.objs.image.m.sepconvolve.a.overwrite := [=];
help::pkg.general.images.objs.image.m.sepconvolve.a.overwrite.d := 'Overwrite (unprompted) pre-existing output file ?';
help::pkg.general.images.objs.image.m.sepconvolve.a.overwrite.def := 'F';
help::pkg.general.images.objs.image.m.sepconvolve.a.overwrite.a := 'T or F';
help::pkg.general.images.objs.image.m.sepconvolve.a.async := [=];
help::pkg.general.images.objs.image.m.sepconvolve.a.async.d := 'Run asynchronously?';
help::pkg.general.images.objs.image.m.sepconvolve.a.async.def := '!dowait';
help::pkg.general.images.objs.image.m.sepconvolve.a.async.a := 'Bool';
help::pkg.general.images.objs.image.m.sepconvolve.s := 'sepconvolve(outfile, axes, types, widths, scale, region, mask, overwrite, async)';
help::pkg.general.images.objs.image.m.sepconvolvegui := [=];
help::pkg.general.images.objs.image.m.sepconvolvegui.d := 'Separable convolution via custom GUI interface';
help::pkg.general.images.objs.image.m.sepconvolvegui.a.parent := [=];
help::pkg.general.images.objs.image.m.sepconvolvegui.a.parent.d := 'Parent frame to embed GUI in';
help::pkg.general.images.objs.image.m.sepconvolvegui.a.parent.def := 'Create stand a alone';
help::pkg.general.images.objs.image.m.sepconvolvegui.a.parent.a := '\glish\/Tk agent';
help::pkg.general.images.objs.image.m.sepconvolvegui.a.widgetset := [=];
help::pkg.general.images.objs.image.m.sepconvolvegui.a.widgetset.d := 'The widgetset to use for the GUI';
help::pkg.general.images.objs.image.m.sepconvolvegui.a.widgetset.def := 'dws';
help::pkg.general.images.objs.image.m.sepconvolvegui.a.widgetset.a := 'A widgetserver tool';
help::pkg.general.images.objs.image.m.sepconvolvegui.s := 'sepconvolvegui(parent, widgetset)';
help::pkg.general.images.objs.image.m.set := [=];
help::pkg.general.images.objs.image.m.set.d := 'Set pixel and/or mask values with a scalar in a region-of-interest of the image';
help::pkg.general.images.objs.image.m.set.a.pixels := [=];
help::pkg.general.images.objs.image.m.set.a.pixels.d := 'The pixel value';
help::pkg.general.images.objs.image.m.set.a.pixels.def := 'unset';
help::pkg.general.images.objs.image.m.set.a.pixels.a := 'LEL scalar expression or numeric scalar';
help::pkg.general.images.objs.image.m.set.a.pixelmask := [=];
help::pkg.general.images.objs.image.m.set.a.pixelmask.d := 'The pixel mask value';
help::pkg.general.images.objs.image.m.set.a.pixelmask.def := 'unset';
help::pkg.general.images.objs.image.m.set.a.pixelmask.a := 'T or F';
help::pkg.general.images.objs.image.m.set.a.region := [=];
help::pkg.general.images.objs.image.m.set.a.region.d := 'The region of interest';
help::pkg.general.images.objs.image.m.set.a.region.def := 'Whole image';
help::pkg.general.images.objs.image.m.set.a.region.a := 'Region tool';
help::pkg.general.images.objs.image.m.set.a.list := [=];
help::pkg.general.images.objs.image.m.set.a.list.d := 'List the bounding box and any mask creation to the logger';
help::pkg.general.images.objs.image.m.set.a.list.def := 'F';
help::pkg.general.images.objs.image.m.set.a.list.a := 'T or F';
help::pkg.general.images.objs.image.m.set.s := 'set(pixels, pixelmask, region, list)';
help::pkg.general.images.objs.image.m.setbrightnessunit := [=];
help::pkg.general.images.objs.image.m.setbrightnessunit.d := 'Set the image brightness unit';
help::pkg.general.images.objs.image.m.setbrightnessunit.a.unit := [=];
help::pkg.general.images.objs.image.m.setbrightnessunit.a.unit.d := 'New brightness unit';
help::pkg.general.images.objs.image.m.setbrightnessunit.a.unit.def := '';
help::pkg.general.images.objs.image.m.setbrightnessunit.a.unit.a := 'String';
help::pkg.general.images.objs.image.m.setbrightnessunit.s := 'setbrightnessunit(unit)';
help::pkg.general.images.objs.image.m.setcoordsys := [=];
help::pkg.general.images.objs.image.m.setcoordsys.d := 'Set new Coordinate System';
help::pkg.general.images.objs.image.m.setcoordsys.a.csys := [=];
help::pkg.general.images.objs.image.m.setcoordsys.a.csys.d := 'Coordinate System';
help::pkg.general.images.objs.image.m.setcoordsys.a.csys.def := '';
help::pkg.general.images.objs.image.m.setcoordsys.a.csys.a := 'Coordsys tool';
help::pkg.general.images.objs.image.m.setcoordsys.s := 'setcoordsys(csys)';
help::pkg.general.images.objs.image.m.sethistory := [=];
help::pkg.general.images.objs.image.m.sethistory.d := 'Set the history for an image';
help::pkg.general.images.objs.image.m.sethistory.a.history := [=];
help::pkg.general.images.objs.image.m.sethistory.a.history.d := 'New history';
help::pkg.general.images.objs.image.m.sethistory.a.history.def := 'None';
help::pkg.general.images.objs.image.m.sethistory.a.history.a := 'String or vector of strings';
help::pkg.general.images.objs.image.m.sethistory.s := 'sethistory(history)';
help::pkg.general.images.objs.image.m.setmiscinfo := [=];
help::pkg.general.images.objs.image.m.setmiscinfo.d := 'Set the miscellaneous information record for an image';
help::pkg.general.images.objs.image.m.setmiscinfo.a.info := [=];
help::pkg.general.images.objs.image.m.setmiscinfo.a.info.d := 'Miscellaneous REPLACEMENT header';
help::pkg.general.images.objs.image.m.setmiscinfo.a.info.def := '';
help::pkg.general.images.objs.image.m.setmiscinfo.a.info.a := 'Record';
help::pkg.general.images.objs.image.m.setmiscinfo.s := 'setmiscinfo(info)';
help::pkg.general.images.objs.image.m.shape := [=];
help::pkg.general.images.objs.image.m.shape.d := 'Length of each axis in the image';
help::pkg.general.images.objs.image.m.shape.s := 'shape()';
help::pkg.general.images.objs.image.m.setrestoringbeam := [=];
help::pkg.general.images.objs.image.m.setrestoringbeam.d := 'Set the restoringbeam';
help::pkg.general.images.objs.image.m.setrestoringbeam.a.major := [=];
help::pkg.general.images.objs.image.m.setrestoringbeam.a.major.d := 'Major axis FWHM';
help::pkg.general.images.objs.image.m.setrestoringbeam.a.major.def := 'Unset';
help::pkg.general.images.objs.image.m.setrestoringbeam.a.major.a := 'Quantity or float';
help::pkg.general.images.objs.image.m.setrestoringbeam.a.minor := [=];
help::pkg.general.images.objs.image.m.setrestoringbeam.a.minor.d := 'Minor axis FWHM';
help::pkg.general.images.objs.image.m.setrestoringbeam.a.minor.def := 'Unset';
help::pkg.general.images.objs.image.m.setrestoringbeam.a.minor.a := 'Quantity or float';
help::pkg.general.images.objs.image.m.setrestoringbeam.a.pa := [=];
help::pkg.general.images.objs.image.m.setrestoringbeam.a.pa.d := 'Position angle';
help::pkg.general.images.objs.image.m.setrestoringbeam.a.pa.def := 'Unset';
help::pkg.general.images.objs.image.m.setrestoringbeam.a.pa.a := 'Quantity or float';
help::pkg.general.images.objs.image.m.setrestoringbeam.a.beam := [=];
help::pkg.general.images.objs.image.m.setrestoringbeam.a.beam.d := 'The complete restoring beam';
help::pkg.general.images.objs.image.m.setrestoringbeam.a.beam.def := 'Unset';
help::pkg.general.images.objs.image.m.setrestoringbeam.a.beam.a := 'Record';
help::pkg.general.images.objs.image.m.setrestoringbeam.a.delete := [=];
help::pkg.general.images.objs.image.m.setrestoringbeam.a.delete.d := 'Delete the restoring beam';
help::pkg.general.images.objs.image.m.setrestoringbeam.a.delete.def := 'F';
help::pkg.general.images.objs.image.m.setrestoringbeam.a.delete.a := 'T or F';
help::pkg.general.images.objs.image.m.setrestoringbeam.a.log := [=];
help::pkg.general.images.objs.image.m.setrestoringbeam.a.log.d := 'Write new beam values to the logger';
help::pkg.general.images.objs.image.m.setrestoringbeam.a.log.def := 'F';
help::pkg.general.images.objs.image.m.setrestoringbeam.a.log.a := 'T or F';
help::pkg.general.images.objs.image.m.setrestoringbeam.s := 'setrestoringbeam(major, minor, pa, beam, delete, log)';
help::pkg.general.images.objs.image.m.statistics := [=];
help::pkg.general.images.objs.image.m.statistics.d := 'Compute statistics from the image';
help::pkg.general.images.objs.image.m.statistics.a.statsout := [=];
help::pkg.general.images.objs.image.m.statistics.a.statsout.d := '\glish\ record containing all statistics';
help::pkg.general.images.objs.image.m.statistics.a.statsout.def := 'No retrieval into a \glish\ record';
help::pkg.general.images.objs.image.m.statistics.a.statsout.a := '\glish\ record';
help::pkg.general.images.objs.image.m.statistics.a.axes := [=];
help::pkg.general.images.objs.image.m.statistics.a.axes.d := 'List of axes to evaluate statistics over';
help::pkg.general.images.objs.image.m.statistics.a.axes.def := 'All axes';
help::pkg.general.images.objs.image.m.statistics.a.axes.a := 'Vector of integers';
help::pkg.general.images.objs.image.m.statistics.a.region := [=];
help::pkg.general.images.objs.image.m.statistics.a.region.d := 'Region of interest';
help::pkg.general.images.objs.image.m.statistics.a.region.def := 'Whole image';
help::pkg.general.images.objs.image.m.statistics.a.region.a := 'Region tool';
help::pkg.general.images.objs.image.m.statistics.a.mask := [=];
help::pkg.general.images.objs.image.m.statistics.a.mask.d := 'OTF mask';
help::pkg.general.images.objs.image.m.statistics.a.mask.def := 'None';
help::pkg.general.images.objs.image.m.statistics.a.mask.a := 'Boolean LEL expression or mask region';
help::pkg.general.images.objs.image.m.statistics.a.plotstats := [=];
help::pkg.general.images.objs.image.m.statistics.a.plotstats.d := 'List of statistics to plot';
help::pkg.general.images.objs.image.m.statistics.a.plotstats.def := '\' mean sigma\' ';
help::pkg.general.images.objs.image.m.statistics.a.plotstats.a := 'String containing any            combination of \' npts\' , \' sum\' , \' flux\' , \' sumsq\' , \' min\' ,             \' max\' , \' mean\' , \' sigma\'  (or \' stddev\' ), \' rms\' , \' median\' , \' medabsdevmed\' , \' quartile\' ';
help::pkg.general.images.objs.image.m.statistics.a.includepix := [=];
help::pkg.general.images.objs.image.m.statistics.a.includepix.d := 'Range of pixel values to include';
help::pkg.general.images.objs.image.m.statistics.a.includepix.def := 'Include all pixels';
help::pkg.general.images.objs.image.m.statistics.a.includepix.a := 'Vector of 1 or 2 Floats';
help::pkg.general.images.objs.image.m.statistics.a.excludepix := [=];
help::pkg.general.images.objs.image.m.statistics.a.excludepix.d := 'Range of pixel values to exclude';
help::pkg.general.images.objs.image.m.statistics.a.excludepix.def := 'Exclude no pixels';
help::pkg.general.images.objs.image.m.statistics.a.excludepix.a := 'Vector of 1 of 2 Floats';
help::pkg.general.images.objs.image.m.statistics.a.plotter := [=];
help::pkg.general.images.objs.image.m.statistics.a.plotter.d := 'The PGPLOT device name to make plots on';
help::pkg.general.images.objs.image.m.statistics.a.plotter.def := 'No plotting';
help::pkg.general.images.objs.image.m.statistics.a.plotter.a := 'Any valid PGPLOT device';
help::pkg.general.images.objs.image.m.statistics.a.nx := [=];
help::pkg.general.images.objs.image.m.statistics.a.nx.d := 'The number of subplots per page in the x direction';
help::pkg.general.images.objs.image.m.statistics.a.nx.def := '1';
help::pkg.general.images.objs.image.m.statistics.a.nx.a := 'Any positive integer';
help::pkg.general.images.objs.image.m.statistics.a.ny := [=];
help::pkg.general.images.objs.image.m.statistics.a.ny.d := 'The number of subplots per page in the y direction';
help::pkg.general.images.objs.image.m.statistics.a.ny.def := '1';
help::pkg.general.images.objs.image.m.statistics.a.ny.a := 'Any positive integer';
help::pkg.general.images.objs.image.m.statistics.a.list := [=];
help::pkg.general.images.objs.image.m.statistics.a.list.d := 'If T then list the statistics as well';
help::pkg.general.images.objs.image.m.statistics.a.list.def := 'T';
help::pkg.general.images.objs.image.m.statistics.a.list.a := 'Bool';
help::pkg.general.images.objs.image.m.statistics.a.force := [=];
help::pkg.general.images.objs.image.m.statistics.a.force.d := 'If T then force the stored statistical accumulations to be regenerated';
help::pkg.general.images.objs.image.m.statistics.a.force.def := 'F';
help::pkg.general.images.objs.image.m.statistics.a.force.a := 'Bool';
help::pkg.general.images.objs.image.m.statistics.a.disk := [=];
help::pkg.general.images.objs.image.m.statistics.a.disk.d := 'If T then force the storage image to disk';
help::pkg.general.images.objs.image.m.statistics.a.disk.def := 'F';
help::pkg.general.images.objs.image.m.statistics.a.disk.a := 'Bool';
help::pkg.general.images.objs.image.m.statistics.a.robust := [=];
help::pkg.general.images.objs.image.m.statistics.a.robust.d := 'If T then compute robust statistics as well';
help::pkg.general.images.objs.image.m.statistics.a.robust.def := 'F';
help::pkg.general.images.objs.image.m.statistics.a.robust.a := 'Bool';
help::pkg.general.images.objs.image.m.statistics.a.verbose := [=];
help::pkg.general.images.objs.image.m.statistics.a.verbose.d := 'If T then print useful messages to the logger';
help::pkg.general.images.objs.image.m.statistics.a.verbose.def := 'T';
help::pkg.general.images.objs.image.m.statistics.a.verbose.a := 'Bool';
help::pkg.general.images.objs.image.m.statistics.a.async := [=];
help::pkg.general.images.objs.image.m.statistics.a.async.d := 'Run asynchronously?';
help::pkg.general.images.objs.image.m.statistics.a.async.def := '!dowait - but always F if plotting';
help::pkg.general.images.objs.image.m.statistics.a.async.a := 'Bool';
help::pkg.general.images.objs.image.m.statistics.s := 'statistics(statsout, axes, region, mask, plotstats, includepix, excludepix, plotter, nx, ny, list, force, disk, robust, verbose, async)';
help::pkg.general.images.objs.image.m.twopointcorrelation := [=];
help::pkg.general.images.objs.image.m.twopointcorrelation.d := 'Compute two point correlation function from the image';
help::pkg.general.images.objs.image.m.twopointcorrelation.a.outfile := [=];
help::pkg.general.images.objs.image.m.twopointcorrelation.a.outfile.d := 'Output image file name';
help::pkg.general.images.objs.image.m.twopointcorrelation.a.outfile.def := 'unset';
help::pkg.general.images.objs.image.m.twopointcorrelation.a.outfile.a := 'String';
help::pkg.general.images.objs.image.m.twopointcorrelation.a.region := [=];
help::pkg.general.images.objs.image.m.twopointcorrelation.a.region.d := 'The region of interest';
help::pkg.general.images.objs.image.m.twopointcorrelation.a.region.def := 'Whole image';
help::pkg.general.images.objs.image.m.twopointcorrelation.a.region.a := 'Region tool';
help::pkg.general.images.objs.image.m.twopointcorrelation.a.mask := [=];
help::pkg.general.images.objs.image.m.twopointcorrelation.a.mask.d := 'OTF mask';
help::pkg.general.images.objs.image.m.twopointcorrelation.a.mask.def := 'None';
help::pkg.general.images.objs.image.m.twopointcorrelation.a.mask.a := 'Boolean LEL expression or mask region';
help::pkg.general.images.objs.image.m.twopointcorrelation.a.axes := [=];
help::pkg.general.images.objs.image.m.twopointcorrelation.a.axes.d := 'The pixel axes to compute structure function over';
help::pkg.general.images.objs.image.m.twopointcorrelation.a.axes.def := 'Sky or first two';
help::pkg.general.images.objs.image.m.twopointcorrelation.a.axes.a := 'Vector of integers';
help::pkg.general.images.objs.image.m.twopointcorrelation.a.method := [=];
help::pkg.general.images.objs.image.m.twopointcorrelation.a.method.d := 'The method of computation';
help::pkg.general.images.objs.image.m.twopointcorrelation.a.method.def := 'structurefunction';
help::pkg.general.images.objs.image.m.twopointcorrelation.a.method.a := 'String from \' structurefunction\' ';
help::pkg.general.images.objs.image.m.twopointcorrelation.a.overwrite := [=];
help::pkg.general.images.objs.image.m.twopointcorrelation.a.overwrite.d := 'Overwrite (unprompted) pre-existing output file ?';
help::pkg.general.images.objs.image.m.twopointcorrelation.a.overwrite.def := 'F';
help::pkg.general.images.objs.image.m.twopointcorrelation.a.overwrite.a := 'T or F';
help::pkg.general.images.objs.image.m.twopointcorrelation.s := 'twopointcorrelation(outfile, region, mask, axes, method, overwrite)';
help::pkg.general.images.objs.image.m.subimage := [=];
help::pkg.general.images.objs.image.m.subimage.d := 'Create a (sub)image from a region of the image';
help::pkg.general.images.objs.image.m.subimage.a.outfile := [=];
help::pkg.general.images.objs.image.m.subimage.a.outfile.d := 'Output image file name';
help::pkg.general.images.objs.image.m.subimage.a.outfile.def := 'unset';
help::pkg.general.images.objs.image.m.subimage.a.outfile.a := 'String';
help::pkg.general.images.objs.image.m.subimage.a.region := [=];
help::pkg.general.images.objs.image.m.subimage.a.region.d := 'Region of interest';
help::pkg.general.images.objs.image.m.subimage.a.region.def := 'Whole image';
help::pkg.general.images.objs.image.m.subimage.a.region.a := 'Region tool';
help::pkg.general.images.objs.image.m.subimage.a.mask := [=];
help::pkg.general.images.objs.image.m.subimage.a.mask.d := 'OTF mask';
help::pkg.general.images.objs.image.m.subimage.a.mask.def := 'None';
help::pkg.general.images.objs.image.m.subimage.a.mask.a := 'Boolean LEL expression or mask region';
help::pkg.general.images.objs.image.m.subimage.a.dropdeg := [=];
help::pkg.general.images.objs.image.m.subimage.a.dropdeg.d := 'Drop degenerate axes';
help::pkg.general.images.objs.image.m.subimage.a.dropdeg.def := 'F';
help::pkg.general.images.objs.image.m.subimage.a.dropdeg.a := 'T or F';
help::pkg.general.images.objs.image.m.subimage.a.overwrite := [=];
help::pkg.general.images.objs.image.m.subimage.a.overwrite.d := 'Overwrite (unprompted) pre-existing output file ?';
help::pkg.general.images.objs.image.m.subimage.a.overwrite.def := 'F';
help::pkg.general.images.objs.image.m.subimage.a.overwrite.a := 'T or F';
help::pkg.general.images.objs.image.m.subimage.a.list := [=];
help::pkg.general.images.objs.image.m.subimage.a.list.d := 'List informative messages to the logger';
help::pkg.general.images.objs.image.m.subimage.a.list.def := 'T';
help::pkg.general.images.objs.image.m.subimage.a.list.a := 'T or F';
help::pkg.general.images.objs.image.m.subimage.s := 'subimage(outfile, region, mask, dropdeg, overwrite, list)';
help::pkg.general.images.objs.image.m.summary := [=];
help::pkg.general.images.objs.image.m.summary.d := 'Summarize basic information about the image';
help::pkg.general.images.objs.image.m.summary.a.header := [=];
help::pkg.general.images.objs.image.m.summary.a.header.d := 'Header information';
help::pkg.general.images.objs.image.m.summary.a.header.def := 'empty';
help::pkg.general.images.objs.image.m.summary.a.header.a := '';
help::pkg.general.images.objs.image.m.summary.a.doppler := [=];
help::pkg.general.images.objs.image.m.summary.a.doppler.d := 'If there is a spectral axis, list velocity too, with this doppler definition';
help::pkg.general.images.objs.image.m.summary.a.doppler.def := 'RADIO';
help::pkg.general.images.objs.image.m.summary.a.doppler.a := 'String';
help::pkg.general.images.objs.image.m.summary.a.list := [=];
help::pkg.general.images.objs.image.m.summary.a.list.d := 'List the summary to the logger';
help::pkg.general.images.objs.image.m.summary.a.list.def := 'T';
help::pkg.general.images.objs.image.m.summary.a.list.a := 'T or F';
help::pkg.general.images.objs.image.m.summary.a.pixelorder := [=];
help::pkg.general.images.objs.image.m.summary.a.pixelorder.d := 'List axis descriptors in pixel or world axis order';
help::pkg.general.images.objs.image.m.summary.a.pixelorder.def := 'T';
help::pkg.general.images.objs.image.m.summary.a.pixelorder.a := 'T or F';
help::pkg.general.images.objs.image.m.summary.s := 'summary(header, doppler, list, pixelorder)';
help::pkg.general.images.objs.image.m.tofits := [=];
help::pkg.general.images.objs.image.m.tofits.d := 'Convert the image to a FITS file';
help::pkg.general.images.objs.image.m.tofits.a.outfile := [=];
help::pkg.general.images.objs.image.m.tofits.a.outfile.d := 'FITS file name';
help::pkg.general.images.objs.image.m.tofits.a.outfile.def := 'Input name + `.fits\' ';
help::pkg.general.images.objs.image.m.tofits.a.outfile.a := 'String';
help::pkg.general.images.objs.image.m.tofits.a.velocity := [=];
help::pkg.general.images.objs.image.m.tofits.a.velocity.d := 'prefer velocity (rather than frequency) as primary spectral axis?';
help::pkg.general.images.objs.image.m.tofits.a.velocity.def := 'F';
help::pkg.general.images.objs.image.m.tofits.a.velocity.a := 'Bool';
help::pkg.general.images.objs.image.m.tofits.a.optical := [=];
help::pkg.general.images.objs.image.m.tofits.a.optical.d := 'use the optical (rather than radio) velocity convention?';
help::pkg.general.images.objs.image.m.tofits.a.optical.def := 'T';
help::pkg.general.images.objs.image.m.tofits.a.optical.a := 'Bool';
help::pkg.general.images.objs.image.m.tofits.a.bitpix := [=];
help::pkg.general.images.objs.image.m.tofits.a.bitpix.d := 'Bits per pixel';
help::pkg.general.images.objs.image.m.tofits.a.bitpix.def := '-32';
help::pkg.general.images.objs.image.m.tofits.a.bitpix.a := '-32 (floating point) or 16 (integer)';
help::pkg.general.images.objs.image.m.tofits.a.minpix := [=];
help::pkg.general.images.objs.image.m.tofits.a.minpix.d := 'Minimum pixel value for BITPIX=16';
help::pkg.general.images.objs.image.m.tofits.a.minpix.def := 'Autoscale';
help::pkg.general.images.objs.image.m.tofits.a.minpix.a := 'Float';
help::pkg.general.images.objs.image.m.tofits.a.maxpix := [=];
help::pkg.general.images.objs.image.m.tofits.a.maxpix.d := 'Maximum pixel value for BITPIX=16';
help::pkg.general.images.objs.image.m.tofits.a.maxpix.def := 'Autoscale';
help::pkg.general.images.objs.image.m.tofits.a.maxpix.a := 'Float';
help::pkg.general.images.objs.image.m.tofits.a.region := [=];
help::pkg.general.images.objs.image.m.tofits.a.region.d := 'The region of interest';
help::pkg.general.images.objs.image.m.tofits.a.region.def := 'Whole image';
help::pkg.general.images.objs.image.m.tofits.a.region.a := 'Region tool';
help::pkg.general.images.objs.image.m.tofits.a.mask := [=];
help::pkg.general.images.objs.image.m.tofits.a.mask.d := 'OTF mask';
help::pkg.general.images.objs.image.m.tofits.a.mask.def := 'None';
help::pkg.general.images.objs.image.m.tofits.a.mask.a := 'Boolean LEL expression or mask region';
help::pkg.general.images.objs.image.m.tofits.a.overwrite := [=];
help::pkg.general.images.objs.image.m.tofits.a.overwrite.d := 'Overwrite (unprompted) pre-existing output file ?';
help::pkg.general.images.objs.image.m.tofits.a.overwrite.def := 'F';
help::pkg.general.images.objs.image.m.tofits.a.overwrite.a := 'T or F';
help::pkg.general.images.objs.image.m.tofits.a.dropdeg := [=];
help::pkg.general.images.objs.image.m.tofits.a.dropdeg.d := 'Drop degenerate axes ?';
help::pkg.general.images.objs.image.m.tofits.a.dropdeg.def := 'F';
help::pkg.general.images.objs.image.m.tofits.a.dropdeg.a := 'T or F';
help::pkg.general.images.objs.image.m.tofits.a.deglast := [=];
help::pkg.general.images.objs.image.m.tofits.a.deglast.d := 'Put degenerate axes last in header ?';
help::pkg.general.images.objs.image.m.tofits.a.deglast.def := 'F';
help::pkg.general.images.objs.image.m.tofits.a.deglast.a := 'T or F';
help::pkg.general.images.objs.image.m.tofits.a.async := [=];
help::pkg.general.images.objs.image.m.tofits.a.async.d := 'Run asynchronously?';
help::pkg.general.images.objs.image.m.tofits.a.async.def := '!dowait';
help::pkg.general.images.objs.image.m.tofits.a.async.a := 'Bool';
help::pkg.general.images.objs.image.m.tofits.s := 'tofits(outfile, velocity, optical, bitpix, minpix, maxpix, region, mask, overwrite, dropdeg, deglast, async)';
help::pkg.general.images.objs.image.m.toascii := [=];
help::pkg.general.images.objs.image.m.toascii.d := 'Convert the image to an ascii file';
help::pkg.general.images.objs.image.m.toascii.a.outfile := [=];
help::pkg.general.images.objs.image.m.toascii.a.outfile.d := 'Ascii file name';
help::pkg.general.images.objs.image.m.toascii.a.outfile.def := 'Input name + `.ascii\' ';
help::pkg.general.images.objs.image.m.toascii.a.outfile.a := 'String';
help::pkg.general.images.objs.image.m.toascii.a.region := [=];
help::pkg.general.images.objs.image.m.toascii.a.region.d := 'The region of interest';
help::pkg.general.images.objs.image.m.toascii.a.region.def := 'Whole image';
help::pkg.general.images.objs.image.m.toascii.a.region.a := 'Region tool';
help::pkg.general.images.objs.image.m.toascii.a.mask := [=];
help::pkg.general.images.objs.image.m.toascii.a.mask.d := 'OTF mask';
help::pkg.general.images.objs.image.m.toascii.a.mask.def := 'None';
help::pkg.general.images.objs.image.m.toascii.a.mask.a := 'Boolean LEL expression or mask region';
help::pkg.general.images.objs.image.m.toascii.a.sep := [=];
help::pkg.general.images.objs.image.m.toascii.a.sep.d := 'Separator of data in ascii file';
help::pkg.general.images.objs.image.m.toascii.a.sep.def := '\'  \' ';
help::pkg.general.images.objs.image.m.toascii.a.sep.a := 'String';
help::pkg.general.images.objs.image.m.toascii.a.format := [=];
help::pkg.general.images.objs.image.m.toascii.a.format.d := 'Format of data in ascii file';
help::pkg.general.images.objs.image.m.toascii.a.format.def := '\%e';
help::pkg.general.images.objs.image.m.toascii.a.format.a := 'String';
help::pkg.general.images.objs.image.m.toascii.a.maskvalue := [=];
help::pkg.general.images.objs.image.m.toascii.a.maskvalue.d := 'Value to replace masked pixels by';
help::pkg.general.images.objs.image.m.toascii.a.maskvalue.def := 'No change';
help::pkg.general.images.objs.image.m.toascii.a.maskvalue.a := 'Float or unset';
help::pkg.general.images.objs.image.m.toascii.a.overwrite := [=];
help::pkg.general.images.objs.image.m.toascii.a.overwrite.d := 'Overwrite (unprompted) pre-existing output file ?';
help::pkg.general.images.objs.image.m.toascii.a.overwrite.def := 'F';
help::pkg.general.images.objs.image.m.toascii.a.overwrite.a := 'T or F';
help::pkg.general.images.objs.image.m.toascii.s := 'toascii(outfile, region, mask, sep, format, maskvalue, overwrite)';
help::pkg.general.images.objs.image.m.type := [=];
help::pkg.general.images.objs.image.m.type.d := 'Return the type of this tool';
help::pkg.general.images.objs.image.m.type.s := 'type()';
help::pkg.general.images.objs.image.m.topixel := [=];
help::pkg.general.images.objs.image.m.topixel.d := 'Convert from world to pixel coordinate';
help::pkg.general.images.objs.image.m.topixel.a.value := [=];
help::pkg.general.images.objs.image.m.topixel.a.value.d := 'Absolute world coordinate';
help::pkg.general.images.objs.image.m.topixel.a.value.def := 'Reference value';
help::pkg.general.images.objs.image.m.topixel.a.value.a := 'Numeric vector, vector of quantities or record';
help::pkg.general.images.objs.image.m.topixel.s := 'topixel(value)';
help::pkg.general.images.objs.image.m.toworld := [=];
help::pkg.general.images.objs.image.m.toworld.d := 'Convert from pixel to world coordinate';
help::pkg.general.images.objs.image.m.toworld.a.value := [=];
help::pkg.general.images.objs.image.m.toworld.a.value.d := 'Absolute pixel coordinate';
help::pkg.general.images.objs.image.m.toworld.a.value.def := 'Reference pixel';
help::pkg.general.images.objs.image.m.toworld.a.value.a := 'Numeric vector';
help::pkg.general.images.objs.image.m.toworld.a.format := [=];
help::pkg.general.images.objs.image.m.toworld.a.format.d := 'What type of formatting ?';
help::pkg.general.images.objs.image.m.toworld.a.format.def := '\' n\' ';
help::pkg.general.images.objs.image.m.toworld.a.format.a := 'String from combination of \' n\'  (numeric), \' q\'  (quantity), \' m\'  (measure), \' s\'  (string)';
help::pkg.general.images.objs.image.m.toworld.s := 'toworld(value, format)';
help::pkg.general.images.objs.image.m.unlock := [=];
help::pkg.general.images.objs.image.m.unlock.d := 'Release any lock on the image';
help::pkg.general.images.objs.image.m.unlock.s := 'unlock()';
help::pkg.general.images.objs.image.m.view := [=];
help::pkg.general.images.objs.image.m.view.d := 'Display the current image with the viewer';
help::pkg.general.images.objs.image.m.view.a.parent := [=];
help::pkg.general.images.objs.image.m.view.a.parent.d := 'Parent frame to embed display in';
help::pkg.general.images.objs.image.m.view.a.parent.def := 'F';
help::pkg.general.images.objs.image.m.view.a.parent.a := 'Glish/Tk frame agent';
help::pkg.general.images.objs.image.m.view.a.raster := [=];
help::pkg.general.images.objs.image.m.view.a.raster.d := 'Display as a raster';
help::pkg.general.images.objs.image.m.view.a.raster.def := 'Last value (T if first)';
help::pkg.general.images.objs.image.m.view.a.raster.a := 'unset, T or F';
help::pkg.general.images.objs.image.m.view.a.contour := [=];
help::pkg.general.images.objs.image.m.view.a.contour.d := 'Display as contours';
help::pkg.general.images.objs.image.m.view.a.contour.def := 'Last value (F is first)';
help::pkg.general.images.objs.image.m.view.a.contour.a := 'unset, T or F';
help::pkg.general.images.objs.image.m.view.a.vector := [=];
help::pkg.general.images.objs.image.m.view.a.vector.d := 'Display as vectors';
help::pkg.general.images.objs.image.m.view.a.vector.def := 'Last value (F is first)';
help::pkg.general.images.objs.image.m.view.a.vector.a := 'unset, T or F';
help::pkg.general.images.objs.image.m.view.a.marker := [=];
help::pkg.general.images.objs.image.m.view.a.marker.d := 'Display as marker';
help::pkg.general.images.objs.image.m.view.a.marker.def := 'Last value (F is first)';
help::pkg.general.images.objs.image.m.view.a.marker.a := 'unset, T or F';
help::pkg.general.images.objs.image.m.view.a.region := [=];
help::pkg.general.images.objs.image.m.view.a.region.d := 'Region of interest';
help::pkg.general.images.objs.image.m.view.a.region.def := 'Last value (whole image if first)';
help::pkg.general.images.objs.image.m.view.a.region.a := 'Region tool';
help::pkg.general.images.objs.image.m.view.a.mask := [=];
help::pkg.general.images.objs.image.m.view.a.mask.d := 'OTF mask';
help::pkg.general.images.objs.image.m.view.a.mask.def := 'None';
help::pkg.general.images.objs.image.m.view.a.mask.a := 'Boolean LEL expression or mask region';
help::pkg.general.images.objs.image.m.view.a.model := [=];
help::pkg.general.images.objs.image.m.view.a.model.d := 'Componentlist';
help::pkg.general.images.objs.image.m.view.a.model.def := 'None';
help::pkg.general.images.objs.image.m.view.a.model.a := 'Componentlist tool';
help::pkg.general.images.objs.image.m.view.a.adjust := [=];
help::pkg.general.images.objs.image.m.view.a.adjust.d := 'Start adjustment GUI ?';
help::pkg.general.images.objs.image.m.view.a.adjust.def := 'T';
help::pkg.general.images.objs.image.m.view.a.adjust.a := 'T or F';
help::pkg.general.images.objs.image.m.view.a.axislabels := [=];
help::pkg.general.images.objs.image.m.view.a.axislabels.d := 'Display axis labels';
help::pkg.general.images.objs.image.m.view.a.axislabels.def := 'Last value (F if first)';
help::pkg.general.images.objs.image.m.view.a.axislabels.a := 'unset, T, F';
help::pkg.general.images.objs.image.m.view.a.includepix := [=];
help::pkg.general.images.objs.image.m.view.a.includepix.d := 'Pixel range';
help::pkg.general.images.objs.image.m.view.a.includepix.def := 'Full range';
help::pkg.general.images.objs.image.m.view.a.includepix.a := 'unset or Vector of float (length 1 or 2)';
help::pkg.general.images.objs.image.m.view.a.order := [=];
help::pkg.general.images.objs.image.m.view.a.order.d := 'Order to display axes in';
help::pkg.general.images.objs.image.m.view.a.order.def := 'Last value (natural if first)';
help::pkg.general.images.objs.image.m.view.a.order.a := 'unset or vector integer';
help::pkg.general.images.objs.image.m.view.a.activatebreak := [=];
help::pkg.general.images.objs.image.m.view.a.activatebreak.d := 'Activate the break button';
help::pkg.general.images.objs.image.m.view.a.activatebreak.def := 'unset';
help::pkg.general.images.objs.image.m.view.a.activatebreak.a := 'unset, T, F';
help::pkg.general.images.objs.image.m.view.a.hasdimiss := [=];
help::pkg.general.images.objs.image.m.view.a.hasdimiss.d := 'Add Dismiss button';
help::pkg.general.images.objs.image.m.view.a.hasdimiss.def := 'T';
help::pkg.general.images.objs.image.m.view.a.hasdimiss.a := 'T, F';
help::pkg.general.images.objs.image.m.view.a.widgetset := [=];
help::pkg.general.images.objs.image.m.view.a.widgetset.d := 'The widgetset to use for the GUI';
help::pkg.general.images.objs.image.m.view.a.widgetset.def := 'ddlws';
help::pkg.general.images.objs.image.m.view.a.widgetset.a := 'A widgetserver tool';
help::pkg.general.images.objs.image.m.view.s := 'view(parent, raster, contour, vector, marker, region, mask, model, adjust, axislabels, includepix, order, activatebreak, hasdimiss, widgetset)';
help::pkg.general.images.funs.is_image := [=];
help::pkg.general.images.funs.is_image.a := [=];
help::pkg.general.images.funs.is_image.d := 'Is this variable an image tool ?';
help::pkg.general.images.funs.is_image.a.thing := [=];
help::pkg.general.images.funs.is_image.a.thing.d := 'Variable to test';
help::pkg.general.images.funs.is_image.a.thing.def := 'None';
help::pkg.general.images.funs.is_image.a.thing.a := 'Glish variable';
help::pkg.general.images.funs.is_image.s := 'is_image(thing)';
help::pkg.general.images.funs.imagefiles := [=];
help::pkg.general.images.funs.imagefiles.a := [=];
help::pkg.general.images.funs.imagefiles.d := 'Find the list of image files in the given directory';
help::pkg.general.images.funs.imagefiles.a.files := [=];
help::pkg.general.images.funs.imagefiles.a.files.d := 'Path/files of interest';
help::pkg.general.images.funs.imagefiles.a.files.def := '\' .\'  the current working directory';
help::pkg.general.images.funs.imagefiles.a.files.a := 'String';
help::pkg.general.images.funs.imagefiles.a.strippath := [=];
help::pkg.general.images.funs.imagefiles.a.strippath.d := 'Strip off leading path name ?';
help::pkg.general.images.funs.imagefiles.a.strippath.def := 'T';
help::pkg.general.images.funs.imagefiles.a.strippath.a := 'T or F';
help::pkg.general.images.funs.imagefiles.a.foreign := [=];
help::pkg.general.images.funs.imagefiles.a.foreign.d := 'Include foreign formats with native support ?';
help::pkg.general.images.funs.imagefiles.a.foreign.def := 'F';
help::pkg.general.images.funs.imagefiles.a.foreign.a := 'T or F';
help::pkg.general.images.funs.imagefiles.s := 'imagefiles(files, strippath, foreign)';
help::pkg.general.images.funs.imagetools := [=];
help::pkg.general.images.funs.imagetools.a := [=];
help::pkg.general.images.funs.imagetools.d := 'Find the list of current global image tools';
help::pkg.general.images.funs.imagetools.a.showname := [=];
help::pkg.general.images.funs.imagetools.a.showname.d := 'Show name of image assocoated with tool';
help::pkg.general.images.funs.imagetools.a.showname.def := 'F';
help::pkg.general.images.funs.imagetools.a.showname.a := 'T or F';
help::pkg.general.images.funs.imagetools.a.showclosed := [=];
help::pkg.general.images.funs.imagetools.a.showclosed.d := 'Include tool in list even if closed';
help::pkg.general.images.funs.imagetools.a.showclosed.def := 'T';
help::pkg.general.images.funs.imagetools.a.showclosed.a := 'T or F';
help::pkg.general.images.funs.imagetools.s := 'imagetools(showname, showclosed)';
help::pkg.general.images.funs.imagedones := [=];
help::pkg.general.images.funs.imagedones.a := [=];
help::pkg.general.images.funs.imagedones.d := 'Done all global or specified Image tools';
help::pkg.general.images.funs.imagedones.a.which := [=];
help::pkg.general.images.funs.imagedones.a.which.d := 'Which Image tools to destroy';
help::pkg.general.images.funs.imagedones.a.which.def := 'All global Image tools';
help::pkg.general.images.funs.imagedones.a.which.a := 'String or vector of strings';
help::pkg.general.images.funs.imagedones.s := 'imagedones(which)';
help::pkg.general.images.funs.imagedemo := [=];
help::pkg.general.images.funs.imagedemo.a := [=];
help::pkg.general.images.funs.imagedemo.d := 'Demonstrate the use of an image';
help::pkg.general.images.funs.imagedemo.s := 'imagedemo()';
help::pkg.general.images.funs.imagetest := [=];
help::pkg.general.images.funs.imagetest.a := [=];
help::pkg.general.images.funs.imagetest.d := 'Run test suite for Image tool';
help::pkg.general.images.funs.imagetest.a.which := [=];
help::pkg.general.images.funs.imagetest.a.which.d := 'Which test to run';
help::pkg.general.images.funs.imagetest.a.which.def := 'All tests';
help::pkg.general.images.funs.imagetest.a.which.a := 'Integer or vector of integers';
help::pkg.general.images.funs.imagetest.s := 'imagetest(which)';
help::pkg.general.images.objs.regionmanager := [=];
help::pkg.general.images.objs.regionmanager.m := [=];
help::pkg.general.images.objs.regionmanager.c := [=];
help::pkg.general.images.objs.regionmanager.d := 'Create and manipulate regions of interest';
help::pkg.general.images.objs.regionmanager.c.regionmanager := [=];
help::pkg.general.images.objs.regionmanager.c.regionmanager.d := 'Construct a regionmanager';
help::pkg.general.images.objs.regionmanager.c.regionmanager.s := 'regionmanager()';
help::pkg.general.images.objs.regionmanager.m.absreltype := [=];
help::pkg.general.images.objs.regionmanager.m.absreltype.d := 'Convert region type value to a string';
help::pkg.general.images.objs.regionmanager.m.absreltype.a.absrelvalue := [=];
help::pkg.general.images.objs.regionmanager.m.absreltype.a.absrelvalue.d := 'Region type value';
help::pkg.general.images.objs.regionmanager.m.absreltype.a.absrelvalue.def := '';
help::pkg.general.images.objs.regionmanager.m.absreltype.a.absrelvalue.a := 'Integer - 1, 2, 3, 4';
help::pkg.general.images.objs.regionmanager.m.absreltype.s := 'absreltype(absrelvalue)';
help::pkg.general.images.objs.regionmanager.m.box := [=];
help::pkg.general.images.objs.regionmanager.m.box.d := 'Create a pixel box region';
help::pkg.general.images.objs.regionmanager.m.box.a.blc := [=];
help::pkg.general.images.objs.regionmanager.m.box.a.blc.d := 'blc of the box';
help::pkg.general.images.objs.regionmanager.m.box.a.blc.def := 'Unity';
help::pkg.general.images.objs.regionmanager.m.box.a.blc.a := 'Numeric vector';
help::pkg.general.images.objs.regionmanager.m.box.a.trc := [=];
help::pkg.general.images.objs.regionmanager.m.box.a.trc.d := 'trc of the box';
help::pkg.general.images.objs.regionmanager.m.box.a.trc.def := 'Shape';
help::pkg.general.images.objs.regionmanager.m.box.a.trc.a := 'Numeric vector';
help::pkg.general.images.objs.regionmanager.m.box.a.inc := [=];
help::pkg.general.images.objs.regionmanager.m.box.a.inc.d := 'increment';
help::pkg.general.images.objs.regionmanager.m.box.a.inc.def := 'unity';
help::pkg.general.images.objs.regionmanager.m.box.a.inc.a := 'Numeric vector';
help::pkg.general.images.objs.regionmanager.m.box.a.absrel := [=];
help::pkg.general.images.objs.regionmanager.m.box.a.absrel.d := 'Absolute or relative coordinates';
help::pkg.general.images.objs.regionmanager.m.box.a.absrel.def := '\' abs\' ';
help::pkg.general.images.objs.regionmanager.m.box.a.absrel.a := 'One of \' abs\' , \' relref\'  or \' relcen\' ';
help::pkg.general.images.objs.regionmanager.m.box.a.frac := [=];
help::pkg.general.images.objs.regionmanager.m.box.a.frac.d := 'Pixel or fractional coordinates';
help::pkg.general.images.objs.regionmanager.m.box.a.frac.def := 'F';
help::pkg.general.images.objs.regionmanager.m.box.a.frac.a := 'T or F';
help::pkg.general.images.objs.regionmanager.m.box.a.comment := [=];
help::pkg.general.images.objs.regionmanager.m.box.a.comment.d := 'A comment stored with the region';
help::pkg.general.images.objs.regionmanager.m.box.a.comment.def := '';
help::pkg.general.images.objs.regionmanager.m.box.a.comment.a := 'String';
help::pkg.general.images.objs.regionmanager.m.box.s := 'box(blc, trc, inc, absrel, frac, comment)';
help::pkg.general.images.objs.regionmanager.m.complement := [=];
help::pkg.general.images.objs.regionmanager.m.complement.d := 'Create the complement of a world region';
help::pkg.general.images.objs.regionmanager.m.complement.a.region := [=];
help::pkg.general.images.objs.regionmanager.m.complement.a.region.d := 'The world region';
help::pkg.general.images.objs.regionmanager.m.complement.a.region.def := '';
help::pkg.general.images.objs.regionmanager.m.complement.a.region.a := 'Region tool';
help::pkg.general.images.objs.regionmanager.m.complement.a.comment := [=];
help::pkg.general.images.objs.regionmanager.m.complement.a.comment.d := 'A comment stored with the region';
help::pkg.general.images.objs.regionmanager.m.complement.a.comment.def := '';
help::pkg.general.images.objs.regionmanager.m.complement.a.comment.a := 'String';
help::pkg.general.images.objs.regionmanager.m.complement.s := 'complement(region, comment)';
help::pkg.general.images.objs.regionmanager.m.concatenation := [=];
help::pkg.general.images.objs.regionmanager.m.concatenation.d := 'Concatenate world regions along a new axis';
help::pkg.general.images.objs.regionmanager.m.concatenation.a.box := [=];
help::pkg.general.images.objs.regionmanager.m.concatenation.a.box.d := 'The axis to concatenate along';
help::pkg.general.images.objs.regionmanager.m.concatenation.a.box.def := '';
help::pkg.general.images.objs.regionmanager.m.concatenation.a.box.a := 'world box region';
help::pkg.general.images.objs.regionmanager.m.concatenation.a.regions := [=];
help::pkg.general.images.objs.regionmanager.m.concatenation.a.regions.d := 'World regions';
help::pkg.general.images.objs.regionmanager.m.concatenation.a.regions.def := '';
help::pkg.general.images.objs.regionmanager.m.concatenation.a.regions.a := 'Record containing world regions';
help::pkg.general.images.objs.regionmanager.m.concatenation.a.comment := [=];
help::pkg.general.images.objs.regionmanager.m.concatenation.a.comment.d := 'A comment stored with the region';
help::pkg.general.images.objs.regionmanager.m.concatenation.a.comment.def := '';
help::pkg.general.images.objs.regionmanager.m.concatenation.a.comment.a := 'String';
help::pkg.general.images.objs.regionmanager.m.concatenation.s := 'concatenation(box, regions, comment)';
help::pkg.general.images.objs.regionmanager.m.copyregions := [=];
help::pkg.general.images.objs.regionmanager.m.copyregions.d := 'Copy regions from one Table to another';
help::pkg.general.images.objs.regionmanager.m.copyregions.a.tableout := [=];
help::pkg.general.images.objs.regionmanager.m.copyregions.a.tableout.d := 'The output table';
help::pkg.general.images.objs.regionmanager.m.copyregions.a.tableout.def := '';
help::pkg.general.images.objs.regionmanager.m.copyregions.a.tableout.a := 'Image tool, table tool or String';
help::pkg.general.images.objs.regionmanager.m.copyregions.a.tablein := [=];
help::pkg.general.images.objs.regionmanager.m.copyregions.a.tablein.d := 'The input table';
help::pkg.general.images.objs.regionmanager.m.copyregions.a.tablein.def := '';
help::pkg.general.images.objs.regionmanager.m.copyregions.a.tablein.a := 'Image tool, table tool or String';
help::pkg.general.images.objs.regionmanager.m.copyregions.a.confirm := [=];
help::pkg.general.images.objs.regionmanager.m.copyregions.a.confirm.d := 'Prompt for confirmation';
help::pkg.general.images.objs.regionmanager.m.copyregions.a.confirm.def := 'F';
help::pkg.general.images.objs.regionmanager.m.copyregions.a.confirm.a := 'T or F';
help::pkg.general.images.objs.regionmanager.m.copyregions.s := 'copyregions(tableout, tablein, confirm)';
help::pkg.general.images.objs.regionmanager.m.def := [=];
help::pkg.general.images.objs.regionmanager.m.def.d := 'Default pixel coordinate value';
help::pkg.general.images.objs.regionmanager.m.def.s := 'def()';
help::pkg.general.images.objs.regionmanager.m.deletefromtable := [=];
help::pkg.general.images.objs.regionmanager.m.deletefromtable.d := 'Delete regions from a Table';
help::pkg.general.images.objs.regionmanager.m.deletefromtable.a.tablename := [=];
help::pkg.general.images.objs.regionmanager.m.deletefromtable.a.tablename.d := 'The table';
help::pkg.general.images.objs.regionmanager.m.deletefromtable.a.tablename.def := '';
help::pkg.general.images.objs.regionmanager.m.deletefromtable.a.tablename.a := 'Image tool, table tool or String';
help::pkg.general.images.objs.regionmanager.m.deletefromtable.a.confirm := [=];
help::pkg.general.images.objs.regionmanager.m.deletefromtable.a.confirm.d := 'Prompt for confirmation';
help::pkg.general.images.objs.regionmanager.m.deletefromtable.a.confirm.def := 'F';
help::pkg.general.images.objs.regionmanager.m.deletefromtable.a.confirm.a := 'T or F';
help::pkg.general.images.objs.regionmanager.m.deletefromtable.a.regionname := [=];
help::pkg.general.images.objs.regionmanager.m.deletefromtable.a.regionname.d := 'Name(s) of the region(s) to delete';
help::pkg.general.images.objs.regionmanager.m.deletefromtable.a.regionname.def := '';
help::pkg.general.images.objs.regionmanager.m.deletefromtable.a.regionname.a := 'Vector of strings';
help::pkg.general.images.objs.regionmanager.m.deletefromtable.s := 'deletefromtable(tablename, confirm, regionname)';
help::pkg.general.images.objs.regionmanager.m.difference := [=];
help::pkg.general.images.objs.regionmanager.m.difference.d := 'Create the difference of two world regions';
help::pkg.general.images.objs.regionmanager.m.difference.a.region1 := [=];
help::pkg.general.images.objs.regionmanager.m.difference.a.region1.d := 'The first world region';
help::pkg.general.images.objs.regionmanager.m.difference.a.region1.def := '';
help::pkg.general.images.objs.regionmanager.m.difference.a.region1.a := 'Region tool';
help::pkg.general.images.objs.regionmanager.m.difference.a.region2 := [=];
help::pkg.general.images.objs.regionmanager.m.difference.a.region2.d := 'The second world region';
help::pkg.general.images.objs.regionmanager.m.difference.a.region2.def := '';
help::pkg.general.images.objs.regionmanager.m.difference.a.region2.a := 'Region tool';
help::pkg.general.images.objs.regionmanager.m.difference.a.comment := [=];
help::pkg.general.images.objs.regionmanager.m.difference.a.comment.d := 'A comment stored with the region';
help::pkg.general.images.objs.regionmanager.m.difference.a.comment.def := '';
help::pkg.general.images.objs.regionmanager.m.difference.a.comment.a := 'String';
help::pkg.general.images.objs.regionmanager.m.difference.s := 'difference(region1, region2, comment)';
help::pkg.general.images.objs.regionmanager.m.displayedplane := [=];
help::pkg.general.images.objs.regionmanager.m.displayedplane.d := 'Find a region describing the plane displayed by the viewer';
help::pkg.general.images.objs.regionmanager.m.displayedplane.a.image := [=];
help::pkg.general.images.objs.regionmanager.m.displayedplane.a.image.d := 'Image';
help::pkg.general.images.objs.regionmanager.m.displayedplane.a.image.def := '';
help::pkg.general.images.objs.regionmanager.m.displayedplane.a.image.a := 'Image tool';
help::pkg.general.images.objs.regionmanager.m.displayedplane.a.ddoptions := [=];
help::pkg.general.images.objs.regionmanager.m.displayedplane.a.ddoptions.d := 'Options from display data';
help::pkg.general.images.objs.regionmanager.m.displayedplane.a.ddoptions.def := '';
help::pkg.general.images.objs.regionmanager.m.displayedplane.a.ddoptions.a := 'Record';
help::pkg.general.images.objs.regionmanager.m.displayedplane.a.zaxispixel := [=];
help::pkg.general.images.objs.regionmanager.m.displayedplane.a.zaxispixel.d := 'The pixel of the z (movie) axis';
help::pkg.general.images.objs.regionmanager.m.displayedplane.a.zaxispixel.def := 'Unset';
help::pkg.general.images.objs.regionmanager.m.displayedplane.a.zaxispixel.a := 'Integer';
help::pkg.general.images.objs.regionmanager.m.displayedplane.a.asworld := [=];
help::pkg.general.images.objs.regionmanager.m.displayedplane.a.asworld.d := 'T for a world box, F for a pixel box';
help::pkg.general.images.objs.regionmanager.m.displayedplane.a.asworld.def := 'T';
help::pkg.general.images.objs.regionmanager.m.displayedplane.a.asworld.a := 'T or F';
help::pkg.general.images.objs.regionmanager.m.displayedplane.s := 'displayedplane(image, ddoptions, zaxispixel, asworld)';
help::pkg.general.images.objs.regionmanager.m.done := [=];
help::pkg.general.images.objs.regionmanager.m.done.d := 'Destroy this regionmanager';
help::pkg.general.images.objs.regionmanager.m.done.s := 'done()';
help::pkg.general.images.objs.regionmanager.m.extension := [=];
help::pkg.general.images.objs.regionmanager.m.extension.d := 'Extend a world region to extra dimensions';
help::pkg.general.images.objs.regionmanager.m.extension.a.box := [=];
help::pkg.general.images.objs.regionmanager.m.extension.a.box.d := 'The world region to extend over';
help::pkg.general.images.objs.regionmanager.m.extension.a.box.def := '';
help::pkg.general.images.objs.regionmanager.m.extension.a.box.a := 'World box region tool';
help::pkg.general.images.objs.regionmanager.m.extension.a.region := [=];
help::pkg.general.images.objs.regionmanager.m.extension.a.region.d := 'The world region to extend';
help::pkg.general.images.objs.regionmanager.m.extension.a.region.def := '';
help::pkg.general.images.objs.regionmanager.m.extension.a.region.a := 'Region tool';
help::pkg.general.images.objs.regionmanager.m.extension.a.comment := [=];
help::pkg.general.images.objs.regionmanager.m.extension.a.comment.d := 'A comment stored with the region';
help::pkg.general.images.objs.regionmanager.m.extension.a.comment.def := '';
help::pkg.general.images.objs.regionmanager.m.extension.a.comment.a := 'String';
help::pkg.general.images.objs.regionmanager.m.extension.s := 'extension(box, region, comment)';
help::pkg.general.images.objs.regionmanager.m.extractsimpleregions := [=];
help::pkg.general.images.objs.regionmanager.m.extractsimpleregions.d := 'Extract all simple regions into a record';
help::pkg.general.images.objs.regionmanager.m.extractsimpleregions.a.region := [=];
help::pkg.general.images.objs.regionmanager.m.extractsimpleregions.a.region.d := 'The region to extend';
help::pkg.general.images.objs.regionmanager.m.extractsimpleregions.a.region.def := '';
help::pkg.general.images.objs.regionmanager.m.extractsimpleregions.a.region.a := 'Region tool';
help::pkg.general.images.objs.regionmanager.m.extractsimpleregions.s := 'extractsimpleregions(region)';
help::pkg.general.images.objs.regionmanager.m.fromglobaltotable := [=];
help::pkg.general.images.objs.regionmanager.m.fromglobaltotable.d := 'Save regions into a Table';
help::pkg.general.images.objs.regionmanager.m.fromglobaltotable.a.tablename := [=];
help::pkg.general.images.objs.regionmanager.m.fromglobaltotable.a.tablename.d := 'The table';
help::pkg.general.images.objs.regionmanager.m.fromglobaltotable.a.tablename.def := '';
help::pkg.general.images.objs.regionmanager.m.fromglobaltotable.a.tablename.a := 'Image tool, table tool or String';
help::pkg.general.images.objs.regionmanager.m.fromglobaltotable.a.confirm := [=];
help::pkg.general.images.objs.regionmanager.m.fromglobaltotable.a.confirm.d := 'Prompt for confirmation';
help::pkg.general.images.objs.regionmanager.m.fromglobaltotable.a.confirm.def := 'F';
help::pkg.general.images.objs.regionmanager.m.fromglobaltotable.a.confirm.a := 'T or F';
help::pkg.general.images.objs.regionmanager.m.fromglobaltotable.a.verbose := [=];
help::pkg.general.images.objs.regionmanager.m.fromglobaltotable.a.verbose.d := 'Report successful saves';
help::pkg.general.images.objs.regionmanager.m.fromglobaltotable.a.verbose.def := 'T';
help::pkg.general.images.objs.regionmanager.m.fromglobaltotable.a.verbose.a := 'T or F';
help::pkg.general.images.objs.regionmanager.m.fromglobaltotable.a.regionname := [=];
help::pkg.general.images.objs.regionmanager.m.fromglobaltotable.a.regionname.d := 'Name(s) of the region(s) when saved in the table';
help::pkg.general.images.objs.regionmanager.m.fromglobaltotable.a.regionname.def := 'Self naming';
help::pkg.general.images.objs.regionmanager.m.fromglobaltotable.a.regionname.a := 'Vector of strings';
help::pkg.general.images.objs.regionmanager.m.fromglobaltotable.a.dots := [=];
help::pkg.general.images.objs.regionmanager.m.fromglobaltotable.a.dots.d := 'Region(s) to save';
help::pkg.general.images.objs.regionmanager.m.fromglobaltotable.a.dots.def := '';
help::pkg.general.images.objs.regionmanager.m.fromglobaltotable.a.dots.a := 'Region tool(s)';
help::pkg.general.images.objs.regionmanager.m.fromglobaltotable.s := 'fromglobaltotable(tablename, confirm, verbose, regionname, ...)';
help::pkg.general.images.objs.regionmanager.m.fromrecordtotable := [=];
help::pkg.general.images.objs.regionmanager.m.fromrecordtotable.d := 'Save regions stored in a record into a Table';
help::pkg.general.images.objs.regionmanager.m.fromrecordtotable.a.tablename := [=];
help::pkg.general.images.objs.regionmanager.m.fromrecordtotable.a.tablename.d := 'The table';
help::pkg.general.images.objs.regionmanager.m.fromrecordtotable.a.tablename.def := '';
help::pkg.general.images.objs.regionmanager.m.fromrecordtotable.a.tablename.a := 'Image tool, table tool or String';
help::pkg.general.images.objs.regionmanager.m.fromrecordtotable.a.confirm := [=];
help::pkg.general.images.objs.regionmanager.m.fromrecordtotable.a.confirm.d := 'Prompt for confirmation';
help::pkg.general.images.objs.regionmanager.m.fromrecordtotable.a.confirm.def := 'F';
help::pkg.general.images.objs.regionmanager.m.fromrecordtotable.a.confirm.a := 'T or F';
help::pkg.general.images.objs.regionmanager.m.fromrecordtotable.a.verbose := [=];
help::pkg.general.images.objs.regionmanager.m.fromrecordtotable.a.verbose.d := 'Report successful saves';
help::pkg.general.images.objs.regionmanager.m.fromrecordtotable.a.verbose.def := 'T';
help::pkg.general.images.objs.regionmanager.m.fromrecordtotable.a.verbose.a := 'T or F';
help::pkg.general.images.objs.regionmanager.m.fromrecordtotable.a.regionname := [=];
help::pkg.general.images.objs.regionmanager.m.fromrecordtotable.a.regionname.d := 'Name(s) of the region(s) when saved in the table';
help::pkg.general.images.objs.regionmanager.m.fromrecordtotable.a.regionname.def := '';
help::pkg.general.images.objs.regionmanager.m.fromrecordtotable.a.regionname.a := 'Vector of strings';
help::pkg.general.images.objs.regionmanager.m.fromrecordtotable.a.regionrec := [=];
help::pkg.general.images.objs.regionmanager.m.fromrecordtotable.a.regionrec.d := 'Region(s) to save';
help::pkg.general.images.objs.regionmanager.m.fromrecordtotable.a.regionrec.def := '';
help::pkg.general.images.objs.regionmanager.m.fromrecordtotable.a.regionrec.a := 'Record of region tool(s)';
help::pkg.general.images.objs.regionmanager.m.fromrecordtotable.s := 'fromrecordtotable(tablename, confirm, verbose, regionname, regionrec)';
help::pkg.general.images.objs.regionmanager.m.fromtabletoglobal := [=];
help::pkg.general.images.objs.regionmanager.m.fromtabletoglobal.d := 'Restore a region from a Table to Glish';
help::pkg.general.images.objs.regionmanager.m.fromtabletoglobal.a.tablename := [=];
help::pkg.general.images.objs.regionmanager.m.fromtabletoglobal.a.tablename.d := 'The table';
help::pkg.general.images.objs.regionmanager.m.fromtabletoglobal.a.tablename.def := '';
help::pkg.general.images.objs.regionmanager.m.fromtabletoglobal.a.tablename.a := 'Image tool, table tool or String';
help::pkg.general.images.objs.regionmanager.m.fromtabletoglobal.a.verbose := [=];
help::pkg.general.images.objs.regionmanager.m.fromtabletoglobal.a.verbose.d := 'Report successful restores';
help::pkg.general.images.objs.regionmanager.m.fromtabletoglobal.a.verbose.def := 'T';
help::pkg.general.images.objs.regionmanager.m.fromtabletoglobal.a.verbose.a := 'T or F';
help::pkg.general.images.objs.regionmanager.m.fromtabletoglobal.a.regionname := [=];
help::pkg.general.images.objs.regionmanager.m.fromtabletoglobal.a.regionname.d := 'Name of the region to restore';
help::pkg.general.images.objs.regionmanager.m.fromtabletoglobal.a.regionname.def := '';
help::pkg.general.images.objs.regionmanager.m.fromtabletoglobal.a.regionname.a := 'String';
help::pkg.general.images.objs.regionmanager.m.fromtabletoglobal.s := 'fromtabletoglobal(tablename, verbose, regionname)';
help::pkg.general.images.objs.regionmanager.m.fromtabletorecord := [=];
help::pkg.general.images.objs.regionmanager.m.fromtabletorecord.d := 'Restore regions from a Table to a record';
help::pkg.general.images.objs.regionmanager.m.fromtabletorecord.a.tablename := [=];
help::pkg.general.images.objs.regionmanager.m.fromtabletorecord.a.tablename.d := 'The table';
help::pkg.general.images.objs.regionmanager.m.fromtabletorecord.a.tablename.def := '';
help::pkg.general.images.objs.regionmanager.m.fromtabletorecord.a.tablename.a := 'Image tool, table tool or String';
help::pkg.general.images.objs.regionmanager.m.fromtabletorecord.a.verbose := [=];
help::pkg.general.images.objs.regionmanager.m.fromtabletorecord.a.verbose.d := 'Report successful restores';
help::pkg.general.images.objs.regionmanager.m.fromtabletorecord.a.verbose.def := 'T';
help::pkg.general.images.objs.regionmanager.m.fromtabletorecord.a.verbose.a := 'T or F';
help::pkg.general.images.objs.regionmanager.m.fromtabletorecord.a.regionname := [=];
help::pkg.general.images.objs.regionmanager.m.fromtabletorecord.a.regionname.d := 'Name of the region(s) to restore';
help::pkg.general.images.objs.regionmanager.m.fromtabletorecord.a.regionname.def := 'All';
help::pkg.general.images.objs.regionmanager.m.fromtabletorecord.a.regionname.a := 'Vector of strings';
help::pkg.general.images.objs.regionmanager.m.fromtabletorecord.a.numberfields := [=];
help::pkg.general.images.objs.regionmanager.m.fromtabletorecord.a.numberfields.d := 'Number the fields ?';
help::pkg.general.images.objs.regionmanager.m.fromtabletorecord.a.numberfields.def := 'T';
help::pkg.general.images.objs.regionmanager.m.fromtabletorecord.a.numberfields.a := 'T or F';
help::pkg.general.images.objs.regionmanager.m.fromtabletorecord.s := 'fromtabletorecord(tablename, verbose, regionname, numberfields)';
help::pkg.general.images.objs.regionmanager.m.fromtabletonakedrecord := [=];
help::pkg.general.images.objs.regionmanager.m.fromtabletonakedrecord.d := 'Restore all regions from a Table to a naked record';
help::pkg.general.images.objs.regionmanager.m.fromtabletonakedrecord.a.tablename := [=];
help::pkg.general.images.objs.regionmanager.m.fromtabletonakedrecord.a.tablename.d := 'The table';
help::pkg.general.images.objs.regionmanager.m.fromtabletonakedrecord.a.tablename.def := '';
help::pkg.general.images.objs.regionmanager.m.fromtabletonakedrecord.a.tablename.a := 'Image tool, table tool or String';
help::pkg.general.images.objs.regionmanager.m.fromtabletonakedrecord.s := 'fromtabletonakedrecord(tablename)';
help::pkg.general.images.objs.regionmanager.m.getselectcallback := [=];
help::pkg.general.images.objs.regionmanager.m.getselectcallback.d := 'Get the select callback function';
help::pkg.general.images.objs.regionmanager.m.getselectcallback.s := 'getselectcallback()';
help::pkg.general.images.objs.regionmanager.m.gui := [=];
help::pkg.general.images.objs.regionmanager.m.gui.d := 'Start the GUI interface';
help::pkg.general.images.objs.regionmanager.m.gui.a.parent := [=];
help::pkg.general.images.objs.regionmanager.m.gui.a.parent.d := 'Parent of the widget';
help::pkg.general.images.objs.regionmanager.m.gui.a.parent.def := 'F';
help::pkg.general.images.objs.regionmanager.m.gui.a.parent.a := 'Tk frame';
help::pkg.general.images.objs.regionmanager.m.gui.a.tlead := [=];
help::pkg.general.images.objs.regionmanager.m.gui.a.tlead.d := 'Lead frame';
help::pkg.general.images.objs.regionmanager.m.gui.a.tlead.def := 'F';
help::pkg.general.images.objs.regionmanager.m.gui.a.tlead.a := 'Tk frame';
help::pkg.general.images.objs.regionmanager.m.gui.a.tpos := [=];
help::pkg.general.images.objs.regionmanager.m.gui.a.tpos.d := 'Position of GUI relative to lead';
help::pkg.general.images.objs.regionmanager.m.gui.a.tpos.def := '\' sw\' ';
help::pkg.general.images.objs.regionmanager.m.gui.a.tpos.a := 'String';
help::pkg.general.images.objs.regionmanager.m.gui.s := 'gui(parent, tlead, tpos)';
help::pkg.general.images.objs.regionmanager.m.intersection := [=];
help::pkg.general.images.objs.regionmanager.m.intersection.d := 'Create the intersection of some world regions';
help::pkg.general.images.objs.regionmanager.m.intersection.a.dots := [=];
help::pkg.general.images.objs.regionmanager.m.intersection.a.dots.d := 'World regions and comment';
help::pkg.general.images.objs.regionmanager.m.intersection.a.dots.def := '';
help::pkg.general.images.objs.regionmanager.m.intersection.a.dots.a := 'Region tools or record of region tools, and String';
help::pkg.general.images.objs.regionmanager.m.intersection.s := 'intersection(...)';
help::pkg.general.images.objs.regionmanager.m.ispixelregion := [=];
help::pkg.general.images.objs.regionmanager.m.ispixelregion.d := 'Is this region a pixel region ?';
help::pkg.general.images.objs.regionmanager.m.ispixelregion.a.region := [=];
help::pkg.general.images.objs.regionmanager.m.ispixelregion.a.region.d := 'The region';
help::pkg.general.images.objs.regionmanager.m.ispixelregion.a.region.def := '';
help::pkg.general.images.objs.regionmanager.m.ispixelregion.a.region.a := 'Region tool';
help::pkg.general.images.objs.regionmanager.m.ispixelregion.s := 'ispixelregion(region)';
help::pkg.general.images.objs.regionmanager.m.isworldregion := [=];
help::pkg.general.images.objs.regionmanager.m.isworldregion.d := 'Is this region a world region ?';
help::pkg.general.images.objs.regionmanager.m.isworldregion.a.region := [=];
help::pkg.general.images.objs.regionmanager.m.isworldregion.a.region.d := 'The region';
help::pkg.general.images.objs.regionmanager.m.isworldregion.a.region.def := '';
help::pkg.general.images.objs.regionmanager.m.isworldregion.a.region.a := 'Region tool';
help::pkg.general.images.objs.regionmanager.m.isworldregion.s := 'isworldregion(region)';
help::pkg.general.images.objs.regionmanager.m.namesintable := [=];
help::pkg.general.images.objs.regionmanager.m.namesintable.d := 'Find the names of the regions stored in a Table';
help::pkg.general.images.objs.regionmanager.m.namesintable.a.tablename := [=];
help::pkg.general.images.objs.regionmanager.m.namesintable.a.tablename.d := 'The table';
help::pkg.general.images.objs.regionmanager.m.namesintable.a.tablename.def := '';
help::pkg.general.images.objs.regionmanager.m.namesintable.a.tablename.a := 'Image tool, table tool or String';
help::pkg.general.images.objs.regionmanager.m.namesintable.s := 'namesintable(tablename)';
help::pkg.general.images.objs.regionmanager.m.pixeltoworldregion := [=];
help::pkg.general.images.objs.regionmanager.m.pixeltoworldregion.d := 'Convert a simple pixel region to a world region';
help::pkg.general.images.objs.regionmanager.m.pixeltoworldregion.a.csys := [=];
help::pkg.general.images.objs.regionmanager.m.pixeltoworldregion.a.csys.d := 'The coordinate system to use in the conversion';
help::pkg.general.images.objs.regionmanager.m.pixeltoworldregion.a.csys.def := '';
help::pkg.general.images.objs.regionmanager.m.pixeltoworldregion.a.csys.a := 'Image tool';
help::pkg.general.images.objs.regionmanager.m.pixeltoworldregion.a.shape := [=];
help::pkg.general.images.objs.regionmanager.m.pixeltoworldregion.a.shape.d := 'The shape to use for fractional coordinates';
help::pkg.general.images.objs.regionmanager.m.pixeltoworldregion.a.shape.def := 'Unset';
help::pkg.general.images.objs.regionmanager.m.pixeltoworldregion.a.shape.a := 'Vector of integers';
help::pkg.general.images.objs.regionmanager.m.pixeltoworldregion.a.region := [=];
help::pkg.general.images.objs.regionmanager.m.pixeltoworldregion.a.region.d := 'The region';
help::pkg.general.images.objs.regionmanager.m.pixeltoworldregion.a.region.def := '';
help::pkg.general.images.objs.regionmanager.m.pixeltoworldregion.a.region.a := 'Region tool';
help::pkg.general.images.objs.regionmanager.m.pixeltoworldregion.s := 'pixeltoworldregion(csys, shape, region)';
help::pkg.general.images.objs.regionmanager.m.pseudotoworldregion := [=];
help::pkg.general.images.objs.regionmanager.m.pseudotoworldregion.d := 'Convert a Viewer pseudoregion to a world region';
help::pkg.general.images.objs.regionmanager.m.pseudotoworldregion.a.image := [=];
help::pkg.general.images.objs.regionmanager.m.pseudotoworldregion.a.image.d := 'Image of interest';
help::pkg.general.images.objs.regionmanager.m.pseudotoworldregion.a.image.def := '';
help::pkg.general.images.objs.regionmanager.m.pseudotoworldregion.a.image.a := 'Image tool';
help::pkg.general.images.objs.regionmanager.m.pseudotoworldregion.a.pseudoregionvalue := [=];
help::pkg.general.images.objs.regionmanager.m.pseudotoworldregion.a.pseudoregionvalue.d := 'Psuedoregion event value';
help::pkg.general.images.objs.regionmanager.m.pseudotoworldregion.a.pseudoregionvalue.def := '';
help::pkg.general.images.objs.regionmanager.m.pseudotoworldregion.a.pseudoregionvalue.a := 'Glish record';
help::pkg.general.images.objs.regionmanager.m.pseudotoworldregion.a.ddoptions := [=];
help::pkg.general.images.objs.regionmanager.m.pseudotoworldregion.a.ddoptions.d := 'Options from display data';
help::pkg.general.images.objs.regionmanager.m.pseudotoworldregion.a.ddoptions.def := '';
help::pkg.general.images.objs.regionmanager.m.pseudotoworldregion.a.ddoptions.a := 'Record';
help::pkg.general.images.objs.regionmanager.m.pseudotoworldregion.a.intersect := [=];
help::pkg.general.images.objs.regionmanager.m.pseudotoworldregion.a.intersect.d := 'Intersect with move plane ?';
help::pkg.general.images.objs.regionmanager.m.pseudotoworldregion.a.intersect.def := 'T';
help::pkg.general.images.objs.regionmanager.m.pseudotoworldregion.a.intersect.a := 'T or F';
help::pkg.general.images.objs.regionmanager.m.pseudotoworldregion.s := 'pseudotoworldregion(image, pseudoregionvalue, ddoptions, intersect)';
help::pkg.general.images.objs.regionmanager.m.quarter := [=];
help::pkg.general.images.objs.regionmanager.m.quarter.d := 'Create a quarter pixel region';
help::pkg.general.images.objs.regionmanager.m.quarter.a.comment := [=];
help::pkg.general.images.objs.regionmanager.m.quarter.a.comment.d := 'A comment stored with the region';
help::pkg.general.images.objs.regionmanager.m.quarter.a.comment.def := '';
help::pkg.general.images.objs.regionmanager.m.quarter.a.comment.a := 'String';
help::pkg.general.images.objs.regionmanager.m.quarter.s := 'quarter(comment)';
help::pkg.general.images.objs.regionmanager.m.setcoordinates := [=];
help::pkg.general.images.objs.regionmanager.m.setcoordinates.d := 'Set new default Coordinate System';
help::pkg.general.images.objs.regionmanager.m.setcoordinates.a.csys := [=];
help::pkg.general.images.objs.regionmanager.m.setcoordinates.a.csys.d := 'Default Coordinate System for use in world regions';
help::pkg.general.images.objs.regionmanager.m.setcoordinates.a.csys.def := '';
help::pkg.general.images.objs.regionmanager.m.setcoordinates.a.csys.a := 'Coordinate tool';
help::pkg.general.images.objs.regionmanager.m.setcoordinates.a.verbose := [=];
help::pkg.general.images.objs.regionmanager.m.setcoordinates.a.verbose.d := 'Issue message each time used';
help::pkg.general.images.objs.regionmanager.m.setcoordinates.a.verbose.def := 'T';
help::pkg.general.images.objs.regionmanager.m.setcoordinates.a.verbose.a := 'T or F';
help::pkg.general.images.objs.regionmanager.m.setcoordinates.s := 'setcoordinates(csys, verbose)';
help::pkg.general.images.objs.regionmanager.m.setselectcallback := [=];
help::pkg.general.images.objs.regionmanager.m.setselectcallback.d := 'Set the callback function when GUI region selection is made';
help::pkg.general.images.objs.regionmanager.m.setselectcallback.a.callbackFunction := [=];
help::pkg.general.images.objs.regionmanager.m.setselectcallback.a.callbackFunction.d := 'The function';
help::pkg.general.images.objs.regionmanager.m.setselectcallback.a.callbackFunction.def := '';
help::pkg.general.images.objs.regionmanager.m.setselectcallback.a.callbackFunction.a := 'A function';
help::pkg.general.images.objs.regionmanager.m.setselectcallback.s := 'setselectcallback(callbackFunction)';
help::pkg.general.images.objs.regionmanager.m.type := [=];
help::pkg.general.images.objs.regionmanager.m.type.d := 'Return the type of this tool';
help::pkg.general.images.objs.regionmanager.m.type.s := 'type()';
help::pkg.general.images.objs.regionmanager.m.union := [=];
help::pkg.general.images.objs.regionmanager.m.union.d := 'Create a union of world regions';
help::pkg.general.images.objs.regionmanager.m.union.a.dots := [=];
help::pkg.general.images.objs.regionmanager.m.union.a.dots.d := 'World regions and comment';
help::pkg.general.images.objs.regionmanager.m.union.a.dots.def := '';
help::pkg.general.images.objs.regionmanager.m.union.a.dots.a := 'Region tools or record of region tools, and String';
help::pkg.general.images.objs.regionmanager.m.union.s := 'union(...)';
help::pkg.general.images.objs.regionmanager.m.wbox := [=];
help::pkg.general.images.objs.regionmanager.m.wbox.d := 'Create a world box region';
help::pkg.general.images.objs.regionmanager.m.wbox.a.blc := [=];
help::pkg.general.images.objs.regionmanager.m.wbox.a.blc.d := 'blc of the box';
help::pkg.general.images.objs.regionmanager.m.wbox.a.blc.def := 'Unity';
help::pkg.general.images.objs.regionmanager.m.wbox.a.blc.a := 'Vector of quantities';
help::pkg.general.images.objs.regionmanager.m.wbox.a.trc := [=];
help::pkg.general.images.objs.regionmanager.m.wbox.a.trc.d := 'trc of the box';
help::pkg.general.images.objs.regionmanager.m.wbox.a.trc.def := 'Shape';
help::pkg.general.images.objs.regionmanager.m.wbox.a.trc.a := 'Vector of quantities';
help::pkg.general.images.objs.regionmanager.m.wbox.a.pixelaxes := [=];
help::pkg.general.images.objs.regionmanager.m.wbox.a.pixelaxes.d := 'Which pixel axes';
help::pkg.general.images.objs.regionmanager.m.wbox.a.pixelaxes.def := '[1,2,...]';
help::pkg.general.images.objs.regionmanager.m.wbox.a.pixelaxes.a := 'Vector of integers';
help::pkg.general.images.objs.regionmanager.m.wbox.a.csys := [=];
help::pkg.general.images.objs.regionmanager.m.wbox.a.csys.d := 'Coordinate System';
help::pkg.general.images.objs.regionmanager.m.wbox.a.csys.def := 'Private Coordinate System';
help::pkg.general.images.objs.regionmanager.m.wbox.a.csys.a := 'coordinates tool';
help::pkg.general.images.objs.regionmanager.m.wbox.a.absrel := [=];
help::pkg.general.images.objs.regionmanager.m.wbox.a.absrel.d := 'Absolute or relative coordinates';
help::pkg.general.images.objs.regionmanager.m.wbox.a.absrel.def := '\' abs\'  or last';
help::pkg.general.images.objs.regionmanager.m.wbox.a.absrel.a := 'Vector of             strings from \' abs\' , \' relref\'  and \' relcen\' ';
help::pkg.general.images.objs.regionmanager.m.wbox.a.comment := [=];
help::pkg.general.images.objs.regionmanager.m.wbox.a.comment.d := 'A comment stored with the region';
help::pkg.general.images.objs.regionmanager.m.wbox.a.comment.def := '';
help::pkg.general.images.objs.regionmanager.m.wbox.a.comment.a := 'String';
help::pkg.general.images.objs.regionmanager.m.wbox.s := 'wbox(blc, trc, pixelaxes, csys, absrel, comment)';
help::pkg.general.images.objs.regionmanager.m.wpolygon := [=];
help::pkg.general.images.objs.regionmanager.m.wpolygon.d := 'Create a world polygon region with quantities';
help::pkg.general.images.objs.regionmanager.m.wpolygon.a.x := [=];
help::pkg.general.images.objs.regionmanager.m.wpolygon.a.x.d := 'The x vector';
help::pkg.general.images.objs.regionmanager.m.wpolygon.a.x.def := '';
help::pkg.general.images.objs.regionmanager.m.wpolygon.a.x.a := 'Quantity vector';
help::pkg.general.images.objs.regionmanager.m.wpolygon.a.y := [=];
help::pkg.general.images.objs.regionmanager.m.wpolygon.a.y.d := 'The y vector';
help::pkg.general.images.objs.regionmanager.m.wpolygon.a.y.def := '';
help::pkg.general.images.objs.regionmanager.m.wpolygon.a.y.a := 'Quantity vector';
help::pkg.general.images.objs.regionmanager.m.wpolygon.a.pixelaxes := [=];
help::pkg.general.images.objs.regionmanager.m.wpolygon.a.pixelaxes.d := 'which pixel axes';
help::pkg.general.images.objs.regionmanager.m.wpolygon.a.pixelaxes.def := '[1,2]';
help::pkg.general.images.objs.regionmanager.m.wpolygon.a.pixelaxes.a := 'Vector of integers or strings';
help::pkg.general.images.objs.regionmanager.m.wpolygon.a.csys := [=];
help::pkg.general.images.objs.regionmanager.m.wpolygon.a.csys.d := 'Coordinate System';
help::pkg.general.images.objs.regionmanager.m.wpolygon.a.csys.def := 'Privaet Coordinate System';
help::pkg.general.images.objs.regionmanager.m.wpolygon.a.csys.a := 'coordinates tool';
help::pkg.general.images.objs.regionmanager.m.wpolygon.a.absrel := [=];
help::pkg.general.images.objs.regionmanager.m.wpolygon.a.absrel.d := 'Absolute or relative coordinates';
help::pkg.general.images.objs.regionmanager.m.wpolygon.a.absrel.def := '\' abs\' ';
help::pkg.general.images.objs.regionmanager.m.wpolygon.a.absrel.a := 'String from             \' abs\' , \' relref\'  and \' relcen\' ';
help::pkg.general.images.objs.regionmanager.m.wpolygon.a.comment := [=];
help::pkg.general.images.objs.regionmanager.m.wpolygon.a.comment.d := 'A comment stored with the region';
help::pkg.general.images.objs.regionmanager.m.wpolygon.a.comment.def := '';
help::pkg.general.images.objs.regionmanager.m.wpolygon.a.comment.a := 'String';
help::pkg.general.images.objs.regionmanager.m.wpolygon.s := 'wpolygon(x, y, pixelaxes, csys, absrel, comment)';
help::pkg.general.images.objs.regionmanager.m.wmask := [=];
help::pkg.general.images.objs.regionmanager.m.wmask.d := 'Create a world mask region';
help::pkg.general.images.objs.regionmanager.m.wmask.a.expr := [=];
help::pkg.general.images.objs.regionmanager.m.wmask.a.expr.d := 'Boolean expression';
help::pkg.general.images.objs.regionmanager.m.wmask.a.expr.def := '';
help::pkg.general.images.objs.regionmanager.m.wmask.a.expr.a := 'String';
help::pkg.general.images.objs.regionmanager.m.wmask.s := 'wmask(expr)';
help::pkg.general.images.objs.regionmanager.m.wrange := [=];
help::pkg.general.images.objs.regionmanager.m.wrange.d := 'Create a world region for a pixel range on one axis';
help::pkg.general.images.objs.regionmanager.m.wrange.a.range := [=];
help::pkg.general.images.objs.regionmanager.m.wrange.a.range.d := 'World range';
help::pkg.general.images.objs.regionmanager.m.wrange.a.range.def := '';
help::pkg.general.images.objs.regionmanager.m.wrange.a.range.a := 'Numeric or quantum vector';
help::pkg.general.images.objs.regionmanager.m.wrange.a.pixelaxis := [=];
help::pkg.general.images.objs.regionmanager.m.wrange.a.pixelaxis.d := 'The pixel axis of interest';
help::pkg.general.images.objs.regionmanager.m.wrange.a.pixelaxis.def := '';
help::pkg.general.images.objs.regionmanager.m.wrange.a.pixelaxis.a := 'Integer';
help::pkg.general.images.objs.regionmanager.m.wrange.a.csys := [=];
help::pkg.general.images.objs.regionmanager.m.wrange.a.csys.d := 'Coordinate System';
help::pkg.general.images.objs.regionmanager.m.wrange.a.csys.def := 'Private Coordinate System';
help::pkg.general.images.objs.regionmanager.m.wrange.a.csys.a := 'coordinates tool';
help::pkg.general.images.objs.regionmanager.m.wrange.a.absrel := [=];
help::pkg.general.images.objs.regionmanager.m.wrange.a.absrel.d := 'Absolute or relative coordinates';
help::pkg.general.images.objs.regionmanager.m.wrange.a.absrel.def := '\' abs\'  or last';
help::pkg.general.images.objs.regionmanager.m.wrange.a.absrel.a := 'Vector of             strings from \' abs\' , \' relref\'  and \' relcen\' ';
help::pkg.general.images.objs.regionmanager.m.wrange.a.comment := [=];
help::pkg.general.images.objs.regionmanager.m.wrange.a.comment.d := 'A comment stored with the region';
help::pkg.general.images.objs.regionmanager.m.wrange.a.comment.def := '';
help::pkg.general.images.objs.regionmanager.m.wrange.a.comment.a := 'String';
help::pkg.general.images.objs.regionmanager.m.wrange.s := 'wrange(range, pixelaxis, csys, absrel, comment)';
help::pkg.general.images.funs.is_region := [=];
help::pkg.general.images.funs.is_region.a := [=];
help::pkg.general.images.funs.is_region.d := 'Is this a valid region tool?';
help::pkg.general.images.funs.is_region.a.thing := [=];
help::pkg.general.images.funs.is_region.a.thing.d := 'The thing to test';
help::pkg.general.images.funs.is_region.a.thing.def := '';
help::pkg.general.images.funs.is_region.a.thing.a := 'Any';
help::pkg.general.images.funs.is_region.s := 'is_region(thing)';
help::pkg.general.images.objs.coordsys := [=];
help::pkg.general.images.objs.coordsys.m := [=];
help::pkg.general.images.objs.coordsys.c := [=];
help::pkg.general.images.objs.coordsys.d := 'Operations on CoordinateSystems';
help::pkg.general.images.objs.coordsys.c.coordsys := [=];
help::pkg.general.images.objs.coordsys.c.coordsys.d := 'Create a default coordsys tool';
help::pkg.general.images.objs.coordsys.c.coordsys.a.direction := [=];
help::pkg.general.images.objs.coordsys.c.coordsys.a.direction.d := 'Make a direction coordinate ?';
help::pkg.general.images.objs.coordsys.c.coordsys.a.direction.def := 'F';
help::pkg.general.images.objs.coordsys.c.coordsys.a.direction.a := 'Bool';
help::pkg.general.images.objs.coordsys.c.coordsys.a.spectral := [=];
help::pkg.general.images.objs.coordsys.c.coordsys.a.spectral.d := 'Make a spectral coordinate ?';
help::pkg.general.images.objs.coordsys.c.coordsys.a.spectral.def := 'F';
help::pkg.general.images.objs.coordsys.c.coordsys.a.spectral.a := 'Bool';
help::pkg.general.images.objs.coordsys.c.coordsys.a.stokes := [=];
help::pkg.general.images.objs.coordsys.c.coordsys.a.stokes.d := 'Make a Stokes coordinate with these Stokes';
help::pkg.general.images.objs.coordsys.c.coordsys.a.stokes.def := '""';
help::pkg.general.images.objs.coordsys.c.coordsys.a.stokes.a := 'String or vector of Strings';
help::pkg.general.images.objs.coordsys.c.coordsys.a.linear := [=];
help::pkg.general.images.objs.coordsys.c.coordsys.a.linear.d := 'Make a linear coordinate with this many axes';
help::pkg.general.images.objs.coordsys.c.coordsys.a.linear.def := '0';
help::pkg.general.images.objs.coordsys.c.coordsys.a.linear.a := 'Integer';
help::pkg.general.images.objs.coordsys.c.coordsys.a.tabular := [=];
help::pkg.general.images.objs.coordsys.c.coordsys.a.tabular.d := 'Make a tabular coordinate';
help::pkg.general.images.objs.coordsys.c.coordsys.a.tabular.def := 'F';
help::pkg.general.images.objs.coordsys.c.coordsys.a.tabular.a := 'Bool';
help::pkg.general.images.objs.coordsys.c.coordsys.s := 'coordsys(direction, spectral, stokes, linear, tabular)';
help::pkg.general.images.objs.coordsys.m.axesmap := [=];
help::pkg.general.images.objs.coordsys.m.axesmap.d := 'Find mapping between world and pixel axes';
help::pkg.general.images.objs.coordsys.m.axesmap.a.toworld := [=];
help::pkg.general.images.objs.coordsys.m.axesmap.a.toworld.d := 'Map from pixel to world ?';
help::pkg.general.images.objs.coordsys.m.axesmap.a.toworld.def := 'T';
help::pkg.general.images.objs.coordsys.m.axesmap.a.toworld.a := 'T or F';
help::pkg.general.images.objs.coordsys.m.axesmap.s := 'axesmap(toworld)';
help::pkg.general.images.objs.coordsys.m.axiscoordinatetypes := [=];
help::pkg.general.images.objs.coordsys.m.axiscoordinatetypes.d := 'Return types of coordinates for each axis';
help::pkg.general.images.objs.coordsys.m.axiscoordinatetypes.a.world := [=];
help::pkg.general.images.objs.coordsys.m.axiscoordinatetypes.a.world.d := 'World or pixel axes ?';
help::pkg.general.images.objs.coordsys.m.axiscoordinatetypes.a.world.def := 'T';
help::pkg.general.images.objs.coordsys.m.axiscoordinatetypes.a.world.a := 'T or F';
help::pkg.general.images.objs.coordsys.m.axiscoordinatetypes.s := 'axiscoordinatetypes(world)';
help::pkg.general.images.objs.coordsys.m.conversiontype := [=];
help::pkg.general.images.objs.coordsys.m.conversiontype.d := 'Get extra reference conversion layer';
help::pkg.general.images.objs.coordsys.m.conversiontype.a.type := [=];
help::pkg.general.images.objs.coordsys.m.conversiontype.a.type.d := 'Coordinate type';
help::pkg.general.images.objs.coordsys.m.conversiontype.a.type.def := '';
help::pkg.general.images.objs.coordsys.m.conversiontype.a.type.a := 'String from \' direction\' , \' spectral\' ';
help::pkg.general.images.objs.coordsys.m.conversiontype.s := 'conversiontype(type)';
help::pkg.general.images.objs.coordsys.m.convert := [=];
help::pkg.general.images.objs.coordsys.m.convert.d := 'Convert a numeric mixed coordinate ';
help::pkg.general.images.objs.coordsys.m.convert.a.coordin := [=];
help::pkg.general.images.objs.coordsys.m.convert.a.coordin.d := 'Input coordinate';
help::pkg.general.images.objs.coordsys.m.convert.a.coordin.def := '';
help::pkg.general.images.objs.coordsys.m.convert.a.coordin.a := 'Numeric vector';
help::pkg.general.images.objs.coordsys.m.convert.a.absin := [=];
help::pkg.general.images.objs.coordsys.m.convert.a.absin.d := 'Are input coordinate elements absolute ?';
help::pkg.general.images.objs.coordsys.m.convert.a.absin.def := 'All T';
help::pkg.general.images.objs.coordsys.m.convert.a.absin.a := 'Boolean vector';
help::pkg.general.images.objs.coordsys.m.convert.a.dopplerin := [=];
help::pkg.general.images.objs.coordsys.m.convert.a.dopplerin.d := 'Input doppler type for velocities';
help::pkg.general.images.objs.coordsys.m.convert.a.dopplerin.def := '\' radio\' ';
help::pkg.general.images.objs.coordsys.m.convert.a.dopplerin.a := 'String';
help::pkg.general.images.objs.coordsys.m.convert.a.unitsin := [=];
help::pkg.general.images.objs.coordsys.m.convert.a.unitsin.d := 'Input units';
help::pkg.general.images.objs.coordsys.m.convert.a.unitsin.def := 'Native';
help::pkg.general.images.objs.coordsys.m.convert.a.unitsin.a := 'String vector';
help::pkg.general.images.objs.coordsys.m.convert.a.absout := [=];
help::pkg.general.images.objs.coordsys.m.convert.a.absout.d := 'Are output coordinate elements absolute ?';
help::pkg.general.images.objs.coordsys.m.convert.a.absout.def := 'All T';
help::pkg.general.images.objs.coordsys.m.convert.a.absout.a := 'Boolean vector';
help::pkg.general.images.objs.coordsys.m.convert.a.dopplerout := [=];
help::pkg.general.images.objs.coordsys.m.convert.a.dopplerout.d := 'Output doppler type for velocities';
help::pkg.general.images.objs.coordsys.m.convert.a.dopplerout.def := '\' radio\' ';
help::pkg.general.images.objs.coordsys.m.convert.a.dopplerout.a := 'String';
help::pkg.general.images.objs.coordsys.m.convert.a.unitsout := [=];
help::pkg.general.images.objs.coordsys.m.convert.a.unitsout.d := 'Output units';
help::pkg.general.images.objs.coordsys.m.convert.a.unitsout.def := 'Native';
help::pkg.general.images.objs.coordsys.m.convert.a.unitsout.a := 'String vector';
help::pkg.general.images.objs.coordsys.m.convert.a.shape := [=];
help::pkg.general.images.objs.coordsys.m.convert.a.shape.d := 'Image shape';
help::pkg.general.images.objs.coordsys.m.convert.a.shape.def := 'Unused';
help::pkg.general.images.objs.coordsys.m.convert.a.shape.a := 'Integer vector';
help::pkg.general.images.objs.coordsys.m.convert.s := 'convert(coordin, absin, dopplerin, unitsin, absout, dopplerout, unitsout, shape)';
help::pkg.general.images.objs.coordsys.m.convertmany := [=];
help::pkg.general.images.objs.coordsys.m.convertmany.d := 'Convert many numeric mixed coordinates';
help::pkg.general.images.objs.coordsys.m.convertmany.a.coordin := [=];
help::pkg.general.images.objs.coordsys.m.convertmany.a.coordin.d := 'Input coordinate';
help::pkg.general.images.objs.coordsys.m.convertmany.a.coordin.def := '';
help::pkg.general.images.objs.coordsys.m.convertmany.a.coordin.a := 'Numeric matrix';
help::pkg.general.images.objs.coordsys.m.convertmany.a.absin := [=];
help::pkg.general.images.objs.coordsys.m.convertmany.a.absin.d := 'Are input coordinate elements absolute ?';
help::pkg.general.images.objs.coordsys.m.convertmany.a.absin.def := 'All T';
help::pkg.general.images.objs.coordsys.m.convertmany.a.absin.a := 'Boolean vector';
help::pkg.general.images.objs.coordsys.m.convertmany.a.dopplerin := [=];
help::pkg.general.images.objs.coordsys.m.convertmany.a.dopplerin.d := 'Input doppler type for velocities';
help::pkg.general.images.objs.coordsys.m.convertmany.a.dopplerin.def := '\' radio\' ';
help::pkg.general.images.objs.coordsys.m.convertmany.a.dopplerin.a := 'String';
help::pkg.general.images.objs.coordsys.m.convertmany.a.unitsin := [=];
help::pkg.general.images.objs.coordsys.m.convertmany.a.unitsin.d := 'Input units';
help::pkg.general.images.objs.coordsys.m.convertmany.a.unitsin.def := 'Native';
help::pkg.general.images.objs.coordsys.m.convertmany.a.unitsin.a := 'String vector';
help::pkg.general.images.objs.coordsys.m.convertmany.a.absout := [=];
help::pkg.general.images.objs.coordsys.m.convertmany.a.absout.d := 'Are output coordinate elements absolute ?';
help::pkg.general.images.objs.coordsys.m.convertmany.a.absout.def := 'All T';
help::pkg.general.images.objs.coordsys.m.convertmany.a.absout.a := 'Boolean vector';
help::pkg.general.images.objs.coordsys.m.convertmany.a.dopplerout := [=];
help::pkg.general.images.objs.coordsys.m.convertmany.a.dopplerout.d := 'Output doppler type for velocities';
help::pkg.general.images.objs.coordsys.m.convertmany.a.dopplerout.def := '\' radio\' ';
help::pkg.general.images.objs.coordsys.m.convertmany.a.dopplerout.a := 'String';
help::pkg.general.images.objs.coordsys.m.convertmany.a.unitsout := [=];
help::pkg.general.images.objs.coordsys.m.convertmany.a.unitsout.d := 'Output units';
help::pkg.general.images.objs.coordsys.m.convertmany.a.unitsout.def := 'Native';
help::pkg.general.images.objs.coordsys.m.convertmany.a.unitsout.a := 'String vector';
help::pkg.general.images.objs.coordsys.m.convertmany.a.shape := [=];
help::pkg.general.images.objs.coordsys.m.convertmany.a.shape.d := 'Image shape';
help::pkg.general.images.objs.coordsys.m.convertmany.a.shape.def := 'Unused';
help::pkg.general.images.objs.coordsys.m.convertmany.a.shape.a := 'Integer vector';
help::pkg.general.images.objs.coordsys.m.convertmany.s := 'convertmany(coordin, absin, dopplerin, unitsin, absout, dopplerout, unitsout, shape)';
help::pkg.general.images.objs.coordsys.m.coordinatetype := [=];
help::pkg.general.images.objs.coordsys.m.coordinatetype.d := 'Return type of specified coordinate';
help::pkg.general.images.objs.coordsys.m.coordinatetype.a.which := [=];
help::pkg.general.images.objs.coordsys.m.coordinatetype.a.which.d := 'Which coordinate ?';
help::pkg.general.images.objs.coordsys.m.coordinatetype.a.which.def := 'All';
help::pkg.general.images.objs.coordsys.m.coordinatetype.a.which.a := '1-rel integer or unset';
help::pkg.general.images.objs.coordsys.m.coordinatetype.s := 'coordinatetype(which)';
help::pkg.general.images.objs.coordsys.m.copy := [=];
help::pkg.general.images.objs.coordsys.m.copy.d := 'Copy this Coordsys tool';
help::pkg.general.images.objs.coordsys.m.copy.s := 'copy()';
help::pkg.general.images.objs.coordsys.m.done := [=];
help::pkg.general.images.objs.coordsys.m.done.d := 'Destroy this Coordsys tool';
help::pkg.general.images.objs.coordsys.m.done.s := 'done()';
help::pkg.general.images.objs.coordsys.m.epoch := [=];
help::pkg.general.images.objs.coordsys.m.epoch.d := 'Return the epoch';
help::pkg.general.images.objs.coordsys.m.epoch.s := 'epoch()';
help::pkg.general.images.objs.coordsys.m.findaxis := [=];
help::pkg.general.images.objs.coordsys.m.findaxis.d := 'Find specified axis in coordinate system';
help::pkg.general.images.objs.coordsys.m.findaxis.a.coordinate := [=];
help::pkg.general.images.objs.coordsys.m.findaxis.a.coordinate.d := 'Coordinate number';
help::pkg.general.images.objs.coordsys.m.findaxis.a.coordinate.def := '';
help::pkg.general.images.objs.coordsys.m.findaxis.a.coordinate.a := 'Integer';
help::pkg.general.images.objs.coordsys.m.findaxis.a.axisincoordinate := [=];
help::pkg.general.images.objs.coordsys.m.findaxis.a.axisincoordinate.d := 'Axis in the coordinate';
help::pkg.general.images.objs.coordsys.m.findaxis.a.axisincoordinate.def := '';
help::pkg.general.images.objs.coordsys.m.findaxis.a.axisincoordinate.a := 'Integer';
help::pkg.general.images.objs.coordsys.m.findaxis.a.world := [=];
help::pkg.general.images.objs.coordsys.m.findaxis.a.world.d := 'is axis a world or pixel axis ?';
help::pkg.general.images.objs.coordsys.m.findaxis.a.world.def := 'T';
help::pkg.general.images.objs.coordsys.m.findaxis.a.world.a := 'Bool';
help::pkg.general.images.objs.coordsys.m.findaxis.a.axis := [=];
help::pkg.general.images.objs.coordsys.m.findaxis.a.axis.d := 'Axis in coordinate system';
help::pkg.general.images.objs.coordsys.m.findaxis.a.axis.def := '1';
help::pkg.general.images.objs.coordsys.m.findaxis.a.axis.a := 'Integer';
help::pkg.general.images.objs.coordsys.m.findaxis.s := 'findaxis(coordinate, axisincoordinate, world, axis)';
help::pkg.general.images.objs.coordsys.m.findcoordinate := [=];
help::pkg.general.images.objs.coordsys.m.findcoordinate.d := 'Find axes of specified coordinate';
help::pkg.general.images.objs.coordsys.m.findcoordinate.a.pixel := [=];
help::pkg.general.images.objs.coordsys.m.findcoordinate.a.pixel.d := 'Pixel axes';
help::pkg.general.images.objs.coordsys.m.findcoordinate.a.pixel.def := '';
help::pkg.general.images.objs.coordsys.m.findcoordinate.a.pixel.a := 'Vector of integers';
help::pkg.general.images.objs.coordsys.m.findcoordinate.a.world := [=];
help::pkg.general.images.objs.coordsys.m.findcoordinate.a.world.d := 'World axes';
help::pkg.general.images.objs.coordsys.m.findcoordinate.a.world.def := '';
help::pkg.general.images.objs.coordsys.m.findcoordinate.a.world.a := 'Vector of integers';
help::pkg.general.images.objs.coordsys.m.findcoordinate.a.type := [=];
help::pkg.general.images.objs.coordsys.m.findcoordinate.a.type.d := 'Type of coordinate to find';
help::pkg.general.images.objs.coordsys.m.findcoordinate.a.type.def := '"direction"';
help::pkg.general.images.objs.coordsys.m.findcoordinate.a.type.a := 'String from "direction", "stokes", "spectral", "linear", "tabular"';
help::pkg.general.images.objs.coordsys.m.findcoordinate.a.which := [=];
help::pkg.general.images.objs.coordsys.m.findcoordinate.a.which.d := 'Which coordinate if more than one';
help::pkg.general.images.objs.coordsys.m.findcoordinate.a.which.def := 'First (1)';
help::pkg.general.images.objs.coordsys.m.findcoordinate.a.which.a := 'Integer';
help::pkg.general.images.objs.coordsys.m.findcoordinate.s := 'findcoordinate(pixel, world, type, which)';
help::pkg.general.images.objs.coordsys.m.frequencytofrequency := [=];
help::pkg.general.images.objs.coordsys.m.frequencytofrequency.d := 'Convert frequency to frequency with an offset';
help::pkg.general.images.objs.coordsys.m.frequencytofrequency.a.value := [=];
help::pkg.general.images.objs.coordsys.m.frequencytofrequency.a.value.d := 'Frequency to convert';
help::pkg.general.images.objs.coordsys.m.frequencytofrequency.a.value.def := '';
help::pkg.general.images.objs.coordsys.m.frequencytofrequency.a.value.a := 'Numeric or vector of numeric';
help::pkg.general.images.objs.coordsys.m.frequencytofrequency.a.frequnit := [=];
help::pkg.general.images.objs.coordsys.m.frequencytofrequency.a.frequnit.d := 'Unit of input frequencies';
help::pkg.general.images.objs.coordsys.m.frequencytofrequency.a.frequnit.def := 'Intrinsic units';
help::pkg.general.images.objs.coordsys.m.frequencytofrequency.a.frequnit.a := 'String';
help::pkg.general.images.objs.coordsys.m.frequencytofrequency.a.velocity := [=];
help::pkg.general.images.objs.coordsys.m.frequencytofrequency.a.velocity.d := 'Velocity offset';
help::pkg.general.images.objs.coordsys.m.frequencytofrequency.a.velocity.def := 'None';
help::pkg.general.images.objs.coordsys.m.frequencytofrequency.a.velocity.a := 'Quantity';
help::pkg.general.images.objs.coordsys.m.frequencytofrequency.a.doppler := [=];
help::pkg.general.images.objs.coordsys.m.frequencytofrequency.a.doppler.d := 'Velocity doppler definition';
help::pkg.general.images.objs.coordsys.m.frequencytofrequency.a.doppler.def := '\' radio\' ';
help::pkg.general.images.objs.coordsys.m.frequencytofrequency.a.doppler.a := 'String';
help::pkg.general.images.objs.coordsys.m.frequencytofrequency.s := 'frequencytofrequency(value, frequnit, velocity, doppler)';
help::pkg.general.images.objs.coordsys.m.frequencytovelocity := [=];
help::pkg.general.images.objs.coordsys.m.frequencytovelocity.d := 'Convert frequency to velocity';
help::pkg.general.images.objs.coordsys.m.frequencytovelocity.a.value := [=];
help::pkg.general.images.objs.coordsys.m.frequencytovelocity.a.value.d := 'Frequency to convert';
help::pkg.general.images.objs.coordsys.m.frequencytovelocity.a.value.def := '';
help::pkg.general.images.objs.coordsys.m.frequencytovelocity.a.value.a := 'Numeric or vector of numeric';
help::pkg.general.images.objs.coordsys.m.frequencytovelocity.a.frequnit := [=];
help::pkg.general.images.objs.coordsys.m.frequencytovelocity.a.frequnit.d := 'Unit of input frequencies';
help::pkg.general.images.objs.coordsys.m.frequencytovelocity.a.frequnit.def := 'Intrinsic units';
help::pkg.general.images.objs.coordsys.m.frequencytovelocity.a.frequnit.a := 'String';
help::pkg.general.images.objs.coordsys.m.frequencytovelocity.a.doppler := [=];
help::pkg.general.images.objs.coordsys.m.frequencytovelocity.a.doppler.d := 'Velocity doppler definition';
help::pkg.general.images.objs.coordsys.m.frequencytovelocity.a.doppler.def := '\' radio\' ';
help::pkg.general.images.objs.coordsys.m.frequencytovelocity.a.doppler.a := 'String';
help::pkg.general.images.objs.coordsys.m.frequencytovelocity.a.velunit := [=];
help::pkg.general.images.objs.coordsys.m.frequencytovelocity.a.velunit.d := 'Unit of output velocities';
help::pkg.general.images.objs.coordsys.m.frequencytovelocity.a.velunit.def := '\' km/s\' ';
help::pkg.general.images.objs.coordsys.m.frequencytovelocity.a.velunit.a := 'String';
help::pkg.general.images.objs.coordsys.m.frequencytovelocity.s := 'frequencytovelocity(value, frequnit, doppler, velunit)';
help::pkg.general.images.objs.coordsys.m.fromrecord := [=];
help::pkg.general.images.objs.coordsys.m.fromrecord.d := 'Fill Coordinate System from a record';
help::pkg.general.images.objs.coordsys.m.fromrecord.a.record := [=];
help::pkg.general.images.objs.coordsys.m.fromrecord.a.record.d := 'Record containing Coordinate System';
help::pkg.general.images.objs.coordsys.m.fromrecord.a.record.def := '';
help::pkg.general.images.objs.coordsys.m.fromrecord.a.record.a := 'Glish record';
help::pkg.general.images.objs.coordsys.m.fromrecord.s := 'fromrecord(record)';
help::pkg.general.images.objs.coordsys.m.id := [=];
help::pkg.general.images.objs.coordsys.m.id.d := 'Return the fundamental identifier of this tool';
help::pkg.general.images.objs.coordsys.m.id.s := 'id()';
help::pkg.general.images.objs.coordsys.m.increment := [=];
help::pkg.general.images.objs.coordsys.m.increment.d := 'Recover the increments';
help::pkg.general.images.objs.coordsys.m.increment.a.format := [=];
help::pkg.general.images.objs.coordsys.m.increment.a.format.d := 'Format string';
help::pkg.general.images.objs.coordsys.m.increment.a.format.def := '\' n\' ';
help::pkg.general.images.objs.coordsys.m.increment.a.format.a := 'String from combination of "n", "q", "s", "m"';
help::pkg.general.images.objs.coordsys.m.increment.a.type := [=];
help::pkg.general.images.objs.coordsys.m.increment.a.type.d := 'Coordinate type';
help::pkg.general.images.objs.coordsys.m.increment.a.type.def := 'All';
help::pkg.general.images.objs.coordsys.m.increment.a.type.a := 'String from "direction", "stokes", "spectral", "linear", "tabular" or unset';
help::pkg.general.images.objs.coordsys.m.increment.s := 'increment(format, type)';
help::pkg.general.images.objs.coordsys.m.lineartransform := [=];
help::pkg.general.images.objs.coordsys.m.lineartransform.d := 'Recover the linear transform matrix';
help::pkg.general.images.objs.coordsys.m.lineartransform.a.type := [=];
help::pkg.general.images.objs.coordsys.m.lineartransform.a.type.d := 'Coordinate type';
help::pkg.general.images.objs.coordsys.m.lineartransform.a.type.def := '';
help::pkg.general.images.objs.coordsys.m.lineartransform.a.type.a := 'String from "direction", "stokes", "spectral", "linear", "tabular"';
help::pkg.general.images.objs.coordsys.m.lineartransform.s := 'lineartransform(type)';
help::pkg.general.images.objs.coordsys.m.names := [=];
help::pkg.general.images.objs.coordsys.m.names.d := 'Recover the names for each axis';
help::pkg.general.images.objs.coordsys.m.names.a.type := [=];
help::pkg.general.images.objs.coordsys.m.names.a.type.d := 'Coordinate type';
help::pkg.general.images.objs.coordsys.m.names.a.type.def := 'All';
help::pkg.general.images.objs.coordsys.m.names.a.type.a := 'String from "direction", "stokes", "spectral", "linear", "tabular" or unset';
help::pkg.general.images.objs.coordsys.m.names.s := 'names(type)';
help::pkg.general.images.objs.coordsys.m.naxes := [=];
help::pkg.general.images.objs.coordsys.m.naxes.d := 'Recover the number of axes';
help::pkg.general.images.objs.coordsys.m.naxes.a.world := [=];
help::pkg.general.images.objs.coordsys.m.naxes.a.world.d := 'Find number of world or pixel axes ?';
help::pkg.general.images.objs.coordsys.m.naxes.a.world.def := 'T';
help::pkg.general.images.objs.coordsys.m.naxes.a.world.a := 'T or F';
help::pkg.general.images.objs.coordsys.m.naxes.s := 'naxes(world)';
help::pkg.general.images.objs.coordsys.m.ncoordinates := [=];
help::pkg.general.images.objs.coordsys.m.ncoordinates.d := 'Recover the number of coordinates in the Coordinate System';
help::pkg.general.images.objs.coordsys.m.ncoordinates.s := 'ncoordinates()';
help::pkg.general.images.objs.coordsys.m.observer := [=];
help::pkg.general.images.objs.coordsys.m.observer.d := 'Return the name of the observer';
help::pkg.general.images.objs.coordsys.m.observer.s := 'observer()';
help::pkg.general.images.objs.coordsys.m.projection := [=];
help::pkg.general.images.objs.coordsys.m.projection.d := 'Recover the direction coordinate projection';
help::pkg.general.images.objs.coordsys.m.projection.a.type := [=];
help::pkg.general.images.objs.coordsys.m.projection.a.type.d := 'Type of projection';
help::pkg.general.images.objs.coordsys.m.projection.a.type.def := 'Current';
help::pkg.general.images.objs.coordsys.m.projection.a.type.a := 'String';
help::pkg.general.images.objs.coordsys.m.projection.s := 'projection(type)';
help::pkg.general.images.objs.coordsys.m.referencecode := [=];
help::pkg.general.images.objs.coordsys.m.referencecode.d := 'Return specified reference code';
help::pkg.general.images.objs.coordsys.m.referencecode.a.type := [=];
help::pkg.general.images.objs.coordsys.m.referencecode.a.type.d := 'Which coordinate type ?';
help::pkg.general.images.objs.coordsys.m.referencecode.a.type.def := 'All';
help::pkg.general.images.objs.coordsys.m.referencecode.a.type.a := 'String from "direction", "stokes", "spectral", "linear", "tabular" or unset';
help::pkg.general.images.objs.coordsys.m.referencecode.a.list := [=];
help::pkg.general.images.objs.coordsys.m.referencecode.a.list.d := 'List all possibilities ?';
help::pkg.general.images.objs.coordsys.m.referencecode.a.list.def := 'F';
help::pkg.general.images.objs.coordsys.m.referencecode.a.list.a := 'Bool';
help::pkg.general.images.objs.coordsys.m.referencecode.s := 'referencecode(type, list)';
help::pkg.general.images.objs.coordsys.m.referencepixel := [=];
help::pkg.general.images.objs.coordsys.m.referencepixel.d := 'Recover the reference pixel';
help::pkg.general.images.objs.coordsys.m.referencepixel.a.type := [=];
help::pkg.general.images.objs.coordsys.m.referencepixel.a.type.d := 'Coordinate type';
help::pkg.general.images.objs.coordsys.m.referencepixel.a.type.def := 'All';
help::pkg.general.images.objs.coordsys.m.referencepixel.a.type.a := 'String from "direction", "stokes", "spectral", "linear", "tabular" or unset';
help::pkg.general.images.objs.coordsys.m.referencepixel.s := 'referencepixel(type)';
help::pkg.general.images.objs.coordsys.m.referencevalue := [=];
help::pkg.general.images.objs.coordsys.m.referencevalue.d := 'Recover the reference value';
help::pkg.general.images.objs.coordsys.m.referencevalue.a.format := [=];
help::pkg.general.images.objs.coordsys.m.referencevalue.a.format.d := 'Format string';
help::pkg.general.images.objs.coordsys.m.referencevalue.a.format.def := '\' n\' ';
help::pkg.general.images.objs.coordsys.m.referencevalue.a.format.a := 'String from combination of "n", "q", "s", "m"';
help::pkg.general.images.objs.coordsys.m.referencevalue.a.type := [=];
help::pkg.general.images.objs.coordsys.m.referencevalue.a.type.d := 'Coordinate type';
help::pkg.general.images.objs.coordsys.m.referencevalue.a.type.def := 'All';
help::pkg.general.images.objs.coordsys.m.referencevalue.a.type.a := 'String from "direction", "stokes", "spectral", "linear", "tabular" or unset';
help::pkg.general.images.objs.coordsys.m.referencevalue.s := 'referencevalue(format, type)';
help::pkg.general.images.objs.coordsys.m.reorder := [=];
help::pkg.general.images.objs.coordsys.m.reorder.d := 'Reorder the coordinates';
help::pkg.general.images.objs.coordsys.m.reorder.a.order := [=];
help::pkg.general.images.objs.coordsys.m.reorder.a.order.d := 'New coordinate order';
help::pkg.general.images.objs.coordsys.m.reorder.a.order.def := '';
help::pkg.general.images.objs.coordsys.m.reorder.a.order.a := 'Vector of integers';
help::pkg.general.images.objs.coordsys.m.reorder.s := 'reorder(order)';
help::pkg.general.images.objs.coordsys.m.replace := [=];
help::pkg.general.images.objs.coordsys.m.replace.d := 'Replace a coordinate';
help::pkg.general.images.objs.coordsys.m.replace.a.csys := [=];
help::pkg.general.images.objs.coordsys.m.replace.a.csys.d := 'Coordinate System to replace from';
help::pkg.general.images.objs.coordsys.m.replace.a.csys.def := '';
help::pkg.general.images.objs.coordsys.m.replace.a.csys.a := 'Coordsys tool';
help::pkg.general.images.objs.coordsys.m.replace.a.whichin := [=];
help::pkg.general.images.objs.coordsys.m.replace.a.whichin.d := 'Index of input coordinate';
help::pkg.general.images.objs.coordsys.m.replace.a.whichin.def := '';
help::pkg.general.images.objs.coordsys.m.replace.a.whichin.a := 'Integer';
help::pkg.general.images.objs.coordsys.m.replace.a.whichout := [=];
help::pkg.general.images.objs.coordsys.m.replace.a.whichout.d := 'Index of output coordinate';
help::pkg.general.images.objs.coordsys.m.replace.a.whichout.def := '';
help::pkg.general.images.objs.coordsys.m.replace.a.whichout.a := 'Integer';
help::pkg.general.images.objs.coordsys.m.replace.s := 'replace(csys, whichin, whichout)';
help::pkg.general.images.objs.coordsys.m.restfrequency := [=];
help::pkg.general.images.objs.coordsys.m.restfrequency.d := 'Recover the rest frequency';
help::pkg.general.images.objs.coordsys.m.restfrequency.s := 'restfrequency()';
help::pkg.general.images.objs.coordsys.m.setconversiontype := [=];
help::pkg.general.images.objs.coordsys.m.setconversiontype.d := 'Set extra reference conversion layer';
help::pkg.general.images.objs.coordsys.m.setconversiontype.a.direction := [=];
help::pkg.general.images.objs.coordsys.m.setconversiontype.a.direction.d := 'Reference code';
help::pkg.general.images.objs.coordsys.m.setconversiontype.a.direction.def := 'None';
help::pkg.general.images.objs.coordsys.m.setconversiontype.a.direction.a := 'String or unset';
help::pkg.general.images.objs.coordsys.m.setconversiontype.a.spectral := [=];
help::pkg.general.images.objs.coordsys.m.setconversiontype.a.spectral.d := 'Reference code';
help::pkg.general.images.objs.coordsys.m.setconversiontype.a.spectral.def := 'None';
help::pkg.general.images.objs.coordsys.m.setconversiontype.a.spectral.a := 'String or unset';
help::pkg.general.images.objs.coordsys.m.setconversiontype.s := 'setconversiontype(direction, spectral)';
help::pkg.general.images.objs.coordsys.m.setdirection := [=];
help::pkg.general.images.objs.coordsys.m.setdirection.d := 'Set direction coordinate values';
help::pkg.general.images.objs.coordsys.m.setdirection.a.refcode := [=];
help::pkg.general.images.objs.coordsys.m.setdirection.a.refcode.d := 'Reference code';
help::pkg.general.images.objs.coordsys.m.setdirection.a.refcode.def := 'No change';
help::pkg.general.images.objs.coordsys.m.setdirection.a.refcode.a := 'String';
help::pkg.general.images.objs.coordsys.m.setdirection.a.proj := [=];
help::pkg.general.images.objs.coordsys.m.setdirection.a.proj.d := 'Projection type';
help::pkg.general.images.objs.coordsys.m.setdirection.a.proj.def := 'No change';
help::pkg.general.images.objs.coordsys.m.setdirection.a.proj.a := 'String';
help::pkg.general.images.objs.coordsys.m.setdirection.a.projpar := [=];
help::pkg.general.images.objs.coordsys.m.setdirection.a.projpar.d := 'Projection parameters';
help::pkg.general.images.objs.coordsys.m.setdirection.a.projpar.def := 'No change';
help::pkg.general.images.objs.coordsys.m.setdirection.a.projpar.a := 'Numeric vector';
help::pkg.general.images.objs.coordsys.m.setdirection.a.refpix := [=];
help::pkg.general.images.objs.coordsys.m.setdirection.a.refpix.d := 'Reference pixel';
help::pkg.general.images.objs.coordsys.m.setdirection.a.refpix.def := 'No change';
help::pkg.general.images.objs.coordsys.m.setdirection.a.refpix.a := 'Numeric vector';
help::pkg.general.images.objs.coordsys.m.setdirection.a.refval := [=];
help::pkg.general.images.objs.coordsys.m.setdirection.a.refval.d := 'Reference value';
help::pkg.general.images.objs.coordsys.m.setdirection.a.refval.def := 'No change';
help::pkg.general.images.objs.coordsys.m.setdirection.a.refval.a := 'Vector of doubles, vector of quantities, quantity of vector of doubles, vector of string, record';
help::pkg.general.images.objs.coordsys.m.setdirection.a.incr := [=];
help::pkg.general.images.objs.coordsys.m.setdirection.a.incr.d := 'Increment';
help::pkg.general.images.objs.coordsys.m.setdirection.a.incr.def := 'No change';
help::pkg.general.images.objs.coordsys.m.setdirection.a.incr.a := 'Vector of doubles, vector of quantities, quantity of vector of doubles, vector of string, record';
help::pkg.general.images.objs.coordsys.m.setdirection.a.xform := [=];
help::pkg.general.images.objs.coordsys.m.setdirection.a.xform.d := 'Linear transform';
help::pkg.general.images.objs.coordsys.m.setdirection.a.xform.def := 'No change';
help::pkg.general.images.objs.coordsys.m.setdirection.a.xform.a := '2-D numeric array';
help::pkg.general.images.objs.coordsys.m.setdirection.a.poles := [=];
help::pkg.general.images.objs.coordsys.m.setdirection.a.poles.d := 'Native poles';
help::pkg.general.images.objs.coordsys.m.setdirection.a.poles.def := 'No change';
help::pkg.general.images.objs.coordsys.m.setdirection.a.poles.a := 'Vector of doubles, vector of quantities, quantity of vector of doubles, vector of string, record';
help::pkg.general.images.objs.coordsys.m.setdirection.s := 'setdirection(refcode, proj, projpar, refpix, refval, incr, xform, poles)';
help::pkg.general.images.objs.coordsys.m.setepoch := [=];
help::pkg.general.images.objs.coordsys.m.setepoch.d := 'Set a new epoch';
help::pkg.general.images.objs.coordsys.m.setepoch.a.value := [=];
help::pkg.general.images.objs.coordsys.m.setepoch.a.value.d := 'New epoch';
help::pkg.general.images.objs.coordsys.m.setepoch.a.value.def := '';
help::pkg.general.images.objs.coordsys.m.setepoch.a.value.a := 'Epoch measure';
help::pkg.general.images.objs.coordsys.m.setepoch.s := 'setepoch(value)';
help::pkg.general.images.objs.coordsys.m.setincrement := [=];
help::pkg.general.images.objs.coordsys.m.setincrement.d := 'Set the increment';
help::pkg.general.images.objs.coordsys.m.setincrement.a.value := [=];
help::pkg.general.images.objs.coordsys.m.setincrement.a.value.d := 'Increments';
help::pkg.general.images.objs.coordsys.m.setincrement.a.value.def := '';
help::pkg.general.images.objs.coordsys.m.setincrement.a.value.a := 'Vector of doubles, vector of quantities, quantity of vector of doubles, vector of string, record';
help::pkg.general.images.objs.coordsys.m.setincrement.a.type := [=];
help::pkg.general.images.objs.coordsys.m.setincrement.a.type.d := 'Which coordinate type ?';
help::pkg.general.images.objs.coordsys.m.setincrement.a.type.def := 'All';
help::pkg.general.images.objs.coordsys.m.setincrement.a.type.a := 'String from "direction", "stokes", "spectral", "linear", "tabular" or unset';
help::pkg.general.images.objs.coordsys.m.setincrement.s := 'setincrement(value, type)';
help::pkg.general.images.objs.coordsys.m.setlineartransform := [=];
help::pkg.general.images.objs.coordsys.m.setlineartransform.d := 'Set the linear transform';
help::pkg.general.images.objs.coordsys.m.setlineartransform.a.type := [=];
help::pkg.general.images.objs.coordsys.m.setlineartransform.a.type.d := 'Which coordinate type ?';
help::pkg.general.images.objs.coordsys.m.setlineartransform.a.type.def := 'All';
help::pkg.general.images.objs.coordsys.m.setlineartransform.a.type.a := 'String from "direction", "stokes", "spectral", "linear", "tabular"';
help::pkg.general.images.objs.coordsys.m.setlineartransform.a.value := [=];
help::pkg.general.images.objs.coordsys.m.setlineartransform.a.value.d := 'Linear transform';
help::pkg.general.images.objs.coordsys.m.setlineartransform.a.value.def := '';
help::pkg.general.images.objs.coordsys.m.setlineartransform.a.value.a := 'Array of double';
help::pkg.general.images.objs.coordsys.m.setlineartransform.s := 'setlineartransform(type, value)';
help::pkg.general.images.objs.coordsys.m.setnames := [=];
help::pkg.general.images.objs.coordsys.m.setnames.d := 'Set the axis names';
help::pkg.general.images.objs.coordsys.m.setnames.a.value := [=];
help::pkg.general.images.objs.coordsys.m.setnames.a.value.d := 'Names';
help::pkg.general.images.objs.coordsys.m.setnames.a.value.def := '';
help::pkg.general.images.objs.coordsys.m.setnames.a.value.a := 'Vector of strings';
help::pkg.general.images.objs.coordsys.m.setnames.a.type := [=];
help::pkg.general.images.objs.coordsys.m.setnames.a.type.d := 'Which coordinate type ?';
help::pkg.general.images.objs.coordsys.m.setnames.a.type.def := 'All';
help::pkg.general.images.objs.coordsys.m.setnames.a.type.a := 'String from "direction", "stokes", "spectral", "linear", "tabular" or unset';
help::pkg.general.images.objs.coordsys.m.setnames.s := 'setnames(value, type)';
help::pkg.general.images.objs.coordsys.m.setobserver := [=];
help::pkg.general.images.objs.coordsys.m.setobserver.d := 'Set a new observer';
help::pkg.general.images.objs.coordsys.m.setobserver.a.value := [=];
help::pkg.general.images.objs.coordsys.m.setobserver.a.value.d := 'New observer';
help::pkg.general.images.objs.coordsys.m.setobserver.a.value.def := '';
help::pkg.general.images.objs.coordsys.m.setobserver.a.value.a := 'String';
help::pkg.general.images.objs.coordsys.m.setobserver.s := 'setobserver(value)';
help::pkg.general.images.objs.coordsys.m.setprojection := [=];
help::pkg.general.images.objs.coordsys.m.setprojection.d := 'Set the direction coordinate projection';
help::pkg.general.images.objs.coordsys.m.setprojection.a.type := [=];
help::pkg.general.images.objs.coordsys.m.setprojection.a.type.d := 'Type of projection';
help::pkg.general.images.objs.coordsys.m.setprojection.a.type.def := '';
help::pkg.general.images.objs.coordsys.m.setprojection.a.type.a := 'String';
help::pkg.general.images.objs.coordsys.m.setprojection.a.parameters := [=];
help::pkg.general.images.objs.coordsys.m.setprojection.a.parameters.d := 'Projection parameters';
help::pkg.general.images.objs.coordsys.m.setprojection.a.parameters.def := '[]';
help::pkg.general.images.objs.coordsys.m.setprojection.a.parameters.a := 'Vector of double';
help::pkg.general.images.objs.coordsys.m.setprojection.s := 'setprojection(type, parameters)';
help::pkg.general.images.objs.coordsys.m.setreferencecode := [=];
help::pkg.general.images.objs.coordsys.m.setreferencecode.d := 'Set new reference code';
help::pkg.general.images.objs.coordsys.m.setreferencecode.a.value := [=];
help::pkg.general.images.objs.coordsys.m.setreferencecode.a.value.d := 'Reference code';
help::pkg.general.images.objs.coordsys.m.setreferencecode.a.value.def := '';
help::pkg.general.images.objs.coordsys.m.setreferencecode.a.value.a := 'String';
help::pkg.general.images.objs.coordsys.m.setreferencecode.a.type := [=];
help::pkg.general.images.objs.coordsys.m.setreferencecode.a.type.d := 'Which coordinate type ?';
help::pkg.general.images.objs.coordsys.m.setreferencecode.a.type.def := '';
help::pkg.general.images.objs.coordsys.m.setreferencecode.a.type.a := 'String from   "direction" or "spectral"';
help::pkg.general.images.objs.coordsys.m.setreferencecode.a.adjust := [=];
help::pkg.general.images.objs.coordsys.m.setreferencecode.a.adjust.d := 'Adjust reference value ?';
help::pkg.general.images.objs.coordsys.m.setreferencecode.a.adjust.def := 'T';
help::pkg.general.images.objs.coordsys.m.setreferencecode.a.adjust.a := 'Bool';
help::pkg.general.images.objs.coordsys.m.setreferencecode.s := 'setreferencecode(value, type, adjust)';
help::pkg.general.images.objs.coordsys.m.setreferencelocation := [=];
help::pkg.general.images.objs.coordsys.m.setreferencelocation.d := 'Set reference pixel and value';
help::pkg.general.images.objs.coordsys.m.setreferencelocation.a.pixel := [=];
help::pkg.general.images.objs.coordsys.m.setreferencelocation.a.pixel.d := 'New reference pixel';
help::pkg.general.images.objs.coordsys.m.setreferencelocation.a.pixel.def := 'Old reference pixel';
help::pkg.general.images.objs.coordsys.m.setreferencelocation.a.pixel.a := 'Vector of integer';
help::pkg.general.images.objs.coordsys.m.setreferencelocation.a.world := [=];
help::pkg.general.images.objs.coordsys.m.setreferencelocation.a.world.d := 'New reference value';
help::pkg.general.images.objs.coordsys.m.setreferencelocation.a.world.def := 'Old reference value';
help::pkg.general.images.objs.coordsys.m.setreferencelocation.a.world.a := 'Vector of doubles, vector of quantities, quantity of vector of doubles, vector of string, record';
help::pkg.general.images.objs.coordsys.m.setreferencelocation.a.mask := [=];
help::pkg.general.images.objs.coordsys.m.setreferencelocation.a.mask.d := 'Indicates which axes to center';
help::pkg.general.images.objs.coordsys.m.setreferencelocation.a.mask.def := 'All';
help::pkg.general.images.objs.coordsys.m.setreferencelocation.a.mask.a := 'Vector of boolean';
help::pkg.general.images.objs.coordsys.m.setreferencelocation.s := 'setreferencelocation(pixel, world, mask)';
help::pkg.general.images.objs.coordsys.m.setreferencepixel := [=];
help::pkg.general.images.objs.coordsys.m.setreferencepixel.d := 'Set the reference pixel';
help::pkg.general.images.objs.coordsys.m.setreferencepixel.a.type := [=];
help::pkg.general.images.objs.coordsys.m.setreferencepixel.a.type.d := 'Which coordinate type ?';
help::pkg.general.images.objs.coordsys.m.setreferencepixel.a.type.def := 'All';
help::pkg.general.images.objs.coordsys.m.setreferencepixel.a.type.a := 'String from "direction", "stokes", "spectral", "linear", "tabular" or unset';
help::pkg.general.images.objs.coordsys.m.setreferencepixel.a.value := [=];
help::pkg.general.images.objs.coordsys.m.setreferencepixel.a.value.d := 'Reference pixel';
help::pkg.general.images.objs.coordsys.m.setreferencepixel.a.value.def := '';
help::pkg.general.images.objs.coordsys.m.setreferencepixel.a.value.a := 'Vector of double';
help::pkg.general.images.objs.coordsys.m.setreferencepixel.s := 'setreferencepixel(type, value)';
help::pkg.general.images.objs.coordsys.m.setreferencevalue := [=];
help::pkg.general.images.objs.coordsys.m.setreferencevalue.d := 'Set the reference value';
help::pkg.general.images.objs.coordsys.m.setreferencevalue.a.value := [=];
help::pkg.general.images.objs.coordsys.m.setreferencevalue.a.value.d := 'Reference value';
help::pkg.general.images.objs.coordsys.m.setreferencevalue.a.value.def := '';
help::pkg.general.images.objs.coordsys.m.setreferencevalue.a.value.a := 'Vector of doubles, vector of quantities, quantity of vector of doubles, vector of string, record';
help::pkg.general.images.objs.coordsys.m.setreferencevalue.a.type := [=];
help::pkg.general.images.objs.coordsys.m.setreferencevalue.a.type.d := 'Which coordinate type ?';
help::pkg.general.images.objs.coordsys.m.setreferencevalue.a.type.def := 'All';
help::pkg.general.images.objs.coordsys.m.setreferencevalue.a.type.a := 'String from "direction", "stokes", "spectral", "linear", "tabular" or unset';
help::pkg.general.images.objs.coordsys.m.setreferencevalue.s := 'setreferencevalue(value, type)';
help::pkg.general.images.objs.coordsys.m.setrestfrequency := [=];
help::pkg.general.images.objs.coordsys.m.setrestfrequency.d := 'Set the rest frequency';
help::pkg.general.images.objs.coordsys.m.setrestfrequency.a.value := [=];
help::pkg.general.images.objs.coordsys.m.setrestfrequency.a.value.d := 'New rest frequencies';
help::pkg.general.images.objs.coordsys.m.setrestfrequency.a.value.def := '';
help::pkg.general.images.objs.coordsys.m.setrestfrequency.a.value.a := 'Quantity, double or string vector';
help::pkg.general.images.objs.coordsys.m.setrestfrequency.a.which := [=];
help::pkg.general.images.objs.coordsys.m.setrestfrequency.a.which.d := 'Which is the active rest frequency';
help::pkg.general.images.objs.coordsys.m.setrestfrequency.a.which.def := '1';
help::pkg.general.images.objs.coordsys.m.setrestfrequency.a.which.a := 'Integer';
help::pkg.general.images.objs.coordsys.m.setrestfrequency.a.append := [=];
help::pkg.general.images.objs.coordsys.m.setrestfrequency.a.append.d := 'Append this list or overwrite ?';
help::pkg.general.images.objs.coordsys.m.setrestfrequency.a.append.def := 'F';
help::pkg.general.images.objs.coordsys.m.setrestfrequency.a.append.a := 'Bool';
help::pkg.general.images.objs.coordsys.m.setrestfrequency.s := 'setrestfrequency(value, which, append)';
help::pkg.general.images.objs.coordsys.m.setspectral := [=];
help::pkg.general.images.objs.coordsys.m.setspectral.d := 'Set tabular values for the spectral coordinate';
help::pkg.general.images.objs.coordsys.m.setspectral.a.refcode := [=];
help::pkg.general.images.objs.coordsys.m.setspectral.a.refcode.d := 'Reference code';
help::pkg.general.images.objs.coordsys.m.setspectral.a.refcode.def := 'No change';
help::pkg.general.images.objs.coordsys.m.setspectral.a.refcode.a := 'String';
help::pkg.general.images.objs.coordsys.m.setspectral.a.restfreq := [=];
help::pkg.general.images.objs.coordsys.m.setspectral.a.restfreq.d := 'Rest frequency';
help::pkg.general.images.objs.coordsys.m.setspectral.a.restfreq.def := 'No change';
help::pkg.general.images.objs.coordsys.m.setspectral.a.restfreq.a := 'Quantum or double';
help::pkg.general.images.objs.coordsys.m.setspectral.a.frequencies := [=];
help::pkg.general.images.objs.coordsys.m.setspectral.a.frequencies.d := 'Vector of frequencies';
help::pkg.general.images.objs.coordsys.m.setspectral.a.frequencies.def := 'No change';
help::pkg.general.images.objs.coordsys.m.setspectral.a.frequencies.a := 'Quantum vector';
help::pkg.general.images.objs.coordsys.m.setspectral.a.doppler := [=];
help::pkg.general.images.objs.coordsys.m.setspectral.a.doppler.d := 'Doppler type';
help::pkg.general.images.objs.coordsys.m.setspectral.a.doppler.def := 'No change';
help::pkg.general.images.objs.coordsys.m.setspectral.a.doppler.a := 'String';
help::pkg.general.images.objs.coordsys.m.setspectral.a.velocities := [=];
help::pkg.general.images.objs.coordsys.m.setspectral.a.velocities.d := 'Vector of velocitiestypes';
help::pkg.general.images.objs.coordsys.m.setspectral.a.velocities.def := 'No change';
help::pkg.general.images.objs.coordsys.m.setspectral.a.velocities.a := 'Quantum vector';
help::pkg.general.images.objs.coordsys.m.setspectral.s := 'setspectral(refcode, restfreq, frequencies, doppler, velocities)';
help::pkg.general.images.objs.coordsys.m.setstokes := [=];
help::pkg.general.images.objs.coordsys.m.setstokes.d := 'Set the Stokes types';
help::pkg.general.images.objs.coordsys.m.setstokes.a.stokes := [=];
help::pkg.general.images.objs.coordsys.m.setstokes.a.stokes.d := 'Stokes types';
help::pkg.general.images.objs.coordsys.m.setstokes.a.stokes.def := '';
help::pkg.general.images.objs.coordsys.m.setstokes.a.stokes.a := 'Vector of strings';
help::pkg.general.images.objs.coordsys.m.setstokes.s := 'setstokes(stokes)';
help::pkg.general.images.objs.coordsys.m.settabular := [=];
help::pkg.general.images.objs.coordsys.m.settabular.d := 'Set tabular values for the tabular coordinate';
help::pkg.general.images.objs.coordsys.m.settabular.a.pixel := [=];
help::pkg.general.images.objs.coordsys.m.settabular.a.pixel.d := 'Vector of (1-rel) pixel values';
help::pkg.general.images.objs.coordsys.m.settabular.a.pixel.def := 'No change';
help::pkg.general.images.objs.coordsys.m.settabular.a.pixel.a := 'Double vector';
help::pkg.general.images.objs.coordsys.m.settabular.a.world := [=];
help::pkg.general.images.objs.coordsys.m.settabular.a.world.d := 'Vector of world values';
help::pkg.general.images.objs.coordsys.m.settabular.a.world.def := 'No change';
help::pkg.general.images.objs.coordsys.m.settabular.a.world.a := 'Double vector';
help::pkg.general.images.objs.coordsys.m.settabular.a.which := [=];
help::pkg.general.images.objs.coordsys.m.settabular.a.which.d := 'Which Tabular coordinate';
help::pkg.general.images.objs.coordsys.m.settabular.a.which.def := '1';
help::pkg.general.images.objs.coordsys.m.settabular.a.which.a := 'Integer';
help::pkg.general.images.objs.coordsys.m.settabular.s := 'settabular(pixel, world, which)';
help::pkg.general.images.objs.coordsys.m.settelescope := [=];
help::pkg.general.images.objs.coordsys.m.settelescope.d := 'Set a new telescope';
help::pkg.general.images.objs.coordsys.m.settelescope.a.value := [=];
help::pkg.general.images.objs.coordsys.m.settelescope.a.value.d := 'New telescope';
help::pkg.general.images.objs.coordsys.m.settelescope.a.value.def := '';
help::pkg.general.images.objs.coordsys.m.settelescope.a.value.a := 'String';
help::pkg.general.images.objs.coordsys.m.settelescope.s := 'settelescope(value)';
help::pkg.general.images.objs.coordsys.m.setunits := [=];
help::pkg.general.images.objs.coordsys.m.setunits.d := 'Set the axis units';
help::pkg.general.images.objs.coordsys.m.setunits.a.value := [=];
help::pkg.general.images.objs.coordsys.m.setunits.a.value.d := 'Units';
help::pkg.general.images.objs.coordsys.m.setunits.a.value.def := '';
help::pkg.general.images.objs.coordsys.m.setunits.a.value.a := 'Vector of strings';
help::pkg.general.images.objs.coordsys.m.setunits.a.type := [=];
help::pkg.general.images.objs.coordsys.m.setunits.a.type.d := 'Which coordinate type ?';
help::pkg.general.images.objs.coordsys.m.setunits.a.type.def := 'All';
help::pkg.general.images.objs.coordsys.m.setunits.a.type.a := 'String from "direction", "stokes", "spectral", "linear", "tabular" or unset';
help::pkg.general.images.objs.coordsys.m.setunits.a.overwrite := [=];
help::pkg.general.images.objs.coordsys.m.setunits.a.overwrite.d := 'Overwrite linear or tabular coordinate units ?';
help::pkg.general.images.objs.coordsys.m.setunits.a.overwrite.def := 'F';
help::pkg.general.images.objs.coordsys.m.setunits.a.overwrite.a := 'Bool';
help::pkg.general.images.objs.coordsys.m.setunits.a.which := [=];
help::pkg.general.images.objs.coordsys.m.setunits.a.which.d := 'Which coordinate if more than one of same type';
help::pkg.general.images.objs.coordsys.m.setunits.a.which.def := 'First';
help::pkg.general.images.objs.coordsys.m.setunits.a.which.a := 'Integer';
help::pkg.general.images.objs.coordsys.m.setunits.s := 'setunits(value, type, overwrite, which)';
help::pkg.general.images.objs.coordsys.m.stokes := [=];
help::pkg.general.images.objs.coordsys.m.stokes.d := 'Recover the Stokes types';
help::pkg.general.images.objs.coordsys.m.stokes.s := 'stokes()';
help::pkg.general.images.objs.coordsys.m.summary := [=];
help::pkg.general.images.objs.coordsys.m.summary.d := 'Summarize basic information about the Coordinate System';
help::pkg.general.images.objs.coordsys.m.summary.a.doppler := [=];
help::pkg.general.images.objs.coordsys.m.summary.a.doppler.d := 'List velocity information with this doppler definition';
help::pkg.general.images.objs.coordsys.m.summary.a.doppler.def := 'RADIO';
help::pkg.general.images.objs.coordsys.m.summary.a.doppler.a := 'String';
help::pkg.general.images.objs.coordsys.m.summary.a.list := [=];
help::pkg.general.images.objs.coordsys.m.summary.a.list.d := 'List to global logger';
help::pkg.general.images.objs.coordsys.m.summary.a.list.def := 'T';
help::pkg.general.images.objs.coordsys.m.summary.a.list.a := 'Boolean';
help::pkg.general.images.objs.coordsys.m.summary.s := 'summary(doppler, list)';
help::pkg.general.images.objs.coordsys.m.telescope := [=];
help::pkg.general.images.objs.coordsys.m.telescope.d := 'Return the telescope';
help::pkg.general.images.objs.coordsys.m.telescope.a.measure := [=];
help::pkg.general.images.objs.coordsys.m.telescope.a.measure.d := 'Return as position measure';
help::pkg.general.images.objs.coordsys.m.telescope.a.measure.def := 'F';
help::pkg.general.images.objs.coordsys.m.telescope.a.measure.a := 'T or F';
help::pkg.general.images.objs.coordsys.m.telescope.s := 'telescope(measure)';
help::pkg.general.images.objs.coordsys.m.toabs := [=];
help::pkg.general.images.objs.coordsys.m.toabs.d := 'Convert relative coordinate to absolute';
help::pkg.general.images.objs.coordsys.m.toabs.a.value := [=];
help::pkg.general.images.objs.coordsys.m.toabs.a.value.d := 'Relative coordinate';
help::pkg.general.images.objs.coordsys.m.toabs.a.value.def := '';
help::pkg.general.images.objs.coordsys.m.toabs.a.value.a := 'Numeric vector, vector string, vector quantum, record';
help::pkg.general.images.objs.coordsys.m.toabs.a.isworld := [=];
help::pkg.general.images.objs.coordsys.m.toabs.a.isworld.d := 'Is coordinate world or pixel ?';
help::pkg.general.images.objs.coordsys.m.toabs.a.isworld.def := 'unset';
help::pkg.general.images.objs.coordsys.m.toabs.a.isworld.a := 'T, F, unset';
help::pkg.general.images.objs.coordsys.m.toabs.s := 'toabs(value, isworld)';
help::pkg.general.images.objs.coordsys.m.toabsmany := [=];
help::pkg.general.images.objs.coordsys.m.toabsmany.d := 'Convert many numeric relative coordinates to absolute';
help::pkg.general.images.objs.coordsys.m.toabsmany.a.value := [=];
help::pkg.general.images.objs.coordsys.m.toabsmany.a.value.d := 'Relative coordinates';
help::pkg.general.images.objs.coordsys.m.toabsmany.a.value.def := '';
help::pkg.general.images.objs.coordsys.m.toabsmany.a.value.a := 'Numeric matrix';
help::pkg.general.images.objs.coordsys.m.toabsmany.a.isworld := [=];
help::pkg.general.images.objs.coordsys.m.toabsmany.a.isworld.d := 'Is coordinate world or pixel ?';
help::pkg.general.images.objs.coordsys.m.toabsmany.a.isworld.def := 'unset';
help::pkg.general.images.objs.coordsys.m.toabsmany.a.isworld.a := 'T, F, unset';
help::pkg.general.images.objs.coordsys.m.toabsmany.s := 'toabsmany(value, isworld)';
help::pkg.general.images.objs.coordsys.m.topixel := [=];
help::pkg.general.images.objs.coordsys.m.topixel.d := 'Convert from absolute world to pixel coordinate';
help::pkg.general.images.objs.coordsys.m.topixel.a.value := [=];
help::pkg.general.images.objs.coordsys.m.topixel.a.value.d := 'Absolute world coordinate';
help::pkg.general.images.objs.coordsys.m.topixel.a.value.def := 'Reference value';
help::pkg.general.images.objs.coordsys.m.topixel.a.value.a := 'Numeric vector, vector of quantities, vector of strings or record';
help::pkg.general.images.objs.coordsys.m.topixel.s := 'topixel(value)';
help::pkg.general.images.objs.coordsys.m.topixelmany := [=];
help::pkg.general.images.objs.coordsys.m.topixelmany.d := 'Convert many absolute numeric world coordinates to pixel';
help::pkg.general.images.objs.coordsys.m.topixelmany.a.value := [=];
help::pkg.general.images.objs.coordsys.m.topixelmany.a.value.d := 'Absolute world coordinates';
help::pkg.general.images.objs.coordsys.m.topixelmany.a.value.def := '';
help::pkg.general.images.objs.coordsys.m.topixelmany.a.value.a := 'Numeric matrix';
help::pkg.general.images.objs.coordsys.m.topixelmany.s := 'topixelmany(value)';
help::pkg.general.images.objs.coordsys.m.torecord := [=];
help::pkg.general.images.objs.coordsys.m.torecord.d := 'Convert Coordinate System to a record';
help::pkg.general.images.objs.coordsys.m.torecord.s := 'torecord()';
help::pkg.general.images.objs.coordsys.m.torel := [=];
help::pkg.general.images.objs.coordsys.m.torel.d := 'Convert absolute coordinate to relative';
help::pkg.general.images.objs.coordsys.m.torel.a.value := [=];
help::pkg.general.images.objs.coordsys.m.torel.a.value.d := 'Absolute coordinate';
help::pkg.general.images.objs.coordsys.m.torel.a.value.def := '';
help::pkg.general.images.objs.coordsys.m.torel.a.value.a := 'Numeric vector, vector string, vector quantum, record';
help::pkg.general.images.objs.coordsys.m.torel.a.isworld := [=];
help::pkg.general.images.objs.coordsys.m.torel.a.isworld.d := 'Is coordinate world or pixel ?';
help::pkg.general.images.objs.coordsys.m.torel.a.isworld.def := 'unset';
help::pkg.general.images.objs.coordsys.m.torel.a.isworld.a := 'T, F, unset';
help::pkg.general.images.objs.coordsys.m.torel.s := 'torel(value, isworld)';
help::pkg.general.images.objs.coordsys.m.torelmany := [=];
help::pkg.general.images.objs.coordsys.m.torelmany.d := 'Convert many numeric absolute coordinates to relative';
help::pkg.general.images.objs.coordsys.m.torelmany.a.value := [=];
help::pkg.general.images.objs.coordsys.m.torelmany.a.value.d := 'Absolute coordinates';
help::pkg.general.images.objs.coordsys.m.torelmany.a.value.def := '';
help::pkg.general.images.objs.coordsys.m.torelmany.a.value.a := 'Numeric matrix';
help::pkg.general.images.objs.coordsys.m.torelmany.a.isworld := [=];
help::pkg.general.images.objs.coordsys.m.torelmany.a.isworld.d := 'Is coordinate world or pixel ?';
help::pkg.general.images.objs.coordsys.m.torelmany.a.isworld.def := 'unset';
help::pkg.general.images.objs.coordsys.m.torelmany.a.isworld.a := 'T, F, unset';
help::pkg.general.images.objs.coordsys.m.torelmany.s := 'torelmany(value, isworld)';
help::pkg.general.images.objs.coordsys.m.toworld := [=];
help::pkg.general.images.objs.coordsys.m.toworld.d := 'Convert from absolute pixel coordinate to world';
help::pkg.general.images.objs.coordsys.m.toworld.a.value := [=];
help::pkg.general.images.objs.coordsys.m.toworld.a.value.d := 'Absolute pixel coordinate';
help::pkg.general.images.objs.coordsys.m.toworld.a.value.def := 'Reference pixel';
help::pkg.general.images.objs.coordsys.m.toworld.a.value.a := 'Numeric vector';
help::pkg.general.images.objs.coordsys.m.toworld.a.format := [=];
help::pkg.general.images.objs.coordsys.m.toworld.a.format.d := 'Format string';
help::pkg.general.images.objs.coordsys.m.toworld.a.format.def := '\' n\' ';
help::pkg.general.images.objs.coordsys.m.toworld.a.format.a := 'String from combination of "n", "q", "s", "m"';
help::pkg.general.images.objs.coordsys.m.toworld.s := 'toworld(value, format)';
help::pkg.general.images.objs.coordsys.m.toworldmany := [=];
help::pkg.general.images.objs.coordsys.m.toworldmany.d := 'Convert many absolute pixel coordinates to numeric world';
help::pkg.general.images.objs.coordsys.m.toworldmany.a.value := [=];
help::pkg.general.images.objs.coordsys.m.toworldmany.a.value.d := 'Absolute pixel coordinates';
help::pkg.general.images.objs.coordsys.m.toworldmany.a.value.def := '';
help::pkg.general.images.objs.coordsys.m.toworldmany.a.value.a := 'Numeric matrix';
help::pkg.general.images.objs.coordsys.m.toworldmany.s := 'toworldmany(value)';
help::pkg.general.images.objs.coordsys.m.type := [=];
help::pkg.general.images.objs.coordsys.m.type.d := 'Return the type of this tool';
help::pkg.general.images.objs.coordsys.m.type.s := 'type()';
help::pkg.general.images.objs.coordsys.m.units := [=];
help::pkg.general.images.objs.coordsys.m.units.d := 'Recover the units for each axis';
help::pkg.general.images.objs.coordsys.m.units.a.type := [=];
help::pkg.general.images.objs.coordsys.m.units.a.type.d := 'Coordinate type';
help::pkg.general.images.objs.coordsys.m.units.a.type.def := 'All';
help::pkg.general.images.objs.coordsys.m.units.a.type.a := 'String from \' direction\' , \' stokes\' , \' spectral\' , \' linear\'  or unset';
help::pkg.general.images.objs.coordsys.m.units.s := 'units(type)';
help::pkg.general.images.objs.coordsys.m.velocitytofrequency := [=];
help::pkg.general.images.objs.coordsys.m.velocitytofrequency.d := 'Convert velocity to frequency';
help::pkg.general.images.objs.coordsys.m.velocitytofrequency.a.value := [=];
help::pkg.general.images.objs.coordsys.m.velocitytofrequency.a.value.d := 'Velocity to convert';
help::pkg.general.images.objs.coordsys.m.velocitytofrequency.a.value.def := '';
help::pkg.general.images.objs.coordsys.m.velocitytofrequency.a.value.a := 'Numeric or vector of numeric';
help::pkg.general.images.objs.coordsys.m.velocitytofrequency.a.frequnit := [=];
help::pkg.general.images.objs.coordsys.m.velocitytofrequency.a.frequnit.d := 'Unit of output frequencies';
help::pkg.general.images.objs.coordsys.m.velocitytofrequency.a.frequnit.def := 'Intrinsic units';
help::pkg.general.images.objs.coordsys.m.velocitytofrequency.a.frequnit.a := 'String';
help::pkg.general.images.objs.coordsys.m.velocitytofrequency.a.doppler := [=];
help::pkg.general.images.objs.coordsys.m.velocitytofrequency.a.doppler.d := 'Velocity doppler definition';
help::pkg.general.images.objs.coordsys.m.velocitytofrequency.a.doppler.def := '\' radio\' ';
help::pkg.general.images.objs.coordsys.m.velocitytofrequency.a.doppler.a := 'String';
help::pkg.general.images.objs.coordsys.m.velocitytofrequency.a.velunit := [=];
help::pkg.general.images.objs.coordsys.m.velocitytofrequency.a.velunit.d := 'Unit of input velocities';
help::pkg.general.images.objs.coordsys.m.velocitytofrequency.a.velunit.def := '\' km/s\' ';
help::pkg.general.images.objs.coordsys.m.velocitytofrequency.a.velunit.a := 'String';
help::pkg.general.images.objs.coordsys.m.velocitytofrequency.s := 'velocitytofrequency(value, frequnit, doppler, velunit)';
help::pkg.general.images.funs.is_coordsys := [=];
help::pkg.general.images.funs.is_coordsys.a := [=];
help::pkg.general.images.funs.is_coordsys.d := 'Is this variable a Coordsys tool ?';
help::pkg.general.images.funs.is_coordsys.a.thing := [=];
help::pkg.general.images.funs.is_coordsys.a.thing.d := 'Variable to test';
help::pkg.general.images.funs.is_coordsys.a.thing.def := 'None';
help::pkg.general.images.funs.is_coordsys.a.thing.a := 'Glish variable';
help::pkg.general.images.funs.is_coordsys.s := 'is_coordsys(thing)';
help::pkg.general.images.funs.coordsystools := [=];
help::pkg.general.images.funs.coordsystools.a := [=];
help::pkg.general.images.funs.coordsystools.d := 'Find the list of current global Coordsys tools';
help::pkg.general.images.funs.coordsystools.s := 'coordsystools()';
help::pkg.general.images.funs.coordsystest := [=];
help::pkg.general.images.funs.coordsystest.a := [=];
help::pkg.general.images.funs.coordsystest.d := 'Run test suite for Coordsys tool';
help::pkg.general.images.funs.coordsystest.a.which := [=];
help::pkg.general.images.funs.coordsystest.a.which.d := 'Which test to run';
help::pkg.general.images.funs.coordsystest.a.which.def := 'All tests';
help::pkg.general.images.funs.coordsystest.a.which.a := 'Integer or vector of integers';
help::pkg.general.images.funs.coordsystest.s := 'coordsystest(which)';
help::pkg.general.images.objs.imagefitter := [=];
help::pkg.general.images.objs.imagefitter.m := [=];
help::pkg.general.images.objs.imagefitter.c := [=];
help::pkg.general.images.objs.imagefitter.d := 'Fit models to images of the sky';
help::pkg.general.images.objs.imagefitter.c.imagefitter := [=];
help::pkg.general.images.objs.imagefitter.c.imagefitter.d := 'Construct an Imagefitter';
help::pkg.general.images.objs.imagefitter.c.imagefitter.a.infile := [=];
help::pkg.general.images.objs.imagefitter.c.imagefitter.a.infile.d := 'The image file name or image tool';
help::pkg.general.images.objs.imagefitter.c.imagefitter.a.infile.def := '';
help::pkg.general.images.objs.imagefitter.c.imagefitter.a.infile.a := 'The file name or an Image tool';
help::pkg.general.images.objs.imagefitter.c.imagefitter.a.region := [=];
help::pkg.general.images.objs.imagefitter.c.imagefitter.a.region.d := 'The region of interest to display';
help::pkg.general.images.objs.imagefitter.c.imagefitter.a.region.def := 'Whole image';
help::pkg.general.images.objs.imagefitter.c.imagefitter.a.region.a := 'Region tool';
help::pkg.general.images.objs.imagefitter.c.imagefitter.a.parent := [=];
help::pkg.general.images.objs.imagefitter.c.imagefitter.a.parent.d := 'Parent frame to embed GUI in';
help::pkg.general.images.objs.imagefitter.c.imagefitter.a.parent.def := 'F';
help::pkg.general.images.objs.imagefitter.c.imagefitter.a.parent.a := 'Tk frame agent';
help::pkg.general.images.objs.imagefitter.c.imagefitter.a.residual := [=];
help::pkg.general.images.objs.imagefitter.c.imagefitter.a.residual.d := 'Residual image file name';
help::pkg.general.images.objs.imagefitter.c.imagefitter.a.residual.def := 'Temporary image';
help::pkg.general.images.objs.imagefitter.c.imagefitter.a.residual.a := 'String';
help::pkg.general.images.objs.imagefitter.c.imagefitter.a.maxpix := [=];
help::pkg.general.images.objs.imagefitter.c.imagefitter.a.maxpix.d := 'Maximum number of pixels to fit without query';
help::pkg.general.images.objs.imagefitter.c.imagefitter.a.maxpix.def := '256*256';
help::pkg.general.images.objs.imagefitter.c.imagefitter.a.maxpix.a := 'Integer';
help::pkg.general.images.objs.imagefitter.c.imagefitter.a.widgetset := [=];
help::pkg.general.images.objs.imagefitter.c.imagefitter.a.widgetset.d := 'The widgetset to use for the GUI';
help::pkg.general.images.objs.imagefitter.c.imagefitter.a.widgetset.def := 'ddlws';
help::pkg.general.images.objs.imagefitter.c.imagefitter.a.widgetset.a := 'A widgetserver tool';
help::pkg.general.images.objs.imagefitter.c.imagefitter.s := 'imagefitter(infile, region, parent, residual, maxpix, widgetset)';
help::pkg.general.images.objs.imagefitter.m.componentlist := [=];
help::pkg.general.images.objs.imagefitter.m.componentlist.d := 'Recover the fitted components';
help::pkg.general.images.objs.imagefitter.m.componentlist.a.which := [=];
help::pkg.general.images.objs.imagefitter.m.componentlist.a.which.d := 'Which fit ?';
help::pkg.general.images.objs.imagefitter.m.componentlist.a.which.def := 'All';
help::pkg.general.images.objs.imagefitter.m.componentlist.a.which.a := 'Unset or integer';
help::pkg.general.images.objs.imagefitter.m.componentlist.a.concatenate := [=];
help::pkg.general.images.objs.imagefitter.m.componentlist.a.concatenate.d := 'Concatenate all Componentlists into one ?';
help::pkg.general.images.objs.imagefitter.m.componentlist.a.concatenate.def := 'F';
help::pkg.general.images.objs.imagefitter.m.componentlist.a.concatenate.a := 'T or F';
help::pkg.general.images.objs.imagefitter.m.componentlist.a.deconvolve := [=];
help::pkg.general.images.objs.imagefitter.m.componentlist.a.deconvolve.d := 'Deconvolve components from restoring beam';
help::pkg.general.images.objs.imagefitter.m.componentlist.a.deconvolve.def := 'F';
help::pkg.general.images.objs.imagefitter.m.componentlist.a.deconvolve.a := 'T or F';
help::pkg.general.images.objs.imagefitter.m.componentlist.s := 'componentlist(which, concatenate, deconvolve)';
help::pkg.general.images.objs.imagefitter.m.done := [=];
help::pkg.general.images.objs.imagefitter.m.done.d := 'Destroy this Imagefitter tool';
help::pkg.general.images.objs.imagefitter.m.done.s := 'done()';
help::pkg.general.images.objs.imagefitter.m.gui := [=];
help::pkg.general.images.objs.imagefitter.m.gui.d := 'Start the GUI interface';
help::pkg.general.images.objs.imagefitter.m.gui.s := 'gui()';
help::pkg.general.images.objs.imagefitter.m.done := [=];
help::pkg.general.images.objs.imagefitter.m.done.d := 'Destroy this Imagefitter tool';
help::pkg.general.images.objs.imagefitter.m.done.s := 'done()';
help::pkg.general.images.objs.imagefitter.m.nfits := [=];
help::pkg.general.images.objs.imagefitter.m.nfits.d := 'Return number of accepted fits';
help::pkg.general.images.objs.imagefitter.m.nfits.s := 'nfits()';
help::pkg.general.images.objs.imagefitter.m.regions := [=];
help::pkg.general.images.objs.imagefitter.m.regions.d := 'Recover fitted regions';
help::pkg.general.images.objs.imagefitter.m.regions.a.which := [=];
help::pkg.general.images.objs.imagefitter.m.regions.a.which.d := 'Which fit ?';
help::pkg.general.images.objs.imagefitter.m.regions.a.which.def := 'All';
help::pkg.general.images.objs.imagefitter.m.regions.a.which.a := 'Unset or integer';
help::pkg.general.images.objs.imagefitter.m.regions.s := 'regions(which)';
help::pkg.general.images.objs.imagefitter.m.setmaxpixels := [=];
help::pkg.general.images.objs.imagefitter.m.setmaxpixels.d := 'Set maximum number of pixels to fit without query';
help::pkg.general.images.objs.imagefitter.m.setmaxpixels.a.maxpix := [=];
help::pkg.general.images.objs.imagefitter.m.setmaxpixels.a.maxpix.d := 'Number of pixels';
help::pkg.general.images.objs.imagefitter.m.setmaxpixels.a.maxpix.def := '';
help::pkg.general.images.objs.imagefitter.m.setmaxpixels.a.maxpix.a := '';
help::pkg.general.images.objs.imagefitter.m.setmaxpixels.s := 'setmaxpixels(maxpix)';
help::pkg.general.images.objs.imagefitter.m.summary := [=];
help::pkg.general.images.objs.imagefitter.m.summary.d := 'Summarize the image being fitted';
help::pkg.general.images.objs.imagefitter.m.summary.s := 'summary()';
help::pkg.general.images.objs.imagefitter.m.type := [=];
help::pkg.general.images.objs.imagefitter.m.type.d := 'What type is this tool ?';
help::pkg.general.images.objs.imagefitter.m.type.s := 'type()';
help::pkg.general.images.funs.imagefittertest := [=];
help::pkg.general.images.funs.imagefittertest.a := [=];
help::pkg.general.images.funs.imagefittertest.d := 'Run test suite for Imagefitter tool';
help::pkg.general.images.funs.imagefittertest.a.which := [=];
help::pkg.general.images.funs.imagefittertest.a.which.d := 'Which test to run';
help::pkg.general.images.funs.imagefittertest.a.which.def := 'All tests';
help::pkg.general.images.funs.imagefittertest.a.which.a := 'Integer or vector of integers';
help::pkg.general.images.funs.imagefittertest.s := 'imagefittertest(which)';
help::pkg.general.images.objs.imageprofilefitter := [=];
help::pkg.general.images.objs.imageprofilefitter.m := [=];
help::pkg.general.images.objs.imageprofilefitter.c := [=];
help::pkg.general.images.objs.imageprofilefitter.d := 'Fit models to 1D profiles from images';
help::pkg.general.images.objs.imageprofilefitter.c.imageprofilefitter := [=];
help::pkg.general.images.objs.imageprofilefitter.c.imageprofilefitter.d := 'Construct an imageprofilefitter';
help::pkg.general.images.objs.imageprofilefitter.c.imageprofilefitter.a.infile := [=];
help::pkg.general.images.objs.imageprofilefitter.c.imageprofilefitter.a.infile.d := 'The primary image file name or image tool';
help::pkg.general.images.objs.imageprofilefitter.c.imageprofilefitter.a.infile.def := '';
help::pkg.general.images.objs.imageprofilefitter.c.imageprofilefitter.a.infile.a := 'String or Image tool';
help::pkg.general.images.objs.imageprofilefitter.c.imageprofilefitter.a.infile2 := [=];
help::pkg.general.images.objs.imageprofilefitter.c.imageprofilefitter.a.infile2.d := 'The secondary image file name or image tool';
help::pkg.general.images.objs.imageprofilefitter.c.imageprofilefitter.a.infile2.def := 'Auto generate';
help::pkg.general.images.objs.imageprofilefitter.c.imageprofilefitter.a.infile2.a := 'String or Image tool';
help::pkg.general.images.objs.imageprofilefitter.c.imageprofilefitter.a.sigma := [=];
help::pkg.general.images.objs.imageprofilefitter.c.imageprofilefitter.a.sigma.d := 'Weights image';
help::pkg.general.images.objs.imageprofilefitter.c.imageprofilefitter.a.sigma.def := 'None';
help::pkg.general.images.objs.imageprofilefitter.c.imageprofilefitter.a.sigma.a := 'String';
help::pkg.general.images.objs.imageprofilefitter.c.imageprofilefitter.a.parent := [=];
help::pkg.general.images.objs.imageprofilefitter.c.imageprofilefitter.a.parent.d := 'Parent frame to embed GUI in';
help::pkg.general.images.objs.imageprofilefitter.c.imageprofilefitter.a.parent.def := 'F';
help::pkg.general.images.objs.imageprofilefitter.c.imageprofilefitter.a.parent.a := 'Tk frame agent';
help::pkg.general.images.objs.imageprofilefitter.c.imageprofilefitter.a.axis := [=];
help::pkg.general.images.objs.imageprofilefitter.c.imageprofilefitter.a.axis.d := 'Profile pixel axis';
help::pkg.general.images.objs.imageprofilefitter.c.imageprofilefitter.a.axis.def := 'Spectral';
help::pkg.general.images.objs.imageprofilefitter.c.imageprofilefitter.a.axis.a := 'Integer';
help::pkg.general.images.objs.imageprofilefitter.c.imageprofilefitter.a.plotter := [=];
help::pkg.general.images.objs.imageprofilefitter.c.imageprofilefitter.a.plotter.d := 'The plotter for profile plots';
help::pkg.general.images.objs.imageprofilefitter.c.imageprofilefitter.a.plotter.def := 'Will create its own';
help::pkg.general.images.objs.imageprofilefitter.c.imageprofilefitter.a.plotter.a := 'unset or a pgplotter tool';
help::pkg.general.images.objs.imageprofilefitter.c.imageprofilefitter.a.showimage := [=];
help::pkg.general.images.objs.imageprofilefitter.c.imageprofilefitter.a.showimage.d := 'Display the image ?';
help::pkg.general.images.objs.imageprofilefitter.c.imageprofilefitter.a.showimage.def := 'T';
help::pkg.general.images.objs.imageprofilefitter.c.imageprofilefitter.a.showimage.a := 'T or F';
help::pkg.general.images.objs.imageprofilefitter.c.imageprofilefitter.a.widgetset := [=];
help::pkg.general.images.objs.imageprofilefitter.c.imageprofilefitter.a.widgetset.d := 'The widgetset to use for the GUI';
help::pkg.general.images.objs.imageprofilefitter.c.imageprofilefitter.a.widgetset.def := 'ddlws';
help::pkg.general.images.objs.imageprofilefitter.c.imageprofilefitter.a.widgetset.a := 'A widgetserver tool';
help::pkg.general.images.objs.imageprofilefitter.c.imageprofilefitter.s := 'imageprofilefitter(infile, infile2, sigma, parent, axis, plotter, showimage, widgetset)';
help::pkg.general.images.objs.imageprofilefitter.m.getestimate := [=];
help::pkg.general.images.objs.imageprofilefitter.m.getestimate.d := 'Recover the estimate';
help::pkg.general.images.objs.imageprofilefitter.m.getestimate.s := 'getestimate()';
help::pkg.general.images.objs.imageprofilefitter.m.getfit := [=];
help::pkg.general.images.objs.imageprofilefitter.m.getfit.d := 'Recover the fit';
help::pkg.general.images.objs.imageprofilefitter.m.getfit.s := 'getfit()';
help::pkg.general.images.objs.imageprofilefitter.m.getprofiles := [=];
help::pkg.general.images.objs.imageprofilefitter.m.getprofiles.d := 'Get data, estimate and fit as vectors';
help::pkg.general.images.objs.imageprofilefitter.m.getprofiles.a.outfile := [=];
help::pkg.general.images.objs.imageprofilefitter.m.getprofiles.a.outfile.d := 'Output file';
help::pkg.general.images.objs.imageprofilefitter.m.getprofiles.a.outfile.def := 'None';
help::pkg.general.images.objs.imageprofilefitter.m.getprofiles.a.outfile.a := 'String';
help::pkg.general.images.objs.imageprofilefitter.m.getprofiles.a.ascii := [=];
help::pkg.general.images.objs.imageprofilefitter.m.getprofiles.a.ascii.d := 'Save in ascii file or aips++ table ?';
help::pkg.general.images.objs.imageprofilefitter.m.getprofiles.a.ascii.def := 'F';
help::pkg.general.images.objs.imageprofilefitter.m.getprofiles.a.ascii.a := 'Boolean';
help::pkg.general.images.objs.imageprofilefitter.m.getprofiles.a.format := [=];
help::pkg.general.images.objs.imageprofilefitter.m.getprofiles.a.format.d := 'Formatting string for ascii table';
help::pkg.general.images.objs.imageprofilefitter.m.getprofiles.a.format.def := '\%e';
help::pkg.general.images.objs.imageprofilefitter.m.getprofiles.a.format.a := 'String';
help::pkg.general.images.objs.imageprofilefitter.m.getprofiles.a.dataonly := [=];
help::pkg.general.images.objs.imageprofilefitter.m.getprofiles.a.dataonly.d := 'Only write out data, not estimates and/or fits';
help::pkg.general.images.objs.imageprofilefitter.m.getprofiles.a.dataonly.def := 'F';
help::pkg.general.images.objs.imageprofilefitter.m.getprofiles.a.dataonly.a := 'Boolean';
help::pkg.general.images.objs.imageprofilefitter.m.getprofiles.a.overwrite := [=];
help::pkg.general.images.objs.imageprofilefitter.m.getprofiles.a.overwrite.d := 'Overwrite output file if it exists ?';
help::pkg.general.images.objs.imageprofilefitter.m.getprofiles.a.overwrite.def := 'T';
help::pkg.general.images.objs.imageprofilefitter.m.getprofiles.a.overwrite.a := 'Boolean';
help::pkg.general.images.objs.imageprofilefitter.m.getprofiles.a.ack := [=];
help::pkg.general.images.objs.imageprofilefitter.m.getprofiles.a.ack.d := 'Acknowledge Table creation/writing to logger ?';
help::pkg.general.images.objs.imageprofilefitter.m.getprofiles.a.ack.def := 'F';
help::pkg.general.images.objs.imageprofilefitter.m.getprofiles.a.ack.a := 'Boolean';
help::pkg.general.images.objs.imageprofilefitter.m.getprofiles.s := 'getprofiles(outfile, ascii, format, dataonly, overwrite, ack)';
help::pkg.general.images.objs.imageprofilefitter.m.getstore := [=];
help::pkg.general.images.objs.imageprofilefitter.m.getstore.d := 'Recover all fits added to internal store';
help::pkg.general.images.objs.imageprofilefitter.m.getstore.s := 'getstore()';
help::pkg.general.images.objs.imageprofilefitter.m.done := [=];
help::pkg.general.images.objs.imageprofilefitter.m.done.d := 'Destroy this imageprofilefitter tool';
help::pkg.general.images.objs.imageprofilefitter.m.done.s := 'done()';
help::pkg.general.images.objs.imageprofilefitter.m.gui := [=];
help::pkg.general.images.objs.imageprofilefitter.m.gui.d := 'Start the GUI interface';
help::pkg.general.images.objs.imageprofilefitter.m.gui.s := 'gui()';
help::pkg.general.images.objs.imageprofilefitter.m.setimage := [=];
help::pkg.general.images.objs.imageprofilefitter.m.setimage.d := 'Set a new image';
help::pkg.general.images.objs.imageprofilefitter.m.setimage.a.infile := [=];
help::pkg.general.images.objs.imageprofilefitter.m.setimage.a.infile.d := 'The primary image file name or image tool';
help::pkg.general.images.objs.imageprofilefitter.m.setimage.a.infile.def := '';
help::pkg.general.images.objs.imageprofilefitter.m.setimage.a.infile.a := 'String or Image tool';
help::pkg.general.images.objs.imageprofilefitter.m.setimage.a.infile2 := [=];
help::pkg.general.images.objs.imageprofilefitter.m.setimage.a.infile2.d := 'The secondary image file name or image tool';
help::pkg.general.images.objs.imageprofilefitter.m.setimage.a.infile2.def := 'Auto generate';
help::pkg.general.images.objs.imageprofilefitter.m.setimage.a.infile2.a := 'String or Image tool';
help::pkg.general.images.objs.imageprofilefitter.m.setimage.a.sigma := [=];
help::pkg.general.images.objs.imageprofilefitter.m.setimage.a.sigma.d := 'Weights image';
help::pkg.general.images.objs.imageprofilefitter.m.setimage.a.sigma.def := 'None';
help::pkg.general.images.objs.imageprofilefitter.m.setimage.a.sigma.a := 'String';
help::pkg.general.images.objs.imageprofilefitter.m.setimage.s := 'setimage(infile, infile2, sigma)';
help::pkg.general.images.objs.imageprofilefitter.m.type := [=];
help::pkg.general.images.objs.imageprofilefitter.m.type.d := 'What type is this tool ?';
help::pkg.general.images.objs.imageprofilefitter.m.type.s := 'type()';
help::pkg.general.images.objs.imagepol := [=];
help::pkg.general.images.objs.imagepol.m := [=];
help::pkg.general.images.objs.imagepol.c := [=];
help::pkg.general.images.objs.imagepol.d := 'Polarimetric analysis of images';
help::pkg.general.images.objs.imagepol.c.imagepol := [=];
help::pkg.general.images.objs.imagepol.c.imagepol.d := 'Create an Imagepol tool from an AIPS++\ image file';
help::pkg.general.images.objs.imagepol.c.imagepol.a.infile := [=];
help::pkg.general.images.objs.imagepol.c.imagepol.a.infile.d := 'Input image (file name or tool)';
help::pkg.general.images.objs.imagepol.c.imagepol.a.infile.def := '';
help::pkg.general.images.objs.imagepol.c.imagepol.a.infile.a := 'String or Image tool';
help::pkg.general.images.objs.imagepol.c.imagepol.s := 'imagepol(infile)';
help::pkg.general.images.objs.imagepol.c.imagepoltestimage := [=];
help::pkg.general.images.objs.imagepol.c.imagepoltestimage.d := 'Create an Imagepol tool and a test image file';
help::pkg.general.images.objs.imagepol.c.imagepoltestimage.a.outfile := [=];
help::pkg.general.images.objs.imagepol.c.imagepoltestimage.a.outfile.d := 'Output image file name';
help::pkg.general.images.objs.imagepol.c.imagepoltestimage.a.outfile.def := 'imagepol.iquv';
help::pkg.general.images.objs.imagepol.c.imagepoltestimage.a.outfile.a := 'String';
help::pkg.general.images.objs.imagepol.c.imagepoltestimage.a.rm := [=];
help::pkg.general.images.objs.imagepol.c.imagepoltestimage.a.rm.d := 'Rotation Measure (rad/m/m)';
help::pkg.general.images.objs.imagepol.c.imagepoltestimage.a.rm.def := 'Auto no-ambiguity determine';
help::pkg.general.images.objs.imagepol.c.imagepoltestimage.a.rm.a := 'Vector of float';
help::pkg.general.images.objs.imagepol.c.imagepoltestimage.a.pa0 := [=];
help::pkg.general.images.objs.imagepol.c.imagepoltestimage.a.pa0.d := 'Position angle (degrees) at zero wavelength';
help::pkg.general.images.objs.imagepol.c.imagepoltestimage.a.pa0.def := '0';
help::pkg.general.images.objs.imagepol.c.imagepoltestimage.a.pa0.a := 'Float';
help::pkg.general.images.objs.imagepol.c.imagepoltestimage.a.sigma := [=];
help::pkg.general.images.objs.imagepol.c.imagepoltestimage.a.sigma.d := 'Fractional noise level';
help::pkg.general.images.objs.imagepol.c.imagepoltestimage.a.sigma.def := '0.001';
help::pkg.general.images.objs.imagepol.c.imagepoltestimage.a.sigma.a := 'Float';
help::pkg.general.images.objs.imagepol.c.imagepoltestimage.a.nx := [=];
help::pkg.general.images.objs.imagepol.c.imagepoltestimage.a.nx.d := 'Shape of image in x direction';
help::pkg.general.images.objs.imagepol.c.imagepoltestimage.a.nx.def := '32';
help::pkg.general.images.objs.imagepol.c.imagepoltestimage.a.nx.a := 'Integer';
help::pkg.general.images.objs.imagepol.c.imagepoltestimage.a.ny := [=];
help::pkg.general.images.objs.imagepol.c.imagepoltestimage.a.ny.d := 'Shape of image in y direction';
help::pkg.general.images.objs.imagepol.c.imagepoltestimage.a.ny.def := '32';
help::pkg.general.images.objs.imagepol.c.imagepoltestimage.a.ny.a := 'Integer';
help::pkg.general.images.objs.imagepol.c.imagepoltestimage.a.nf := [=];
help::pkg.general.images.objs.imagepol.c.imagepoltestimage.a.nf.d := 'Shape of image in frequency direction';
help::pkg.general.images.objs.imagepol.c.imagepoltestimage.a.nf.def := '32';
help::pkg.general.images.objs.imagepol.c.imagepoltestimage.a.nf.a := 'Integer';
help::pkg.general.images.objs.imagepol.c.imagepoltestimage.a.f0 := [=];
help::pkg.general.images.objs.imagepol.c.imagepoltestimage.a.f0.d := 'Reference frequency (Hz)';
help::pkg.general.images.objs.imagepol.c.imagepoltestimage.a.f0.def := '1.4e9';
help::pkg.general.images.objs.imagepol.c.imagepoltestimage.a.f0.a := 'Float';
help::pkg.general.images.objs.imagepol.c.imagepoltestimage.a.bw := [=];
help::pkg.general.images.objs.imagepol.c.imagepoltestimage.a.bw.d := 'Bandwidth (Hz)';
help::pkg.general.images.objs.imagepol.c.imagepoltestimage.a.bw.def := '128e6';
help::pkg.general.images.objs.imagepol.c.imagepoltestimage.a.bw.a := 'Float';
help::pkg.general.images.objs.imagepol.c.imagepoltestimage.s := 'imagepoltestimage(outfile, rm, pa0, sigma, nx, ny, nf, f0, bw)';
help::pkg.general.images.objs.imagepol.m.complexlinpol := [=];
help::pkg.general.images.objs.imagepol.m.complexlinpol.d := 'Complex linear polarization';
help::pkg.general.images.objs.imagepol.m.complexlinpol.a.outfile := [=];
help::pkg.general.images.objs.imagepol.m.complexlinpol.a.outfile.d := 'Output image file name';
help::pkg.general.images.objs.imagepol.m.complexlinpol.a.outfile.def := '';
help::pkg.general.images.objs.imagepol.m.complexlinpol.a.outfile.a := 'String';
help::pkg.general.images.objs.imagepol.m.complexlinpol.s := 'complexlinpol(outfile)';
help::pkg.general.images.objs.imagepol.m.complexfraclinpol := [=];
help::pkg.general.images.objs.imagepol.m.complexfraclinpol.d := 'Complex fractional linear polarization';
help::pkg.general.images.objs.imagepol.m.complexfraclinpol.a.outfile := [=];
help::pkg.general.images.objs.imagepol.m.complexfraclinpol.a.outfile.d := 'Output image file name';
help::pkg.general.images.objs.imagepol.m.complexfraclinpol.a.outfile.def := '';
help::pkg.general.images.objs.imagepol.m.complexfraclinpol.a.outfile.a := 'String';
help::pkg.general.images.objs.imagepol.m.complexfraclinpol.s := 'complexfraclinpol(outfile)';
help::pkg.general.images.objs.imagepol.m.depolratio := [=];
help::pkg.general.images.objs.imagepol.m.depolratio.d := 'Linear depolarization ratio';
help::pkg.general.images.objs.imagepol.m.depolratio.a.infile := [=];
help::pkg.general.images.objs.imagepol.m.depolratio.a.infile.d := 'Other image';
help::pkg.general.images.objs.imagepol.m.depolratio.a.infile.def := '';
help::pkg.general.images.objs.imagepol.m.depolratio.a.infile.a := 'String or Image tool';
help::pkg.general.images.objs.imagepol.m.depolratio.a.debias := [=];
help::pkg.general.images.objs.imagepol.m.depolratio.a.debias.d := 'Debias the linearly polarized intensity ?';
help::pkg.general.images.objs.imagepol.m.depolratio.a.debias.def := 'F';
help::pkg.general.images.objs.imagepol.m.depolratio.a.debias.a := 'T or F';
help::pkg.general.images.objs.imagepol.m.depolratio.a.clip := [=];
help::pkg.general.images.objs.imagepol.m.depolratio.a.clip.d := 'Clip level for auto-sigma determination';
help::pkg.general.images.objs.imagepol.m.depolratio.a.clip.def := '10';
help::pkg.general.images.objs.imagepol.m.depolratio.a.clip.a := 'Float';
help::pkg.general.images.objs.imagepol.m.depolratio.a.sigma := [=];
help::pkg.general.images.objs.imagepol.m.depolratio.a.sigma.d := 'Standard deviation of thermal noise';
help::pkg.general.images.objs.imagepol.m.depolratio.a.sigma.def := 'Auto determined';
help::pkg.general.images.objs.imagepol.m.depolratio.a.sigma.a := 'Float';
help::pkg.general.images.objs.imagepol.m.depolratio.a.outfile := [=];
help::pkg.general.images.objs.imagepol.m.depolratio.a.outfile.d := 'Output image file name';
help::pkg.general.images.objs.imagepol.m.depolratio.a.outfile.def := 'Unset';
help::pkg.general.images.objs.imagepol.m.depolratio.a.outfile.a := 'String';
help::pkg.general.images.objs.imagepol.m.depolratio.s := 'depolratio(infile, debias, clip, sigma, outfile)';
help::pkg.general.images.objs.imagepol.m.done := [=];
help::pkg.general.images.objs.imagepol.m.done.d := 'Destroy this Imagepol tool';
help::pkg.general.images.objs.imagepol.m.done.s := 'done()';
help::pkg.general.images.objs.imagepol.m.fourierrotationmeasure := [=];
help::pkg.general.images.objs.imagepol.m.fourierrotationmeasure.d := 'Find Rotation Measure (Fourier approach)';
help::pkg.general.images.objs.imagepol.m.fourierrotationmeasure.a.complex := [=];
help::pkg.general.images.objs.imagepol.m.fourierrotationmeasure.a.complex.d := 'Output complex linear polarization image file name';
help::pkg.general.images.objs.imagepol.m.fourierrotationmeasure.a.complex.def := 'Unset';
help::pkg.general.images.objs.imagepol.m.fourierrotationmeasure.a.complex.a := 'String';
help::pkg.general.images.objs.imagepol.m.fourierrotationmeasure.a.amp := [=];
help::pkg.general.images.objs.imagepol.m.fourierrotationmeasure.a.amp.d := 'Output linear polarization amplitude image file name';
help::pkg.general.images.objs.imagepol.m.fourierrotationmeasure.a.amp.def := 'Unset';
help::pkg.general.images.objs.imagepol.m.fourierrotationmeasure.a.amp.a := 'String';
help::pkg.general.images.objs.imagepol.m.fourierrotationmeasure.a.pa := [=];
help::pkg.general.images.objs.imagepol.m.fourierrotationmeasure.a.pa.d := 'Output linear polarization position angle (degrees) image file name';
help::pkg.general.images.objs.imagepol.m.fourierrotationmeasure.a.pa.def := 'Unset';
help::pkg.general.images.objs.imagepol.m.fourierrotationmeasure.a.pa.a := 'String';
help::pkg.general.images.objs.imagepol.m.fourierrotationmeasure.a.real := [=];
help::pkg.general.images.objs.imagepol.m.fourierrotationmeasure.a.real.d := 'Output linear polarization real image file name';
help::pkg.general.images.objs.imagepol.m.fourierrotationmeasure.a.real.def := 'Unset';
help::pkg.general.images.objs.imagepol.m.fourierrotationmeasure.a.real.a := 'String';
help::pkg.general.images.objs.imagepol.m.fourierrotationmeasure.a.imag := [=];
help::pkg.general.images.objs.imagepol.m.fourierrotationmeasure.a.imag.d := 'Output linear polarization imaginary angle image file name';
help::pkg.general.images.objs.imagepol.m.fourierrotationmeasure.a.imag.def := 'Unset';
help::pkg.general.images.objs.imagepol.m.fourierrotationmeasure.a.imag.a := 'String';
help::pkg.general.images.objs.imagepol.m.fourierrotationmeasure.a.zerolag0 := [=];
help::pkg.general.images.objs.imagepol.m.fourierrotationmeasure.a.zerolag0.d := 'Force zero lag to 0 ?';
help::pkg.general.images.objs.imagepol.m.fourierrotationmeasure.a.zerolag0.def := 'F';
help::pkg.general.images.objs.imagepol.m.fourierrotationmeasure.a.zerolag0.a := 'T or F';
help::pkg.general.images.objs.imagepol.m.fourierrotationmeasure.s := 'fourierrotationmeasure(complex, amp, pa, real, imag, zerolag0)';
help::pkg.general.images.objs.imagepol.m.fraclinpol := [=];
help::pkg.general.images.objs.imagepol.m.fraclinpol.d := 'Fractional linear polarization';
help::pkg.general.images.objs.imagepol.m.fraclinpol.a.debias := [=];
help::pkg.general.images.objs.imagepol.m.fraclinpol.a.debias.d := 'Debias the linearly polarized intensity ?';
help::pkg.general.images.objs.imagepol.m.fraclinpol.a.debias.def := 'F';
help::pkg.general.images.objs.imagepol.m.fraclinpol.a.debias.a := 'T or F';
help::pkg.general.images.objs.imagepol.m.fraclinpol.a.clip := [=];
help::pkg.general.images.objs.imagepol.m.fraclinpol.a.clip.d := 'Clip level for auto-sigma determination';
help::pkg.general.images.objs.imagepol.m.fraclinpol.a.clip.def := '10';
help::pkg.general.images.objs.imagepol.m.fraclinpol.a.clip.a := 'Float';
help::pkg.general.images.objs.imagepol.m.fraclinpol.a.sigma := [=];
help::pkg.general.images.objs.imagepol.m.fraclinpol.a.sigma.d := 'Standard deviation of thermal noise';
help::pkg.general.images.objs.imagepol.m.fraclinpol.a.sigma.def := 'Auto determined';
help::pkg.general.images.objs.imagepol.m.fraclinpol.a.sigma.a := 'Float';
help::pkg.general.images.objs.imagepol.m.fraclinpol.a.outfile := [=];
help::pkg.general.images.objs.imagepol.m.fraclinpol.a.outfile.d := 'Output image file name';
help::pkg.general.images.objs.imagepol.m.fraclinpol.a.outfile.def := 'Unset';
help::pkg.general.images.objs.imagepol.m.fraclinpol.a.outfile.a := 'String';
help::pkg.general.images.objs.imagepol.m.fraclinpol.s := 'fraclinpol(debias, clip, sigma, outfile)';
help::pkg.general.images.objs.imagepol.m.fractotpol := [=];
help::pkg.general.images.objs.imagepol.m.fractotpol.d := 'Fractional total polarization';
help::pkg.general.images.objs.imagepol.m.fractotpol.a.debias := [=];
help::pkg.general.images.objs.imagepol.m.fractotpol.a.debias.d := 'Debias the total polarized intensity ?';
help::pkg.general.images.objs.imagepol.m.fractotpol.a.debias.def := 'F';
help::pkg.general.images.objs.imagepol.m.fractotpol.a.debias.a := 'T or F';
help::pkg.general.images.objs.imagepol.m.fractotpol.a.clip := [=];
help::pkg.general.images.objs.imagepol.m.fractotpol.a.clip.d := 'Clip level for auto-sigma determination';
help::pkg.general.images.objs.imagepol.m.fractotpol.a.clip.def := '10';
help::pkg.general.images.objs.imagepol.m.fractotpol.a.clip.a := 'Float';
help::pkg.general.images.objs.imagepol.m.fractotpol.a.sigma := [=];
help::pkg.general.images.objs.imagepol.m.fractotpol.a.sigma.d := 'Standard deviation of thermal noise';
help::pkg.general.images.objs.imagepol.m.fractotpol.a.sigma.def := 'Auto determined';
help::pkg.general.images.objs.imagepol.m.fractotpol.a.sigma.a := 'Float';
help::pkg.general.images.objs.imagepol.m.fractotpol.a.outfile := [=];
help::pkg.general.images.objs.imagepol.m.fractotpol.a.outfile.d := 'Output image file name';
help::pkg.general.images.objs.imagepol.m.fractotpol.a.outfile.def := 'Unset';
help::pkg.general.images.objs.imagepol.m.fractotpol.a.outfile.a := 'String';
help::pkg.general.images.objs.imagepol.m.fractotpol.s := 'fractotpol(debias, clip, sigma, outfile)';
help::pkg.general.images.objs.imagepol.m.id := [=];
help::pkg.general.images.objs.imagepol.m.id.d := 'Return the fundamental identifier of this tool';
help::pkg.general.images.objs.imagepol.m.id.s := 'id()';
help::pkg.general.images.objs.imagepol.m.linpolint := [=];
help::pkg.general.images.objs.imagepol.m.linpolint.d := 'Linearly polarized intensity';
help::pkg.general.images.objs.imagepol.m.linpolint.a.debias := [=];
help::pkg.general.images.objs.imagepol.m.linpolint.a.debias.d := 'Debias the linearly polarized intensity ?';
help::pkg.general.images.objs.imagepol.m.linpolint.a.debias.def := 'F';
help::pkg.general.images.objs.imagepol.m.linpolint.a.debias.a := 'T or F';
help::pkg.general.images.objs.imagepol.m.linpolint.a.clip := [=];
help::pkg.general.images.objs.imagepol.m.linpolint.a.clip.d := 'Clip level for auto-sigma determination';
help::pkg.general.images.objs.imagepol.m.linpolint.a.clip.def := '10';
help::pkg.general.images.objs.imagepol.m.linpolint.a.clip.a := 'Float';
help::pkg.general.images.objs.imagepol.m.linpolint.a.sigma := [=];
help::pkg.general.images.objs.imagepol.m.linpolint.a.sigma.d := 'Standard deviation of thermal noise';
help::pkg.general.images.objs.imagepol.m.linpolint.a.sigma.def := 'Auto determined';
help::pkg.general.images.objs.imagepol.m.linpolint.a.sigma.a := 'Float';
help::pkg.general.images.objs.imagepol.m.linpolint.a.outfile := [=];
help::pkg.general.images.objs.imagepol.m.linpolint.a.outfile.d := 'Output image file name';
help::pkg.general.images.objs.imagepol.m.linpolint.a.outfile.def := 'Unset';
help::pkg.general.images.objs.imagepol.m.linpolint.a.outfile.a := 'String';
help::pkg.general.images.objs.imagepol.m.linpolint.s := 'linpolint(debias, clip, sigma, outfile)';
help::pkg.general.images.objs.imagepol.m.linpolposang := [=];
help::pkg.general.images.objs.imagepol.m.linpolposang.d := 'Linearly polarized position angle';
help::pkg.general.images.objs.imagepol.m.linpolposang.s := 'linpolposang()';
help::pkg.general.images.objs.imagepol.m.makecomplex := [=];
help::pkg.general.images.objs.imagepol.m.makecomplex.d := 'Make a Complex image';
help::pkg.general.images.objs.imagepol.m.makecomplex.a.complex := [=];
help::pkg.general.images.objs.imagepol.m.makecomplex.a.complex.d := 'Output complex image file name';
help::pkg.general.images.objs.imagepol.m.makecomplex.a.complex.def := '';
help::pkg.general.images.objs.imagepol.m.makecomplex.a.complex.a := 'String';
help::pkg.general.images.objs.imagepol.m.makecomplex.a.real := [=];
help::pkg.general.images.objs.imagepol.m.makecomplex.a.real.d := 'Input real image file name';
help::pkg.general.images.objs.imagepol.m.makecomplex.a.real.def := 'Unset';
help::pkg.general.images.objs.imagepol.m.makecomplex.a.real.a := 'String';
help::pkg.general.images.objs.imagepol.m.makecomplex.a.imag := [=];
help::pkg.general.images.objs.imagepol.m.makecomplex.a.imag.d := 'Input imaginary image file name';
help::pkg.general.images.objs.imagepol.m.makecomplex.a.imag.def := 'Unset';
help::pkg.general.images.objs.imagepol.m.makecomplex.a.imag.a := 'String';
help::pkg.general.images.objs.imagepol.m.makecomplex.a.amp := [=];
help::pkg.general.images.objs.imagepol.m.makecomplex.a.amp.d := 'Input amplitude image file name';
help::pkg.general.images.objs.imagepol.m.makecomplex.a.amp.def := 'Unset';
help::pkg.general.images.objs.imagepol.m.makecomplex.a.amp.a := 'String';
help::pkg.general.images.objs.imagepol.m.makecomplex.a.phase := [=];
help::pkg.general.images.objs.imagepol.m.makecomplex.a.phase.d := 'Input phase image file name';
help::pkg.general.images.objs.imagepol.m.makecomplex.a.phase.def := 'Unset';
help::pkg.general.images.objs.imagepol.m.makecomplex.a.phase.a := 'String';
help::pkg.general.images.objs.imagepol.m.makecomplex.s := 'makecomplex(complex, real, imag, amp, phase)';
help::pkg.general.images.objs.imagepol.m.pol := [=];
help::pkg.general.images.objs.imagepol.m.pol.d := 'Polarized quantities';
help::pkg.general.images.objs.imagepol.m.pol.a.which := [=];
help::pkg.general.images.objs.imagepol.m.pol.a.which.d := 'Specify operation';
help::pkg.general.images.objs.imagepol.m.pol.a.which.def := '';
help::pkg.general.images.objs.imagepol.m.pol.a.which.a := 'String: One of \' lpi\' , \' tpi\' , \' lppa\' , \' flp\' , \' ftp\'  (case insensitive)';
help::pkg.general.images.objs.imagepol.m.pol.a.debias := [=];
help::pkg.general.images.objs.imagepol.m.pol.a.debias.d := 'Debias the polarized intensity ?';
help::pkg.general.images.objs.imagepol.m.pol.a.debias.def := 'F';
help::pkg.general.images.objs.imagepol.m.pol.a.debias.a := 'T or F';
help::pkg.general.images.objs.imagepol.m.pol.a.clip := [=];
help::pkg.general.images.objs.imagepol.m.pol.a.clip.d := 'Clip level for auto-sigma determination';
help::pkg.general.images.objs.imagepol.m.pol.a.clip.def := '10';
help::pkg.general.images.objs.imagepol.m.pol.a.clip.a := 'Float';
help::pkg.general.images.objs.imagepol.m.pol.a.sigma := [=];
help::pkg.general.images.objs.imagepol.m.pol.a.sigma.d := 'Standard deviation of thermal noise';
help::pkg.general.images.objs.imagepol.m.pol.a.sigma.def := 'Auto determined';
help::pkg.general.images.objs.imagepol.m.pol.a.sigma.a := 'Float';
help::pkg.general.images.objs.imagepol.m.pol.a.outfile := [=];
help::pkg.general.images.objs.imagepol.m.pol.a.outfile.d := 'Output image file name';
help::pkg.general.images.objs.imagepol.m.pol.a.outfile.def := 'Unset';
help::pkg.general.images.objs.imagepol.m.pol.a.outfile.a := 'String';
help::pkg.general.images.objs.imagepol.m.pol.s := 'pol(which, debias, clip, sigma, outfile)';
help::pkg.general.images.objs.imagepol.m.rotationmeasure := [=];
help::pkg.general.images.objs.imagepol.m.rotationmeasure.d := 'Find Rotation Measure (traditional approach)';
help::pkg.general.images.objs.imagepol.m.rotationmeasure.a.rm := [=];
help::pkg.general.images.objs.imagepol.m.rotationmeasure.a.rm.d := 'Output Rotation Measure image file name';
help::pkg.general.images.objs.imagepol.m.rotationmeasure.a.rm.def := 'Unset';
help::pkg.general.images.objs.imagepol.m.rotationmeasure.a.rm.a := 'String';
help::pkg.general.images.objs.imagepol.m.rotationmeasure.a.rmerr := [=];
help::pkg.general.images.objs.imagepol.m.rotationmeasure.a.rmerr.d := 'Output Rotation Measure error image file name';
help::pkg.general.images.objs.imagepol.m.rotationmeasure.a.rmerr.def := 'Unset';
help::pkg.general.images.objs.imagepol.m.rotationmeasure.a.rmerr.a := 'String';
help::pkg.general.images.objs.imagepol.m.rotationmeasure.a.pa0 := [=];
help::pkg.general.images.objs.imagepol.m.rotationmeasure.a.pa0.d := 'Output position angle (degrees) at zero wavelength image file name';
help::pkg.general.images.objs.imagepol.m.rotationmeasure.a.pa0.def := 'Unset';
help::pkg.general.images.objs.imagepol.m.rotationmeasure.a.pa0.a := 'String';
help::pkg.general.images.objs.imagepol.m.rotationmeasure.a.pa0err := [=];
help::pkg.general.images.objs.imagepol.m.rotationmeasure.a.pa0err.d := 'Output position angle (degrees) at zero wavelength error image file name';
help::pkg.general.images.objs.imagepol.m.rotationmeasure.a.pa0err.def := 'Unset';
help::pkg.general.images.objs.imagepol.m.rotationmeasure.a.pa0err.a := 'String';
help::pkg.general.images.objs.imagepol.m.rotationmeasure.a.nturns := [=];
help::pkg.general.images.objs.imagepol.m.rotationmeasure.a.nturns.d := 'Output number of turns image file name';
help::pkg.general.images.objs.imagepol.m.rotationmeasure.a.nturns.def := 'Unset';
help::pkg.general.images.objs.imagepol.m.rotationmeasure.a.nturns.a := 'String';
help::pkg.general.images.objs.imagepol.m.rotationmeasure.a.chisq := [=];
help::pkg.general.images.objs.imagepol.m.rotationmeasure.a.chisq.d := 'Output reduced chi squared image file name';
help::pkg.general.images.objs.imagepol.m.rotationmeasure.a.chisq.def := 'Unset';
help::pkg.general.images.objs.imagepol.m.rotationmeasure.a.chisq.a := 'String';
help::pkg.general.images.objs.imagepol.m.rotationmeasure.a.sigma := [=];
help::pkg.general.images.objs.imagepol.m.rotationmeasure.a.sigma.d := 'Estimate of the thermal noise';
help::pkg.general.images.objs.imagepol.m.rotationmeasure.a.sigma.def := 'Auto';
help::pkg.general.images.objs.imagepol.m.rotationmeasure.a.sigma.a := 'Float';
help::pkg.general.images.objs.imagepol.m.rotationmeasure.a.rmfg := [=];
help::pkg.general.images.objs.imagepol.m.rotationmeasure.a.rmfg.d := 'Foreground Rotation Measure (rad/m/m) to subtract';
help::pkg.general.images.objs.imagepol.m.rotationmeasure.a.rmfg.def := '0';
help::pkg.general.images.objs.imagepol.m.rotationmeasure.a.rmfg.a := 'Float';
help::pkg.general.images.objs.imagepol.m.rotationmeasure.a.rmmax := [=];
help::pkg.general.images.objs.imagepol.m.rotationmeasure.a.rmmax.d := 'Maximum Rotation Measure (rad/m/m) to solve for';
help::pkg.general.images.objs.imagepol.m.rotationmeasure.a.rmmax.def := '0';
help::pkg.general.images.objs.imagepol.m.rotationmeasure.a.rmmax.a := 'Float';
help::pkg.general.images.objs.imagepol.m.rotationmeasure.a.maxpaerr := [=];
help::pkg.general.images.objs.imagepol.m.rotationmeasure.a.maxpaerr.d := 'Maximum input position angle error (degrees) to allow';
help::pkg.general.images.objs.imagepol.m.rotationmeasure.a.maxpaerr.def := 'None';
help::pkg.general.images.objs.imagepol.m.rotationmeasure.a.maxpaerr.a := 'Float';
help::pkg.general.images.objs.imagepol.m.rotationmeasure.a.plotter := [=];
help::pkg.general.images.objs.imagepol.m.rotationmeasure.a.plotter.d := 'Name of plotter';
help::pkg.general.images.objs.imagepol.m.rotationmeasure.a.plotter.def := 'None';
help::pkg.general.images.objs.imagepol.m.rotationmeasure.a.plotter.a := 'String';
help::pkg.general.images.objs.imagepol.m.rotationmeasure.a.nx := [=];
help::pkg.general.images.objs.imagepol.m.rotationmeasure.a.nx.d := 'Number of plots in x direction';
help::pkg.general.images.objs.imagepol.m.rotationmeasure.a.nx.def := '5';
help::pkg.general.images.objs.imagepol.m.rotationmeasure.a.nx.a := 'Integer';
help::pkg.general.images.objs.imagepol.m.rotationmeasure.a.ny := [=];
help::pkg.general.images.objs.imagepol.m.rotationmeasure.a.ny.d := 'Number of plots in y direction';
help::pkg.general.images.objs.imagepol.m.rotationmeasure.a.ny.def := '5';
help::pkg.general.images.objs.imagepol.m.rotationmeasure.a.ny.a := 'Integer';
help::pkg.general.images.objs.imagepol.m.rotationmeasure.s := 'rotationmeasure(rm, rmerr, pa0, pa0err, nturns, chisq, sigma, rmfg, rmmax, maxpaerr, plotter, nx, ny)';
help::pkg.general.images.objs.imagepol.m.sigma := [=];
help::pkg.general.images.objs.imagepol.m.sigma.d := 'Find best guess at thermal noise';
help::pkg.general.images.objs.imagepol.m.sigma.a.clip := [=];
help::pkg.general.images.objs.imagepol.m.sigma.a.clip.d := 'Clip level for auto-sigma determination';
help::pkg.general.images.objs.imagepol.m.sigma.a.clip.def := '10';
help::pkg.general.images.objs.imagepol.m.sigma.a.clip.a := 'Float';
help::pkg.general.images.objs.imagepol.m.sigma.s := 'sigma(clip)';
help::pkg.general.images.objs.imagepol.m.sigmadepolratio := [=];
help::pkg.general.images.objs.imagepol.m.sigmadepolratio.d := 'Error in linear depolarization ratio';
help::pkg.general.images.objs.imagepol.m.sigmadepolratio.a.infile := [=];
help::pkg.general.images.objs.imagepol.m.sigmadepolratio.a.infile.d := 'Other image';
help::pkg.general.images.objs.imagepol.m.sigmadepolratio.a.infile.def := '';
help::pkg.general.images.objs.imagepol.m.sigmadepolratio.a.infile.a := 'String or Image tool';
help::pkg.general.images.objs.imagepol.m.sigmadepolratio.a.debias := [=];
help::pkg.general.images.objs.imagepol.m.sigmadepolratio.a.debias.d := 'Debias the linearly polarized intensity ?';
help::pkg.general.images.objs.imagepol.m.sigmadepolratio.a.debias.def := 'F';
help::pkg.general.images.objs.imagepol.m.sigmadepolratio.a.debias.a := 'T or F';
help::pkg.general.images.objs.imagepol.m.sigmadepolratio.a.clip := [=];
help::pkg.general.images.objs.imagepol.m.sigmadepolratio.a.clip.d := 'Clip level for auto-sigma determination';
help::pkg.general.images.objs.imagepol.m.sigmadepolratio.a.clip.def := '10';
help::pkg.general.images.objs.imagepol.m.sigmadepolratio.a.clip.a := 'Float';
help::pkg.general.images.objs.imagepol.m.sigmadepolratio.a.sigma := [=];
help::pkg.general.images.objs.imagepol.m.sigmadepolratio.a.sigma.d := 'Standard deviation of thermal noise';
help::pkg.general.images.objs.imagepol.m.sigmadepolratio.a.sigma.def := 'Auto determined';
help::pkg.general.images.objs.imagepol.m.sigmadepolratio.a.sigma.a := 'Float';
help::pkg.general.images.objs.imagepol.m.sigmadepolratio.a.outfile := [=];
help::pkg.general.images.objs.imagepol.m.sigmadepolratio.a.outfile.d := 'Output image file name';
help::pkg.general.images.objs.imagepol.m.sigmadepolratio.a.outfile.def := 'Unset';
help::pkg.general.images.objs.imagepol.m.sigmadepolratio.a.outfile.a := 'String';
help::pkg.general.images.objs.imagepol.m.sigmadepolratio.s := 'sigmadepolratio(infile, debias, clip, sigma, outfile)';
help::pkg.general.images.objs.imagepol.m.sigmafraclinpol := [=];
help::pkg.general.images.objs.imagepol.m.sigmafraclinpol.d := 'Error in fractional linear polarization';
help::pkg.general.images.objs.imagepol.m.sigmafraclinpol.a.clip := [=];
help::pkg.general.images.objs.imagepol.m.sigmafraclinpol.a.clip.d := 'Clip level for auto-sigma determination';
help::pkg.general.images.objs.imagepol.m.sigmafraclinpol.a.clip.def := '10';
help::pkg.general.images.objs.imagepol.m.sigmafraclinpol.a.clip.a := 'Float';
help::pkg.general.images.objs.imagepol.m.sigmafraclinpol.a.sigma := [=];
help::pkg.general.images.objs.imagepol.m.sigmafraclinpol.a.sigma.d := 'Standard deviation of thermal noise';
help::pkg.general.images.objs.imagepol.m.sigmafraclinpol.a.sigma.def := 'Auto determined';
help::pkg.general.images.objs.imagepol.m.sigmafraclinpol.a.sigma.a := 'Float';
help::pkg.general.images.objs.imagepol.m.sigmafraclinpol.a.outfile := [=];
help::pkg.general.images.objs.imagepol.m.sigmafraclinpol.a.outfile.d := 'Output image file name';
help::pkg.general.images.objs.imagepol.m.sigmafraclinpol.a.outfile.def := 'Unset';
help::pkg.general.images.objs.imagepol.m.sigmafraclinpol.a.outfile.a := 'String';
help::pkg.general.images.objs.imagepol.m.sigmafraclinpol.s := 'sigmafraclinpol(clip, sigma, outfile)';
help::pkg.general.images.objs.imagepol.m.sigmafractotpol := [=];
help::pkg.general.images.objs.imagepol.m.sigmafractotpol.d := 'Error in fractional total polarization';
help::pkg.general.images.objs.imagepol.m.sigmafractotpol.a.clip := [=];
help::pkg.general.images.objs.imagepol.m.sigmafractotpol.a.clip.d := 'Clip level for auto-sigma determination';
help::pkg.general.images.objs.imagepol.m.sigmafractotpol.a.clip.def := '10';
help::pkg.general.images.objs.imagepol.m.sigmafractotpol.a.clip.a := 'Float';
help::pkg.general.images.objs.imagepol.m.sigmafractotpol.a.sigma := [=];
help::pkg.general.images.objs.imagepol.m.sigmafractotpol.a.sigma.d := 'Standard deviation of thermal noise';
help::pkg.general.images.objs.imagepol.m.sigmafractotpol.a.sigma.def := 'Auto determined';
help::pkg.general.images.objs.imagepol.m.sigmafractotpol.a.sigma.a := 'Float';
help::pkg.general.images.objs.imagepol.m.sigmafractotpol.a.outfile := [=];
help::pkg.general.images.objs.imagepol.m.sigmafractotpol.a.outfile.d := 'Output image file name';
help::pkg.general.images.objs.imagepol.m.sigmafractotpol.a.outfile.def := 'Unset';
help::pkg.general.images.objs.imagepol.m.sigmafractotpol.a.outfile.a := 'String';
help::pkg.general.images.objs.imagepol.m.sigmafractotpol.s := 'sigmafractotpol(clip, sigma, outfile)';
help::pkg.general.images.objs.imagepol.m.sigmalinpolint := [=];
help::pkg.general.images.objs.imagepol.m.sigmalinpolint.d := 'Error in linearly polarized intensity';
help::pkg.general.images.objs.imagepol.m.sigmalinpolint.a.clip := [=];
help::pkg.general.images.objs.imagepol.m.sigmalinpolint.a.clip.d := 'Clip level for auto-sigma determination';
help::pkg.general.images.objs.imagepol.m.sigmalinpolint.a.clip.def := '10';
help::pkg.general.images.objs.imagepol.m.sigmalinpolint.a.clip.a := 'Float';
help::pkg.general.images.objs.imagepol.m.sigmalinpolint.a.sigma := [=];
help::pkg.general.images.objs.imagepol.m.sigmalinpolint.a.sigma.d := 'Standard deviation of thermal noise';
help::pkg.general.images.objs.imagepol.m.sigmalinpolint.a.sigma.def := 'Auto determined';
help::pkg.general.images.objs.imagepol.m.sigmalinpolint.a.sigma.a := 'Float';
help::pkg.general.images.objs.imagepol.m.sigmalinpolint.a.outfile := [=];
help::pkg.general.images.objs.imagepol.m.sigmalinpolint.a.outfile.d := 'Output image file name';
help::pkg.general.images.objs.imagepol.m.sigmalinpolint.a.outfile.def := 'Unset';
help::pkg.general.images.objs.imagepol.m.sigmalinpolint.a.outfile.a := 'String';
help::pkg.general.images.objs.imagepol.m.sigmalinpolint.s := 'sigmalinpolint(clip, sigma, outfile)';
help::pkg.general.images.objs.imagepol.m.sigmalinpolposang := [=];
help::pkg.general.images.objs.imagepol.m.sigmalinpolposang.d := 'Error in linearly polarized position angle';
help::pkg.general.images.objs.imagepol.m.sigmalinpolposang.a.clip := [=];
help::pkg.general.images.objs.imagepol.m.sigmalinpolposang.a.clip.d := 'Clip level for auto-sigma determination';
help::pkg.general.images.objs.imagepol.m.sigmalinpolposang.a.clip.def := '10';
help::pkg.general.images.objs.imagepol.m.sigmalinpolposang.a.clip.a := 'Float';
help::pkg.general.images.objs.imagepol.m.sigmalinpolposang.a.sigma := [=];
help::pkg.general.images.objs.imagepol.m.sigmalinpolposang.a.sigma.d := 'Standard deviation of thermal noise';
help::pkg.general.images.objs.imagepol.m.sigmalinpolposang.a.sigma.def := 'Auto determined';
help::pkg.general.images.objs.imagepol.m.sigmalinpolposang.a.sigma.a := 'Float';
help::pkg.general.images.objs.imagepol.m.sigmalinpolposang.a.outfile := [=];
help::pkg.general.images.objs.imagepol.m.sigmalinpolposang.a.outfile.d := 'Output image file name';
help::pkg.general.images.objs.imagepol.m.sigmalinpolposang.a.outfile.def := 'Unset';
help::pkg.general.images.objs.imagepol.m.sigmalinpolposang.a.outfile.a := 'String';
help::pkg.general.images.objs.imagepol.m.sigmalinpolposang.s := 'sigmalinpolposang(clip, sigma, outfile)';
help::pkg.general.images.objs.imagepol.m.sigmastokes := [=];
help::pkg.general.images.objs.imagepol.m.sigmastokes.d := 'Find standard deviation of specified Stokes data';
help::pkg.general.images.objs.imagepol.m.sigmastokes.a.which := [=];
help::pkg.general.images.objs.imagepol.m.sigmastokes.a.which.d := 'Specify Stokes';
help::pkg.general.images.objs.imagepol.m.sigmastokes.a.which.def := '';
help::pkg.general.images.objs.imagepol.m.sigmastokes.a.which.a := 'String: One of \' I\' , \' Q\' , \' U\' , \' V\'  (case insensitive)';
help::pkg.general.images.objs.imagepol.m.sigmastokes.a.clip := [=];
help::pkg.general.images.objs.imagepol.m.sigmastokes.a.clip.d := 'Clip level for auto-sigma determination';
help::pkg.general.images.objs.imagepol.m.sigmastokes.a.clip.def := '10';
help::pkg.general.images.objs.imagepol.m.sigmastokes.a.clip.a := 'Float';
help::pkg.general.images.objs.imagepol.m.sigmastokes.s := 'sigmastokes(which, clip)';
help::pkg.general.images.objs.imagepol.m.sigmastokesi := [=];
help::pkg.general.images.objs.imagepol.m.sigmastokesi.d := 'Find standard deviation of Stokes I data';
help::pkg.general.images.objs.imagepol.m.sigmastokesi.a.clip := [=];
help::pkg.general.images.objs.imagepol.m.sigmastokesi.a.clip.d := 'Clip level for auto-sigma determination';
help::pkg.general.images.objs.imagepol.m.sigmastokesi.a.clip.def := '10';
help::pkg.general.images.objs.imagepol.m.sigmastokesi.a.clip.a := 'Float';
help::pkg.general.images.objs.imagepol.m.sigmastokesi.s := 'sigmastokesi(clip)';
help::pkg.general.images.objs.imagepol.m.sigmastokesq := [=];
help::pkg.general.images.objs.imagepol.m.sigmastokesq.d := 'Find standard deviation of Stokes Q data';
help::pkg.general.images.objs.imagepol.m.sigmastokesq.a.clip := [=];
help::pkg.general.images.objs.imagepol.m.sigmastokesq.a.clip.d := 'Clip level for auto-sigma determination';
help::pkg.general.images.objs.imagepol.m.sigmastokesq.a.clip.def := '10';
help::pkg.general.images.objs.imagepol.m.sigmastokesq.a.clip.a := 'Float';
help::pkg.general.images.objs.imagepol.m.sigmastokesq.s := 'sigmastokesq(clip)';
help::pkg.general.images.objs.imagepol.m.sigmastokesu := [=];
help::pkg.general.images.objs.imagepol.m.sigmastokesu.d := 'Find standard deviation of Stokes U data';
help::pkg.general.images.objs.imagepol.m.sigmastokesu.a.clip := [=];
help::pkg.general.images.objs.imagepol.m.sigmastokesu.a.clip.d := 'Clip level for auto-sigma determination';
help::pkg.general.images.objs.imagepol.m.sigmastokesu.a.clip.def := '10';
help::pkg.general.images.objs.imagepol.m.sigmastokesu.a.clip.a := 'Float';
help::pkg.general.images.objs.imagepol.m.sigmastokesu.s := 'sigmastokesu(clip)';
help::pkg.general.images.objs.imagepol.m.sigmastokesv := [=];
help::pkg.general.images.objs.imagepol.m.sigmastokesv.d := 'Find standard deviation of Stokes V data';
help::pkg.general.images.objs.imagepol.m.sigmastokesv.a.clip := [=];
help::pkg.general.images.objs.imagepol.m.sigmastokesv.a.clip.d := 'Clip level for auto-sigma determination';
help::pkg.general.images.objs.imagepol.m.sigmastokesv.a.clip.def := '10';
help::pkg.general.images.objs.imagepol.m.sigmastokesv.a.clip.a := 'Float';
help::pkg.general.images.objs.imagepol.m.sigmastokesv.s := 'sigmastokesv(clip)';
help::pkg.general.images.objs.imagepol.m.sigmatotpolint := [=];
help::pkg.general.images.objs.imagepol.m.sigmatotpolint.d := 'Error in total polarized intensity';
help::pkg.general.images.objs.imagepol.m.sigmatotpolint.a.clip := [=];
help::pkg.general.images.objs.imagepol.m.sigmatotpolint.a.clip.d := 'Clip level for auto-sigma determination';
help::pkg.general.images.objs.imagepol.m.sigmatotpolint.a.clip.def := '10';
help::pkg.general.images.objs.imagepol.m.sigmatotpolint.a.clip.a := 'Float';
help::pkg.general.images.objs.imagepol.m.sigmatotpolint.a.sigma := [=];
help::pkg.general.images.objs.imagepol.m.sigmatotpolint.a.sigma.d := 'Standard deviation of thermal noise';
help::pkg.general.images.objs.imagepol.m.sigmatotpolint.a.sigma.def := 'Auto determined';
help::pkg.general.images.objs.imagepol.m.sigmatotpolint.a.sigma.a := 'Float';
help::pkg.general.images.objs.imagepol.m.sigmatotpolint.s := 'sigmatotpolint(clip, sigma)';
help::pkg.general.images.objs.imagepol.m.stokes := [=];
help::pkg.general.images.objs.imagepol.m.stokes.d := 'Stokes';
help::pkg.general.images.objs.imagepol.m.stokes.a.which := [=];
help::pkg.general.images.objs.imagepol.m.stokes.a.which.d := 'Specify Stokes';
help::pkg.general.images.objs.imagepol.m.stokes.a.which.def := '';
help::pkg.general.images.objs.imagepol.m.stokes.a.which.a := 'String: One of \' I\' , \' Q\' , \' U\' , \' V\'  (case insensitive)';
help::pkg.general.images.objs.imagepol.m.stokes.a.outfile := [=];
help::pkg.general.images.objs.imagepol.m.stokes.a.outfile.d := 'Output image file name';
help::pkg.general.images.objs.imagepol.m.stokes.a.outfile.def := 'Unset';
help::pkg.general.images.objs.imagepol.m.stokes.a.outfile.a := 'String';
help::pkg.general.images.objs.imagepol.m.stokes.s := 'stokes(which, outfile)';
help::pkg.general.images.objs.imagepol.m.stokesi := [=];
help::pkg.general.images.objs.imagepol.m.stokesi.d := 'Stokes I';
help::pkg.general.images.objs.imagepol.m.stokesi.s := 'stokesi()';
help::pkg.general.images.objs.imagepol.m.stokesq := [=];
help::pkg.general.images.objs.imagepol.m.stokesq.d := 'Stokes Q';
help::pkg.general.images.objs.imagepol.m.stokesq.s := 'stokesq()';
help::pkg.general.images.objs.imagepol.m.stokesu := [=];
help::pkg.general.images.objs.imagepol.m.stokesu.d := 'Stokes U';
help::pkg.general.images.objs.imagepol.m.stokesu.s := 'stokesu()';
help::pkg.general.images.objs.imagepol.m.stokesv := [=];
help::pkg.general.images.objs.imagepol.m.stokesv.d := 'Stokes V';
help::pkg.general.images.objs.imagepol.m.stokesv.s := 'stokesv()';
help::pkg.general.images.objs.imagepol.m.summary := [=];
help::pkg.general.images.objs.imagepol.m.summary.d := 'Summarise Imagepol tool';
help::pkg.general.images.objs.imagepol.m.summary.s := 'summary()';
help::pkg.general.images.objs.imagepol.m.totpolint := [=];
help::pkg.general.images.objs.imagepol.m.totpolint.d := 'Total polarized intensity';
help::pkg.general.images.objs.imagepol.m.totpolint.a.debias := [=];
help::pkg.general.images.objs.imagepol.m.totpolint.a.debias.d := 'Debias the total polarized intensity ?';
help::pkg.general.images.objs.imagepol.m.totpolint.a.debias.def := 'F';
help::pkg.general.images.objs.imagepol.m.totpolint.a.debias.a := 'T or F';
help::pkg.general.images.objs.imagepol.m.totpolint.a.clip := [=];
help::pkg.general.images.objs.imagepol.m.totpolint.a.clip.d := 'Clip level for auto-sigma determination';
help::pkg.general.images.objs.imagepol.m.totpolint.a.clip.def := '10';
help::pkg.general.images.objs.imagepol.m.totpolint.a.clip.a := 'Float';
help::pkg.general.images.objs.imagepol.m.totpolint.a.sigma := [=];
help::pkg.general.images.objs.imagepol.m.totpolint.a.sigma.d := 'Standard deviation of thermal noised';
help::pkg.general.images.objs.imagepol.m.totpolint.a.sigma.def := 'Auto determined';
help::pkg.general.images.objs.imagepol.m.totpolint.a.sigma.a := 'Float';
help::pkg.general.images.objs.imagepol.m.totpolint.a.outfile := [=];
help::pkg.general.images.objs.imagepol.m.totpolint.a.outfile.d := 'Output image file name';
help::pkg.general.images.objs.imagepol.m.totpolint.a.outfile.def := 'Unset';
help::pkg.general.images.objs.imagepol.m.totpolint.a.outfile.a := 'String';
help::pkg.general.images.objs.imagepol.m.totpolint.s := 'totpolint(debias, clip, sigma, outfile)';
help::pkg.general.images.funs.is_imagepol := [=];
help::pkg.general.images.funs.is_imagepol.a := [=];
help::pkg.general.images.funs.is_imagepol.d := 'Is this variable an imagepol tool ?';
help::pkg.general.images.funs.is_imagepol.a.thing := [=];
help::pkg.general.images.funs.is_imagepol.a.thing.d := 'Variable to test';
help::pkg.general.images.funs.is_imagepol.a.thing.def := 'None';
help::pkg.general.images.funs.is_imagepol.a.thing.a := 'Glish variable';
help::pkg.general.images.funs.is_imagepol.s := 'is_imagepol(thing)';
help::pkg.general.images.funs.imagepoltest := [=];
help::pkg.general.images.funs.imagepoltest.a := [=];
help::pkg.general.images.funs.imagepoltest.d := 'Run test suite for Imagepol tool';
help::pkg.general.images.funs.imagepoltest.a.which := [=];
help::pkg.general.images.funs.imagepoltest.a.which.d := 'Which test to run';
help::pkg.general.images.funs.imagepoltest.a.which.def := 'All tests';
help::pkg.general.images.funs.imagepoltest.a.which.a := 'Integer or vector of integers';
help::pkg.general.images.funs.imagepoltest.s := 'imagepoltest(which)';
help::pkg.general.images.objs.imageprofilesupport := [=];
help::pkg.general.images.objs.imageprofilesupport.m := [=];
help::pkg.general.images.objs.imageprofilesupport.c := [=];
help::pkg.general.images.objs.imageprofilesupport.d := 'Plot profiles with axis label conversions';
help::pkg.general.images.objs.imageprofilesupport.c.imageprofilesupport := [=];
help::pkg.general.images.objs.imageprofilesupport.c.imageprofilesupport.d := 'Construct an imageprofilesupport tool';
help::pkg.general.images.objs.imageprofilesupport.c.imageprofilesupport.a.csys := [=];
help::pkg.general.images.objs.imageprofilesupport.c.imageprofilesupport.a.csys.d := 'Coordinate System';
help::pkg.general.images.objs.imageprofilesupport.c.imageprofilesupport.a.csys.def := '';
help::pkg.general.images.objs.imageprofilesupport.c.imageprofilesupport.a.csys.a := 'Coordsys tool';
help::pkg.general.images.objs.imageprofilesupport.c.imageprofilesupport.a.shp := [=];
help::pkg.general.images.objs.imageprofilesupport.c.imageprofilesupport.a.shp.d := 'Shape of associated image';
help::pkg.general.images.objs.imageprofilesupport.c.imageprofilesupport.a.shp.def := '';
help::pkg.general.images.objs.imageprofilesupport.c.imageprofilesupport.a.shp.a := 'Vector of integer';
help::pkg.general.images.objs.imageprofilesupport.c.imageprofilesupport.a.widgetset := [=];
help::pkg.general.images.objs.imageprofilesupport.c.imageprofilesupport.a.widgetset.d := 'The widgetset to use for the GUI';
help::pkg.general.images.objs.imageprofilesupport.c.imageprofilesupport.a.widgetset.def := 'dws';
help::pkg.general.images.objs.imageprofilesupport.c.imageprofilesupport.a.widgetset.a := 'A widgetserver tool';
help::pkg.general.images.objs.imageprofilesupport.c.imageprofilesupport.a.multiabcissa := [=];
help::pkg.general.images.objs.imageprofilesupport.c.imageprofilesupport.a.multiabcissa.d := 'Allow multiple abcissas';
help::pkg.general.images.objs.imageprofilesupport.c.imageprofilesupport.a.multiabcissa.def := 'F';
help::pkg.general.images.objs.imageprofilesupport.c.imageprofilesupport.a.multiabcissa.a := 'T or F';
help::pkg.general.images.objs.imageprofilesupport.c.imageprofilesupport.a.offset := [=];
help::pkg.general.images.objs.imageprofilesupport.c.imageprofilesupport.a.offset.d := 'Show abcissa offset entry ?';
help::pkg.general.images.objs.imageprofilesupport.c.imageprofilesupport.a.offset.def := 'F';
help::pkg.general.images.objs.imageprofilesupport.c.imageprofilesupport.a.offset.a := 'T or F';
help::pkg.general.images.objs.imageprofilesupport.c.imageprofilesupport.s := 'imageprofilesupport(csys, shp, widgetset, multiabcissa, offset)';
help::pkg.general.images.objs.imageprofilesupport.m.clearplotter := [=];
help::pkg.general.images.objs.imageprofilesupport.m.clearplotter.d := 'Clear the plotter';
help::pkg.general.images.objs.imageprofilesupport.m.clearplotter.s := 'clearplotter()';
help::pkg.general.images.objs.imageprofilesupport.m.disablespectralrefmenu := [=];
help::pkg.general.images.objs.imageprofilesupport.m.disablespectralrefmenu.d := 'Disables spectral reference change menu';
help::pkg.general.images.objs.imageprofilesupport.m.disablespectralrefmenu.s := 'disablespectralrefmenu()';
help::pkg.general.images.objs.imageprofilesupport.m.done := [=];
help::pkg.general.images.objs.imageprofilesupport.m.done.d := 'Destroy this imageprofilesupport tool';
help::pkg.general.images.objs.imageprofilesupport.m.done.s := 'done()';
help::pkg.general.images.objs.imageprofilesupport.m.getabcissa := [=];
help::pkg.general.images.objs.imageprofilesupport.m.getabcissa.d := 'Recover the profile abcissa(s)';
help::pkg.general.images.objs.imageprofilesupport.m.getabcissa.a.which := [=];
help::pkg.general.images.objs.imageprofilesupport.m.getabcissa.a.which.d := 'Abcissa index';
help::pkg.general.images.objs.imageprofilesupport.m.getabcissa.a.which.def := '1';
help::pkg.general.images.objs.imageprofilesupport.m.getabcissa.a.which.a := 'Integer';
help::pkg.general.images.objs.imageprofilesupport.m.getabcissa.s := 'getabcissa(which)';
help::pkg.general.images.objs.imageprofilesupport.m.getcurrentabcissa := [=];
help::pkg.general.images.objs.imageprofilesupport.m.getcurrentabcissa.d := 'Recover the plotted profile abcissa(s)';
help::pkg.general.images.objs.imageprofilesupport.m.getcurrentabcissa.a.which := [=];
help::pkg.general.images.objs.imageprofilesupport.m.getcurrentabcissa.a.which.d := 'Abcissa index';
help::pkg.general.images.objs.imageprofilesupport.m.getcurrentabcissa.a.which.def := '1';
help::pkg.general.images.objs.imageprofilesupport.m.getcurrentabcissa.a.which.a := 'Integer';
help::pkg.general.images.objs.imageprofilesupport.m.getcurrentabcissa.s := 'getcurrentabcissa(which)';
help::pkg.general.images.objs.imageprofilesupport.m.getabcissaunit := [=];
help::pkg.general.images.objs.imageprofilesupport.m.getabcissaunit.d := 'Recover the profile abcissa unit';
help::pkg.general.images.objs.imageprofilesupport.m.getabcissaunit.s := 'getabcissaunit()';
help::pkg.general.images.objs.imageprofilesupport.m.getabcissaunits := [=];
help::pkg.general.images.objs.imageprofilesupport.m.getabcissaunits.d := 'Recovers all the possible abcissa units';
help::pkg.general.images.objs.imageprofilesupport.m.getabcissaunits.s := 'getabcissaunits()';
help::pkg.general.images.objs.imageprofilesupport.m.getdoppler := [=];
help::pkg.general.images.objs.imageprofilesupport.m.getdoppler.d := 'Recover the profile doppler type';
help::pkg.general.images.objs.imageprofilesupport.m.getdoppler.s := 'getdoppler()';
help::pkg.general.images.objs.imageprofilesupport.m.getoffsetvalue := [=];
help::pkg.general.images.objs.imageprofilesupport.m.getoffsetvalue.d := 'Recovers the offset value';
help::pkg.general.images.objs.imageprofilesupport.m.getoffsetvalue.s := 'getoffsetvalue()';
help::pkg.general.images.objs.imageprofilesupport.m.getoffsetdoppler := [=];
help::pkg.general.images.objs.imageprofilesupport.m.getoffsetdoppler.d := 'Recovers the offset doppler';
help::pkg.general.images.objs.imageprofilesupport.m.getoffsetdoppler.s := 'getoffsetdoppler()';
help::pkg.general.images.objs.imageprofilesupport.m.getisabs := [=];
help::pkg.general.images.objs.imageprofilesupport.m.getisabs.d := 'Is the current abcissa unit absolute ?';
help::pkg.general.images.objs.imageprofilesupport.m.getisabs.s := 'getisabs()';
help::pkg.general.images.objs.imageprofilesupport.m.getmask := [=];
help::pkg.general.images.objs.imageprofilesupport.m.getmask.d := 'Recover the profile mask';
help::pkg.general.images.objs.imageprofilesupport.m.getmask.a.which := [=];
help::pkg.general.images.objs.imageprofilesupport.m.getmask.a.which.d := 'ordinate index';
help::pkg.general.images.objs.imageprofilesupport.m.getmask.a.which.def := '1';
help::pkg.general.images.objs.imageprofilesupport.m.getmask.a.which.a := 'Integer';
help::pkg.general.images.objs.imageprofilesupport.m.getmask.s := 'getmask(which)';
help::pkg.general.images.objs.imageprofilesupport.m.getordinate := [=];
help::pkg.general.images.objs.imageprofilesupport.m.getordinate.d := 'Recover the profile ordinate';
help::pkg.general.images.objs.imageprofilesupport.m.getordinate.a.which := [=];
help::pkg.general.images.objs.imageprofilesupport.m.getordinate.a.which.d := 'ordinate index';
help::pkg.general.images.objs.imageprofilesupport.m.getordinate.a.which.def := '1';
help::pkg.general.images.objs.imageprofilesupport.m.getordinate.a.which.a := 'Integer';
help::pkg.general.images.objs.imageprofilesupport.m.getordinate.s := 'getordinate(which)';
help::pkg.general.images.objs.imageprofilesupport.m.getordinateunit := [=];
help::pkg.general.images.objs.imageprofilesupport.m.getordinateunit.d := 'Recover the profile ordinate unit';
help::pkg.general.images.objs.imageprofilesupport.m.getordinateunit.s := 'getordinateunit()';
help::pkg.general.images.objs.imageprofilesupport.m.getrefframe := [=];
help::pkg.general.images.objs.imageprofilesupport.m.getrefframe.d := 'Get current reference frame';
help::pkg.general.images.objs.imageprofilesupport.m.getrefframe.s := 'getrefframe()';
help::pkg.general.images.objs.imageprofilesupport.m.getx := [=];
help::pkg.general.images.objs.imageprofilesupport.m.getx.d := 'Get abcissa coordinate of cursor';
help::pkg.general.images.objs.imageprofilesupport.m.getx.a.color := [=];
help::pkg.general.images.objs.imageprofilesupport.m.getx.a.color.d := 'Color of location marker';
help::pkg.general.images.objs.imageprofilesupport.m.getx.a.color.def := '7';
help::pkg.general.images.objs.imageprofilesupport.m.getx.a.color.a := 'PGPlot color (expressed as integer index)';
help::pkg.general.images.objs.imageprofilesupport.m.getx.s := 'getx(color)';
help::pkg.general.images.objs.imageprofilesupport.m.getxy := [=];
help::pkg.general.images.objs.imageprofilesupport.m.getxy.d := 'Get abcissa and ordinate coordinate of cursor';
help::pkg.general.images.objs.imageprofilesupport.m.getxy.a.symbol := [=];
help::pkg.general.images.objs.imageprofilesupport.m.getxy.a.symbol.d := 'PGPlot symbol to mark location';
help::pkg.general.images.objs.imageprofilesupport.m.getxy.a.symbol.def := '2 (cross)';
help::pkg.general.images.objs.imageprofilesupport.m.getxy.a.symbol.a := 'Integer';
help::pkg.general.images.objs.imageprofilesupport.m.getxy.a.color := [=];
help::pkg.general.images.objs.imageprofilesupport.m.getxy.a.color.d := 'PGPlot color of symbol';
help::pkg.general.images.objs.imageprofilesupport.m.getxy.a.color.def := '1 (foreground)';
help::pkg.general.images.objs.imageprofilesupport.m.getxy.a.color.a := 'Integer';
help::pkg.general.images.objs.imageprofilesupport.m.getxy.s := 'getxy(symbol, color)';
help::pkg.general.images.objs.imageprofilesupport.m.hasplotter := [=];
help::pkg.general.images.objs.imageprofilesupport.m.hasplotter.d := 'Has the plotter been made yet ?';
help::pkg.general.images.objs.imageprofilesupport.m.hasplotter.s := 'hasplotter()';
help::pkg.general.images.objs.imageprofilesupport.m.hasprofile := [=];
help::pkg.general.images.objs.imageprofilesupport.m.hasprofile.d := 'Has a profile been set yet ?';
help::pkg.general.images.objs.imageprofilesupport.m.hasprofile.s := 'hasprofile()';
help::pkg.general.images.objs.imageprofilesupport.m.insertoffset := [=];
help::pkg.general.images.objs.imageprofilesupport.m.insertoffset.d := 'Set a new offset';
help::pkg.general.images.objs.imageprofilesupport.m.insertoffset.a.offset := [=];
help::pkg.general.images.objs.imageprofilesupport.m.insertoffset.a.offset.d := 'Offset';
help::pkg.general.images.objs.imageprofilesupport.m.insertoffset.a.offset.def := 'No change';
help::pkg.general.images.objs.imageprofilesupport.m.insertoffset.a.offset.a := 'Quantum or quantum string';
help::pkg.general.images.objs.imageprofilesupport.m.insertoffset.a.doppler := [=];
help::pkg.general.images.objs.imageprofilesupport.m.insertoffset.a.doppler.d := 'Doppler';
help::pkg.general.images.objs.imageprofilesupport.m.insertoffset.a.doppler.def := 'No change';
help::pkg.general.images.objs.imageprofilesupport.m.insertoffset.a.doppler.a := 'String';
help::pkg.general.images.objs.imageprofilesupport.m.insertoffset.s := 'insertoffset(offset, doppler)';
help::pkg.general.images.objs.imageprofilesupport.m.makeplotter := [=];
help::pkg.general.images.objs.imageprofilesupport.m.makeplotter.d := 'Make the plotter';
help::pkg.general.images.objs.imageprofilesupport.m.makeplotter.a.parent := [=];
help::pkg.general.images.objs.imageprofilesupport.m.makeplotter.a.parent.d := 'Parent frame for plotter';
help::pkg.general.images.objs.imageprofilesupport.m.makeplotter.a.parent.def := 'Standalone';
help::pkg.general.images.objs.imageprofilesupport.m.makeplotter.a.parent.a := 'Tk agent';
help::pkg.general.images.objs.imageprofilesupport.m.makeplotter.a.size := [=];
help::pkg.general.images.objs.imageprofilesupport.m.makeplotter.a.size.d := 'Size of plotter';
help::pkg.general.images.objs.imageprofilesupport.m.makeplotter.a.size.def := '[295,215]';
help::pkg.general.images.objs.imageprofilesupport.m.makeplotter.a.size.a := 'Vector of int';
help::pkg.general.images.objs.imageprofilesupport.m.makeplotter.s := 'makeplotter(parent, size)';
help::pkg.general.images.objs.imageprofilesupport.m.makemenus := [=];
help::pkg.general.images.objs.imageprofilesupport.m.makemenus.d := 'Make the abcissa menus';
help::pkg.general.images.objs.imageprofilesupport.m.makemenus.a.parent := [=];
help::pkg.general.images.objs.imageprofilesupport.m.makemenus.a.parent.d := 'Parent frame for plotter';
help::pkg.general.images.objs.imageprofilesupport.m.makemenus.a.parent.def := 'Use PGPlotter';
help::pkg.general.images.objs.imageprofilesupport.m.makemenus.a.parent.a := 'Tk agent';
help::pkg.general.images.objs.imageprofilesupport.m.makemenus.s := 'makemenus(parent)';
help::pkg.general.images.objs.imageprofilesupport.m.makeabcissa := [=];
help::pkg.general.images.objs.imageprofilesupport.m.makeabcissa.d := 'Make the abcissa';
help::pkg.general.images.objs.imageprofilesupport.m.makeabcissa.a.pixel := [=];
help::pkg.general.images.objs.imageprofilesupport.m.makeabcissa.a.pixel.d := 'Pixel coordinate for abcissa';
help::pkg.general.images.objs.imageprofilesupport.m.makeabcissa.a.pixel.def := '';
help::pkg.general.images.objs.imageprofilesupport.m.makeabcissa.a.pixel.a := 'Vector of integer';
help::pkg.general.images.objs.imageprofilesupport.m.makeabcissa.s := 'makeabcissa(pixel)';
help::pkg.general.images.objs.imageprofilesupport.m.makeordinate := [=];
help::pkg.general.images.objs.imageprofilesupport.m.makeordinate.d := 'Make an ordinate';
help::pkg.general.images.objs.imageprofilesupport.m.makeordinate.a.im := [=];
help::pkg.general.images.objs.imageprofilesupport.m.makeordinate.a.im.d := 'The image';
help::pkg.general.images.objs.imageprofilesupport.m.makeordinate.a.im.def := '';
help::pkg.general.images.objs.imageprofilesupport.m.makeordinate.a.im.a := 'Image tool';
help::pkg.general.images.objs.imageprofilesupport.m.makeordinate.a.region := [=];
help::pkg.general.images.objs.imageprofilesupport.m.makeordinate.a.region.d := 'The region of interest';
help::pkg.general.images.objs.imageprofilesupport.m.makeordinate.a.region.def := '';
help::pkg.general.images.objs.imageprofilesupport.m.makeordinate.a.region.a := 'Region tool or naked record';
help::pkg.general.images.objs.imageprofilesupport.m.makeordinate.a.ci := [=];
help::pkg.general.images.objs.imageprofilesupport.m.makeordinate.a.ci.d := 'PGPlot color index of this ordinate when plotted';
help::pkg.general.images.objs.imageprofilesupport.m.makeordinate.a.ci.def := '1';
help::pkg.general.images.objs.imageprofilesupport.m.makeordinate.a.ci.a := 'Integer';
help::pkg.general.images.objs.imageprofilesupport.m.makeordinate.a.ls := [=];
help::pkg.general.images.objs.imageprofilesupport.m.makeordinate.a.ls.d := 'PGPlot line style of this ordinate when plotted';
help::pkg.general.images.objs.imageprofilesupport.m.makeordinate.a.ls.def := '1';
help::pkg.general.images.objs.imageprofilesupport.m.makeordinate.a.ls.a := 'Integer';
help::pkg.general.images.objs.imageprofilesupport.m.makeordinate.a.which := [=];
help::pkg.general.images.objs.imageprofilesupport.m.makeordinate.a.which.d := 'Which ordinate index to set';
help::pkg.general.images.objs.imageprofilesupport.m.makeordinate.a.which.def := 'Next slot';
help::pkg.general.images.objs.imageprofilesupport.m.makeordinate.a.which.a := 'Integer or unset';
help::pkg.general.images.objs.imageprofilesupport.m.makeordinate.s := 'makeordinate(im, region, ci, ls, which)';
help::pkg.general.images.objs.imageprofilesupport.m.npoints := [=];
help::pkg.general.images.objs.imageprofilesupport.m.npoints.d := 'Return the number of points in the current profile';
help::pkg.general.images.objs.imageprofilesupport.m.npoints.s := 'npoints()';
help::pkg.general.images.objs.imageprofilesupport.m.nprofiles := [=];
help::pkg.general.images.objs.imageprofilesupport.m.nprofiles.d := 'Return the number of profiles';
help::pkg.general.images.objs.imageprofilesupport.m.nprofiles.s := 'nprofiles()';
help::pkg.general.images.objs.imageprofilesupport.m.plot := [=];
help::pkg.general.images.objs.imageprofilesupport.m.plot.d := 'Plot the profile';
help::pkg.general.images.objs.imageprofilesupport.m.plot.a.xautoscale := [=];
help::pkg.general.images.objs.imageprofilesupport.m.plot.a.xautoscale.d := 'Autoscale abcissa ?';
help::pkg.general.images.objs.imageprofilesupport.m.plot.a.xautoscale.def := 'T';
help::pkg.general.images.objs.imageprofilesupport.m.plot.a.xautoscale.a := 'T or F';
help::pkg.general.images.objs.imageprofilesupport.m.plot.a.yautoscale := [=];
help::pkg.general.images.objs.imageprofilesupport.m.plot.a.yautoscale.d := 'Autoscale ordinate ?';
help::pkg.general.images.objs.imageprofilesupport.m.plot.a.yautoscale.def := 'T';
help::pkg.general.images.objs.imageprofilesupport.m.plot.a.yautoscale.a := 'T or F';
help::pkg.general.images.objs.imageprofilesupport.m.plot.a.which := [=];
help::pkg.general.images.objs.imageprofilesupport.m.plot.a.which.d := 'Ordinate index';
help::pkg.general.images.objs.imageprofilesupport.m.plot.a.which.def := 'All';
help::pkg.general.images.objs.imageprofilesupport.m.plot.a.which.a := 'Integer or unset';
help::pkg.general.images.objs.imageprofilesupport.m.plot.s := 'plot(xautoscale, yautoscale, which)';
help::pkg.general.images.objs.imageprofilesupport.m.plotter := [=];
help::pkg.general.images.objs.imageprofilesupport.m.plotter.d := 'Recover the plotter';
help::pkg.general.images.objs.imageprofilesupport.m.plotter.s := 'plotter()';
help::pkg.general.images.objs.imageprofilesupport.m.point := [=];
help::pkg.general.images.objs.imageprofilesupport.m.point.d := 'Mark the specified coordinate with a symbol';
help::pkg.general.images.objs.imageprofilesupport.m.point.a.x := [=];
help::pkg.general.images.objs.imageprofilesupport.m.point.a.x.d := 'Abcissa coordinate';
help::pkg.general.images.objs.imageprofilesupport.m.point.a.x.def := '';
help::pkg.general.images.objs.imageprofilesupport.m.point.a.x.a := 'Float';
help::pkg.general.images.objs.imageprofilesupport.m.point.a.y := [=];
help::pkg.general.images.objs.imageprofilesupport.m.point.a.y.d := 'Ordinate coordinate';
help::pkg.general.images.objs.imageprofilesupport.m.point.a.y.def := '';
help::pkg.general.images.objs.imageprofilesupport.m.point.a.y.a := 'Float';
help::pkg.general.images.objs.imageprofilesupport.m.point.a.x := [=];
help::pkg.general.images.objs.imageprofilesupport.m.point.a.x.d := 'Abcissa coordinate';
help::pkg.general.images.objs.imageprofilesupport.m.point.a.x.def := '';
help::pkg.general.images.objs.imageprofilesupport.m.point.a.x.a := 'Float';
help::pkg.general.images.objs.imageprofilesupport.m.point.a.errx := [=];
help::pkg.general.images.objs.imageprofilesupport.m.point.a.errx.d := 'Half width of x error bar';
help::pkg.general.images.objs.imageprofilesupport.m.point.a.errx.def := 'None';
help::pkg.general.images.objs.imageprofilesupport.m.point.a.errx.a := 'Float';
help::pkg.general.images.objs.imageprofilesupport.m.point.a.erry := [=];
help::pkg.general.images.objs.imageprofilesupport.m.point.a.erry.d := 'Half width of y error bar';
help::pkg.general.images.objs.imageprofilesupport.m.point.a.erry.def := 'None';
help::pkg.general.images.objs.imageprofilesupport.m.point.a.erry.a := 'Float';
help::pkg.general.images.objs.imageprofilesupport.m.point.a.symbol := [=];
help::pkg.general.images.objs.imageprofilesupport.m.point.a.symbol.d := 'PGPlot marker symbol';
help::pkg.general.images.objs.imageprofilesupport.m.point.a.symbol.def := '2 (cross)';
help::pkg.general.images.objs.imageprofilesupport.m.point.a.symbol.a := 'Integer';
help::pkg.general.images.objs.imageprofilesupport.m.point.a.color := [=];
help::pkg.general.images.objs.imageprofilesupport.m.point.a.color.d := 'PGPlot color index of symbol';
help::pkg.general.images.objs.imageprofilesupport.m.point.a.color.def := '1 (foreground)';
help::pkg.general.images.objs.imageprofilesupport.m.point.a.color.a := 'Integer';
help::pkg.general.images.objs.imageprofilesupport.m.point.s := 'point(x, y, x, errx, erry, symbol, color)';
help::pkg.general.images.objs.imageprofilesupport.m.postscript := [=];
help::pkg.general.images.objs.imageprofilesupport.m.postscript.d := 'Generate a postscript file of the plot';
help::pkg.general.images.objs.imageprofilesupport.m.postscript.a.file := [=];
help::pkg.general.images.objs.imageprofilesupport.m.postscript.a.file.d := 'postscript file name';
help::pkg.general.images.objs.imageprofilesupport.m.postscript.a.file.def := '';
help::pkg.general.images.objs.imageprofilesupport.m.postscript.a.file.a := 'String';
help::pkg.general.images.objs.imageprofilesupport.m.postscript.a.color := [=];
help::pkg.general.images.objs.imageprofilesupport.m.postscript.a.color.d := 'Use color ?';
help::pkg.general.images.objs.imageprofilesupport.m.postscript.a.color.def := 'T';
help::pkg.general.images.objs.imageprofilesupport.m.postscript.a.color.a := 'T or F';
help::pkg.general.images.objs.imageprofilesupport.m.postscript.a.landscape := [=];
help::pkg.general.images.objs.imageprofilesupport.m.postscript.a.landscape.d := 'Use landscape or portrait';
help::pkg.general.images.objs.imageprofilesupport.m.postscript.a.landscape.def := 'T';
help::pkg.general.images.objs.imageprofilesupport.m.postscript.a.landscape.a := 'T or F';
help::pkg.general.images.objs.imageprofilesupport.m.postscript.s := 'postscript(file, color, landscape)';
help::pkg.general.images.objs.imageprofilesupport.m.plotfile := [=];
help::pkg.general.images.objs.imageprofilesupport.m.plotfile.d := 'Saves the plot as a Table';
help::pkg.general.images.objs.imageprofilesupport.m.plotfile.a.file := [=];
help::pkg.general.images.objs.imageprofilesupport.m.plotfile.a.file.d := 'file name';
help::pkg.general.images.objs.imageprofilesupport.m.plotfile.a.file.def := '';
help::pkg.general.images.objs.imageprofilesupport.m.plotfile.a.file.a := 'String';
help::pkg.general.images.objs.imageprofilesupport.m.plotfile.s := 'plotfile(file)';
help::pkg.general.images.objs.imageprofilesupport.m.setabcissaunit := [=];
help::pkg.general.images.objs.imageprofilesupport.m.setabcissaunit.d := 'Set abcissa unit';
help::pkg.general.images.objs.imageprofilesupport.m.setabcissaunit.a.unit := [=];
help::pkg.general.images.objs.imageprofilesupport.m.setabcissaunit.a.unit.d := 'Abcissa unit';
help::pkg.general.images.objs.imageprofilesupport.m.setabcissaunit.a.unit.def := '';
help::pkg.general.images.objs.imageprofilesupport.m.setabcissaunit.a.unit.a := 'String';
help::pkg.general.images.objs.imageprofilesupport.m.setabcissaunit.a.doppler := [=];
help::pkg.general.images.objs.imageprofilesupport.m.setabcissaunit.a.doppler.d := 'Abcissa Doppler type';
help::pkg.general.images.objs.imageprofilesupport.m.setabcissaunit.a.doppler.def := 'unset';
help::pkg.general.images.objs.imageprofilesupport.m.setabcissaunit.a.doppler.a := 'String';
help::pkg.general.images.objs.imageprofilesupport.m.setabcissaunit.s := 'setabcissaunit(unit, doppler)';
help::pkg.general.images.objs.imageprofilesupport.m.setcoordinatesystem := [=];
help::pkg.general.images.objs.imageprofilesupport.m.setcoordinatesystem.d := 'Set a new coordinate system';
help::pkg.general.images.objs.imageprofilesupport.m.setcoordinatesystem.a.csys := [=];
help::pkg.general.images.objs.imageprofilesupport.m.setcoordinatesystem.a.csys.d := 'New coordinate system';
help::pkg.general.images.objs.imageprofilesupport.m.setcoordinatesystem.a.csys.def := '';
help::pkg.general.images.objs.imageprofilesupport.m.setcoordinatesystem.a.csys.a := 'Coordsys tool';
help::pkg.general.images.objs.imageprofilesupport.m.setcoordinatesystem.a.shp := [=];
help::pkg.general.images.objs.imageprofilesupport.m.setcoordinatesystem.a.shp.d := 'Shape of associated image';
help::pkg.general.images.objs.imageprofilesupport.m.setcoordinatesystem.a.shp.def := '';
help::pkg.general.images.objs.imageprofilesupport.m.setcoordinatesystem.a.shp.a := 'Vector of integer';
help::pkg.general.images.objs.imageprofilesupport.m.setcoordinatesystem.a.resetref := [=];
help::pkg.general.images.objs.imageprofilesupport.m.setcoordinatesystem.a.resetref.d := 'Reset Reference Frame to Native of new Coordinate System';
help::pkg.general.images.objs.imageprofilesupport.m.setcoordinatesystem.a.resetref.def := 'F';
help::pkg.general.images.objs.imageprofilesupport.m.setcoordinatesystem.a.resetref.a := 'T or F';
help::pkg.general.images.objs.imageprofilesupport.m.setcoordinatesystem.s := 'setcoordinatesystem(csys, shp, resetref)';
help::pkg.general.images.objs.imageprofilesupport.m.setnoprofile := [=];
help::pkg.general.images.objs.imageprofilesupport.m.setnoprofile.d := 'Reset number of profiles to zero';
help::pkg.general.images.objs.imageprofilesupport.m.setnoprofile.s := 'setnoprofile()';
help::pkg.general.images.objs.imageprofilesupport.m.setordinate := [=];
help::pkg.general.images.objs.imageprofilesupport.m.setordinate.d := 'Set an ordinate';
help::pkg.general.images.objs.imageprofilesupport.m.setordinate.a.data := [=];
help::pkg.general.images.objs.imageprofilesupport.m.setordinate.a.data.d := 'The ordinate data';
help::pkg.general.images.objs.imageprofilesupport.m.setordinate.a.data.def := '';
help::pkg.general.images.objs.imageprofilesupport.m.setordinate.a.data.a := 'Vector of float';
help::pkg.general.images.objs.imageprofilesupport.m.setordinate.a.mask := [=];
help::pkg.general.images.objs.imageprofilesupport.m.setordinate.a.mask.d := 'The ordinate mask';
help::pkg.general.images.objs.imageprofilesupport.m.setordinate.a.mask.def := 'All good';
help::pkg.general.images.objs.imageprofilesupport.m.setordinate.a.mask.a := 'Vector of Bool';
help::pkg.general.images.objs.imageprofilesupport.m.setordinate.a.err := [=];
help::pkg.general.images.objs.imageprofilesupport.m.setordinate.a.err.d := 'The ordinate error';
help::pkg.general.images.objs.imageprofilesupport.m.setordinate.a.err.def := 'None';
help::pkg.general.images.objs.imageprofilesupport.m.setordinate.a.err.a := 'Vector of float';
help::pkg.general.images.objs.imageprofilesupport.m.setordinate.a.ci := [=];
help::pkg.general.images.objs.imageprofilesupport.m.setordinate.a.ci.d := 'PGPlot color index of this ordinate when plotted';
help::pkg.general.images.objs.imageprofilesupport.m.setordinate.a.ci.def := '1';
help::pkg.general.images.objs.imageprofilesupport.m.setordinate.a.ci.a := 'Integer';
help::pkg.general.images.objs.imageprofilesupport.m.setordinate.a.ls := [=];
help::pkg.general.images.objs.imageprofilesupport.m.setordinate.a.ls.d := 'PGPlot line style (pos) or graph marker (neg) of this ordinate when plotted';
help::pkg.general.images.objs.imageprofilesupport.m.setordinate.a.ls.def := '1';
help::pkg.general.images.objs.imageprofilesupport.m.setordinate.a.ls.a := 'Integer';
help::pkg.general.images.objs.imageprofilesupport.m.setordinate.a.which := [=];
help::pkg.general.images.objs.imageprofilesupport.m.setordinate.a.which.d := 'Which ordinate index to set';
help::pkg.general.images.objs.imageprofilesupport.m.setordinate.a.which.def := 'Next slot';
help::pkg.general.images.objs.imageprofilesupport.m.setordinate.a.which.a := 'Integer';
help::pkg.general.images.objs.imageprofilesupport.m.setordinate.s := 'setordinate(data, mask, err, ci, ls, which)';
help::pkg.general.images.objs.imageprofilesupport.m.setprofile := [=];
help::pkg.general.images.objs.imageprofilesupport.m.setprofile.d := 'Set a profile';
help::pkg.general.images.objs.imageprofilesupport.m.setprofile.a.abcissa := [=];
help::pkg.general.images.objs.imageprofilesupport.m.setprofile.a.abcissa.d := 'The abcissa';
help::pkg.general.images.objs.imageprofilesupport.m.setprofile.a.abcissa.def := '';
help::pkg.general.images.objs.imageprofilesupport.m.setprofile.a.abcissa.a := 'Vector of float';
help::pkg.general.images.objs.imageprofilesupport.m.setprofile.a.ordinate := [=];
help::pkg.general.images.objs.imageprofilesupport.m.setprofile.a.ordinate.d := 'The ordinate';
help::pkg.general.images.objs.imageprofilesupport.m.setprofile.a.ordinate.def := '';
help::pkg.general.images.objs.imageprofilesupport.m.setprofile.a.ordinate.a := 'Vector of float';
help::pkg.general.images.objs.imageprofilesupport.m.setprofile.a.orderr := [=];
help::pkg.general.images.objs.imageprofilesupport.m.setprofile.a.orderr.d := 'The error in the ordinate';
help::pkg.general.images.objs.imageprofilesupport.m.setprofile.a.orderr.def := 'None';
help::pkg.general.images.objs.imageprofilesupport.m.setprofile.a.orderr.a := 'Vector of float';
help::pkg.general.images.objs.imageprofilesupport.m.setprofile.a.mask := [=];
help::pkg.general.images.objs.imageprofilesupport.m.setprofile.a.mask.d := 'The mask';
help::pkg.general.images.objs.imageprofilesupport.m.setprofile.a.mask.def := 'All good';
help::pkg.general.images.objs.imageprofilesupport.m.setprofile.a.mask.a := 'Vector of Bool';
help::pkg.general.images.objs.imageprofilesupport.m.setprofile.a.unit := [=];
help::pkg.general.images.objs.imageprofilesupport.m.setprofile.a.unit.d := 'The abcissa unit';
help::pkg.general.images.objs.imageprofilesupport.m.setprofile.a.unit.def := '\' pix\' ';
help::pkg.general.images.objs.imageprofilesupport.m.setprofile.a.unit.a := '\' pix\'  or valid unit';
help::pkg.general.images.objs.imageprofilesupport.m.setprofile.a.doppler := [=];
help::pkg.general.images.objs.imageprofilesupport.m.setprofile.a.doppler.d := 'The doppler type';
help::pkg.general.images.objs.imageprofilesupport.m.setprofile.a.doppler.def := '\' radio\' ';
help::pkg.general.images.objs.imageprofilesupport.m.setprofile.a.doppler.a := '\' radio\' , \' optical\' , \' true\' ';
help::pkg.general.images.objs.imageprofilesupport.m.setprofile.a.ci := [=];
help::pkg.general.images.objs.imageprofilesupport.m.setprofile.a.ci.d := 'PGPlot color index of this ordinate when plotted';
help::pkg.general.images.objs.imageprofilesupport.m.setprofile.a.ci.def := '1';
help::pkg.general.images.objs.imageprofilesupport.m.setprofile.a.ci.a := 'Integer';
help::pkg.general.images.objs.imageprofilesupport.m.setprofile.a.ls := [=];
help::pkg.general.images.objs.imageprofilesupport.m.setprofile.a.ls.d := 'PGPlot line style of this ordinate when plotted';
help::pkg.general.images.objs.imageprofilesupport.m.setprofile.a.ls.def := '1';
help::pkg.general.images.objs.imageprofilesupport.m.setprofile.a.ls.a := 'Integer';
help::pkg.general.images.objs.imageprofilesupport.m.setprofile.a.which := [=];
help::pkg.general.images.objs.imageprofilesupport.m.setprofile.a.which.d := 'Which profile index to set';
help::pkg.general.images.objs.imageprofilesupport.m.setprofile.a.which.def := 'Next slot';
help::pkg.general.images.objs.imageprofilesupport.m.setprofile.a.which.a := 'Integer';
help::pkg.general.images.objs.imageprofilesupport.m.setprofile.s := 'setprofile(abcissa, ordinate, orderr, mask, unit, doppler, ci, ls, which)';
help::pkg.general.images.objs.imageprofilesupport.m.setplotter := [=];
help::pkg.general.images.objs.imageprofilesupport.m.setplotter.d := 'Set a new plotter';
help::pkg.general.images.objs.imageprofilesupport.m.setplotter.a.plotter := [=];
help::pkg.general.images.objs.imageprofilesupport.m.setplotter.a.plotter.d := 'New plotter';
help::pkg.general.images.objs.imageprofilesupport.m.setplotter.a.plotter.def := '';
help::pkg.general.images.objs.imageprofilesupport.m.setplotter.a.plotter.a := 'Pgplotter tool';
help::pkg.general.images.objs.imageprofilesupport.m.setplotter.s := 'setplotter(plotter)';
help::pkg.general.images.objs.imageprofilesupport.m.setprofileaxis := [=];
help::pkg.general.images.objs.imageprofilesupport.m.setprofileaxis.d := 'Set the profile axis';
help::pkg.general.images.objs.imageprofilesupport.m.setprofileaxis.a.axis := [=];
help::pkg.general.images.objs.imageprofilesupport.m.setprofileaxis.a.axis.d := 'The profile axis';
help::pkg.general.images.objs.imageprofilesupport.m.setprofileaxis.a.axis.def := '-1';
help::pkg.general.images.objs.imageprofilesupport.m.setprofileaxis.a.axis.a := 'Integer';
help::pkg.general.images.objs.imageprofilesupport.m.setprofileaxis.s := 'setprofileaxis(axis)';
help::pkg.general.images.objs.imageprofilesupport.m.setordinateunit := [=];
help::pkg.general.images.objs.imageprofilesupport.m.setordinateunit.d := 'Set ordinate unit';
help::pkg.general.images.objs.imageprofilesupport.m.setordinateunit.a.unit := [=];
help::pkg.general.images.objs.imageprofilesupport.m.setordinateunit.a.unit.d := 'Ordinate unit';
help::pkg.general.images.objs.imageprofilesupport.m.setordinateunit.a.unit.def := '';
help::pkg.general.images.objs.imageprofilesupport.m.setordinateunit.a.unit.a := 'String';
help::pkg.general.images.objs.imageprofilesupport.m.setordinateunit.s := 'setordinateunit(unit)';
help::pkg.general.images.objs.imageprofilesupport.m.setspectralref := [=];
help::pkg.general.images.objs.imageprofilesupport.m.setspectralref.d := 'Set new Spectral reference';
help::pkg.general.images.objs.imageprofilesupport.m.setspectralref.a.value := [=];
help::pkg.general.images.objs.imageprofilesupport.m.setspectralref.a.value.d := 'The new spectral reference label';
help::pkg.general.images.objs.imageprofilesupport.m.setspectralref.a.value.def := '';
help::pkg.general.images.objs.imageprofilesupport.m.setspectralref.a.value.a := 'String';
help::pkg.general.images.objs.imageprofilesupport.m.setspectralref.s := 'setspectralref(value)';
help::pkg.general.images.objs.imageprofilesupport.m.setyrangecallback := [=];
help::pkg.general.images.objs.imageprofilesupport.m.setyrangecallback.d := 'Set ordinate data range via a callback function';
help::pkg.general.images.objs.imageprofilesupport.m.setyrangecallback.a.callback := [=];
help::pkg.general.images.objs.imageprofilesupport.m.setyrangecallback.a.callback.d := 'Callback function';
help::pkg.general.images.objs.imageprofilesupport.m.setyrangecallback.a.callback.def := '';
help::pkg.general.images.objs.imageprofilesupport.m.setyrangecallback.a.callback.a := 'Glish function';
help::pkg.general.images.objs.imageprofilesupport.m.setyrangecallback.s := 'setyrangecallback(callback)';
help::pkg.general.images.objs.imageprofilesupport.m.settitle := [=];
help::pkg.general.images.objs.imageprofilesupport.m.settitle.d := 'Set plot title with fancy colors';
help::pkg.general.images.objs.imageprofilesupport.m.settitle.a.text := [=];
help::pkg.general.images.objs.imageprofilesupport.m.settitle.a.text.d := 'Title text';
help::pkg.general.images.objs.imageprofilesupport.m.settitle.a.text.def := '';
help::pkg.general.images.objs.imageprofilesupport.m.settitle.a.text.a := 'Vector of strings';
help::pkg.general.images.objs.imageprofilesupport.m.settitle.a.ci := [=];
help::pkg.general.images.objs.imageprofilesupport.m.settitle.a.ci.d := 'PGPLot colour index for each string';
help::pkg.general.images.objs.imageprofilesupport.m.settitle.a.ci.def := '';
help::pkg.general.images.objs.imageprofilesupport.m.settitle.a.ci.a := 'Vector of integers';
help::pkg.general.images.objs.imageprofilesupport.m.settitle.s := 'settitle(text, ci)';
help::pkg.general.images.objs.imageprofilesupport.m.which := [=];
help::pkg.general.images.objs.imageprofilesupport.m.which.d := 'Return indices of current plotted profiles';
help::pkg.general.images.objs.imageprofilesupport.m.which.s := 'which()';
help::pkg.general.images.funs.imageprofilesupporttest := [=];
help::pkg.general.images.funs.imageprofilesupporttest.a := [=];
help::pkg.general.images.funs.imageprofilesupporttest.d := 'Run test suite';
help::pkg.general.images.funs.imageprofilesupporttest.a.which := [=];
help::pkg.general.images.funs.imageprofilesupporttest.a.which.d := 'Which test to run';
help::pkg.general.images.funs.imageprofilesupporttest.a.which.def := 'All tests';
help::pkg.general.images.funs.imageprofilesupporttest.a.which.a := 'Integer or vector of integer';
help::pkg.general.images.funs.imageprofilesupporttest.a.destroy := [=];
help::pkg.general.images.funs.imageprofilesupporttest.a.destroy.d := 'Destroy plotters';
help::pkg.general.images.funs.imageprofilesupporttest.a.destroy.def := 'T';
help::pkg.general.images.funs.imageprofilesupporttest.a.destroy.a := 'T or F';
help::pkg.general.images.funs.imageprofilesupporttest.s := 'imageprofilesupporttest(which, destroy)';

help::pkg.general.ms := [=];
help::pkg.general.ms.objs := [=];
help::pkg.general.ms.funs := [=];
help::pkg.general.ms.d := 'Module for measurement set operations';
help::pkg.general.ms.objs.ms := [=];
help::pkg.general.ms.objs.ms.m := [=];
help::pkg.general.ms.objs.ms.c := [=];
help::pkg.general.ms.objs.ms.d := 'Operations on measurement sets';
help::pkg.general.ms.objs.ms.c.ms := [=];
help::pkg.general.ms.objs.ms.c.ms.d := 'Create an ms tool attached to a measurement set';
help::pkg.general.ms.objs.ms.c.ms.a.filename := [=];
help::pkg.general.ms.objs.ms.c.ms.a.filename.d := 'measurement set file-name';
help::pkg.general.ms.objs.ms.c.ms.a.filename.def := 'no default';
help::pkg.general.ms.objs.ms.c.ms.a.filename.a := 'String';
help::pkg.general.ms.objs.ms.c.ms.a.readonly := [=];
help::pkg.general.ms.objs.ms.c.ms.a.readonly.d := 'open for read access only';
help::pkg.general.ms.objs.ms.c.ms.a.readonly.def := 'T';
help::pkg.general.ms.objs.ms.c.ms.a.readonly.a := 'Boolean';
help::pkg.general.ms.objs.ms.c.ms.a.lock := [=];
help::pkg.general.ms.objs.ms.c.ms.a.lock.d := 'lock the table for exclusive use';
help::pkg.general.ms.objs.ms.c.ms.a.lock.def := 'F';
help::pkg.general.ms.objs.ms.c.ms.a.lock.a := 'Boolean';
help::pkg.general.ms.objs.ms.c.ms.a.host := [=];
help::pkg.general.ms.objs.ms.c.ms.a.host.d := 'host to start ms tool on';
help::pkg.general.ms.objs.ms.c.ms.a.host.def := '\' \' ';
help::pkg.general.ms.objs.ms.c.ms.a.host.a := 'String';
help::pkg.general.ms.objs.ms.c.ms.a.forcenewserver := [=];
help::pkg.general.ms.objs.ms.c.ms.a.forcenewserver.d := 'start a new server tool';
help::pkg.general.ms.objs.ms.c.ms.a.forcenewserver.def := 'F';
help::pkg.general.ms.objs.ms.c.ms.a.forcenewserver.a := 'Boolean';
help::pkg.general.ms.objs.ms.c.ms.s := 'ms(filename, readonly, lock, host, forcenewserver)';
help::pkg.general.ms.objs.ms.c.fitstoms := [=];
help::pkg.general.ms.objs.ms.c.fitstoms.d := 'Create an ms tool from a \uvfits\  file';
help::pkg.general.ms.objs.ms.c.fitstoms.a.msfile := [=];
help::pkg.general.ms.objs.ms.c.fitstoms.a.msfile.d := 'Filename for the newly created measurement set';
help::pkg.general.ms.objs.ms.c.fitstoms.a.msfile.def := 'no default';
help::pkg.general.ms.objs.ms.c.fitstoms.a.msfile.a := 'String';
help::pkg.general.ms.objs.ms.c.fitstoms.a.fitsfile := [=];
help::pkg.general.ms.objs.ms.c.fitstoms.a.fitsfile.d := '\uvfits\  file to read';
help::pkg.general.ms.objs.ms.c.fitstoms.a.fitsfile.def := 'no default';
help::pkg.general.ms.objs.ms.c.fitstoms.a.fitsfile.a := 'String';
help::pkg.general.ms.objs.ms.c.fitstoms.a.readonly := [=];
help::pkg.general.ms.objs.ms.c.fitstoms.a.readonly.d := 'open for read access only';
help::pkg.general.ms.objs.ms.c.fitstoms.a.readonly.def := 'T';
help::pkg.general.ms.objs.ms.c.fitstoms.a.readonly.a := 'Boolean';
help::pkg.general.ms.objs.ms.c.fitstoms.a.lock := [=];
help::pkg.general.ms.objs.ms.c.fitstoms.a.lock.d := 'lock the table for exclusive use';
help::pkg.general.ms.objs.ms.c.fitstoms.a.lock.def := 'F';
help::pkg.general.ms.objs.ms.c.fitstoms.a.lock.a := 'Boolean';
help::pkg.general.ms.objs.ms.c.fitstoms.a.obstype := [=];
help::pkg.general.ms.objs.ms.c.fitstoms.a.obstype.d := 'specify the observation type: 0=standard,   1=fastmosaic, requiring small tiles in the measurementset';
help::pkg.general.ms.objs.ms.c.fitstoms.a.obstype.def := '0';
help::pkg.general.ms.objs.ms.c.fitstoms.a.obstype.a := 'Int';
help::pkg.general.ms.objs.ms.c.fitstoms.a.host := [=];
help::pkg.general.ms.objs.ms.c.fitstoms.a.host.d := 'host to start ms tool on';
help::pkg.general.ms.objs.ms.c.fitstoms.a.host.def := '\' \' ';
help::pkg.general.ms.objs.ms.c.fitstoms.a.host.a := 'String';
help::pkg.general.ms.objs.ms.c.fitstoms.a.forcenewserver := [=];
help::pkg.general.ms.objs.ms.c.fitstoms.a.forcenewserver.d := 'start a new server tool';
help::pkg.general.ms.objs.ms.c.fitstoms.a.forcenewserver.def := 'F';
help::pkg.general.ms.objs.ms.c.fitstoms.a.forcenewserver.a := 'Boolean';
help::pkg.general.ms.objs.ms.c.fitstoms.s := 'fitstoms(msfile, fitsfile, readonly, lock, obstype, host, forcenewserver)';
help::pkg.general.ms.objs.ms.c.sdfitstoms := [=];
help::pkg.general.ms.objs.ms.c.sdfitstoms.d := 'Create an ms tool from a SDFITS file';
help::pkg.general.ms.objs.ms.c.sdfitstoms.a.msfile := [=];
help::pkg.general.ms.objs.ms.c.sdfitstoms.a.msfile.d := 'Filename for the newly created measurement set';
help::pkg.general.ms.objs.ms.c.sdfitstoms.a.msfile.def := 'no default';
help::pkg.general.ms.objs.ms.c.sdfitstoms.a.msfile.a := 'String';
help::pkg.general.ms.objs.ms.c.sdfitstoms.a.fitsfile := [=];
help::pkg.general.ms.objs.ms.c.sdfitstoms.a.fitsfile.d := 'SDFITS file to read';
help::pkg.general.ms.objs.ms.c.sdfitstoms.a.fitsfile.def := 'no default';
help::pkg.general.ms.objs.ms.c.sdfitstoms.a.fitsfile.a := 'String';
help::pkg.general.ms.objs.ms.c.sdfitstoms.a.readonly := [=];
help::pkg.general.ms.objs.ms.c.sdfitstoms.a.readonly.d := 'open for read access only';
help::pkg.general.ms.objs.ms.c.sdfitstoms.a.readonly.def := 'T';
help::pkg.general.ms.objs.ms.c.sdfitstoms.a.readonly.a := 'Boolean';
help::pkg.general.ms.objs.ms.c.sdfitstoms.a.lock := [=];
help::pkg.general.ms.objs.ms.c.sdfitstoms.a.lock.d := 'lock the table for exclusive use';
help::pkg.general.ms.objs.ms.c.sdfitstoms.a.lock.def := 'F';
help::pkg.general.ms.objs.ms.c.sdfitstoms.a.lock.a := 'Boolean';
help::pkg.general.ms.objs.ms.c.sdfitstoms.a.host := [=];
help::pkg.general.ms.objs.ms.c.sdfitstoms.a.host.d := 'host to start ms tool on';
help::pkg.general.ms.objs.ms.c.sdfitstoms.a.host.def := '\' \' ';
help::pkg.general.ms.objs.ms.c.sdfitstoms.a.host.a := 'String';
help::pkg.general.ms.objs.ms.c.sdfitstoms.a.forcenewserver := [=];
help::pkg.general.ms.objs.ms.c.sdfitstoms.a.forcenewserver.d := 'start a new server tool';
help::pkg.general.ms.objs.ms.c.sdfitstoms.a.forcenewserver.def := 'F';
help::pkg.general.ms.objs.ms.c.sdfitstoms.a.forcenewserver.a := 'Boolean';
help::pkg.general.ms.objs.ms.c.sdfitstoms.s := 'sdfitstoms(msfile, fitsfile, readonly, lock, host, forcenewserver)';
help::pkg.general.ms.objs.ms.m.nrow := [=];
help::pkg.general.ms.objs.ms.m.nrow.d := 'Returns the number of rows in the measurement set';
help::pkg.general.ms.objs.ms.m.nrow.a.selected := [=];
help::pkg.general.ms.objs.ms.m.nrow.a.selected.d := 'return number of selected rows';
help::pkg.general.ms.objs.ms.m.nrow.a.selected.def := 'F';
help::pkg.general.ms.objs.ms.m.nrow.a.selected.a := 'Boolean';
help::pkg.general.ms.objs.ms.m.nrow.s := 'nrow(selected)';
help::pkg.general.ms.objs.ms.m.iswritable := [=];
help::pkg.general.ms.objs.ms.m.iswritable.d := 'Returns True is the underlying Table is   writable';
help::pkg.general.ms.objs.ms.m.iswritable.s := 'iswritable()';
help::pkg.general.ms.objs.ms.m.open := [=];
help::pkg.general.ms.objs.ms.m.open.d := 'Attach the ms \tool\ to a measurement set table';
help::pkg.general.ms.objs.ms.m.open.a.thems := [=];
help::pkg.general.ms.objs.ms.m.open.a.thems.d := 'Name of the measurement set table to open';
help::pkg.general.ms.objs.ms.m.open.a.thems.def := 'no default';
help::pkg.general.ms.objs.ms.m.open.a.thems.a := 'String';
help::pkg.general.ms.objs.ms.m.open.a.readonly := [=];
help::pkg.general.ms.objs.ms.m.open.a.readonly.d := 'prevent changes to the measurement set';
help::pkg.general.ms.objs.ms.m.open.a.readonly.def := 'T';
help::pkg.general.ms.objs.ms.m.open.a.readonly.a := 'Boolean';
help::pkg.general.ms.objs.ms.m.open.a.lock := [=];
help::pkg.general.ms.objs.ms.m.open.a.lock.d := 'lock the table for exclusive use by this tool';
help::pkg.general.ms.objs.ms.m.open.a.lock.def := 'F';
help::pkg.general.ms.objs.ms.m.open.a.lock.a := 'Boolean';
help::pkg.general.ms.objs.ms.m.open.s := 'open(thems, readonly, lock)';
help::pkg.general.ms.objs.ms.m.close := [=];
help::pkg.general.ms.objs.ms.m.close.d := 'Detach the ms \tool\ from the measurement set table';
help::pkg.general.ms.objs.ms.m.close.s := 'close()';
help::pkg.general.ms.objs.ms.m.name := [=];
help::pkg.general.ms.objs.ms.m.name.d := 'Name of the measurement set table the tool is attached to.';
help::pkg.general.ms.objs.ms.m.name.s := 'name()';
help::pkg.general.ms.objs.ms.m.command := [=];
help::pkg.general.ms.objs.ms.m.command.d := 'Construct a ms \tool\ using a table query command';
help::pkg.general.ms.objs.ms.m.command.a.msfile := [=];
help::pkg.general.ms.objs.ms.m.command.a.msfile.d := 'name of selected measurement set table';
help::pkg.general.ms.objs.ms.m.command.a.msfile.def := 'no default';
help::pkg.general.ms.objs.ms.m.command.a.msfile.a := 'String';
help::pkg.general.ms.objs.ms.m.command.a.command := [=];
help::pkg.general.ms.objs.ms.m.command.a.command.d := 'Query string';
help::pkg.general.ms.objs.ms.m.command.a.command.def := 'no default';
help::pkg.general.ms.objs.ms.m.command.a.command.a := 'Any valid table command';
help::pkg.general.ms.objs.ms.m.command.a.readonly := [=];
help::pkg.general.ms.objs.ms.m.command.a.readonly.d := 'prevent changes to the measurement set';
help::pkg.general.ms.objs.ms.m.command.a.readonly.def := 'T';
help::pkg.general.ms.objs.ms.m.command.a.readonly.a := 'Bool';
help::pkg.general.ms.objs.ms.m.command.s := 'command(msfile, command, readonly)';
help::pkg.general.ms.objs.ms.m.tofits := [=];
help::pkg.general.ms.objs.ms.m.tofits.d := 'Convert a measurement set to a \uvfits\ file';
help::pkg.general.ms.objs.ms.m.tofits.a.fitsfile := [=];
help::pkg.general.ms.objs.ms.m.tofits.a.fitsfile.d := 'Name of the new \uvfits\  file';
help::pkg.general.ms.objs.ms.m.tofits.a.fitsfile.def := 'no default';
help::pkg.general.ms.objs.ms.m.tofits.a.fitsfile.a := 'String';
help::pkg.general.ms.objs.ms.m.tofits.a.column := [=];
help::pkg.general.ms.objs.ms.m.tofits.a.column.d := 'Data column to write, see above for options';
help::pkg.general.ms.objs.ms.m.tofits.a.column.def := 'corrected';
help::pkg.general.ms.objs.ms.m.tofits.a.column.a := 'String';
help::pkg.general.ms.objs.ms.m.tofits.a.fieldid := [=];
help::pkg.general.ms.objs.ms.m.tofits.a.fieldid.d := 'selection of fields to write out';
help::pkg.general.ms.objs.ms.m.tofits.a.fieldid.def := '[]';
help::pkg.general.ms.objs.ms.m.tofits.a.fieldid.a := 'Vector of ints';
help::pkg.general.ms.objs.ms.m.tofits.a.spwid := [=];
help::pkg.general.ms.objs.ms.m.tofits.a.spwid.d := 'selection of spectral windows to write out';
help::pkg.general.ms.objs.ms.m.tofits.a.spwid.def := '[]';
help::pkg.general.ms.objs.ms.m.tofits.a.spwid.a := 'Vector of ints';
help::pkg.general.ms.objs.ms.m.tofits.a.start := [=];
help::pkg.general.ms.objs.ms.m.tofits.a.start.d := 'First channel at output';
help::pkg.general.ms.objs.ms.m.tofits.a.start.def := '-1';
help::pkg.general.ms.objs.ms.m.tofits.a.start.a := 'Int';
help::pkg.general.ms.objs.ms.m.tofits.a.nchan := [=];
help::pkg.general.ms.objs.ms.m.tofits.a.nchan.d := 'number of channel to output';
help::pkg.general.ms.objs.ms.m.tofits.a.nchan.def := '-1';
help::pkg.general.ms.objs.ms.m.tofits.a.nchan.a := 'Int';
help::pkg.general.ms.objs.ms.m.tofits.a.width := [=];
help::pkg.general.ms.objs.ms.m.tofits.a.width.d := 'number of input channels to average for output';
help::pkg.general.ms.objs.ms.m.tofits.a.width.def := '-1';
help::pkg.general.ms.objs.ms.m.tofits.a.width.a := 'Int';
help::pkg.general.ms.objs.ms.m.tofits.a.writesyscal := [=];
help::pkg.general.ms.objs.ms.m.tofits.a.writesyscal.d := 'Write GC and TY tables';
help::pkg.general.ms.objs.ms.m.tofits.a.writesyscal.def := 'F';
help::pkg.general.ms.objs.ms.m.tofits.a.writesyscal.a := 'Boolean';
help::pkg.general.ms.objs.ms.m.tofits.a.multisource := [=];
help::pkg.general.ms.objs.ms.m.tofits.a.multisource.d := 'Write in multisource format';
help::pkg.general.ms.objs.ms.m.tofits.a.multisource.def := 'F';
help::pkg.general.ms.objs.ms.m.tofits.a.multisource.a := 'Boolean';
help::pkg.general.ms.objs.ms.m.tofits.a.combinespw := [=];
help::pkg.general.ms.objs.ms.m.tofits.a.combinespw.d := 'Handle spectral window as IF';
help::pkg.general.ms.objs.ms.m.tofits.a.combinespw.def := 'F';
help::pkg.general.ms.objs.ms.m.tofits.a.combinespw.a := 'Boolean';
help::pkg.general.ms.objs.ms.m.tofits.a.writestation := [=];
help::pkg.general.ms.objs.ms.m.tofits.a.writestation.d := 'Write station name instead of antenna name';
help::pkg.general.ms.objs.ms.m.tofits.a.writestation.def := 'F';
help::pkg.general.ms.objs.ms.m.tofits.a.writestation.a := 'Boolean';
help::pkg.general.ms.objs.ms.m.tofits.s := 'tofits(fitsfile, column, fieldid, spwid, start, nchan, width, writesyscal, multisource, combinespw, writestation)';
help::pkg.general.ms.objs.ms.m.summary := [=];
help::pkg.general.ms.objs.ms.m.summary.d := 'Summarize the measurement set';
help::pkg.general.ms.objs.ms.m.summary.a.header := [=];
help::pkg.general.ms.objs.ms.m.summary.a.header.d := 'Header information';
help::pkg.general.ms.objs.ms.m.summary.a.header.def := 'empty record';
help::pkg.general.ms.objs.ms.m.summary.a.header.a := 'Record';
help::pkg.general.ms.objs.ms.m.summary.a.verbose := [=];
help::pkg.general.ms.objs.ms.m.summary.a.verbose.d := 'Produce verbose logging output';
help::pkg.general.ms.objs.ms.m.summary.a.verbose.def := 'F';
help::pkg.general.ms.objs.ms.m.summary.a.verbose.a := 'Boolean';
help::pkg.general.ms.objs.ms.m.summary.s := 'summary(header, verbose)';
help::pkg.general.ms.objs.ms.m.listhistory := [=];
help::pkg.general.ms.objs.ms.m.listhistory.d := 'List history of the measurement set';
help::pkg.general.ms.objs.ms.m.listhistory.s := 'listhistory()';
help::pkg.general.ms.objs.ms.m.writehistory := [=];
help::pkg.general.ms.objs.ms.m.writehistory.d := 'Add a row of arbitrary information to the measurement set history table';
help::pkg.general.ms.objs.ms.m.writehistory.a.message := [=];
help::pkg.general.ms.objs.ms.m.writehistory.a.message.d := 'Message to be recorded in message field';
help::pkg.general.ms.objs.ms.m.writehistory.a.message.def := 'no default';
help::pkg.general.ms.objs.ms.m.writehistory.a.message.a := 'Any valid string';
help::pkg.general.ms.objs.ms.m.writehistory.a.parms := [=];
help::pkg.general.ms.objs.ms.m.writehistory.a.parms.d := 'String to be written to input parameter field';
help::pkg.general.ms.objs.ms.m.writehistory.a.parms.def := '\' \' ';
help::pkg.general.ms.objs.ms.m.writehistory.a.parms.a := 'Any valid string';
help::pkg.general.ms.objs.ms.m.writehistory.a.origin := [=];
help::pkg.general.ms.objs.ms.m.writehistory.a.origin.d := 'String to be written to origin field';
help::pkg.general.ms.objs.ms.m.writehistory.a.origin.def := '\' ms::writehistory()\' ';
help::pkg.general.ms.objs.ms.m.writehistory.a.origin.a := 'Any valid string';
help::pkg.general.ms.objs.ms.m.writehistory.a.msname := [=];
help::pkg.general.ms.objs.ms.m.writehistory.a.msname.d := 'name of selected measurement set';
help::pkg.general.ms.objs.ms.m.writehistory.a.msname.def := '\' \' ';
help::pkg.general.ms.objs.ms.m.writehistory.a.msname.a := 'Any valid measurement set name; defaults to currently open measurement set';
help::pkg.general.ms.objs.ms.m.writehistory.a.app := [=];
help::pkg.general.ms.objs.ms.m.writehistory.a.app.d := 'String to be written to application field';
help::pkg.general.ms.objs.ms.m.writehistory.a.app.def := '\' ms\' ';
help::pkg.general.ms.objs.ms.m.writehistory.a.app.a := 'Any valid string';
help::pkg.general.ms.objs.ms.m.writehistory.s := 'writehistory(message, parms, origin, msname, app)';
help::pkg.general.ms.objs.ms.m.range := [=];
help::pkg.general.ms.objs.ms.m.range.d := 'Get the range of values in the measurement set';
help::pkg.general.ms.objs.ms.m.range.a.items := [=];
help::pkg.general.ms.objs.ms.m.range.a.items.d := 'Item names';
help::pkg.general.ms.objs.ms.m.range.a.items.def := 'no default';
help::pkg.general.ms.objs.ms.m.range.a.items.a := 'Vector of strings';
help::pkg.general.ms.objs.ms.m.range.a.useflags := [=];
help::pkg.general.ms.objs.ms.m.range.a.useflags.d := 'Use the data flags';
help::pkg.general.ms.objs.ms.m.range.a.useflags.def := 'T';
help::pkg.general.ms.objs.ms.m.range.a.useflags.a := 'Bool';
help::pkg.general.ms.objs.ms.m.range.a.blocksize := [=];
help::pkg.general.ms.objs.ms.m.range.a.blocksize.d := 'Set the blocksize in MB';
help::pkg.general.ms.objs.ms.m.range.a.blocksize.def := '10';
help::pkg.general.ms.objs.ms.m.range.a.blocksize.a := 'Int';
help::pkg.general.ms.objs.ms.m.range.s := 'range(items, useflags, blocksize)';
help::pkg.general.ms.objs.ms.m.lister := [=];
help::pkg.general.ms.objs.ms.m.lister.d := 'List the measurement set s data in a concise form';
help::pkg.general.ms.objs.ms.m.lister.a.starttime := [=];
help::pkg.general.ms.objs.ms.m.lister.a.starttime.d := 'Timestamp to begin listing';
help::pkg.general.ms.objs.ms.m.lister.a.starttime.def := 'no default';
help::pkg.general.ms.objs.ms.m.lister.a.starttime.a := 'String';
help::pkg.general.ms.objs.ms.m.lister.a.stoptime := [=];
help::pkg.general.ms.objs.ms.m.lister.a.stoptime.d := 'Timestamp to end listing';
help::pkg.general.ms.objs.ms.m.lister.a.stoptime.def := 'no default';
help::pkg.general.ms.objs.ms.m.lister.a.stoptime.a := 'String';
help::pkg.general.ms.objs.ms.m.lister.s := 'lister(starttime, stoptime)';
help::pkg.general.ms.objs.ms.m.selectinit := [=];
help::pkg.general.ms.objs.ms.m.selectinit.d := 'Initialize the selection of a MS';
help::pkg.general.ms.objs.ms.m.selectinit.a.datadescid := [=];
help::pkg.general.ms.objs.ms.m.selectinit.a.datadescid.d := 'Data description id';
help::pkg.general.ms.objs.ms.m.selectinit.a.datadescid.def := '0';
help::pkg.general.ms.objs.ms.m.selectinit.a.datadescid.a := 'integer';
help::pkg.general.ms.objs.ms.m.selectinit.a.reset := [=];
help::pkg.general.ms.objs.ms.m.selectinit.a.reset.d := 'Reset to unselected state';
help::pkg.general.ms.objs.ms.m.selectinit.a.reset.def := 'F';
help::pkg.general.ms.objs.ms.m.selectinit.a.reset.a := 'Boolean';
help::pkg.general.ms.objs.ms.m.selectinit.s := 'selectinit(datadescid, reset)';
help::pkg.general.ms.objs.ms.m.select := [=];
help::pkg.general.ms.objs.ms.m.select.d := 'Select a subset of the measurement set.';
help::pkg.general.ms.objs.ms.m.select.a.items := [=];
help::pkg.general.ms.objs.ms.m.select.a.items.d := 'record with fields contain ranges and enumerations';
help::pkg.general.ms.objs.ms.m.select.a.items.def := 'no default';
help::pkg.general.ms.objs.ms.m.select.a.items.a := 'Record';
help::pkg.general.ms.objs.ms.m.select.s := 'select(items)';
help::pkg.general.ms.objs.ms.m.selecttaql := [=];
help::pkg.general.ms.objs.ms.m.selecttaql.d := 'Select a subset of the measurement set.';
help::pkg.general.ms.objs.ms.m.selecttaql.a.msselect := [=];
help::pkg.general.ms.objs.ms.m.selecttaql.a.msselect.d := 'TaQL selection string';
help::pkg.general.ms.objs.ms.m.selecttaql.a.msselect.def := 'no default';
help::pkg.general.ms.objs.ms.m.selecttaql.a.msselect.a := 'String';
help::pkg.general.ms.objs.ms.m.selecttaql.s := 'selecttaql(msselect)';
help::pkg.general.ms.objs.ms.m.selectchannel := [=];
help::pkg.general.ms.objs.ms.m.selectchannel.d := 'Select and average frequency channels';
help::pkg.general.ms.objs.ms.m.selectchannel.a.nchan := [=];
help::pkg.general.ms.objs.ms.m.selectchannel.a.nchan.d := 'Number of output channels';
help::pkg.general.ms.objs.ms.m.selectchannel.a.nchan.def := 'no default';
help::pkg.general.ms.objs.ms.m.selectchannel.a.nchan.a := 'Positive integer';
help::pkg.general.ms.objs.ms.m.selectchannel.a.start := [=];
help::pkg.general.ms.objs.ms.m.selectchannel.a.start.d := 'First input channel to use';
help::pkg.general.ms.objs.ms.m.selectchannel.a.start.def := 'no default';
help::pkg.general.ms.objs.ms.m.selectchannel.a.start.a := 'Positive integer';
help::pkg.general.ms.objs.ms.m.selectchannel.a.width := [=];
help::pkg.general.ms.objs.ms.m.selectchannel.a.width.d := 'Number of input channels to average together';
help::pkg.general.ms.objs.ms.m.selectchannel.a.width.def := 'no default';
help::pkg.general.ms.objs.ms.m.selectchannel.a.width.a := 'Positive integer';
help::pkg.general.ms.objs.ms.m.selectchannel.a.inc := [=];
help::pkg.general.ms.objs.ms.m.selectchannel.a.inc.d := 'Increment to next (group of) input channel(s)';
help::pkg.general.ms.objs.ms.m.selectchannel.a.inc.def := 'no default';
help::pkg.general.ms.objs.ms.m.selectchannel.a.inc.a := 'Positive integer';
help::pkg.general.ms.objs.ms.m.selectchannel.s := 'selectchannel(nchan, start, width, inc)';
help::pkg.general.ms.objs.ms.m.selectpolarization := [=];
help::pkg.general.ms.objs.ms.m.selectpolarization.d := 'Select and convert of polarizations';
help::pkg.general.ms.objs.ms.m.selectpolarization.a.wantedpol := [=];
help::pkg.general.ms.objs.ms.m.selectpolarization.a.wantedpol.d := 'The polarizations wanted';
help::pkg.general.ms.objs.ms.m.selectpolarization.a.wantedpol.def := 'no default';
help::pkg.general.ms.objs.ms.m.selectpolarization.a.wantedpol.a := 'Vector of strings';
help::pkg.general.ms.objs.ms.m.selectpolarization.s := 'selectpolarization(wantedpol)';
help::pkg.general.ms.objs.ms.m.getdata := [=];
help::pkg.general.ms.objs.ms.m.getdata.d := 'Read values from the measurement set.';
help::pkg.general.ms.objs.ms.m.getdata.a.items := [=];
help::pkg.general.ms.objs.ms.m.getdata.a.items.d := 'Item names';
help::pkg.general.ms.objs.ms.m.getdata.a.items.def := 'no default';
help::pkg.general.ms.objs.ms.m.getdata.a.items.a := 'Vector of strings';
help::pkg.general.ms.objs.ms.m.getdata.a.ifraxis := [=];
help::pkg.general.ms.objs.ms.m.getdata.a.ifraxis.d := 'Create interferometer axis if true';
help::pkg.general.ms.objs.ms.m.getdata.a.ifraxis.def := 'F';
help::pkg.general.ms.objs.ms.m.getdata.a.ifraxis.a := 'Boolean';
help::pkg.general.ms.objs.ms.m.getdata.a.ifraxisgap := [=];
help::pkg.general.ms.objs.ms.m.getdata.a.ifraxisgap.d := 'Gap size on ifr axis when antenna1 changes';
help::pkg.general.ms.objs.ms.m.getdata.a.ifraxisgap.def := '0';
help::pkg.general.ms.objs.ms.m.getdata.a.ifraxisgap.a := 'Integer';
help::pkg.general.ms.objs.ms.m.getdata.a.increment := [=];
help::pkg.general.ms.objs.ms.m.getdata.a.increment.d := 'Row increment for data access';
help::pkg.general.ms.objs.ms.m.getdata.a.increment.def := '1';
help::pkg.general.ms.objs.ms.m.getdata.a.increment.a := 'Integer';
help::pkg.general.ms.objs.ms.m.getdata.a.average := [=];
help::pkg.general.ms.objs.ms.m.getdata.a.average.d := 'Average the data in time or over rows';
help::pkg.general.ms.objs.ms.m.getdata.a.average.def := 'F';
help::pkg.general.ms.objs.ms.m.getdata.a.average.a := 'Boolean';
help::pkg.general.ms.objs.ms.m.getdata.s := 'getdata(items, ifraxis, ifraxisgap, increment, average)';
help::pkg.general.ms.objs.ms.m.putdata := [=];
help::pkg.general.ms.objs.ms.m.putdata.d := 'Write new values into the measurement set';
help::pkg.general.ms.objs.ms.m.putdata.a.items := [=];
help::pkg.general.ms.objs.ms.m.putdata.a.items.d := 'Record with items and their new values';
help::pkg.general.ms.objs.ms.m.putdata.a.items.def := 'no default';
help::pkg.general.ms.objs.ms.m.putdata.a.items.a := 'Record';
help::pkg.general.ms.objs.ms.m.putdata.s := 'putdata(items)';
help::pkg.general.ms.objs.ms.m.concatenate := [=];
help::pkg.general.ms.objs.ms.m.concatenate.d := 'Concatenate two measurement sets';
help::pkg.general.ms.objs.ms.m.concatenate.a.msfile := [=];
help::pkg.general.ms.objs.ms.m.concatenate.a.msfile.d := 'The name of the measurement set to append';
help::pkg.general.ms.objs.ms.m.concatenate.a.msfile.def := 'no default';
help::pkg.general.ms.objs.ms.m.concatenate.a.msfile.a := 'String';
help::pkg.general.ms.objs.ms.m.concatenate.a.freqtol := [=];
help::pkg.general.ms.objs.ms.m.concatenate.a.freqtol.d := 'Frequency difference  within which 2   spectral windows are considered similar';
help::pkg.general.ms.objs.ms.m.concatenate.a.freqtol.def := '\' 1Hz\' ';
help::pkg.general.ms.objs.ms.m.concatenate.a.freqtol.a := 'Quantity';
help::pkg.general.ms.objs.ms.m.concatenate.a.dirtol := [=];
help::pkg.general.ms.objs.ms.m.concatenate.a.dirtol.d := 'Direction difference within which 2   fields are considered the same';
help::pkg.general.ms.objs.ms.m.concatenate.a.dirtol.def := '\' 1mas\' ';
help::pkg.general.ms.objs.ms.m.concatenate.a.dirtol.a := 'Quantity';
help::pkg.general.ms.objs.ms.m.concatenate.s := 'concatenate(msfile, freqtol, dirtol)';
help::pkg.general.ms.objs.ms.m.split := [=];
help::pkg.general.ms.objs.ms.m.split.d := 'make a new ms from a subset of actual ms';
help::pkg.general.ms.objs.ms.m.split.a.outputms := [=];
help::pkg.general.ms.objs.ms.m.split.a.outputms.d := 'The name of the measurement split into';
help::pkg.general.ms.objs.ms.m.split.a.outputms.def := 'no default';
help::pkg.general.ms.objs.ms.m.split.a.outputms.a := 'String';
help::pkg.general.ms.objs.ms.m.split.a.fieldids := [=];
help::pkg.general.ms.objs.ms.m.split.a.fieldids.d := 'Field ids to split out 1-based';
help::pkg.general.ms.objs.ms.m.split.a.fieldids.def := '-1 (i.e all fields)';
help::pkg.general.ms.objs.ms.m.split.a.fieldids.a := 'Vector Int';
help::pkg.general.ms.objs.ms.m.split.a.spwids := [=];
help::pkg.general.ms.objs.ms.m.split.a.spwids.d := 'Spectral windows to split 1-based';
help::pkg.general.ms.objs.ms.m.split.a.spwids.def := '-1 (i.e all spws)';
help::pkg.general.ms.objs.ms.m.split.a.spwids.a := 'Vector Int';
help::pkg.general.ms.objs.ms.m.split.a.nchan := [=];
help::pkg.general.ms.objs.ms.m.split.a.nchan.d := 'number of channels in output';
help::pkg.general.ms.objs.ms.m.split.a.nchan.def := '-1 (i.e all channels in spws)';
help::pkg.general.ms.objs.ms.m.split.a.nchan.a := 'Vector Int, length 1 or same length as spwids';
help::pkg.general.ms.objs.ms.m.split.a.start := [=];
help::pkg.general.ms.objs.ms.m.split.a.start.d := 'Start channels in input data';
help::pkg.general.ms.objs.ms.m.split.a.start.def := '1';
help::pkg.general.ms.objs.ms.m.split.a.start.a := 'Vector Int, 	         length 1 or same length as spwids';
help::pkg.general.ms.objs.ms.m.split.a.step := [=];
help::pkg.general.ms.objs.ms.m.split.a.step.d := 'number of input channels to average to make 1                        output channel';
help::pkg.general.ms.objs.ms.m.split.a.step.def := '1';
help::pkg.general.ms.objs.ms.m.split.a.step.a := 'Vector Int, length 1 or same 	         as spwids';
help::pkg.general.ms.objs.ms.m.split.a.timebin := [=];
help::pkg.general.ms.objs.ms.m.split.a.timebin.d := 'Value for time averaging';
help::pkg.general.ms.objs.ms.m.split.a.timebin.def := '\' -1s\' ';
help::pkg.general.ms.objs.ms.m.split.a.timebin.a := 'Quantity';
help::pkg.general.ms.objs.ms.m.split.a.timerange := [=];
help::pkg.general.ms.objs.ms.m.split.a.timerange.d := 'Selection of  time range to split out; MSSelection syntax';
help::pkg.general.ms.objs.ms.m.split.a.timerange.def := '\' \' ';
help::pkg.general.ms.objs.ms.m.split.a.timerange.a := 'String';
help::pkg.general.ms.objs.ms.m.split.a.whichcol := [=];
help::pkg.general.ms.objs.ms.m.split.a.whichcol.d := '\' DATA\' , \' MODEL\_DATA\' , \' CORRECTED\_DATA\' ';
help::pkg.general.ms.objs.ms.m.split.a.whichcol.def := '\' DATA\' ';
help::pkg.general.ms.objs.ms.m.split.a.whichcol.a := 'String';
help::pkg.general.ms.objs.ms.m.split.s := 'split(outputms, fieldids, spwids, nchan, start, step, timebin, timerange, whichcol)';
help::pkg.general.ms.objs.ms.m.iterinit := [=];
help::pkg.general.ms.objs.ms.m.iterinit.d := 'Initialize for iteration over a MS';
help::pkg.general.ms.objs.ms.m.iterinit.a.columns := [=];
help::pkg.general.ms.objs.ms.m.iterinit.a.columns.d := 'Double quoted string with column names';
help::pkg.general.ms.objs.ms.m.iterinit.a.columns.def := 'no default';
help::pkg.general.ms.objs.ms.m.iterinit.a.columns.a := 'Vector of strings';
help::pkg.general.ms.objs.ms.m.iterinit.a.interval := [=];
help::pkg.general.ms.objs.ms.m.iterinit.a.interval.d := 'Time interval in seconds, to group together in iteration';
help::pkg.general.ms.objs.ms.m.iterinit.a.interval.def := 'no default';
help::pkg.general.ms.objs.ms.m.iterinit.a.interval.a := 'Positive number';
help::pkg.general.ms.objs.ms.m.iterinit.a.maxrows := [=];
help::pkg.general.ms.objs.ms.m.iterinit.a.maxrows.d := 'Max number of rows to return in iteration';
help::pkg.general.ms.objs.ms.m.iterinit.a.maxrows.def := 'no default';
help::pkg.general.ms.objs.ms.m.iterinit.a.maxrows.a := 'Positive integer';
help::pkg.general.ms.objs.ms.m.iterinit.a.adddefaultsortcolumns := [=];
help::pkg.general.ms.objs.ms.m.iterinit.a.adddefaultsortcolumns.d := 'Add the default sort columns';
help::pkg.general.ms.objs.ms.m.iterinit.a.adddefaultsortcolumns.def := 'T';
help::pkg.general.ms.objs.ms.m.iterinit.a.adddefaultsortcolumns.a := 'Boolean';
help::pkg.general.ms.objs.ms.m.iterinit.s := 'iterinit(columns, interval, maxrows, adddefaultsortcolumns)';
help::pkg.general.ms.objs.ms.m.iterorigin := [=];
help::pkg.general.ms.objs.ms.m.iterorigin.d := 'Set the iterator to the start of the data.';
help::pkg.general.ms.objs.ms.m.iterorigin.s := 'iterorigin()';
help::pkg.general.ms.objs.ms.m.iternext := [=];
help::pkg.general.ms.objs.ms.m.iternext.d := 'Advance the iterator to the next lot of data';
help::pkg.general.ms.objs.ms.m.iternext.s := 'iternext()';
help::pkg.general.ms.objs.ms.m.iterend := [=];
help::pkg.general.ms.objs.ms.m.iterend.d := 'End the iteration and reset the selected table';
help::pkg.general.ms.objs.ms.m.iterend.s := 'iterend()';
help::pkg.general.ms.objs.ms.m.tosdfits := [=];
help::pkg.general.ms.objs.ms.m.tosdfits.d := 'Convert a single dish AIPS++\ measurement set to a SDFITS file';
help::pkg.general.ms.objs.ms.m.tosdfits.a.fitsfile := [=];
help::pkg.general.ms.objs.ms.m.tosdfits.a.fitsfile.d := 'Name of the new SDFITS file';
help::pkg.general.ms.objs.ms.m.tosdfits.a.fitsfile.def := '';
help::pkg.general.ms.objs.ms.m.tosdfits.a.fitsfile.a := 'String';
help::pkg.general.ms.objs.ms.m.tosdfits.s := 'tosdfits(fitsfile)';
help::pkg.general.ms.objs.ms.m.createflaghistory := [=];
help::pkg.general.ms.objs.ms.m.createflaghistory.d := 'Create and initialize the FLAG\_HISTORY column.';
help::pkg.general.ms.objs.ms.m.createflaghistory.a.numlevel := [=];
help::pkg.general.ms.objs.ms.m.createflaghistory.a.numlevel.d := 'Number of history levels';
help::pkg.general.ms.objs.ms.m.createflaghistory.a.numlevel.def := '2';
help::pkg.general.ms.objs.ms.m.createflaghistory.a.numlevel.a := 'Positive integer';
help::pkg.general.ms.objs.ms.m.createflaghistory.s := 'createflaghistory(numlevel)';
help::pkg.general.ms.objs.ms.m.saveflags := [=];
help::pkg.general.ms.objs.ms.m.saveflags.d := 'Save the current flagging state to the FLAG\_HISTORY column.';
help::pkg.general.ms.objs.ms.m.saveflags.a.newlevel := [=];
help::pkg.general.ms.objs.ms.m.saveflags.a.newlevel.d := 'Copy to a new level?';
help::pkg.general.ms.objs.ms.m.saveflags.a.newlevel.def := 'F';
help::pkg.general.ms.objs.ms.m.saveflags.a.newlevel.a := 'Bool';
help::pkg.general.ms.objs.ms.m.saveflags.s := 'saveflags(newlevel)';
help::pkg.general.ms.objs.ms.m.restoreflags := [=];
help::pkg.general.ms.objs.ms.m.restoreflags.d := 'Restore the specified flagging level from the FLAG\_HISTORY column.';
help::pkg.general.ms.objs.ms.m.restoreflags.a.level := [=];
help::pkg.general.ms.objs.ms.m.restoreflags.a.level.d := 'History level to copy from';
help::pkg.general.ms.objs.ms.m.restoreflags.a.level.def := '0 = current level';
help::pkg.general.ms.objs.ms.m.restoreflags.a.level.a := 'Int';
help::pkg.general.ms.objs.ms.m.restoreflags.s := 'restoreflags(level)';
help::pkg.general.ms.objs.ms.m.flaglevel := [=];
help::pkg.general.ms.objs.ms.m.flaglevel.d := 'return the current flagging level';
help::pkg.general.ms.objs.ms.m.flaglevel.s := 'flaglevel()';
help::pkg.general.ms.objs.ms.m.fillbuffer := [=];
help::pkg.general.ms.objs.ms.m.fillbuffer.d := 'Fill the internal buffer with data and flags.';
help::pkg.general.ms.objs.ms.m.fillbuffer.a.item := [=];
help::pkg.general.ms.objs.ms.m.fillbuffer.a.item.d := 'data derived item';
help::pkg.general.ms.objs.ms.m.fillbuffer.a.item.def := '';
help::pkg.general.ms.objs.ms.m.fillbuffer.a.item.a := 'String';
help::pkg.general.ms.objs.ms.m.fillbuffer.a.ifraxis := [=];
help::pkg.general.ms.objs.ms.m.fillbuffer.a.ifraxis.d := 'Create interferometer axis if true';
help::pkg.general.ms.objs.ms.m.fillbuffer.a.ifraxis.def := 'F';
help::pkg.general.ms.objs.ms.m.fillbuffer.a.ifraxis.a := 'Bool';
help::pkg.general.ms.objs.ms.m.fillbuffer.s := 'fillbuffer(item, ifraxis)';
help::pkg.general.ms.objs.ms.m.diffbuffer := [=];
help::pkg.general.ms.objs.ms.m.diffbuffer.d := 'Differentiate or difference the internal buffer.';
help::pkg.general.ms.objs.ms.m.diffbuffer.a.direction := [=];
help::pkg.general.ms.objs.ms.m.diffbuffer.a.direction.d := 'choose between time or channel direction';
help::pkg.general.ms.objs.ms.m.diffbuffer.a.direction.def := '';
help::pkg.general.ms.objs.ms.m.diffbuffer.a.direction.a := 'String: TIME or CHANNEL';
help::pkg.general.ms.objs.ms.m.diffbuffer.a.window := [=];
help::pkg.general.ms.objs.ms.m.diffbuffer.a.window.d := 'width of averaging window in timeslots or channels';
help::pkg.general.ms.objs.ms.m.diffbuffer.a.window.def := '';
help::pkg.general.ms.objs.ms.m.diffbuffer.a.window.a := 'Positive integer';
help::pkg.general.ms.objs.ms.m.diffbuffer.s := 'diffbuffer(direction, window)';
help::pkg.general.ms.objs.ms.m.getbuffer := [=];
help::pkg.general.ms.objs.ms.m.getbuffer.d := 'Return the internal buffer as a Record for access from Glish.';
help::pkg.general.ms.objs.ms.m.getbuffer.s := 'getbuffer()';
help::pkg.general.ms.objs.ms.m.clipbuffer := [=];
help::pkg.general.ms.objs.ms.m.clipbuffer.d := 'Clip the internal buffer with specified limits.';
help::pkg.general.ms.objs.ms.m.clipbuffer.a.pixellevel := [=];
help::pkg.general.ms.objs.ms.m.clipbuffer.a.pixellevel.d := 'cliplevel for pixels';
help::pkg.general.ms.objs.ms.m.clipbuffer.a.pixellevel.def := '';
help::pkg.general.ms.objs.ms.m.clipbuffer.a.pixellevel.a := 'positive value';
help::pkg.general.ms.objs.ms.m.clipbuffer.a.timelevel := [=];
help::pkg.general.ms.objs.ms.m.clipbuffer.a.timelevel.d := 'cliplevel for time slots';
help::pkg.general.ms.objs.ms.m.clipbuffer.a.timelevel.def := '';
help::pkg.general.ms.objs.ms.m.clipbuffer.a.timelevel.a := 'positive value';
help::pkg.general.ms.objs.ms.m.clipbuffer.a.channellevel := [=];
help::pkg.general.ms.objs.ms.m.clipbuffer.a.channellevel.d := 'cliplevel for channels';
help::pkg.general.ms.objs.ms.m.clipbuffer.a.channellevel.def := '';
help::pkg.general.ms.objs.ms.m.clipbuffer.a.channellevel.a := 'positive value';
help::pkg.general.ms.objs.ms.m.clipbuffer.s := 'clipbuffer(pixellevel, timelevel, channellevel)';
help::pkg.general.ms.objs.ms.m.setbufferflags := [=];
help::pkg.general.ms.objs.ms.m.setbufferflags.d := 'Set the flags in the buffer';
help::pkg.general.ms.objs.ms.m.setbufferflags.a.flags := [=];
help::pkg.general.ms.objs.ms.m.setbufferflags.a.flags.d := 'record with flag and flag\_row';
help::pkg.general.ms.objs.ms.m.setbufferflags.a.flags.def := '';
help::pkg.general.ms.objs.ms.m.setbufferflags.a.flags.a := 'Record';
help::pkg.general.ms.objs.ms.m.setbufferflags.s := 'setbufferflags(flags)';
help::pkg.general.ms.objs.ms.m.writebufferflags := [=];
help::pkg.general.ms.objs.ms.m.writebufferflags.d := 'Write the flags in the internal buffer back to the table.';
help::pkg.general.ms.objs.ms.m.writebufferflags.s := 'writebufferflags()';
help::pkg.general.ms.objs.ms.m.clearbuffer := [=];
help::pkg.general.ms.objs.ms.m.clearbuffer.d := 'Clear the internal buffer.';
help::pkg.general.ms.objs.ms.m.clearbuffer.s := 'clearbuffer()';
help::pkg.general.ms.objs.ms.m.continuumsub := [=];
help::pkg.general.ms.objs.ms.m.continuumsub.d := 'Continuum fitting and subtraction in uv plane';
help::pkg.general.ms.objs.ms.m.continuumsub.a.fldid := [=];
help::pkg.general.ms.objs.ms.m.continuumsub.a.fldid.d := 'Desired fields to fit';
help::pkg.general.ms.objs.ms.m.continuumsub.a.fldid.def := 'no default';
help::pkg.general.ms.objs.ms.m.continuumsub.a.fldid.a := 'Vector of integers';
help::pkg.general.ms.objs.ms.m.continuumsub.a.spwid := [=];
help::pkg.general.ms.objs.ms.m.continuumsub.a.spwid.d := 'Desired spectral windows to fit';
help::pkg.general.ms.objs.ms.m.continuumsub.a.spwid.def := 'all';
help::pkg.general.ms.objs.ms.m.continuumsub.a.spwid.a := 'Vector of integers';
help::pkg.general.ms.objs.ms.m.continuumsub.a.chans := [=];
help::pkg.general.ms.objs.ms.m.continuumsub.a.chans.d := 'Range of channels to fit';
help::pkg.general.ms.objs.ms.m.continuumsub.a.chans.def := 'all';
help::pkg.general.ms.objs.ms.m.continuumsub.a.chans.a := 'Vector of integers';
help::pkg.general.ms.objs.ms.m.continuumsub.a.solint := [=];
help::pkg.general.ms.objs.ms.m.continuumsub.a.solint.d := 'Averaging time (s)';
help::pkg.general.ms.objs.ms.m.continuumsub.a.solint.def := '0.0 (scans)';
help::pkg.general.ms.objs.ms.m.continuumsub.a.solint.a := 'Float';
help::pkg.general.ms.objs.ms.m.continuumsub.a.fitorder := [=];
help::pkg.general.ms.objs.ms.m.continuumsub.a.fitorder.d := 'Polynomial order for fit';
help::pkg.general.ms.objs.ms.m.continuumsub.a.fitorder.def := '0';
help::pkg.general.ms.objs.ms.m.continuumsub.a.fitorder.a := 'Integer';
help::pkg.general.ms.objs.ms.m.continuumsub.a.mode := [=];
help::pkg.general.ms.objs.ms.m.continuumsub.a.mode.d := 'Desired use of fit model (see below)';
help::pkg.general.ms.objs.ms.m.continuumsub.a.mode.def := '\' subtract\' ';
help::pkg.general.ms.objs.ms.m.continuumsub.a.mode.a := 'String';
help::pkg.general.ms.objs.ms.m.continuumsub.s := 'continuumsub(fldid, spwid, chans, solint, fitorder, mode)';
help::pkg.general.ms.objs.ms.m.uvlsf := [=];
help::pkg.general.ms.objs.ms.m.uvlsf.d := 'Continuum fitting and subtraction in uv plane';
help::pkg.general.ms.objs.ms.m.uvlsf.a.fldid := [=];
help::pkg.general.ms.objs.ms.m.uvlsf.a.fldid.d := 'Desired fields to fit';
help::pkg.general.ms.objs.ms.m.uvlsf.a.fldid.def := 'no default';
help::pkg.general.ms.objs.ms.m.uvlsf.a.fldid.a := 'Vector of integers';
help::pkg.general.ms.objs.ms.m.uvlsf.a.spwid := [=];
help::pkg.general.ms.objs.ms.m.uvlsf.a.spwid.d := 'Desired spectral windows to fit';
help::pkg.general.ms.objs.ms.m.uvlsf.a.spwid.def := 'all';
help::pkg.general.ms.objs.ms.m.uvlsf.a.spwid.a := 'Vector of integers';
help::pkg.general.ms.objs.ms.m.uvlsf.a.chans := [=];
help::pkg.general.ms.objs.ms.m.uvlsf.a.chans.d := 'Range of channels to fit';
help::pkg.general.ms.objs.ms.m.uvlsf.a.chans.def := 'all';
help::pkg.general.ms.objs.ms.m.uvlsf.a.chans.a := 'Vector of integers';
help::pkg.general.ms.objs.ms.m.uvlsf.a.solint := [=];
help::pkg.general.ms.objs.ms.m.uvlsf.a.solint.d := 'Averaging time (s)';
help::pkg.general.ms.objs.ms.m.uvlsf.a.solint.def := '0.0 (scans)';
help::pkg.general.ms.objs.ms.m.uvlsf.a.solint.a := 'Float';
help::pkg.general.ms.objs.ms.m.uvlsf.a.fitorder := [=];
help::pkg.general.ms.objs.ms.m.uvlsf.a.fitorder.d := 'Polynomial order for fit';
help::pkg.general.ms.objs.ms.m.uvlsf.a.fitorder.def := '0';
help::pkg.general.ms.objs.ms.m.uvlsf.a.fitorder.a := 'Integer';
help::pkg.general.ms.objs.ms.m.uvlsf.a.mode := [=];
help::pkg.general.ms.objs.ms.m.uvlsf.a.mode.d := 'Desired use of fit model (see below)';
help::pkg.general.ms.objs.ms.m.uvlsf.a.mode.def := '\' subtract\' ';
help::pkg.general.ms.objs.ms.m.uvlsf.a.mode.a := 'String';
help::pkg.general.ms.objs.ms.m.uvlsf.s := 'uvlsf(fldid, spwid, chans, solint, fitorder, mode)';
help::pkg.general.ms.objs.ms.m.ptsrc := [=];
help::pkg.general.ms.objs.ms.m.ptsrc.d := 'Reports global average of visibilities per field';
help::pkg.general.ms.objs.ms.m.ptsrc.a.fldid := [=];
help::pkg.general.ms.objs.ms.m.ptsrc.a.fldid.d := 'Desired fields';
help::pkg.general.ms.objs.ms.m.ptsrc.a.fldid.def := 'all';
help::pkg.general.ms.objs.ms.m.ptsrc.a.fldid.a := 'Vector of integers';
help::pkg.general.ms.objs.ms.m.ptsrc.a.spwid := [=];
help::pkg.general.ms.objs.ms.m.ptsrc.a.spwid.d := 'Desired spectral windows';
help::pkg.general.ms.objs.ms.m.ptsrc.a.spwid.def := 'all';
help::pkg.general.ms.objs.ms.m.ptsrc.a.spwid.a := 'Vector of integers';
help::pkg.general.ms.objs.ms.m.ptsrc.s := 'ptsrc(fldid, spwid)';
help::pkg.general.ms.objs.ms.m.done := [=];
help::pkg.general.ms.objs.ms.m.done.d := 'Delete the ms \tool';
help::pkg.general.ms.objs.ms.m.done.s := 'done()';
help::pkg.general.ms.funs.is_ms := [=];
help::pkg.general.ms.funs.is_ms.a := [=];
help::pkg.general.ms.funs.is_ms.d := 'Is the argument a ms tool?';
help::pkg.general.ms.funs.is_ms.a.tool := [=];
help::pkg.general.ms.funs.is_ms.a.tool.d := 'The variable that you wish to test';
help::pkg.general.ms.funs.is_ms.a.tool.def := 'no default';
help::pkg.general.ms.funs.is_ms.a.tool.a := 'Any glish variable';
help::pkg.general.ms.funs.is_ms.s := 'is_ms(tool)';
help::pkg.general.ms.funs.msfiles := [=];
help::pkg.general.ms.funs.msfiles.a := [=];
help::pkg.general.ms.funs.msfiles.d := 'Find the list of MS files in the given directory';
help::pkg.general.ms.funs.msfiles.a.files := [=];
help::pkg.general.ms.funs.msfiles.a.files.d := 'Path/files of interest';
help::pkg.general.ms.funs.msfiles.a.files.def := '\' .\'  the current working   directory';
help::pkg.general.ms.funs.msfiles.a.files.a := 'String';
help::pkg.general.ms.funs.msfiles.a.strippath := [=];
help::pkg.general.ms.funs.msfiles.a.strippath.d := 'Strip off leading path name ?';
help::pkg.general.ms.funs.msfiles.a.strippath.def := 'T';
help::pkg.general.ms.funs.msfiles.a.strippath.a := 'T or F';
help::pkg.general.ms.funs.msfiles.s := 'msfiles(files, strippath)';
help::pkg.general.ms.funs.mstest := [=];
help::pkg.general.ms.funs.mstest.a := [=];
help::pkg.general.ms.funs.mstest.d := 'Test for the proper functioning of the ms \tool';
help::pkg.general.ms.funs.mstest.s := 'mstest()';
help::pkg.general.ms.objs.ms2fromms1 := [=];
help::pkg.general.ms.objs.ms2fromms1.m := [=];
help::pkg.general.ms.objs.ms2fromms1.c := [=];
help::pkg.general.ms.objs.ms2fromms1.d := 'MeasurementSet Version 1 to Version 2 converter';
help::pkg.general.ms.objs.ms2fromms1.c.ms2fromms1 := [=];
help::pkg.general.ms.objs.ms2fromms1.c.ms2fromms1.d := 'Construct the converter tool';
help::pkg.general.ms.objs.ms2fromms1.c.ms2fromms1.a.ms2 := [=];
help::pkg.general.ms.objs.ms2fromms1.c.ms2fromms1.a.ms2.d := 'Output measurement set';
help::pkg.general.ms.objs.ms2fromms1.c.ms2fromms1.a.ms2.def := '\' \' ';
help::pkg.general.ms.objs.ms2fromms1.c.ms2fromms1.a.ms2.a := 'String';
help::pkg.general.ms.objs.ms2fromms1.c.ms2fromms1.a.ms1 := [=];
help::pkg.general.ms.objs.ms2fromms1.c.ms2fromms1.a.ms1.d := 'Input measurement set';
help::pkg.general.ms.objs.ms2fromms1.c.ms2fromms1.a.ms1.def := '\' \' ';
help::pkg.general.ms.objs.ms2fromms1.c.ms2fromms1.a.ms1.a := 'String';
help::pkg.general.ms.objs.ms2fromms1.c.ms2fromms1.a.inPlace := [=];
help::pkg.general.ms.objs.ms2fromms1.c.ms2fromms1.a.inPlace.d := 'Overwrite the old measurement set ?';
help::pkg.general.ms.objs.ms2fromms1.c.ms2fromms1.a.inPlace.def := 'F';
help::pkg.general.ms.objs.ms2fromms1.c.ms2fromms1.a.inPlace.a := 'Boolean';
help::pkg.general.ms.objs.ms2fromms1.c.ms2fromms1.s := 'ms2fromms1(ms2, ms1, inPlace)';
help::pkg.general.ms.objs.ms2fromms1.m.convert := [=];
help::pkg.general.ms.objs.ms2fromms1.m.convert.d := 'Create the new Measurement Set';
help::pkg.general.ms.objs.ms2fromms1.m.convert.s := 'convert()';
help::pkg.general.ms.objs.msplot := [=];
help::pkg.general.ms.objs.msplot.m := [=];
help::pkg.general.ms.objs.msplot.c := [=];
help::pkg.general.ms.objs.msplot.d := 'tool for MeasurementSet plotting, display, listing and editing';
help::pkg.general.ms.objs.msplot.c.msplot := [=];
help::pkg.general.ms.objs.msplot.c.msplot.d := 'Construct a visibility plotter';
help::pkg.general.ms.objs.msplot.c.msplot.a.msfile := [=];
help::pkg.general.ms.objs.msplot.c.msplot.a.msfile.d := 'Name of MeasurementSet';
help::pkg.general.ms.objs.msplot.c.msplot.a.msfile.def := '\' \' ';
help::pkg.general.ms.objs.msplot.c.msplot.a.msfile.a := 'String';
help::pkg.general.ms.objs.msplot.c.msplot.a.nrows := [=];
help::pkg.general.ms.objs.msplot.c.msplot.a.nrows.d := 'Number of rows to buffer at once';
help::pkg.general.ms.objs.msplot.c.msplot.a.nrows.def := '16384';
help::pkg.general.ms.objs.msplot.c.msplot.a.nrows.a := 'Integer';
help::pkg.general.ms.objs.msplot.c.msplot.a.edit := [=];
help::pkg.general.ms.objs.msplot.c.msplot.a.edit.d := 'Allow editing?';
help::pkg.general.ms.objs.msplot.c.msplot.a.edit.def := 'F';
help::pkg.general.ms.objs.msplot.c.msplot.a.edit.a := 'Boolean';
help::pkg.general.ms.objs.msplot.c.msplot.a.flagfile := [=];
help::pkg.general.ms.objs.msplot.c.msplot.a.flagfile.d := 'Name of flag file';
help::pkg.general.ms.objs.msplot.c.msplot.a.flagfile.def := 'unset';
help::pkg.general.ms.objs.msplot.c.msplot.a.flagfile.a := 'File name';
help::pkg.general.ms.objs.msplot.c.msplot.a.displaywidth := [=];
help::pkg.general.ms.objs.msplot.c.msplot.a.displaywidth.d := 'Width of display in pixels';
help::pkg.general.ms.objs.msplot.c.msplot.a.displaywidth.def := '600';
help::pkg.general.ms.objs.msplot.c.msplot.a.displaywidth.a := 'Integer';
help::pkg.general.ms.objs.msplot.c.msplot.a.displayheight := [=];
help::pkg.general.ms.objs.msplot.c.msplot.a.displayheight.d := 'Height of display in pixels';
help::pkg.general.ms.objs.msplot.c.msplot.a.displayheight.def := '300';
help::pkg.general.ms.objs.msplot.c.msplot.a.displayheight.a := 'Integer';
help::pkg.general.ms.objs.msplot.c.msplot.s := 'msplot(msfile, nrows, edit, flagfile, displaywidth, displayheight)';
help::pkg.general.ms.funs.msplotapplyflags := [=];
help::pkg.general.ms.funs.msplotapplyflags.a := [=];
help::pkg.general.ms.funs.msplotapplyflags.d := 'Apply flag columns';
help::pkg.general.ms.funs.msplotapplyflags.a.flagfile := [=];
help::pkg.general.ms.funs.msplotapplyflags.a.flagfile.d := 'Name of flag file';
help::pkg.general.ms.funs.msplotapplyflags.a.flagfile.def := 'no default';
help::pkg.general.ms.funs.msplotapplyflags.a.flagfile.a := 'String';
help::pkg.general.ms.funs.msplotapplyflags.a.msfile := [=];
help::pkg.general.ms.funs.msplotapplyflags.a.msfile.d := 'Name of measurement set';
help::pkg.general.ms.funs.msplotapplyflags.a.msfile.def := 'unset';
help::pkg.general.ms.funs.msplotapplyflags.a.msfile.a := 'String';
help::pkg.general.ms.funs.msplotapplyflags.a.merge := [=];
help::pkg.general.ms.funs.msplotapplyflags.a.merge.d := 'Merge the flags from both tables';
help::pkg.general.ms.funs.msplotapplyflags.a.merge.def := 'F';
help::pkg.general.ms.funs.msplotapplyflags.a.merge.a := 'Boolean';
help::pkg.general.ms.funs.msplotapplyflags.s := 'msplotapplyflags(flagfile, msfile, merge)';
help::pkg.general.ms.objs.msplot := [=];
help::pkg.general.ms.objs.msplot.m := [=];
help::pkg.general.ms.objs.msplot.c := [=];
help::pkg.general.ms.objs.msplot.d := 'tool for MeasurementSet plotting, display, listing and editing';
help::pkg.general.ms.objs.msplot.c.msplot := [=];
help::pkg.general.ms.objs.msplot.c.msplot.d := 'Construct a visibility plotter';
help::pkg.general.ms.objs.msplot.c.msplot.a.msfile := [=];
help::pkg.general.ms.objs.msplot.c.msplot.a.msfile.d := 'Name of MeasurementSet';
help::pkg.general.ms.objs.msplot.c.msplot.a.msfile.def := '\' \' ';
help::pkg.general.ms.objs.msplot.c.msplot.a.msfile.a := 'String';
help::pkg.general.ms.objs.msplot.c.msplot.a.nrows := [=];
help::pkg.general.ms.objs.msplot.c.msplot.a.nrows.d := 'Number of rows to buffer at once';
help::pkg.general.ms.objs.msplot.c.msplot.a.nrows.def := '16384';
help::pkg.general.ms.objs.msplot.c.msplot.a.nrows.a := 'Integer';
help::pkg.general.ms.objs.msplot.c.msplot.a.edit := [=];
help::pkg.general.ms.objs.msplot.c.msplot.a.edit.d := 'Allow editing?';
help::pkg.general.ms.objs.msplot.c.msplot.a.edit.def := 'F';
help::pkg.general.ms.objs.msplot.c.msplot.a.edit.a := 'Boolean';
help::pkg.general.ms.objs.msplot.c.msplot.a.flagfile := [=];
help::pkg.general.ms.objs.msplot.c.msplot.a.flagfile.d := 'Name of flag file';
help::pkg.general.ms.objs.msplot.c.msplot.a.flagfile.def := 'unset';
help::pkg.general.ms.objs.msplot.c.msplot.a.flagfile.a := 'File name';
help::pkg.general.ms.objs.msplot.c.msplot.a.displaywidth := [=];
help::pkg.general.ms.objs.msplot.c.msplot.a.displaywidth.d := 'Width of display in pixels';
help::pkg.general.ms.objs.msplot.c.msplot.a.displaywidth.def := '600';
help::pkg.general.ms.objs.msplot.c.msplot.a.displaywidth.a := 'Integer';
help::pkg.general.ms.objs.msplot.c.msplot.a.displayheight := [=];
help::pkg.general.ms.objs.msplot.c.msplot.a.displayheight.d := 'Height of display in pixels';
help::pkg.general.ms.objs.msplot.c.msplot.a.displayheight.def := '300';
help::pkg.general.ms.objs.msplot.c.msplot.a.displayheight.a := 'Integer';
help::pkg.general.ms.objs.msplot.c.msplot.s := 'msplot(msfile, nrows, edit, flagfile, displaywidth, displayheight)';
help::pkg.general.ms.funs.msplotapplyflags := [=];
help::pkg.general.ms.funs.msplotapplyflags.a := [=];
help::pkg.general.ms.funs.msplotapplyflags.d := 'Apply flag columns';
help::pkg.general.ms.funs.msplotapplyflags.a.flagfile := [=];
help::pkg.general.ms.funs.msplotapplyflags.a.flagfile.d := 'Name of flag file';
help::pkg.general.ms.funs.msplotapplyflags.a.flagfile.def := 'no default';
help::pkg.general.ms.funs.msplotapplyflags.a.flagfile.a := 'String';
help::pkg.general.ms.funs.msplotapplyflags.a.msfile := [=];
help::pkg.general.ms.funs.msplotapplyflags.a.msfile.d := 'Name of measurement set';
help::pkg.general.ms.funs.msplotapplyflags.a.msfile.def := 'unset';
help::pkg.general.ms.funs.msplotapplyflags.a.msfile.a := 'String';
help::pkg.general.ms.funs.msplotapplyflags.a.merge := [=];
help::pkg.general.ms.funs.msplotapplyflags.a.merge.d := 'Merge the flags from both tables';
help::pkg.general.ms.funs.msplotapplyflags.a.merge.def := 'F';
help::pkg.general.ms.funs.msplotapplyflags.a.merge.a := 'Boolean';
help::pkg.general.ms.funs.msplotapplyflags.s := 'msplotapplyflags(flagfile, msfile, merge)';

help::pkg.general.measures := [=];
help::pkg.general.measures.objs := [=];
help::pkg.general.measures.funs := [=];
help::pkg.general.measures.d := 'Measures handling';
help::pkg.general.measures.funs.is_measure := [=];
help::pkg.general.measures.funs.is_measure.a := [=];
help::pkg.general.measures.funs.is_measure.d := 'Check if measure';
help::pkg.general.measures.funs.is_measure.a.v := [=];
help::pkg.general.measures.funs.is_measure.a.v.d := 'value to be tested';
help::pkg.general.measures.funs.is_measure.a.v.def := '';
help::pkg.general.measures.funs.is_measure.a.v.a := 'any';
help::pkg.general.measures.funs.is_measure.s := 'is_measure(v)';
help::pkg.general.measures.objs.measures := [=];
help::pkg.general.measures.objs.measures.m := [=];
help::pkg.general.measures.objs.measures.c := [=];
help::pkg.general.measures.objs.measures.d := 'measures tool';
help::pkg.general.measures.objs.measures.c.measures := [=];
help::pkg.general.measures.objs.measures.c.measures.d := 'Construct measures tool';
help::pkg.general.measures.objs.measures.c.measures.a.host := [=];
help::pkg.general.measures.objs.measures.c.measures.a.host.d := 'host on which to run tool';
help::pkg.general.measures.objs.measures.c.measures.a.host.def := '\' \' ';
help::pkg.general.measures.objs.measures.c.measures.a.host.a := 'valid host name string';
help::pkg.general.measures.objs.measures.c.measures.a.forceneweserver := [=];
help::pkg.general.measures.objs.measures.c.measures.a.forceneweserver.d := 'force the use of a new server';
help::pkg.general.measures.objs.measures.c.measures.a.forceneweserver.def := 'F';
help::pkg.general.measures.objs.measures.c.measures.a.forceneweserver.a := 'bool';
help::pkg.general.measures.objs.measures.c.measures.s := 'measures(host, forceneweserver)';
help::pkg.general.measures.objs.measures.m.gui := [=];
help::pkg.general.measures.objs.measures.m.gui.d := 'Use the measures GUI interface';
help::pkg.general.measures.objs.measures.m.gui.a.parent := [=];
help::pkg.general.measures.objs.measures.m.gui.a.parent.d := 'parent window';
help::pkg.general.measures.objs.measures.m.gui.a.parent.def := 'F';
help::pkg.general.measures.objs.measures.m.gui.a.parent.a := 'window or bool';
help::pkg.general.measures.objs.measures.m.gui.s := 'gui(parent)';
help::pkg.general.measures.objs.measures.m.dirshow := [=];
help::pkg.general.measures.objs.measures.m.dirshow.d := 'Format a direction using globally set formats';
help::pkg.general.measures.objs.measures.m.dirshow.a.v := [=];
help::pkg.general.measures.objs.measures.m.dirshow.a.v.d := 'value to be converted to string';
help::pkg.general.measures.objs.measures.m.dirshow.a.v.def := '';
help::pkg.general.measures.objs.measures.m.dirshow.a.v.a := 'a direction measure';
help::pkg.general.measures.objs.measures.m.dirshow.s := 'dirshow(v)';
help::pkg.general.measures.objs.measures.m.show := [=];
help::pkg.general.measures.objs.measures.m.show.d := 'Format a measure using globally set formats';
help::pkg.general.measures.objs.measures.m.show.a.v := [=];
help::pkg.general.measures.objs.measures.m.show.a.v.d := 'value to be converted to string';
help::pkg.general.measures.objs.measures.m.show.a.v.def := '';
help::pkg.general.measures.objs.measures.m.show.a.v.a := 'any measure';
help::pkg.general.measures.objs.measures.m.show.a.refcode := [=];
help::pkg.general.measures.objs.measures.m.show.a.refcode.d := 'add the reference code to output';
help::pkg.general.measures.objs.measures.m.show.a.refcode.def := 'T';
help::pkg.general.measures.objs.measures.m.show.a.refcode.a := 'boolean';
help::pkg.general.measures.objs.measures.m.show.s := 'show(v, refcode)';
help::pkg.general.measures.objs.measures.m.epochgui := [=];
help::pkg.general.measures.objs.measures.m.epochgui.d := 'GUI for manipulating epoch measures';
help::pkg.general.measures.objs.measures.m.epochgui.s := 'epochgui()';
help::pkg.general.measures.objs.measures.m.epoch := [=];
help::pkg.general.measures.objs.measures.m.epoch.d := 'define an epoch measure';
help::pkg.general.measures.objs.measures.m.epoch.a.rf := [=];
help::pkg.general.measures.objs.measures.m.epoch.a.rf.d := 'reference code';
help::pkg.general.measures.objs.measures.m.epoch.a.rf.def := '';
help::pkg.general.measures.objs.measures.m.epoch.a.rf.a := 'coded string';
help::pkg.general.measures.objs.measures.m.epoch.a.v0 := [=];
help::pkg.general.measures.objs.measures.m.epoch.a.v0.d := 'epoch value';
help::pkg.general.measures.objs.measures.m.epoch.a.v0.def := '0.0d';
help::pkg.general.measures.objs.measures.m.epoch.a.v0.a := 'time quantity';
help::pkg.general.measures.objs.measures.m.epoch.a.off := [=];
help::pkg.general.measures.objs.measures.m.epoch.a.off.d := 'optional offset';
help::pkg.general.measures.objs.measures.m.epoch.a.off.def := 'F';
help::pkg.general.measures.objs.measures.m.epoch.a.off.a := 'epoch measure';
help::pkg.general.measures.objs.measures.m.epoch.s := 'epoch(rf, v0, off)';
help::pkg.general.measures.objs.measures.m.directiongui := [=];
help::pkg.general.measures.objs.measures.m.directiongui.d := 'GUI for manipulating direction measures';
help::pkg.general.measures.objs.measures.m.directiongui.s := 'directiongui()';
help::pkg.general.measures.objs.measures.m.direction := [=];
help::pkg.general.measures.objs.measures.m.direction.d := 'define a direction measure';
help::pkg.general.measures.objs.measures.m.direction.a.rf := [=];
help::pkg.general.measures.objs.measures.m.direction.a.rf.d := 'reference code';
help::pkg.general.measures.objs.measures.m.direction.a.rf.def := '';
help::pkg.general.measures.objs.measures.m.direction.a.rf.a := 'coded string';
help::pkg.general.measures.objs.measures.m.direction.a.v0 := [=];
help::pkg.general.measures.objs.measures.m.direction.a.v0.d := 'longitude';
help::pkg.general.measures.objs.measures.m.direction.a.v0.def := '0..';
help::pkg.general.measures.objs.measures.m.direction.a.v0.a := 'quantity';
help::pkg.general.measures.objs.measures.m.direction.a.v1 := [=];
help::pkg.general.measures.objs.measures.m.direction.a.v1.d := 'latitude';
help::pkg.general.measures.objs.measures.m.direction.a.v1.def := '90..';
help::pkg.general.measures.objs.measures.m.direction.a.v1.a := 'quantity';
help::pkg.general.measures.objs.measures.m.direction.a.off := [=];
help::pkg.general.measures.objs.measures.m.direction.a.off.d := 'optional offset';
help::pkg.general.measures.objs.measures.m.direction.a.off.def := 'F';
help::pkg.general.measures.objs.measures.m.direction.a.off.a := 'direction measure';
help::pkg.general.measures.objs.measures.m.direction.s := 'direction(rf, v0, v1, off)';
help::pkg.general.measures.objs.measures.m.getvalue := [=];
help::pkg.general.measures.objs.measures.m.getvalue.d := 'get the value of a measure';
help::pkg.general.measures.objs.measures.m.getvalue.a.v := [=];
help::pkg.general.measures.objs.measures.m.getvalue.a.v.d := 'measure';
help::pkg.general.measures.objs.measures.m.getvalue.a.v.def := '';
help::pkg.general.measures.objs.measures.m.getvalue.a.v.a := 'array of measures';
help::pkg.general.measures.objs.measures.m.getvalue.s := 'getvalue(v)';
help::pkg.general.measures.objs.measures.m.gettype := [=];
help::pkg.general.measures.objs.measures.m.gettype.d := 'get the type of a measure';
help::pkg.general.measures.objs.measures.m.gettype.a.v := [=];
help::pkg.general.measures.objs.measures.m.gettype.a.v.d := 'measure';
help::pkg.general.measures.objs.measures.m.gettype.a.v.def := '';
help::pkg.general.measures.objs.measures.m.gettype.a.v.a := 'array of measures';
help::pkg.general.measures.objs.measures.m.gettype.s := 'gettype(v)';
help::pkg.general.measures.objs.measures.m.getref := [=];
help::pkg.general.measures.objs.measures.m.getref.d := 'get the reference code of a measure';
help::pkg.general.measures.objs.measures.m.getref.a.v := [=];
help::pkg.general.measures.objs.measures.m.getref.a.v.d := 'measure';
help::pkg.general.measures.objs.measures.m.getref.a.v.def := '';
help::pkg.general.measures.objs.measures.m.getref.a.v.a := 'array of measures';
help::pkg.general.measures.objs.measures.m.getref.s := 'getref(v)';
help::pkg.general.measures.objs.measures.m.getoffset := [=];
help::pkg.general.measures.objs.measures.m.getoffset.d := 'get the offset of a measure';
help::pkg.general.measures.objs.measures.m.getoffset.a.v := [=];
help::pkg.general.measures.objs.measures.m.getoffset.a.v.d := 'measure';
help::pkg.general.measures.objs.measures.m.getoffset.a.v.def := '';
help::pkg.general.measures.objs.measures.m.getoffset.a.v.a := 'array of measures';
help::pkg.general.measures.objs.measures.m.getoffset.s := 'getoffset(v)';
help::pkg.general.measures.objs.measures.m.cometname := [=];
help::pkg.general.measures.objs.measures.m.cometname.d := 'get the current comet name';
help::pkg.general.measures.objs.measures.m.cometname.s := 'cometname()';
help::pkg.general.measures.objs.measures.m.comettype := [=];
help::pkg.general.measures.objs.measures.m.comettype.d := 'get the current comet table type';
help::pkg.general.measures.objs.measures.m.comettype.s := 'comettype()';
help::pkg.general.measures.objs.measures.m.comettopo := [=];
help::pkg.general.measures.objs.measures.m.comettopo.d := 'get the current comet table coordinates';
help::pkg.general.measures.objs.measures.m.comettopo.s := 'comettopo()';
help::pkg.general.measures.objs.measures.m.framecomet := [=];
help::pkg.general.measures.objs.measures.m.framecomet.d := 'set the current comet table';
help::pkg.general.measures.objs.measures.m.framecomet.a.v := [=];
help::pkg.general.measures.objs.measures.m.framecomet.a.v.d := 'name of a table';
help::pkg.general.measures.objs.measures.m.framecomet.a.v.def := '\' \' ';
help::pkg.general.measures.objs.measures.m.framecomet.a.v.a := 'table name';
help::pkg.general.measures.objs.measures.m.framecomet.s := 'framecomet(v)';
help::pkg.general.measures.objs.measures.m.positiongui := [=];
help::pkg.general.measures.objs.measures.m.positiongui.d := 'GUI for manipulating position measures';
help::pkg.general.measures.objs.measures.m.positiongui.s := 'positiongui()';
help::pkg.general.measures.objs.measures.m.position := [=];
help::pkg.general.measures.objs.measures.m.position.d := 'define a position measure';
help::pkg.general.measures.objs.measures.m.position.a.rf := [=];
help::pkg.general.measures.objs.measures.m.position.a.rf.d := 'reference code';
help::pkg.general.measures.objs.measures.m.position.a.rf.def := '';
help::pkg.general.measures.objs.measures.m.position.a.rf.a := 'coded string';
help::pkg.general.measures.objs.measures.m.position.a.v0 := [=];
help::pkg.general.measures.objs.measures.m.position.a.v0.d := 'longitude or x';
help::pkg.general.measures.objs.measures.m.position.a.v0.def := '0..';
help::pkg.general.measures.objs.measures.m.position.a.v0.a := 'quantity';
help::pkg.general.measures.objs.measures.m.position.a.v1 := [=];
help::pkg.general.measures.objs.measures.m.position.a.v1.d := 'latitude or y';
help::pkg.general.measures.objs.measures.m.position.a.v1.def := '90..';
help::pkg.general.measures.objs.measures.m.position.a.v1.a := 'quantity';
help::pkg.general.measures.objs.measures.m.position.a.v2 := [=];
help::pkg.general.measures.objs.measures.m.position.a.v2.d := 'height or z';
help::pkg.general.measures.objs.measures.m.position.a.v2.def := '0m';
help::pkg.general.measures.objs.measures.m.position.a.v2.a := 'quantity';
help::pkg.general.measures.objs.measures.m.position.a.off := [=];
help::pkg.general.measures.objs.measures.m.position.a.off.d := 'optional offset';
help::pkg.general.measures.objs.measures.m.position.a.off.def := 'F';
help::pkg.general.measures.objs.measures.m.position.a.off.a := 'position measure';
help::pkg.general.measures.objs.measures.m.position.s := 'position(rf, v0, v1, v2, off)';
help::pkg.general.measures.objs.measures.m.observatory := [=];
help::pkg.general.measures.objs.measures.m.observatory.d := 'get position of an observatory';
help::pkg.general.measures.objs.measures.m.observatory.a.name := [=];
help::pkg.general.measures.objs.measures.m.observatory.a.name.d := 'observatory name';
help::pkg.general.measures.objs.measures.m.observatory.a.name.def := '\' ATCA\' ';
help::pkg.general.measures.objs.measures.m.observatory.a.name.a := 'coded string - case insensitive';
help::pkg.general.measures.objs.measures.m.observatory.s := 'observatory(name)';
help::pkg.general.measures.objs.measures.m.obslist := [=];
help::pkg.general.measures.objs.measures.m.obslist.d := 'get a list of known observatories';
help::pkg.general.measures.objs.measures.m.obslist.s := 'obslist()';
help::pkg.general.measures.objs.measures.m.linelist := [=];
help::pkg.general.measures.objs.measures.m.linelist.d := 'get a list of known spectral lines';
help::pkg.general.measures.objs.measures.m.linelist.s := 'linelist()';
help::pkg.general.measures.objs.measures.m.spectralline := [=];
help::pkg.general.measures.objs.measures.m.spectralline.d := 'get frequency of a spectral line';
help::pkg.general.measures.objs.measures.m.spectralline.a.name := [=];
help::pkg.general.measures.objs.measures.m.spectralline.a.name.d := 'name';
help::pkg.general.measures.objs.measures.m.spectralline.a.name.def := '\' HI\' ';
help::pkg.general.measures.objs.measures.m.spectralline.a.name.a := 'coded string';
help::pkg.general.measures.objs.measures.m.spectralline.s := 'spectralline(name)';
help::pkg.general.measures.objs.measures.m.sourcelist := [=];
help::pkg.general.measures.objs.measures.m.sourcelist.d := 'get a list of known sources';
help::pkg.general.measures.objs.measures.m.sourcelist.s := 'sourcelist()';
help::pkg.general.measures.objs.measures.m.source := [=];
help::pkg.general.measures.objs.measures.m.source.d := 'get direction of a source';
help::pkg.general.measures.objs.measures.m.source.a.name := [=];
help::pkg.general.measures.objs.measures.m.source.a.name.d := 'name';
help::pkg.general.measures.objs.measures.m.source.a.name.def := '\' PKS1934-638\' ';
help::pkg.general.measures.objs.measures.m.source.a.name.a := 'coded string';
help::pkg.general.measures.objs.measures.m.source.s := 'source(name)';
help::pkg.general.measures.objs.measures.m.frequencygui := [=];
help::pkg.general.measures.objs.measures.m.frequencygui.d := 'GUI for manipulating frequency measures';
help::pkg.general.measures.objs.measures.m.frequencygui.s := 'frequencygui()';
help::pkg.general.measures.objs.measures.m.frequency := [=];
help::pkg.general.measures.objs.measures.m.frequency.d := 'define a frequency measure';
help::pkg.general.measures.objs.measures.m.frequency.a.rf := [=];
help::pkg.general.measures.objs.measures.m.frequency.a.rf.d := 'reference code';
help::pkg.general.measures.objs.measures.m.frequency.a.rf.def := '';
help::pkg.general.measures.objs.measures.m.frequency.a.rf.a := 'coded string';
help::pkg.general.measures.objs.measures.m.frequency.a.v0 := [=];
help::pkg.general.measures.objs.measures.m.frequency.a.v0.d := 'frequency/wavelength/\ldots';
help::pkg.general.measures.objs.measures.m.frequency.a.v0.def := '0Hz';
help::pkg.general.measures.objs.measures.m.frequency.a.v0.a := 'quantity';
help::pkg.general.measures.objs.measures.m.frequency.a.off := [=];
help::pkg.general.measures.objs.measures.m.frequency.a.off.d := 'optional offset';
help::pkg.general.measures.objs.measures.m.frequency.a.off.def := 'F';
help::pkg.general.measures.objs.measures.m.frequency.a.off.a := 'frequency measure';
help::pkg.general.measures.objs.measures.m.frequency.s := 'frequency(rf, v0, off)';
help::pkg.general.measures.objs.measures.m.dopplergui := [=];
help::pkg.general.measures.objs.measures.m.dopplergui.d := 'GUI for manipulating doppler measures';
help::pkg.general.measures.objs.measures.m.dopplergui.s := 'dopplergui()';
help::pkg.general.measures.objs.measures.m.doppler := [=];
help::pkg.general.measures.objs.measures.m.doppler.d := 'define a doppler measure';
help::pkg.general.measures.objs.measures.m.doppler.a.rf := [=];
help::pkg.general.measures.objs.measures.m.doppler.a.rf.d := 'reference code';
help::pkg.general.measures.objs.measures.m.doppler.a.rf.def := '';
help::pkg.general.measures.objs.measures.m.doppler.a.rf.a := 'coded string';
help::pkg.general.measures.objs.measures.m.doppler.a.v0 := [=];
help::pkg.general.measures.objs.measures.m.doppler.a.v0.d := 'doppler ratio/velocity';
help::pkg.general.measures.objs.measures.m.doppler.a.v0.def := '0';
help::pkg.general.measures.objs.measures.m.doppler.a.v0.a := 'quantity';
help::pkg.general.measures.objs.measures.m.doppler.a.off := [=];
help::pkg.general.measures.objs.measures.m.doppler.a.off.d := 'optional offset';
help::pkg.general.measures.objs.measures.m.doppler.a.off.def := 'F';
help::pkg.general.measures.objs.measures.m.doppler.a.off.a := 'doppler measure';
help::pkg.general.measures.objs.measures.m.doppler.s := 'doppler(rf, v0, off)';
help::pkg.general.measures.objs.measures.m.radialvelocitygui := [=];
help::pkg.general.measures.objs.measures.m.radialvelocitygui.d := 'GUI for manipulating radial velocity measures';
help::pkg.general.measures.objs.measures.m.radialvelocitygui.s := 'radialvelocitygui()';
help::pkg.general.measures.objs.measures.m.radialvelocity := [=];
help::pkg.general.measures.objs.measures.m.radialvelocity.d := 'define a radialvelocity measure';
help::pkg.general.measures.objs.measures.m.radialvelocity.a.rf := [=];
help::pkg.general.measures.objs.measures.m.radialvelocity.a.rf.d := 'reference code';
help::pkg.general.measures.objs.measures.m.radialvelocity.a.rf.def := '';
help::pkg.general.measures.objs.measures.m.radialvelocity.a.rf.a := 'coded string';
help::pkg.general.measures.objs.measures.m.radialvelocity.a.v0 := [=];
help::pkg.general.measures.objs.measures.m.radialvelocity.a.v0.d := 'radial velocity';
help::pkg.general.measures.objs.measures.m.radialvelocity.a.v0.def := '0m/s';
help::pkg.general.measures.objs.measures.m.radialvelocity.a.v0.a := 'quantity';
help::pkg.general.measures.objs.measures.m.radialvelocity.a.off := [=];
help::pkg.general.measures.objs.measures.m.radialvelocity.a.off.d := 'optional offset';
help::pkg.general.measures.objs.measures.m.radialvelocity.a.off.def := 'F';
help::pkg.general.measures.objs.measures.m.radialvelocity.a.off.a := 'radialvelocity measure';
help::pkg.general.measures.objs.measures.m.radialvelocity.s := 'radialvelocity(rf, v0, off)';
help::pkg.general.measures.objs.measures.m.uvw := [=];
help::pkg.general.measures.objs.measures.m.uvw.d := 'define a uvw measure';
help::pkg.general.measures.objs.measures.m.uvw.a.rf := [=];
help::pkg.general.measures.objs.measures.m.uvw.a.rf.d := 'reference code';
help::pkg.general.measures.objs.measures.m.uvw.a.rf.def := '';
help::pkg.general.measures.objs.measures.m.uvw.a.rf.a := 'coded string';
help::pkg.general.measures.objs.measures.m.uvw.a.v0 := [=];
help::pkg.general.measures.objs.measures.m.uvw.a.v0.d := 'longitude or x';
help::pkg.general.measures.objs.measures.m.uvw.a.v0.def := '0..';
help::pkg.general.measures.objs.measures.m.uvw.a.v0.a := 'quantity';
help::pkg.general.measures.objs.measures.m.uvw.a.v1 := [=];
help::pkg.general.measures.objs.measures.m.uvw.a.v1.d := 'latitude or y';
help::pkg.general.measures.objs.measures.m.uvw.a.v1.def := '';
help::pkg.general.measures.objs.measures.m.uvw.a.v1.a := 'quantity';
help::pkg.general.measures.objs.measures.m.uvw.a.v2 := [=];
help::pkg.general.measures.objs.measures.m.uvw.a.v2.d := 'height or z';
help::pkg.general.measures.objs.measures.m.uvw.a.v2.def := '';
help::pkg.general.measures.objs.measures.m.uvw.a.v2.a := 'quantity';
help::pkg.general.measures.objs.measures.m.uvw.a.off := [=];
help::pkg.general.measures.objs.measures.m.uvw.a.off.d := 'optional offset';
help::pkg.general.measures.objs.measures.m.uvw.a.off.def := 'F';
help::pkg.general.measures.objs.measures.m.uvw.a.off.a := 'uvw measure';
help::pkg.general.measures.objs.measures.m.uvw.s := 'uvw(rf, v0, v1, v2, off)';
help::pkg.general.measures.objs.measures.m.touvw := [=];
help::pkg.general.measures.objs.measures.m.touvw.d := 'calculate a uvw measure from a baseline';
help::pkg.general.measures.objs.measures.m.touvw.a.v := [=];
help::pkg.general.measures.objs.measures.m.touvw.a.v.d := 'baseline measure';
help::pkg.general.measures.objs.measures.m.touvw.a.v.def := '';
help::pkg.general.measures.objs.measures.m.touvw.a.v.a := 'baseline measure';
help::pkg.general.measures.objs.measures.m.touvw.a.dot := [=];
help::pkg.general.measures.objs.measures.m.touvw.a.dot.d := 'uvw-dot';
help::pkg.general.measures.objs.measures.m.touvw.a.dot.def := 'unset';
help::pkg.general.measures.objs.measures.m.touvw.a.dot.a := 'quantity array';
help::pkg.general.measures.objs.measures.m.touvw.a.xyz := [=];
help::pkg.general.measures.objs.measures.m.touvw.a.xyz.d := 'uvw';
help::pkg.general.measures.objs.measures.m.touvw.a.xyz.def := '';
help::pkg.general.measures.objs.measures.m.touvw.a.xyz.a := 'quantity array';
help::pkg.general.measures.objs.measures.m.touvw.s := 'touvw(v, dot, xyz)';
help::pkg.general.measures.objs.measures.m.expand := [=];
help::pkg.general.measures.objs.measures.m.expand.d := 'expand $n$ positions to $n*(n-1)/2$ baselines';
help::pkg.general.measures.objs.measures.m.expand.a.v := [=];
help::pkg.general.measures.objs.measures.m.expand.a.v.d := 'measure';
help::pkg.general.measures.objs.measures.m.expand.a.v.def := '';
help::pkg.general.measures.objs.measures.m.expand.a.v.a := 'baseline, position or uvw measure';
help::pkg.general.measures.objs.measures.m.expand.a.xyz := [=];
help::pkg.general.measures.objs.measures.m.expand.a.xyz.d := 'uvw';
help::pkg.general.measures.objs.measures.m.expand.a.xyz.def := '';
help::pkg.general.measures.objs.measures.m.expand.a.xyz.a := 'quantity array';
help::pkg.general.measures.objs.measures.m.expand.s := 'expand(v, xyz)';
help::pkg.general.measures.objs.measures.m.earthmagnetic := [=];
help::pkg.general.measures.objs.measures.m.earthmagnetic.d := 'define an earthmagnetic measure';
help::pkg.general.measures.objs.measures.m.earthmagnetic.a.rf := [=];
help::pkg.general.measures.objs.measures.m.earthmagnetic.a.rf.d := 'reference code';
help::pkg.general.measures.objs.measures.m.earthmagnetic.a.rf.def := '';
help::pkg.general.measures.objs.measures.m.earthmagnetic.a.rf.a := 'coded string';
help::pkg.general.measures.objs.measures.m.earthmagnetic.a.v0 := [=];
help::pkg.general.measures.objs.measures.m.earthmagnetic.a.v0.d := 'longitude or x';
help::pkg.general.measures.objs.measures.m.earthmagnetic.a.v0.def := '0G';
help::pkg.general.measures.objs.measures.m.earthmagnetic.a.v0.a := 'quantity';
help::pkg.general.measures.objs.measures.m.earthmagnetic.a.v1 := [=];
help::pkg.general.measures.objs.measures.m.earthmagnetic.a.v1.d := 'latitude or y';
help::pkg.general.measures.objs.measures.m.earthmagnetic.a.v1.def := '0..';
help::pkg.general.measures.objs.measures.m.earthmagnetic.a.v1.a := 'quantity';
help::pkg.general.measures.objs.measures.m.earthmagnetic.a.v2 := [=];
help::pkg.general.measures.objs.measures.m.earthmagnetic.a.v2.d := 'height or z';
help::pkg.general.measures.objs.measures.m.earthmagnetic.a.v2.def := '90..';
help::pkg.general.measures.objs.measures.m.earthmagnetic.a.v2.a := 'quantity';
help::pkg.general.measures.objs.measures.m.earthmagnetic.a.off := [=];
help::pkg.general.measures.objs.measures.m.earthmagnetic.a.off.d := 'optional offset';
help::pkg.general.measures.objs.measures.m.earthmagnetic.a.off.def := 'F';
help::pkg.general.measures.objs.measures.m.earthmagnetic.a.off.a := 'earthmagnetic measure';
help::pkg.general.measures.objs.measures.m.earthmagnetic.s := 'earthmagnetic(rf, v0, v1, v2, off)';
help::pkg.general.measures.objs.measures.m.baseline := [=];
help::pkg.general.measures.objs.measures.m.baseline.d := 'define a baseline measure';
help::pkg.general.measures.objs.measures.m.baseline.a.rf := [=];
help::pkg.general.measures.objs.measures.m.baseline.a.rf.d := 'reference code';
help::pkg.general.measures.objs.measures.m.baseline.a.rf.def := '';
help::pkg.general.measures.objs.measures.m.baseline.a.rf.a := 'coded string';
help::pkg.general.measures.objs.measures.m.baseline.a.v0 := [=];
help::pkg.general.measures.objs.measures.m.baseline.a.v0.d := 'longitude or x';
help::pkg.general.measures.objs.measures.m.baseline.a.v0.def := '0..';
help::pkg.general.measures.objs.measures.m.baseline.a.v0.a := 'quantity';
help::pkg.general.measures.objs.measures.m.baseline.a.v1 := [=];
help::pkg.general.measures.objs.measures.m.baseline.a.v1.d := 'latitude or y';
help::pkg.general.measures.objs.measures.m.baseline.a.v1.def := '';
help::pkg.general.measures.objs.measures.m.baseline.a.v1.a := 'quantity';
help::pkg.general.measures.objs.measures.m.baseline.a.v2 := [=];
help::pkg.general.measures.objs.measures.m.baseline.a.v2.d := 'height or z';
help::pkg.general.measures.objs.measures.m.baseline.a.v2.def := '';
help::pkg.general.measures.objs.measures.m.baseline.a.v2.a := 'quantity';
help::pkg.general.measures.objs.measures.m.baseline.a.off := [=];
help::pkg.general.measures.objs.measures.m.baseline.a.off.d := 'optional offset';
help::pkg.general.measures.objs.measures.m.baseline.a.off.def := 'F';
help::pkg.general.measures.objs.measures.m.baseline.a.off.a := 'baseline measure';
help::pkg.general.measures.objs.measures.m.baseline.s := 'baseline(rf, v0, v1, v2, off)';
help::pkg.general.measures.objs.measures.m.asbaseline := [=];
help::pkg.general.measures.objs.measures.m.asbaseline.d := 'define a baseline from a position measure';
help::pkg.general.measures.objs.measures.m.asbaseline.a.pos := [=];
help::pkg.general.measures.objs.measures.m.asbaseline.a.pos.d := 'position measure';
help::pkg.general.measures.objs.measures.m.asbaseline.a.pos.def := '';
help::pkg.general.measures.objs.measures.m.asbaseline.a.pos.a := 'position measure';
help::pkg.general.measures.objs.measures.m.asbaseline.s := 'asbaseline(pos)';
help::pkg.general.measures.objs.measures.m.listcodes := [=];
help::pkg.general.measures.objs.measures.m.listcodes.d := 'get known reference codes';
help::pkg.general.measures.objs.measures.m.listcodes.a.ms := [=];
help::pkg.general.measures.objs.measures.m.listcodes.a.ms.d := 'the measure type for which to list';
help::pkg.general.measures.objs.measures.m.listcodes.a.ms.def := '';
help::pkg.general.measures.objs.measures.m.listcodes.a.ms.a := 'a measure';
help::pkg.general.measures.objs.measures.m.listcodes.s := 'listcodes(ms)';
help::pkg.general.measures.objs.measures.m.measure := [=];
help::pkg.general.measures.objs.measures.m.measure.d := 'convert a measure to another reference';
help::pkg.general.measures.objs.measures.m.measure.a.v := [=];
help::pkg.general.measures.objs.measures.m.measure.a.v.d := 'measure to be converted';
help::pkg.general.measures.objs.measures.m.measure.a.v.def := '';
help::pkg.general.measures.objs.measures.m.measure.a.v.a := 'measure';
help::pkg.general.measures.objs.measures.m.measure.a.rf := [=];
help::pkg.general.measures.objs.measures.m.measure.a.rf.d := 'output reference code';
help::pkg.general.measures.objs.measures.m.measure.a.rf.def := '';
help::pkg.general.measures.objs.measures.m.measure.a.rf.a := 'coded string';
help::pkg.general.measures.objs.measures.m.measure.a.off := [=];
help::pkg.general.measures.objs.measures.m.measure.a.off.d := 'optional output offset';
help::pkg.general.measures.objs.measures.m.measure.a.off.def := 'F';
help::pkg.general.measures.objs.measures.m.measure.a.off.a := 'measure';
help::pkg.general.measures.objs.measures.m.measure.a.qv := [=];
help::pkg.general.measures.objs.measures.m.measure.a.qv.d := 'optional quantity (with multiple values possible)';
help::pkg.general.measures.objs.measures.m.measure.a.qv.def := 'F';
help::pkg.general.measures.objs.measures.m.measure.a.qv.a := 'quaantity';
help::pkg.general.measures.objs.measures.m.measure.s := 'measure(v, rf, off, qv)';
help::pkg.general.measures.objs.measures.m.doframe := [=];
help::pkg.general.measures.objs.measures.m.doframe.d := 'save a measure as frame reference';
help::pkg.general.measures.objs.measures.m.doframe.a.v := [=];
help::pkg.general.measures.objs.measures.m.doframe.a.v.d := 'measure to be set in frame';
help::pkg.general.measures.objs.measures.m.doframe.a.v.def := '';
help::pkg.general.measures.objs.measures.m.doframe.a.v.a := 'measure';
help::pkg.general.measures.objs.measures.m.doframe.s := 'doframe(v)';
help::pkg.general.measures.objs.measures.m.framenow := [=];
help::pkg.general.measures.objs.measures.m.framenow.d := 'set the active frame time at now';
help::pkg.general.measures.objs.measures.m.framenow.s := 'framenow()';
help::pkg.general.measures.objs.measures.m.showframe := [=];
help::pkg.general.measures.objs.measures.m.showframe.d := 'show the currently active frame reference';
help::pkg.general.measures.objs.measures.m.showframe.a.g := [=];
help::pkg.general.measures.objs.measures.m.showframe.a.g.d := 'use gui if available';
help::pkg.general.measures.objs.measures.m.showframe.a.g.def := 'T';
help::pkg.general.measures.objs.measures.m.showframe.a.g.a := 'boolean';
help::pkg.general.measures.objs.measures.m.showframe.s := 'showframe(g)';
help::pkg.general.measures.objs.measures.m.frameauto := [=];
help::pkg.general.measures.objs.measures.m.frameauto.d := 'update the currently active frame time automatically';
help::pkg.general.measures.objs.measures.m.frameauto.a.v := [=];
help::pkg.general.measures.objs.measures.m.frameauto.a.v.d := 'update interval';
help::pkg.general.measures.objs.measures.m.frameauto.a.v.def := '2s';
help::pkg.general.measures.objs.measures.m.frameauto.a.v.a := 'time string';
help::pkg.general.measures.objs.measures.m.frameauto.s := 'frameauto(v)';
help::pkg.general.measures.objs.measures.m.framenoauto := [=];
help::pkg.general.measures.objs.measures.m.framenoauto.d := 'stop an active automatic frame';
help::pkg.general.measures.objs.measures.m.framenoauto.s := 'framenoauto()';
help::pkg.general.measures.objs.measures.m.doshowauto := [=];
help::pkg.general.measures.objs.measures.m.doshowauto.d := 'save an automatic conversion reference';
help::pkg.general.measures.objs.measures.m.doshowauto.a.v := [=];
help::pkg.general.measures.objs.measures.m.doshowauto.a.v.d := 'measure to be auto converted';
help::pkg.general.measures.objs.measures.m.doshowauto.a.v.def := '';
help::pkg.general.measures.objs.measures.m.doshowauto.a.v.a := 'measure';
help::pkg.general.measures.objs.measures.m.doshowauto.a.r := [=];
help::pkg.general.measures.objs.measures.m.doshowauto.a.r.d := 'reference code to be autoconverted to';
help::pkg.general.measures.objs.measures.m.doshowauto.a.r.def := '';
help::pkg.general.measures.objs.measures.m.doshowauto.a.r.a := 'valid reference code string';
help::pkg.general.measures.objs.measures.m.doshowauto.a.of := [=];
help::pkg.general.measures.objs.measures.m.doshowauto.a.of.d := 'possible output offset';
help::pkg.general.measures.objs.measures.m.doshowauto.a.of.def := 'F';
help::pkg.general.measures.objs.measures.m.doshowauto.a.of.a := 'measure';
help::pkg.general.measures.objs.measures.m.doshowauto.s := 'doshowauto(v, r, of)';
help::pkg.general.measures.objs.measures.m.showauto := [=];
help::pkg.general.measures.objs.measures.m.showauto.d := 'automatically update current conversions';
help::pkg.general.measures.objs.measures.m.showauto.a.g := [=];
help::pkg.general.measures.objs.measures.m.showauto.a.g.d := 'use gui if available';
help::pkg.general.measures.objs.measures.m.showauto.a.g.def := 'T';
help::pkg.general.measures.objs.measures.m.showauto.a.g.a := 'boolean';
help::pkg.general.measures.objs.measures.m.showauto.s := 'showauto(g)';
help::pkg.general.measures.objs.measures.m.toradialvelocity := [=];
help::pkg.general.measures.objs.measures.m.toradialvelocity.d := 'convert a doppler type value to a real radial velocity';
help::pkg.general.measures.objs.measures.m.toradialvelocity.a.rf := [=];
help::pkg.general.measures.objs.measures.m.toradialvelocity.a.rf.d := 'radial velocity reference type';
help::pkg.general.measures.objs.measures.m.toradialvelocity.a.rf.def := '';
help::pkg.general.measures.objs.measures.m.toradialvelocity.a.rf.a := 'string';
help::pkg.general.measures.objs.measures.m.toradialvelocity.a.v0 := [=];
help::pkg.general.measures.objs.measures.m.toradialvelocity.a.v0.d := 'doppler value';
help::pkg.general.measures.objs.measures.m.toradialvelocity.a.v0.def := '';
help::pkg.general.measures.objs.measures.m.toradialvelocity.a.v0.a := 'doppler measure';
help::pkg.general.measures.objs.measures.m.toradialvelocity.s := 'toradialvelocity(rf, v0)';
help::pkg.general.measures.objs.measures.m.tofrequency := [=];
help::pkg.general.measures.objs.measures.m.tofrequency.d := 'convert a doppler type value to a frequency';
help::pkg.general.measures.objs.measures.m.tofrequency.a.rf := [=];
help::pkg.general.measures.objs.measures.m.tofrequency.a.rf.d := 'frequency reference type';
help::pkg.general.measures.objs.measures.m.tofrequency.a.rf.def := '';
help::pkg.general.measures.objs.measures.m.tofrequency.a.rf.a := 'string';
help::pkg.general.measures.objs.measures.m.tofrequency.a.v0 := [=];
help::pkg.general.measures.objs.measures.m.tofrequency.a.v0.d := 'doppler value';
help::pkg.general.measures.objs.measures.m.tofrequency.a.v0.def := '';
help::pkg.general.measures.objs.measures.m.tofrequency.a.v0.a := 'doppler measure';
help::pkg.general.measures.objs.measures.m.tofrequency.a.rfq := [=];
help::pkg.general.measures.objs.measures.m.tofrequency.a.rfq.d := 'rest frequency';
help::pkg.general.measures.objs.measures.m.tofrequency.a.rfq.def := '';
help::pkg.general.measures.objs.measures.m.tofrequency.a.rfq.a := 'frequency measure or frequency quantity';
help::pkg.general.measures.objs.measures.m.tofrequency.s := 'tofrequency(rf, v0, rfq)';
help::pkg.general.measures.objs.measures.m.todoppler := [=];
help::pkg.general.measures.objs.measures.m.todoppler.d := 'convert a frequency or radialvelocity measure to a doppler measure';
help::pkg.general.measures.objs.measures.m.todoppler.a.rf := [=];
help::pkg.general.measures.objs.measures.m.todoppler.a.rf.d := 'doppler reference type';
help::pkg.general.measures.objs.measures.m.todoppler.a.rf.def := '';
help::pkg.general.measures.objs.measures.m.todoppler.a.rf.a := 'string';
help::pkg.general.measures.objs.measures.m.todoppler.a.v0 := [=];
help::pkg.general.measures.objs.measures.m.todoppler.a.v0.d := 'radial velocity or frequency';
help::pkg.general.measures.objs.measures.m.todoppler.a.v0.def := '';
help::pkg.general.measures.objs.measures.m.todoppler.a.v0.a := 'radialvelocity or frequency measure';
help::pkg.general.measures.objs.measures.m.todoppler.a.rfq := [=];
help::pkg.general.measures.objs.measures.m.todoppler.a.rfq.d := 'rest frequency';
help::pkg.general.measures.objs.measures.m.todoppler.a.rfq.def := 'F';
help::pkg.general.measures.objs.measures.m.todoppler.a.rfq.a := 'frequency measure or frequency quantity';
help::pkg.general.measures.objs.measures.m.todoppler.s := 'todoppler(rf, v0, rfq)';
help::pkg.general.measures.objs.measures.m.torestfrequency := [=];
help::pkg.general.measures.objs.measures.m.torestfrequency.d := 'convert a frequency and doppler measure to a rest frequency';
help::pkg.general.measures.objs.measures.m.torestfrequency.a.v0 := [=];
help::pkg.general.measures.objs.measures.m.torestfrequency.a.v0.d := 'frequency reference type';
help::pkg.general.measures.objs.measures.m.torestfrequency.a.v0.def := '';
help::pkg.general.measures.objs.measures.m.torestfrequency.a.v0.a := 'string';
help::pkg.general.measures.objs.measures.m.torestfrequency.a.d0 := [=];
help::pkg.general.measures.objs.measures.m.torestfrequency.a.d0.d := 'doppler value';
help::pkg.general.measures.objs.measures.m.torestfrequency.a.d0.def := '';
help::pkg.general.measures.objs.measures.m.torestfrequency.a.d0.a := 'doppler measure';
help::pkg.general.measures.objs.measures.m.torestfrequency.s := 'torestfrequency(v0, d0)';
help::pkg.general.measures.objs.measures.m.rise := [=];
help::pkg.general.measures.objs.measures.m.rise.d := 'get rise and set sidereal time';
help::pkg.general.measures.objs.measures.m.rise.a.crd := [=];
help::pkg.general.measures.objs.measures.m.rise.a.crd.d := 'direction of source';
help::pkg.general.measures.objs.measures.m.rise.a.crd.def := '';
help::pkg.general.measures.objs.measures.m.rise.a.crd.a := 'direction measure';
help::pkg.general.measures.objs.measures.m.rise.a.ev := [=];
help::pkg.general.measures.objs.measures.m.rise.a.ev.d := 'elevation limit';
help::pkg.general.measures.objs.measures.m.rise.a.ev.def := '\' 5deg\' ';
help::pkg.general.measures.objs.measures.m.rise.a.ev.a := 'angle quantity';
help::pkg.general.measures.objs.measures.m.rise.s := 'rise(crd, ev)';
help::pkg.general.measures.objs.measures.m.riseset := [=];
help::pkg.general.measures.objs.measures.m.riseset.d := 'get rise and set times';
help::pkg.general.measures.objs.measures.m.riseset.a.crd := [=];
help::pkg.general.measures.objs.measures.m.riseset.a.crd.d := 'direction of source';
help::pkg.general.measures.objs.measures.m.riseset.a.crd.def := '';
help::pkg.general.measures.objs.measures.m.riseset.a.crd.a := 'direction measure';
help::pkg.general.measures.objs.measures.m.riseset.a.ev := [=];
help::pkg.general.measures.objs.measures.m.riseset.a.ev.d := 'elevation limit';
help::pkg.general.measures.objs.measures.m.riseset.a.ev.def := '\' 5deg\' ';
help::pkg.general.measures.objs.measures.m.riseset.a.ev.a := 'angle quantity';
help::pkg.general.measures.objs.measures.m.riseset.s := 'riseset(crd, ev)';
help::pkg.general.measures.objs.measures.m.posangle := [=];
help::pkg.general.measures.objs.measures.m.posangle.d := 'get position angle of two directions';
help::pkg.general.measures.objs.measures.m.posangle.a.m1 := [=];
help::pkg.general.measures.objs.measures.m.posangle.a.m1.d := 'direction of source';
help::pkg.general.measures.objs.measures.m.posangle.a.m1.def := '';
help::pkg.general.measures.objs.measures.m.posangle.a.m1.a := 'direction measure';
help::pkg.general.measures.objs.measures.m.posangle.a.m2 := [=];
help::pkg.general.measures.objs.measures.m.posangle.a.m2.d := 'direction of other source';
help::pkg.general.measures.objs.measures.m.posangle.a.m2.def := '';
help::pkg.general.measures.objs.measures.m.posangle.a.m2.a := 'direction measure';
help::pkg.general.measures.objs.measures.m.posangle.s := 'posangle(m1, m2)';
help::pkg.general.measures.objs.measures.m.separation := [=];
help::pkg.general.measures.objs.measures.m.separation.d := 'get separation angle between two directions';
help::pkg.general.measures.objs.measures.m.separation.a.m1 := [=];
help::pkg.general.measures.objs.measures.m.separation.a.m1.d := 'direction of source';
help::pkg.general.measures.objs.measures.m.separation.a.m1.def := '';
help::pkg.general.measures.objs.measures.m.separation.a.m1.a := 'direction measure';
help::pkg.general.measures.objs.measures.m.separation.a.m2 := [=];
help::pkg.general.measures.objs.measures.m.separation.a.m2.d := 'direction of other source';
help::pkg.general.measures.objs.measures.m.separation.a.m2.def := '';
help::pkg.general.measures.objs.measures.m.separation.a.m2.a := 'direction measure';
help::pkg.general.measures.objs.measures.m.separation.s := 'separation(m1, m2)';
help::pkg.general.measures.objs.measures.m.addxvalue := [=];
help::pkg.general.measures.objs.measures.m.addxvalue.d := 'get some additional measure information';
help::pkg.general.measures.objs.measures.m.addxvalue.s := 'addxvalue()';
help::pkg.general.measures.objs.measures.m.id := [=];
help::pkg.general.measures.objs.measures.m.id.d := 'identification of tool';
help::pkg.general.measures.objs.measures.m.id.s := 'id()';
help::pkg.general.measures.objs.measures.m.type := [=];
help::pkg.general.measures.objs.measures.m.type.d := 'type of tool';
help::pkg.general.measures.objs.measures.m.type.s := 'type()';
help::pkg.general.measures.objs.measures.m.done := [=];
help::pkg.general.measures.objs.measures.m.done.d := 'free resources used by tool';
help::pkg.general.measures.objs.measures.m.done.a.kill := [=];
help::pkg.general.measures.objs.measures.m.done.a.kill.d := 'force kill of the default tool';
help::pkg.general.measures.objs.measures.m.done.a.kill.def := 'F';
help::pkg.general.measures.objs.measures.m.done.a.kill.a := 'bool';
help::pkg.general.measures.objs.measures.m.done.s := 'done(kill)';
help::pkg.general.measures.objs.measuresgui := [=];
help::pkg.general.measures.objs.measuresgui.m := [=];
help::pkg.general.measures.objs.measuresgui.c := [=];
help::pkg.general.measures.objs.measuresgui.d := 'gui code for measures.g';

help::pkg.general.measuresdata := [=];
help::pkg.general.measuresdata.objs := [=];
help::pkg.general.measuresdata.funs := [=];
help::pkg.general.measuresdata.d := 'Methods to obtain IERS data and make tables';
help::pkg.general.measuresdata.funs.taiutc := [=];
help::pkg.general.measuresdata.funs.taiutc.a := [=];
help::pkg.general.measuresdata.funs.taiutc.d := 'Get leap seconds';
help::pkg.general.measuresdata.funs.taiutc.s := 'taiutc()';
help::pkg.general.measuresdata.funs.ierseop97 := [=];
help::pkg.general.measuresdata.funs.ierseop97.a := [=];
help::pkg.general.measuresdata.funs.ierseop97.d := 'Get Earth Orientation Parameters solution';
help::pkg.general.measuresdata.funs.ierseop97.s := 'ierseop97()';
help::pkg.general.measuresdata.funs.ierseop2000 := [=];
help::pkg.general.measuresdata.funs.ierseop2000.a := [=];
help::pkg.general.measuresdata.funs.ierseop2000.d := 'Get Earth Orientation Parameters solution';
help::pkg.general.measuresdata.funs.ierseop2000.s := 'ierseop2000()';
help::pkg.general.measuresdata.funs.ierspredict := [=];
help::pkg.general.measuresdata.funs.ierspredict.a := [=];
help::pkg.general.measuresdata.funs.ierspredict.d := 'Get predicted Earth Orientation Parameters';
help::pkg.general.measuresdata.funs.ierspredict.s := 'ierspredict()';
help::pkg.general.measuresdata.funs.ierspredict2000 := [=];
help::pkg.general.measuresdata.funs.ierspredict2000.a := [=];
help::pkg.general.measuresdata.funs.ierspredict2000.d := 'Get predicted Earth Orientation Parameters';
help::pkg.general.measuresdata.funs.ierspredict2000.s := 'ierspredict2000()';
help::pkg.general.measuresdata.funs.jplde := [=];
help::pkg.general.measuresdata.funs.jplde.a := [=];
help::pkg.general.measuresdata.funs.jplde.d := 'Get solar system parameter';
help::pkg.general.measuresdata.funs.jplde.a.v := [=];
help::pkg.general.measuresdata.funs.jplde.a.v.d := 'JPL table number';
help::pkg.general.measuresdata.funs.jplde.a.v.def := '200';
help::pkg.general.measuresdata.funs.jplde.a.v.a := '200 or 405';
help::pkg.general.measuresdata.funs.jplde.a.st := [=];
help::pkg.general.measuresdata.funs.jplde.a.st.d := 'start year';
help::pkg.general.measuresdata.funs.jplde.a.st.def := '1990';
help::pkg.general.measuresdata.funs.jplde.a.st.a := 'between 1960 and 2020';
help::pkg.general.measuresdata.funs.jplde.a.nd := [=];
help::pkg.general.measuresdata.funs.jplde.a.nd.d := 'end year';
help::pkg.general.measuresdata.funs.jplde.a.nd.def := '0';
help::pkg.general.measuresdata.funs.jplde.a.nd.a := 'between 1960 and 2020';
help::pkg.general.measuresdata.funs.jplde.s := 'jplde(v, st, nd)';
help::pkg.general.measuresdata.funs.addobservatory := [=];
help::pkg.general.measuresdata.funs.addobservatory.a := [=];
help::pkg.general.measuresdata.funs.addobservatory.d := 'Add/delete entries to the Observatories table';
help::pkg.general.measuresdata.funs.addobservatory.a.nam := [=];
help::pkg.general.measuresdata.funs.addobservatory.a.nam.d := 'name of observatory';
help::pkg.general.measuresdata.funs.addobservatory.a.nam.def := '';
help::pkg.general.measuresdata.funs.addobservatory.a.nam.a := 'string';
help::pkg.general.measuresdata.funs.addobservatory.a.typ := [=];
help::pkg.general.measuresdata.funs.addobservatory.a.typ.d := 'position type';
help::pkg.general.measuresdata.funs.addobservatory.a.typ.def := '\' \' ';
help::pkg.general.measuresdata.funs.addobservatory.a.typ.a := 'known type like itrf, wgs84';
help::pkg.general.measuresdata.funs.addobservatory.a.long := [=];
help::pkg.general.measuresdata.funs.addobservatory.a.long.d := 'longitude or x';
help::pkg.general.measuresdata.funs.addobservatory.a.long.def := '\' \' ';
help::pkg.general.measuresdata.funs.addobservatory.a.long.a := 'angle or length quantity';
help::pkg.general.measuresdata.funs.addobservatory.a.lat := [=];
help::pkg.general.measuresdata.funs.addobservatory.a.lat.d := 'latitude or y';
help::pkg.general.measuresdata.funs.addobservatory.a.lat.def := '\' \' ';
help::pkg.general.measuresdata.funs.addobservatory.a.lat.a := 'angle or length quantity';
help::pkg.general.measuresdata.funs.addobservatory.a.ht := [=];
help::pkg.general.measuresdata.funs.addobservatory.a.ht.d := 'height or z';
help::pkg.general.measuresdata.funs.addobservatory.a.ht.def := '\' \' ';
help::pkg.general.measuresdata.funs.addobservatory.a.ht.a := 'length quantity';
help::pkg.general.measuresdata.funs.addobservatory.a.src := [=];
help::pkg.general.measuresdata.funs.addobservatory.a.src.d := 'some comment about source of data';
help::pkg.general.measuresdata.funs.addobservatory.a.src.def := '\' \' ';
help::pkg.general.measuresdata.funs.addobservatory.a.src.a := 'string';
help::pkg.general.measuresdata.funs.addobservatory.a.com := [=];
help::pkg.general.measuresdata.funs.addobservatory.a.com.d := 'comment, e.g. about precision';
help::pkg.general.measuresdata.funs.addobservatory.a.com.def := '\' \' ';
help::pkg.general.measuresdata.funs.addobservatory.a.com.a := 'string';
help::pkg.general.measuresdata.funs.addobservatory.a.delnam := [=];
help::pkg.general.measuresdata.funs.addobservatory.a.delnam.d := 'indicate if delete in stead of add';
help::pkg.general.measuresdata.funs.addobservatory.a.delnam.def := 'F';
help::pkg.general.measuresdata.funs.addobservatory.a.delnam.a := 'bool';
help::pkg.general.measuresdata.funs.addobservatory.a.ctable := [=];
help::pkg.general.measuresdata.funs.addobservatory.a.ctable.d := 'indicate that an empty table should be created';
help::pkg.general.measuresdata.funs.addobservatory.a.ctable.def := 'F';
help::pkg.general.measuresdata.funs.addobservatory.a.ctable.a := 'bool';
help::pkg.general.measuresdata.funs.addobservatory.s := 'addobservatory(nam, typ, long, lat, ht, src, com, delnam, ctable)';
help::pkg.general.measuresdata.funs.addline := [=];
help::pkg.general.measuresdata.funs.addline.a := [=];
help::pkg.general.measuresdata.funs.addline.d := 'Add/delete entries to the Lines table';
help::pkg.general.measuresdata.funs.addline.a.nam := [=];
help::pkg.general.measuresdata.funs.addline.a.nam.d := 'name of spectral line';
help::pkg.general.measuresdata.funs.addline.a.nam.def := '';
help::pkg.general.measuresdata.funs.addline.a.nam.a := 'string';
help::pkg.general.measuresdata.funs.addline.a.freq := [=];
help::pkg.general.measuresdata.funs.addline.a.freq.d := 'frequency';
help::pkg.general.measuresdata.funs.addline.a.freq.def := '\' \' ';
help::pkg.general.measuresdata.funs.addline.a.freq.a := 'any wave energy quantity';
help::pkg.general.measuresdata.funs.addline.a.src := [=];
help::pkg.general.measuresdata.funs.addline.a.src.d := 'some comment about source of data';
help::pkg.general.measuresdata.funs.addline.a.src.def := '\' \' ';
help::pkg.general.measuresdata.funs.addline.a.src.a := 'string';
help::pkg.general.measuresdata.funs.addline.a.com := [=];
help::pkg.general.measuresdata.funs.addline.a.com.d := 'comment, e.g. about precision';
help::pkg.general.measuresdata.funs.addline.a.com.def := '\' \' ';
help::pkg.general.measuresdata.funs.addline.a.com.a := 'string';
help::pkg.general.measuresdata.funs.addline.a.delnam := [=];
help::pkg.general.measuresdata.funs.addline.a.delnam.d := 'indicate if delete in stead of add';
help::pkg.general.measuresdata.funs.addline.a.delnam.def := 'F';
help::pkg.general.measuresdata.funs.addline.a.delnam.a := 'bool';
help::pkg.general.measuresdata.funs.addline.a.ctable := [=];
help::pkg.general.measuresdata.funs.addline.a.ctable.d := 'indicate that an empty table should be created';
help::pkg.general.measuresdata.funs.addline.a.ctable.def := 'F';
help::pkg.general.measuresdata.funs.addline.a.ctable.a := 'bool';
help::pkg.general.measuresdata.funs.addline.s := 'addline(nam, freq, src, com, delnam, ctable)';
help::pkg.general.measuresdata.funs.addsource := [=];
help::pkg.general.measuresdata.funs.addsource.a := [=];
help::pkg.general.measuresdata.funs.addsource.d := 'Add/delete entries to the Sources table';
help::pkg.general.measuresdata.funs.addsource.a.nami := [=];
help::pkg.general.measuresdata.funs.addsource.a.nami.d := 'name of source';
help::pkg.general.measuresdata.funs.addsource.a.nami.def := 'unknown';
help::pkg.general.measuresdata.funs.addsource.a.nami.a := 'string';
help::pkg.general.measuresdata.funs.addsource.a.typi := [=];
help::pkg.general.measuresdata.funs.addsource.a.typi.d := 'position type';
help::pkg.general.measuresdata.funs.addsource.a.typi.def := '\' \' ';
help::pkg.general.measuresdata.funs.addsource.a.typi.a := 'known type like J2000, B1950, GALACTIC';
help::pkg.general.measuresdata.funs.addsource.a.longi := [=];
help::pkg.general.measuresdata.funs.addsource.a.longi.d := 'longitude or x';
help::pkg.general.measuresdata.funs.addsource.a.longi.def := '\' \' ';
help::pkg.general.measuresdata.funs.addsource.a.longi.a := 'angle quantity';
help::pkg.general.measuresdata.funs.addsource.a.lati := [=];
help::pkg.general.measuresdata.funs.addsource.a.lati.d := 'latitude or y';
help::pkg.general.measuresdata.funs.addsource.a.lati.def := '\' \' ';
help::pkg.general.measuresdata.funs.addsource.a.lati.a := 'angle quantity';
help::pkg.general.measuresdata.funs.addsource.a.srci := [=];
help::pkg.general.measuresdata.funs.addsource.a.srci.d := 'some comment about source of data';
help::pkg.general.measuresdata.funs.addsource.a.srci.def := '\' \' ';
help::pkg.general.measuresdata.funs.addsource.a.srci.a := 'string';
help::pkg.general.measuresdata.funs.addsource.a.comi := [=];
help::pkg.general.measuresdata.funs.addsource.a.comi.d := 'comment, e.g. about precision';
help::pkg.general.measuresdata.funs.addsource.a.comi.def := '\' \' ';
help::pkg.general.measuresdata.funs.addsource.a.comi.a := 'string';
help::pkg.general.measuresdata.funs.addsource.a.delnam := [=];
help::pkg.general.measuresdata.funs.addsource.a.delnam.d := 'indicate if delete in stead of add';
help::pkg.general.measuresdata.funs.addsource.a.delnam.def := 'F';
help::pkg.general.measuresdata.funs.addsource.a.delnam.a := 'bool';
help::pkg.general.measuresdata.funs.addsource.a.ctable := [=];
help::pkg.general.measuresdata.funs.addsource.a.ctable.d := 'indicate that an empty table should be created';
help::pkg.general.measuresdata.funs.addsource.a.ctable.def := 'F';
help::pkg.general.measuresdata.funs.addsource.a.ctable.a := 'bool';
help::pkg.general.measuresdata.funs.addsource.a.vref := [=];
help::pkg.general.measuresdata.funs.addsource.a.vref.d := 'indicate that sources to be taken from USNO';
help::pkg.general.measuresdata.funs.addsource.a.vref.def := 'F';
help::pkg.general.measuresdata.funs.addsource.a.vref.a := 'bool';
help::pkg.general.measuresdata.funs.addsource.s := 'addsource(nami, typi, longi, lati, srci, comi, delnam, ctable, vref)';
help::pkg.general.measuresdata.funs.createcomet := [=];
help::pkg.general.measuresdata.funs.createcomet.a := [=];
help::pkg.general.measuresdata.funs.createcomet.d := 'Creates an epherimis table from text input';
help::pkg.general.measuresdata.funs.createcomet.a.nam := [=];
help::pkg.general.measuresdata.funs.createcomet.a.nam.d := 'name of table to be created';
help::pkg.general.measuresdata.funs.createcomet.a.nam.def := '';
help::pkg.general.measuresdata.funs.createcomet.a.nam.a := 'string';
help::pkg.general.measuresdata.funs.createcomet.a.fil := [=];
help::pkg.general.measuresdata.funs.createcomet.a.fil.d := 'path to input ascii list';
help::pkg.general.measuresdata.funs.createcomet.a.fil.def := '';
help::pkg.general.measuresdata.funs.createcomet.a.fil.a := 'path as string';
help::pkg.general.measuresdata.funs.createcomet.s := 'createcomet(nam, fil)';
help::pkg.general.measuresdata.funs.createfromnorad := [=];
help::pkg.general.measuresdata.funs.createfromnorad.a := [=];
help::pkg.general.measuresdata.funs.createfromnorad.d := 'Creates an ephemeris table from text input';
help::pkg.general.measuresdata.funs.createfromnorad.a.nam := [=];
help::pkg.general.measuresdata.funs.createfromnorad.a.nam.d := 'name of table to be created';
help::pkg.general.measuresdata.funs.createfromnorad.a.nam.def := '';
help::pkg.general.measuresdata.funs.createfromnorad.a.nam.a := 'string';
help::pkg.general.measuresdata.funs.createfromnorad.a.fil := [=];
help::pkg.general.measuresdata.funs.createfromnorad.a.fil.d := 'path to input ascii list';
help::pkg.general.measuresdata.funs.createfromnorad.a.fil.def := '';
help::pkg.general.measuresdata.funs.createfromnorad.a.fil.a := 'path as string';
help::pkg.general.measuresdata.funs.createfromnorad.s := 'createfromnorad(nam, fil)';
help::pkg.general.measuresdata.funs.igrf := [=];
help::pkg.general.measuresdata.funs.igrf.a := [=];
help::pkg.general.measuresdata.funs.igrf.d := 'Get IGRF models';
help::pkg.general.measuresdata.funs.igrf.a.fmt := [=];
help::pkg.general.measuresdata.funs.igrf.a.fmt.d := 'format of table from ftp';
help::pkg.general.measuresdata.funs.igrf.a.fmt.def := '1';
help::pkg.general.measuresdata.funs.igrf.a.fmt.a := 'code: 1 most recent';
help::pkg.general.measuresdata.funs.igrf.s := 'igrf(fmt)';

help::pkg.general.quanta := [=];
help::pkg.general.quanta.objs := [=];
help::pkg.general.quanta.funs := [=];
help::pkg.general.quanta.d := 'Units and quantities handling';
help::pkg.general.quanta.funs.is_quantity := [=];
help::pkg.general.quanta.funs.is_quantity.a := [=];
help::pkg.general.quanta.funs.is_quantity.d := 'Check if quantity';
help::pkg.general.quanta.funs.is_quantity.a.v := [=];
help::pkg.general.quanta.funs.is_quantity.a.v.d := 'value to be tested';
help::pkg.general.quanta.funs.is_quantity.a.v.def := '';
help::pkg.general.quanta.funs.is_quantity.a.v.a := 'any';
help::pkg.general.quanta.funs.is_quantity.s := 'is_quantity(v)';
help::pkg.general.quanta.funs.r_array := [=];
help::pkg.general.quanta.funs.r_array.a := [=];
help::pkg.general.quanta.funs.r_array.d := 'Create an array or vector of records';
help::pkg.general.quanta.funs.r_array.a.a := [=];
help::pkg.general.quanta.funs.r_array.a.a.d := 'initial filling value(s)';
help::pkg.general.quanta.funs.r_array.a.a.def := 'empty record';
help::pkg.general.quanta.funs.r_array.a.a.a := 'any or array of any';
help::pkg.general.quanta.funs.r_array.a.dots := [=];
help::pkg.general.quanta.funs.r_array.a.dots.d := 'coordinate lengths for each dimension';
help::pkg.general.quanta.funs.r_array.a.dots.def := '';
help::pkg.general.quanta.funs.r_array.a.dots.a := 'non-zero integer';
help::pkg.general.quanta.funs.r_array.a.id := [=];
help::pkg.general.quanta.funs.r_array.a.id.d := 'optional record id';
help::pkg.general.quanta.funs.r_array.a.id.def := '';
help::pkg.general.quanta.funs.r_array.a.id.a := 'string';
help::pkg.general.quanta.funs.r_array.s := 'r_array(a, ..., id)';
help::pkg.general.quanta.funs.r_slice := [=];
help::pkg.general.quanta.funs.r_slice.a := [=];
help::pkg.general.quanta.funs.r_slice.d := 'Get a slice of a record array';
help::pkg.general.quanta.funs.r_slice.a.v := [=];
help::pkg.general.quanta.funs.r_slice.a.v.d := 'a record array from which to extract elements';
help::pkg.general.quanta.funs.r_slice.a.v.def := '';
help::pkg.general.quanta.funs.r_slice.a.v.a := 'record (array)';
help::pkg.general.quanta.funs.r_slice.a.dots := [=];
help::pkg.general.quanta.funs.r_slice.a.dots.d := 'slicing dimensions';
help::pkg.general.quanta.funs.r_slice.a.dots.def := '';
help::pkg.general.quanta.funs.r_slice.a.dots.a := 'integers, an index record, integer vectors';
help::pkg.general.quanta.funs.r_slice.s := 'r_slice(v, ...)';
help::pkg.general.quanta.funs.r_fill := [=];
help::pkg.general.quanta.funs.r_fill.a := [=];
help::pkg.general.quanta.funs.r_fill.d := 'Fill only a slice of a record array';
help::pkg.general.quanta.funs.r_fill.a.what := [=];
help::pkg.general.quanta.funs.r_fill.a.what.d := 'value(s) that will be filled cyclically in array';
help::pkg.general.quanta.funs.r_fill.a.what.def := '';
help::pkg.general.quanta.funs.r_fill.a.what.a := 'any or vector/array of any';
help::pkg.general.quanta.funs.r_fill.a.dots := [=];
help::pkg.general.quanta.funs.r_fill.a.dots.d := 'slicing dimensions';
help::pkg.general.quanta.funs.r_fill.a.dots.def := '';
help::pkg.general.quanta.funs.r_fill.a.dots.a := 'integers, an index record, integer vectors';
help::pkg.general.quanta.funs.r_fill.s := 'r_fill(what, ...)';
help::pkg.general.quanta.funs.r_index := [=];
help::pkg.general.quanta.funs.r_index.a := [=];
help::pkg.general.quanta.funs.r_index.d := 'Get index array for a record array';
help::pkg.general.quanta.funs.r_index.a.v := [=];
help::pkg.general.quanta.funs.r_index.a.v.d := 'a record array from which to extract elements';
help::pkg.general.quanta.funs.r_index.a.v.def := '';
help::pkg.general.quanta.funs.r_index.a.v.a := 'record (array)';
help::pkg.general.quanta.funs.r_index.a.dots := [=];
help::pkg.general.quanta.funs.r_index.a.dots.d := 'slicing dimensions';
help::pkg.general.quanta.funs.r_index.a.dots.def := '';
help::pkg.general.quanta.funs.r_index.a.dots.a := 'integers, an index record, integer vectors';
help::pkg.general.quanta.funs.r_index.s := 'r_index(v, ...)';
help::pkg.general.quanta.objs.quanta := [=];
help::pkg.general.quanta.objs.quanta.m := [=];
help::pkg.general.quanta.objs.quanta.c := [=];
help::pkg.general.quanta.objs.quanta.d := 'quanta tool';
help::pkg.general.quanta.objs.quanta.c.quanta := [=];
help::pkg.general.quanta.objs.quanta.c.quanta.d := 'Construct quanta tool';
help::pkg.general.quanta.objs.quanta.c.quanta.a.host := [=];
help::pkg.general.quanta.objs.quanta.c.quanta.a.host.d := 'host on which to run tool';
help::pkg.general.quanta.objs.quanta.c.quanta.a.host.def := '\' \' ';
help::pkg.general.quanta.objs.quanta.c.quanta.a.host.a := 'valid host name string';
help::pkg.general.quanta.objs.quanta.c.quanta.a.forceneweserver := [=];
help::pkg.general.quanta.objs.quanta.c.quanta.a.forceneweserver.d := 'force the use of a new server';
help::pkg.general.quanta.objs.quanta.c.quanta.a.forceneweserver.def := 'F';
help::pkg.general.quanta.objs.quanta.c.quanta.a.forceneweserver.a := 'bool';
help::pkg.general.quanta.objs.quanta.c.quanta.s := 'quanta(host, forceneweserver)';
help::pkg.general.quanta.objs.quanta.m.gui := [=];
help::pkg.general.quanta.objs.quanta.m.gui.d := 'Use the quanta GUI interface';
help::pkg.general.quanta.objs.quanta.m.gui.s := 'gui()';
help::pkg.general.quanta.objs.quanta.m.setformat := [=];
help::pkg.general.quanta.objs.quanta.m.setformat.d := 'set format for output of numbers';
help::pkg.general.quanta.objs.quanta.m.setformat.a.t := [=];
help::pkg.general.quanta.objs.quanta.m.setformat.a.t.d := 'type';
help::pkg.general.quanta.objs.quanta.m.setformat.a.t.def := '\' \' ';
help::pkg.general.quanta.objs.quanta.m.setformat.a.t.a := 'coded string indicating which format parameter to set';
help::pkg.general.quanta.objs.quanta.m.setformat.a.v := [=];
help::pkg.general.quanta.objs.quanta.m.setformat.a.v.d := 'format parameter value';
help::pkg.general.quanta.objs.quanta.m.setformat.a.v.def := 'F';
help::pkg.general.quanta.objs.quanta.m.setformat.a.v.a := 'numeric or coded string, depending on format type to be set';
help::pkg.general.quanta.objs.quanta.m.setformat.s := 'setformat(t, v)';
help::pkg.general.quanta.objs.quanta.m.getformat := [=];
help::pkg.general.quanta.objs.quanta.m.getformat.d := 'get current output format';
help::pkg.general.quanta.objs.quanta.m.getformat.a.t := [=];
help::pkg.general.quanta.objs.quanta.m.getformat.a.t.d := 'type';
help::pkg.general.quanta.objs.quanta.m.getformat.a.t.def := '\' \' ';
help::pkg.general.quanta.objs.quanta.m.getformat.a.t.a := 'coded string';
help::pkg.general.quanta.objs.quanta.m.getformat.s := 'getformat(t)';
help::pkg.general.quanta.objs.quanta.m.form.xxx := [=];
help::pkg.general.quanta.objs.quanta.m.form.xxx.d := 'Format a quantity using globaly set formats';
help::pkg.general.quanta.objs.quanta.m.form.xxx.a.v := [=];
help::pkg.general.quanta.objs.quanta.m.form.xxx.a.v.d := 'value to be converted';
help::pkg.general.quanta.objs.quanta.m.form.xxx.a.v.def := '';
help::pkg.general.quanta.objs.quanta.m.form.xxx.a.v.a := 'quantity';
help::pkg.general.quanta.objs.quanta.m.form.xxx.a.showform := [=];
help::pkg.general.quanta.objs.quanta.m.form.xxx.a.showform.d := 'show square brackets and separating , (not for all)';
help::pkg.general.quanta.objs.quanta.m.form.xxx.a.showform.def := 'F';
help::pkg.general.quanta.objs.quanta.m.form.xxx.a.showform.a := 'bool';
help::pkg.general.quanta.objs.quanta.m.form.xxx.s := 'form.xxx(v, showform)';
help::pkg.general.quanta.objs.quanta.m.convertfreq := [=];
help::pkg.general.quanta.objs.quanta.m.convertfreq.d := 'convert a frequency quantity to another unit';
help::pkg.general.quanta.objs.quanta.m.convertfreq.a.v := [=];
help::pkg.general.quanta.objs.quanta.m.convertfreq.a.v.d := 'quantity to convert';
help::pkg.general.quanta.objs.quanta.m.convertfreq.a.v.def := '\' 1Hz\' ';
help::pkg.general.quanta.objs.quanta.m.convertfreq.a.v.a := 'quantity or string';
help::pkg.general.quanta.objs.quanta.m.convertfreq.a.out := [=];
help::pkg.general.quanta.objs.quanta.m.convertfreq.a.out.d := 'unit to convert to';
help::pkg.general.quanta.objs.quanta.m.convertfreq.a.out.def := '\' Hz\' ';
help::pkg.general.quanta.objs.quanta.m.convertfreq.a.out.a := 'string or quantity';
help::pkg.general.quanta.objs.quanta.m.convertfreq.s := 'convertfreq(v, out)';
help::pkg.general.quanta.objs.quanta.m.convertdop := [=];
help::pkg.general.quanta.objs.quanta.m.convertdop.d := 'convert a doppler velocity quantity to another unit';
help::pkg.general.quanta.objs.quanta.m.convertdop.a.v := [=];
help::pkg.general.quanta.objs.quanta.m.convertdop.a.v.d := 'quantity to convert';
help::pkg.general.quanta.objs.quanta.m.convertdop.a.v.def := '\' 0km/s\' ';
help::pkg.general.quanta.objs.quanta.m.convertdop.a.v.a := 'quantity or string';
help::pkg.general.quanta.objs.quanta.m.convertdop.a.out := [=];
help::pkg.general.quanta.objs.quanta.m.convertdop.a.out.d := 'unit to convert to';
help::pkg.general.quanta.objs.quanta.m.convertdop.a.out.def := '\' km/s\' ';
help::pkg.general.quanta.objs.quanta.m.convertdop.a.out.a := 'string or quantity';
help::pkg.general.quanta.objs.quanta.m.convertdop.s := 'convertdop(v, out)';
help::pkg.general.quanta.objs.quanta.m.quantity := [=];
help::pkg.general.quanta.objs.quanta.m.quantity.d := 'make a quantity from a string or from a value and a unit string';
help::pkg.general.quanta.objs.quanta.m.quantity.a.v := [=];
help::pkg.general.quanta.objs.quanta.m.quantity.a.v.d := 'value to convert to quantity';
help::pkg.general.quanta.objs.quanta.m.quantity.a.v.def := '\' 1\'  or 1.0';
help::pkg.general.quanta.objs.quanta.m.quantity.a.v.a := 'quantity or string or numeric';
help::pkg.general.quanta.objs.quanta.m.quantity.a.name := [=];
help::pkg.general.quanta.objs.quanta.m.quantity.a.name.d := 'unit string if v numeric';
help::pkg.general.quanta.objs.quanta.m.quantity.a.name.def := '\' \' ';
help::pkg.general.quanta.objs.quanta.m.quantity.a.name.a := 'string';
help::pkg.general.quanta.objs.quanta.m.quantity.s := 'quantity(v, name)';
help::pkg.general.quanta.objs.quanta.m.getvalue := [=];
help::pkg.general.quanta.objs.quanta.m.getvalue.d := 'get the internal value of a quantity';
help::pkg.general.quanta.objs.quanta.m.getvalue.a.v := [=];
help::pkg.general.quanta.objs.quanta.m.getvalue.a.v.d := 'quantity';
help::pkg.general.quanta.objs.quanta.m.getvalue.a.v.def := '';
help::pkg.general.quanta.objs.quanta.m.getvalue.a.v.a := 'quantity or string or numeric';
help::pkg.general.quanta.objs.quanta.m.getvalue.s := 'getvalue(v)';
help::pkg.general.quanta.objs.quanta.m.getunit := [=];
help::pkg.general.quanta.objs.quanta.m.getunit.d := 'get the internal unit of a quantity';
help::pkg.general.quanta.objs.quanta.m.getunit.a.v := [=];
help::pkg.general.quanta.objs.quanta.m.getunit.a.v.d := 'quantity';
help::pkg.general.quanta.objs.quanta.m.getunit.a.v.def := '';
help::pkg.general.quanta.objs.quanta.m.getunit.a.v.a := 'quantity or string or numeric';
help::pkg.general.quanta.objs.quanta.m.getunit.s := 'getunit(v)';
help::pkg.general.quanta.objs.quanta.m.canonical := [=];
help::pkg.general.quanta.objs.quanta.m.canonical.d := 'get canonical value of quantity';
help::pkg.general.quanta.objs.quanta.m.canonical.a.v := [=];
help::pkg.general.quanta.objs.quanta.m.canonical.a.v.d := 'value to convert';
help::pkg.general.quanta.objs.quanta.m.canonical.a.v.def := '\' 1\' ';
help::pkg.general.quanta.objs.quanta.m.canonical.a.v.a := 'quantity or string';
help::pkg.general.quanta.objs.quanta.m.canonical.s := 'canonical(v)';
help::pkg.general.quanta.objs.quanta.m.canon := [=];
help::pkg.general.quanta.objs.quanta.m.canon.d := 'get canonical value of quantity';
help::pkg.general.quanta.objs.quanta.m.canon.a.v := [=];
help::pkg.general.quanta.objs.quanta.m.canon.a.v.d := 'value to convert';
help::pkg.general.quanta.objs.quanta.m.canon.a.v.def := '\' 1\' ';
help::pkg.general.quanta.objs.quanta.m.canon.a.v.a := 'quantity or string';
help::pkg.general.quanta.objs.quanta.m.canon.s := 'canon(v)';
help::pkg.general.quanta.objs.quanta.m.convert := [=];
help::pkg.general.quanta.objs.quanta.m.convert.d := 'convert a quantity to another unit';
help::pkg.general.quanta.objs.quanta.m.convert.a.v := [=];
help::pkg.general.quanta.objs.quanta.m.convert.a.v.d := 'quantity to convert';
help::pkg.general.quanta.objs.quanta.m.convert.a.v.def := '\' 1\' ';
help::pkg.general.quanta.objs.quanta.m.convert.a.v.a := 'quantity or string';
help::pkg.general.quanta.objs.quanta.m.convert.a.out := [=];
help::pkg.general.quanta.objs.quanta.m.convert.a.out.d := 'unit to convert to';
help::pkg.general.quanta.objs.quanta.m.convert.a.out.def := '\' \' ';
help::pkg.general.quanta.objs.quanta.m.convert.a.out.a := 'string or quantity';
help::pkg.general.quanta.objs.quanta.m.convert.s := 'convert(v, out)';
help::pkg.general.quanta.objs.quanta.m.define := [=];
help::pkg.general.quanta.objs.quanta.m.define.d := 'define a new unit name';
help::pkg.general.quanta.objs.quanta.m.define.a.name := [=];
help::pkg.general.quanta.objs.quanta.m.define.a.name.d := 'name of unit to define';
help::pkg.general.quanta.objs.quanta.m.define.a.name.def := '';
help::pkg.general.quanta.objs.quanta.m.define.a.name.a := 'string';
help::pkg.general.quanta.objs.quanta.m.define.a.v := [=];
help::pkg.general.quanta.objs.quanta.m.define.a.v.d := 'quantity value of new unit';
help::pkg.general.quanta.objs.quanta.m.define.a.v.def := '\' 1\' ';
help::pkg.general.quanta.objs.quanta.m.define.a.v.a := 'string or quantity';
help::pkg.general.quanta.objs.quanta.m.define.s := 'define(name, v)';
help::pkg.general.quanta.objs.quanta.m.map := [=];
help::pkg.general.quanta.objs.quanta.m.map.d := 'list known unit names and constants';
help::pkg.general.quanta.objs.quanta.m.map.a.v := [=];
help::pkg.general.quanta.objs.quanta.m.map.a.v.d := 'type of information to list';
help::pkg.general.quanta.objs.quanta.m.map.a.v.def := '\' all\' ';
help::pkg.general.quanta.objs.quanta.m.map.a.v.a := 'coded string';
help::pkg.general.quanta.objs.quanta.m.map.s := 'map(v)';
help::pkg.general.quanta.objs.quanta.m.fits := [=];
help::pkg.general.quanta.objs.quanta.m.fits.d := 'define some FITS units';
help::pkg.general.quanta.objs.quanta.m.fits.s := 'fits()';
help::pkg.general.quanta.objs.quanta.m.angle := [=];
help::pkg.general.quanta.objs.quanta.m.angle.d := 'show an angle as a formatted string';
help::pkg.general.quanta.objs.quanta.m.angle.a.v := [=];
help::pkg.general.quanta.objs.quanta.m.angle.a.v.d := 'value to output';
help::pkg.general.quanta.objs.quanta.m.angle.a.v.def := '';
help::pkg.general.quanta.objs.quanta.m.angle.a.v.a := 'angle quantity or string';
help::pkg.general.quanta.objs.quanta.m.angle.a.prec := [=];
help::pkg.general.quanta.objs.quanta.m.angle.a.prec.d := 'number of digits shown';
help::pkg.general.quanta.objs.quanta.m.angle.a.prec.def := '0';
help::pkg.general.quanta.objs.quanta.m.angle.a.prec.a := 'numeric';
help::pkg.general.quanta.objs.quanta.m.angle.a.form := [=];
help::pkg.general.quanta.objs.quanta.m.angle.a.form.d := 'formatting information';
help::pkg.general.quanta.objs.quanta.m.angle.a.form.def := '\' \' ';
help::pkg.general.quanta.objs.quanta.m.angle.a.form.a := 'coded string array';
help::pkg.general.quanta.objs.quanta.m.angle.a.showform := [=];
help::pkg.general.quanta.objs.quanta.m.angle.a.showform.d := 'show square brackets and separating ,';
help::pkg.general.quanta.objs.quanta.m.angle.a.showform.def := 'F';
help::pkg.general.quanta.objs.quanta.m.angle.a.showform.a := 'bool';
help::pkg.general.quanta.objs.quanta.m.angle.s := 'angle(v, prec, form, showform)';
help::pkg.general.quanta.objs.quanta.m.time := [=];
help::pkg.general.quanta.objs.quanta.m.time.d := 'show a time (or date) as a formatted string';
help::pkg.general.quanta.objs.quanta.m.time.a.v := [=];
help::pkg.general.quanta.objs.quanta.m.time.a.v.d := 'value to output';
help::pkg.general.quanta.objs.quanta.m.time.a.v.def := '';
help::pkg.general.quanta.objs.quanta.m.time.a.v.a := 'time quantity or string';
help::pkg.general.quanta.objs.quanta.m.time.a.prec := [=];
help::pkg.general.quanta.objs.quanta.m.time.a.prec.d := 'number of digits shown';
help::pkg.general.quanta.objs.quanta.m.time.a.prec.def := '0';
help::pkg.general.quanta.objs.quanta.m.time.a.prec.a := 'numeric';
help::pkg.general.quanta.objs.quanta.m.time.a.form := [=];
help::pkg.general.quanta.objs.quanta.m.time.a.form.d := 'formatting information';
help::pkg.general.quanta.objs.quanta.m.time.a.form.def := '\' \' ';
help::pkg.general.quanta.objs.quanta.m.time.a.form.a := 'coded string array';
help::pkg.general.quanta.objs.quanta.m.time.a.showform := [=];
help::pkg.general.quanta.objs.quanta.m.time.a.showform.d := 'show square brackets and separating ,';
help::pkg.general.quanta.objs.quanta.m.time.a.showform.def := 'F';
help::pkg.general.quanta.objs.quanta.m.time.a.showform.a := 'bool';
help::pkg.general.quanta.objs.quanta.m.time.s := 'time(v, prec, form, showform)';
help::pkg.general.quanta.objs.quanta.m.add := [=];
help::pkg.general.quanta.objs.quanta.m.add.d := 'add quantities';
help::pkg.general.quanta.objs.quanta.m.add.a.v := [=];
help::pkg.general.quanta.objs.quanta.m.add.a.v.d := 'value';
help::pkg.general.quanta.objs.quanta.m.add.a.v.def := '';
help::pkg.general.quanta.objs.quanta.m.add.a.v.a := 'quantity or string';
help::pkg.general.quanta.objs.quanta.m.add.a.a := [=];
help::pkg.general.quanta.objs.quanta.m.add.a.a.d := 'value';
help::pkg.general.quanta.objs.quanta.m.add.a.a.def := '\' 0\' ';
help::pkg.general.quanta.objs.quanta.m.add.a.a.a := 'quantity or string';
help::pkg.general.quanta.objs.quanta.m.add.s := 'add(v, a)';
help::pkg.general.quanta.objs.quanta.m.sub := [=];
help::pkg.general.quanta.objs.quanta.m.sub.d := 'subtract quantities';
help::pkg.general.quanta.objs.quanta.m.sub.a.v := [=];
help::pkg.general.quanta.objs.quanta.m.sub.a.v.d := 'value';
help::pkg.general.quanta.objs.quanta.m.sub.a.v.def := '';
help::pkg.general.quanta.objs.quanta.m.sub.a.v.a := 'quantity or string';
help::pkg.general.quanta.objs.quanta.m.sub.a.a := [=];
help::pkg.general.quanta.objs.quanta.m.sub.a.a.d := 'value';
help::pkg.general.quanta.objs.quanta.m.sub.a.a.def := '\' 0\' ';
help::pkg.general.quanta.objs.quanta.m.sub.a.a.a := 'quantity or string';
help::pkg.general.quanta.objs.quanta.m.sub.s := 'sub(v, a)';
help::pkg.general.quanta.objs.quanta.m.mul := [=];
help::pkg.general.quanta.objs.quanta.m.mul.d := 'multiply quantities';
help::pkg.general.quanta.objs.quanta.m.mul.a.v := [=];
help::pkg.general.quanta.objs.quanta.m.mul.a.v.d := 'value';
help::pkg.general.quanta.objs.quanta.m.mul.a.v.def := '';
help::pkg.general.quanta.objs.quanta.m.mul.a.v.a := 'quantity or string';
help::pkg.general.quanta.objs.quanta.m.mul.a.a := [=];
help::pkg.general.quanta.objs.quanta.m.mul.a.a.d := 'value';
help::pkg.general.quanta.objs.quanta.m.mul.a.a.def := '\' 1\' ';
help::pkg.general.quanta.objs.quanta.m.mul.a.a.a := 'quantity or string';
help::pkg.general.quanta.objs.quanta.m.mul.s := 'mul(v, a)';
help::pkg.general.quanta.objs.quanta.m.div := [=];
help::pkg.general.quanta.objs.quanta.m.div.d := 'divides quantities';
help::pkg.general.quanta.objs.quanta.m.div.a.v := [=];
help::pkg.general.quanta.objs.quanta.m.div.a.v.d := 'value';
help::pkg.general.quanta.objs.quanta.m.div.a.v.def := '';
help::pkg.general.quanta.objs.quanta.m.div.a.v.a := 'quantity or string';
help::pkg.general.quanta.objs.quanta.m.div.a.a := [=];
help::pkg.general.quanta.objs.quanta.m.div.a.a.d := 'value';
help::pkg.general.quanta.objs.quanta.m.div.a.a.def := '\' 1\' ';
help::pkg.general.quanta.objs.quanta.m.div.a.a.a := 'quantity or string';
help::pkg.general.quanta.objs.quanta.m.div.s := 'div(v, a)';
help::pkg.general.quanta.objs.quanta.m.neg := [=];
help::pkg.general.quanta.objs.quanta.m.neg.d := 'negate quantities';
help::pkg.general.quanta.objs.quanta.m.neg.a.v := [=];
help::pkg.general.quanta.objs.quanta.m.neg.a.v.d := 'value';
help::pkg.general.quanta.objs.quanta.m.neg.a.v.def := '1';
help::pkg.general.quanta.objs.quanta.m.neg.a.v.a := 'quantity or string';
help::pkg.general.quanta.objs.quanta.m.neg.s := 'neg(v)';
help::pkg.general.quanta.objs.quanta.m.norm := [=];
help::pkg.general.quanta.objs.quanta.m.norm.d := 'normalise angle';
help::pkg.general.quanta.objs.quanta.m.norm.a.v := [=];
help::pkg.general.quanta.objs.quanta.m.norm.a.v.d := 'value';
help::pkg.general.quanta.objs.quanta.m.norm.a.v.def := '';
help::pkg.general.quanta.objs.quanta.m.norm.a.v.a := 'angle quantity or string';
help::pkg.general.quanta.objs.quanta.m.norm.a.a := [=];
help::pkg.general.quanta.objs.quanta.m.norm.a.a.d := 'lower interval boundary';
help::pkg.general.quanta.objs.quanta.m.norm.a.a.def := '-0.5';
help::pkg.general.quanta.objs.quanta.m.norm.a.a.a := 'numeric';
help::pkg.general.quanta.objs.quanta.m.norm.s := 'norm(v, a)';
help::pkg.general.quanta.objs.quanta.m.le := [=];
help::pkg.general.quanta.objs.quanta.m.le.d := 'compare quantities';
help::pkg.general.quanta.objs.quanta.m.le.a.v := [=];
help::pkg.general.quanta.objs.quanta.m.le.a.v.d := 'value';
help::pkg.general.quanta.objs.quanta.m.le.a.v.def := '';
help::pkg.general.quanta.objs.quanta.m.le.a.v.a := 'quantity or string';
help::pkg.general.quanta.objs.quanta.m.le.a.a := [=];
help::pkg.general.quanta.objs.quanta.m.le.a.a.d := 'value';
help::pkg.general.quanta.objs.quanta.m.le.a.a.def := '\' 0\' ';
help::pkg.general.quanta.objs.quanta.m.le.a.a.a := 'quantity or string';
help::pkg.general.quanta.objs.quanta.m.le.s := 'le(v, a)';
help::pkg.general.quanta.objs.quanta.m.lt := [=];
help::pkg.general.quanta.objs.quanta.m.lt.d := 'compare quantities';
help::pkg.general.quanta.objs.quanta.m.lt.a.v := [=];
help::pkg.general.quanta.objs.quanta.m.lt.a.v.d := 'value';
help::pkg.general.quanta.objs.quanta.m.lt.a.v.def := '';
help::pkg.general.quanta.objs.quanta.m.lt.a.v.a := 'quantity or string';
help::pkg.general.quanta.objs.quanta.m.lt.a.a := [=];
help::pkg.general.quanta.objs.quanta.m.lt.a.a.d := 'value';
help::pkg.general.quanta.objs.quanta.m.lt.a.a.def := '\' 0\' ';
help::pkg.general.quanta.objs.quanta.m.lt.a.a.a := 'quantity or string';
help::pkg.general.quanta.objs.quanta.m.lt.s := 'lt(v, a)';
help::pkg.general.quanta.objs.quanta.m.eq := [=];
help::pkg.general.quanta.objs.quanta.m.eq.d := 'compare quantities';
help::pkg.general.quanta.objs.quanta.m.eq.a.v := [=];
help::pkg.general.quanta.objs.quanta.m.eq.a.v.d := 'value';
help::pkg.general.quanta.objs.quanta.m.eq.a.v.def := '';
help::pkg.general.quanta.objs.quanta.m.eq.a.v.a := 'quantity or string';
help::pkg.general.quanta.objs.quanta.m.eq.a.a := [=];
help::pkg.general.quanta.objs.quanta.m.eq.a.a.d := 'value';
help::pkg.general.quanta.objs.quanta.m.eq.a.a.def := '\' 0\' ';
help::pkg.general.quanta.objs.quanta.m.eq.a.a.a := 'quantity or string';
help::pkg.general.quanta.objs.quanta.m.eq.s := 'eq(v, a)';
help::pkg.general.quanta.objs.quanta.m.ne := [=];
help::pkg.general.quanta.objs.quanta.m.ne.d := 'compare quantities';
help::pkg.general.quanta.objs.quanta.m.ne.a.v := [=];
help::pkg.general.quanta.objs.quanta.m.ne.a.v.d := 'value';
help::pkg.general.quanta.objs.quanta.m.ne.a.v.def := '';
help::pkg.general.quanta.objs.quanta.m.ne.a.v.a := 'quantity or string';
help::pkg.general.quanta.objs.quanta.m.ne.a.a := [=];
help::pkg.general.quanta.objs.quanta.m.ne.a.a.d := 'value';
help::pkg.general.quanta.objs.quanta.m.ne.a.a.def := '\' 0\' ';
help::pkg.general.quanta.objs.quanta.m.ne.a.a.a := 'quantity or string';
help::pkg.general.quanta.objs.quanta.m.ne.s := 'ne(v, a)';
help::pkg.general.quanta.objs.quanta.m.gt := [=];
help::pkg.general.quanta.objs.quanta.m.gt.d := 'compare quantities';
help::pkg.general.quanta.objs.quanta.m.gt.a.v := [=];
help::pkg.general.quanta.objs.quanta.m.gt.a.v.d := 'value';
help::pkg.general.quanta.objs.quanta.m.gt.a.v.def := '';
help::pkg.general.quanta.objs.quanta.m.gt.a.v.a := 'quantity or string';
help::pkg.general.quanta.objs.quanta.m.gt.a.a := [=];
help::pkg.general.quanta.objs.quanta.m.gt.a.a.d := 'value';
help::pkg.general.quanta.objs.quanta.m.gt.a.a.def := '\' 0\' ';
help::pkg.general.quanta.objs.quanta.m.gt.a.a.a := 'quantity or string';
help::pkg.general.quanta.objs.quanta.m.gt.s := 'gt(v, a)';
help::pkg.general.quanta.objs.quanta.m.ge := [=];
help::pkg.general.quanta.objs.quanta.m.ge.d := 'compare quantities';
help::pkg.general.quanta.objs.quanta.m.ge.a.v := [=];
help::pkg.general.quanta.objs.quanta.m.ge.a.v.d := 'value';
help::pkg.general.quanta.objs.quanta.m.ge.a.v.def := '';
help::pkg.general.quanta.objs.quanta.m.ge.a.v.a := 'quantity or string';
help::pkg.general.quanta.objs.quanta.m.ge.a.a := [=];
help::pkg.general.quanta.objs.quanta.m.ge.a.a.d := 'value';
help::pkg.general.quanta.objs.quanta.m.ge.a.a.def := '\' 0\' ';
help::pkg.general.quanta.objs.quanta.m.ge.a.a.a := 'quantity or string';
help::pkg.general.quanta.objs.quanta.m.ge.s := 'ge(v, a)';
help::pkg.general.quanta.objs.quanta.m.sin := [=];
help::pkg.general.quanta.objs.quanta.m.sin.d := 'sine of quantity';
help::pkg.general.quanta.objs.quanta.m.sin.a.v := [=];
help::pkg.general.quanta.objs.quanta.m.sin.a.v.d := 'value';
help::pkg.general.quanta.objs.quanta.m.sin.a.v.def := '';
help::pkg.general.quanta.objs.quanta.m.sin.a.v.a := 'angle quantity or string';
help::pkg.general.quanta.objs.quanta.m.sin.s := 'sin(v)';
help::pkg.general.quanta.objs.quanta.m.cos := [=];
help::pkg.general.quanta.objs.quanta.m.cos.d := 'cosine of quantity';
help::pkg.general.quanta.objs.quanta.m.cos.a.v := [=];
help::pkg.general.quanta.objs.quanta.m.cos.a.v.d := 'value';
help::pkg.general.quanta.objs.quanta.m.cos.a.v.def := '';
help::pkg.general.quanta.objs.quanta.m.cos.a.v.a := 'angle quantity or string';
help::pkg.general.quanta.objs.quanta.m.cos.s := 'cos(v)';
help::pkg.general.quanta.objs.quanta.m.tan := [=];
help::pkg.general.quanta.objs.quanta.m.tan.d := 'tangent of quantity';
help::pkg.general.quanta.objs.quanta.m.tan.a.v := [=];
help::pkg.general.quanta.objs.quanta.m.tan.a.v.d := 'value';
help::pkg.general.quanta.objs.quanta.m.tan.a.v.def := '';
help::pkg.general.quanta.objs.quanta.m.tan.a.v.a := 'angle quantity or string';
help::pkg.general.quanta.objs.quanta.m.tan.s := 'tan(v)';
help::pkg.general.quanta.objs.quanta.m.asin := [=];
help::pkg.general.quanta.objs.quanta.m.asin.d := 'arcsine of quantity';
help::pkg.general.quanta.objs.quanta.m.asin.a.v := [=];
help::pkg.general.quanta.objs.quanta.m.asin.a.v.d := 'value';
help::pkg.general.quanta.objs.quanta.m.asin.a.v.def := '';
help::pkg.general.quanta.objs.quanta.m.asin.a.v.a := 'non-dimensioned quantity or string';
help::pkg.general.quanta.objs.quanta.m.asin.s := 'asin(v)';
help::pkg.general.quanta.objs.quanta.m.acos := [=];
help::pkg.general.quanta.objs.quanta.m.acos.d := 'arccosine of quantity';
help::pkg.general.quanta.objs.quanta.m.acos.a.v := [=];
help::pkg.general.quanta.objs.quanta.m.acos.a.v.d := 'value';
help::pkg.general.quanta.objs.quanta.m.acos.a.v.def := '';
help::pkg.general.quanta.objs.quanta.m.acos.a.v.a := 'non-dimensioned quantity or string';
help::pkg.general.quanta.objs.quanta.m.acos.s := 'acos(v)';
help::pkg.general.quanta.objs.quanta.m.atan := [=];
help::pkg.general.quanta.objs.quanta.m.atan.d := 'arctangent of quantity';
help::pkg.general.quanta.objs.quanta.m.atan.a.v := [=];
help::pkg.general.quanta.objs.quanta.m.atan.a.v.d := 'value';
help::pkg.general.quanta.objs.quanta.m.atan.a.v.def := '';
help::pkg.general.quanta.objs.quanta.m.atan.a.v.a := 'non-dimensioned quantity or string';
help::pkg.general.quanta.objs.quanta.m.atan.s := 'atan(v)';
help::pkg.general.quanta.objs.quanta.m.atan2 := [=];
help::pkg.general.quanta.objs.quanta.m.atan2.d := 'arctangent of two quantity';
help::pkg.general.quanta.objs.quanta.m.atan2.a.v := [=];
help::pkg.general.quanta.objs.quanta.m.atan2.a.v.d := 'value';
help::pkg.general.quanta.objs.quanta.m.atan2.a.v.def := '';
help::pkg.general.quanta.objs.quanta.m.atan2.a.v.a := 'non-dimensioned quantity or string';
help::pkg.general.quanta.objs.quanta.m.atan2.a.a := [=];
help::pkg.general.quanta.objs.quanta.m.atan2.a.a.d := 'value';
help::pkg.general.quanta.objs.quanta.m.atan2.a.a.def := '';
help::pkg.general.quanta.objs.quanta.m.atan2.a.a.a := 'non-dimensioned quantity or string';
help::pkg.general.quanta.objs.quanta.m.atan2.s := 'atan2(v, a)';
help::pkg.general.quanta.objs.quanta.m.abs := [=];
help::pkg.general.quanta.objs.quanta.m.abs.d := 'absolute value of quantity';
help::pkg.general.quanta.objs.quanta.m.abs.a.v := [=];
help::pkg.general.quanta.objs.quanta.m.abs.a.v.d := 'value';
help::pkg.general.quanta.objs.quanta.m.abs.a.v.def := '';
help::pkg.general.quanta.objs.quanta.m.abs.a.v.a := 'quantity or string';
help::pkg.general.quanta.objs.quanta.m.abs.s := 'abs(v)';
help::pkg.general.quanta.objs.quanta.m.ceil := [=];
help::pkg.general.quanta.objs.quanta.m.ceil.d := 'ceil value of quantity';
help::pkg.general.quanta.objs.quanta.m.ceil.a.v := [=];
help::pkg.general.quanta.objs.quanta.m.ceil.a.v.d := 'value';
help::pkg.general.quanta.objs.quanta.m.ceil.a.v.def := '';
help::pkg.general.quanta.objs.quanta.m.ceil.a.v.a := 'quantity or string';
help::pkg.general.quanta.objs.quanta.m.ceil.s := 'ceil(v)';
help::pkg.general.quanta.objs.quanta.m.floor := [=];
help::pkg.general.quanta.objs.quanta.m.floor.d := 'floor value of quantity';
help::pkg.general.quanta.objs.quanta.m.floor.a.v := [=];
help::pkg.general.quanta.objs.quanta.m.floor.a.v.d := 'value';
help::pkg.general.quanta.objs.quanta.m.floor.a.v.def := '';
help::pkg.general.quanta.objs.quanta.m.floor.a.v.a := 'quantity or string';
help::pkg.general.quanta.objs.quanta.m.floor.s := 'floor(v)';
help::pkg.general.quanta.objs.quanta.m.log := [=];
help::pkg.general.quanta.objs.quanta.m.log.d := 'logarithm of quantity';
help::pkg.general.quanta.objs.quanta.m.log.a.v := [=];
help::pkg.general.quanta.objs.quanta.m.log.a.v.d := 'value';
help::pkg.general.quanta.objs.quanta.m.log.a.v.def := '';
help::pkg.general.quanta.objs.quanta.m.log.a.v.a := 'dimensionless quantity or string';
help::pkg.general.quanta.objs.quanta.m.log.s := 'log(v)';
help::pkg.general.quanta.objs.quanta.m.log10 := [=];
help::pkg.general.quanta.objs.quanta.m.log10.d := 'logarithm of quantity';
help::pkg.general.quanta.objs.quanta.m.log10.a.v := [=];
help::pkg.general.quanta.objs.quanta.m.log10.a.v.d := 'value';
help::pkg.general.quanta.objs.quanta.m.log10.a.v.def := '';
help::pkg.general.quanta.objs.quanta.m.log10.a.v.a := 'dimensionless quantity or string';
help::pkg.general.quanta.objs.quanta.m.log10.s := 'log10(v)';
help::pkg.general.quanta.objs.quanta.m.exp := [=];
help::pkg.general.quanta.objs.quanta.m.exp.d := 'exponential of quantity';
help::pkg.general.quanta.objs.quanta.m.exp.a.v := [=];
help::pkg.general.quanta.objs.quanta.m.exp.a.v.d := 'value';
help::pkg.general.quanta.objs.quanta.m.exp.a.v.def := '';
help::pkg.general.quanta.objs.quanta.m.exp.a.v.a := 'dimensionless quantity or string';
help::pkg.general.quanta.objs.quanta.m.exp.s := 'exp(v)';
help::pkg.general.quanta.objs.quanta.m.sqrt := [=];
help::pkg.general.quanta.objs.quanta.m.sqrt.d := 'square root of quantity';
help::pkg.general.quanta.objs.quanta.m.sqrt.a.v := [=];
help::pkg.general.quanta.objs.quanta.m.sqrt.a.v.d := 'value';
help::pkg.general.quanta.objs.quanta.m.sqrt.a.v.def := '';
help::pkg.general.quanta.objs.quanta.m.sqrt.a.v.a := 'dimensionless quantity or string';
help::pkg.general.quanta.objs.quanta.m.sqrt.s := 'sqrt(v)';
help::pkg.general.quanta.objs.quanta.m.compare := [=];
help::pkg.general.quanta.objs.quanta.m.compare.d := 'compare dimensionality of units';
help::pkg.general.quanta.objs.quanta.m.compare.a.v := [=];
help::pkg.general.quanta.objs.quanta.m.compare.a.v.d := 'value';
help::pkg.general.quanta.objs.quanta.m.compare.a.v.def := '';
help::pkg.general.quanta.objs.quanta.m.compare.a.v.a := 'quantity or string';
help::pkg.general.quanta.objs.quanta.m.compare.a.a := [=];
help::pkg.general.quanta.objs.quanta.m.compare.a.a.d := 'value';
help::pkg.general.quanta.objs.quanta.m.compare.a.a.def := '';
help::pkg.general.quanta.objs.quanta.m.compare.a.a.a := 'quantity or string';
help::pkg.general.quanta.objs.quanta.m.compare.s := 'compare(v, a)';
help::pkg.general.quanta.objs.quanta.m.check := [=];
help::pkg.general.quanta.objs.quanta.m.check.d := 'check for proper unit string';
help::pkg.general.quanta.objs.quanta.m.check.a.v := [=];
help::pkg.general.quanta.objs.quanta.m.check.a.v.d := 'value';
help::pkg.general.quanta.objs.quanta.m.check.a.v.def := '';
help::pkg.general.quanta.objs.quanta.m.check.a.v.a := 'string or quantity';
help::pkg.general.quanta.objs.quanta.m.check.s := 'check(v)';
help::pkg.general.quanta.objs.quanta.m.checkfreq := [=];
help::pkg.general.quanta.objs.quanta.m.checkfreq.d := 'check for proper frequency unit';
help::pkg.general.quanta.objs.quanta.m.checkfreq.a.cm := [=];
help::pkg.general.quanta.objs.quanta.m.checkfreq.a.cm.d := 'value';
help::pkg.general.quanta.objs.quanta.m.checkfreq.a.cm.def := '';
help::pkg.general.quanta.objs.quanta.m.checkfreq.a.cm.a := 'string or quantity';
help::pkg.general.quanta.objs.quanta.m.checkfreq.s := 'checkfreq(cm)';
help::pkg.general.quanta.objs.quanta.m.pow := [=];
help::pkg.general.quanta.objs.quanta.m.pow.d := 'raise quantity to power';
help::pkg.general.quanta.objs.quanta.m.pow.a.v := [=];
help::pkg.general.quanta.objs.quanta.m.pow.a.v.d := 'value';
help::pkg.general.quanta.objs.quanta.m.pow.a.v.def := '';
help::pkg.general.quanta.objs.quanta.m.pow.a.v.a := 'quantity or string';
help::pkg.general.quanta.objs.quanta.m.pow.a.a := [=];
help::pkg.general.quanta.objs.quanta.m.pow.a.a.d := 'power';
help::pkg.general.quanta.objs.quanta.m.pow.a.a.def := '1';
help::pkg.general.quanta.objs.quanta.m.pow.a.a.a := 'integer';
help::pkg.general.quanta.objs.quanta.m.pow.s := 'pow(v, a)';
help::pkg.general.quanta.objs.quanta.m.constants := [=];
help::pkg.general.quanta.objs.quanta.m.constants.d := 'get a constant';
help::pkg.general.quanta.objs.quanta.m.constants.a.v := [=];
help::pkg.general.quanta.objs.quanta.m.constants.a.v.d := 'name';
help::pkg.general.quanta.objs.quanta.m.constants.a.v.def := '\' pi\' ';
help::pkg.general.quanta.objs.quanta.m.constants.a.v.a := 'coded string';
help::pkg.general.quanta.objs.quanta.m.constants.s := 'constants(v)';
help::pkg.general.quanta.objs.quanta.m.is_angle := [=];
help::pkg.general.quanta.objs.quanta.m.is_angle.d := 'check if valid angle or time quantity';
help::pkg.general.quanta.objs.quanta.m.is_angle.a.v := [=];
help::pkg.general.quanta.objs.quanta.m.is_angle.a.v.d := 'value';
help::pkg.general.quanta.objs.quanta.m.is_angle.a.v.def := '';
help::pkg.general.quanta.objs.quanta.m.is_angle.a.v.a := 'angle/time quantity or string';
help::pkg.general.quanta.objs.quanta.m.is_angle.s := 'is_angle(v)';
help::pkg.general.quanta.objs.quanta.m.totime := [=];
help::pkg.general.quanta.objs.quanta.m.totime.d := 'convert an angle (or a time) to a time';
help::pkg.general.quanta.objs.quanta.m.totime.a.v := [=];
help::pkg.general.quanta.objs.quanta.m.totime.a.v.d := 'value';
help::pkg.general.quanta.objs.quanta.m.totime.a.v.def := '';
help::pkg.general.quanta.objs.quanta.m.totime.a.v.a := 'angle/time quantity or string';
help::pkg.general.quanta.objs.quanta.m.totime.s := 'totime(v)';
help::pkg.general.quanta.objs.quanta.m.toangle := [=];
help::pkg.general.quanta.objs.quanta.m.toangle.d := 'convert a time (or an angle) to an angle';
help::pkg.general.quanta.objs.quanta.m.toangle.a.v := [=];
help::pkg.general.quanta.objs.quanta.m.toangle.a.v.d := 'value';
help::pkg.general.quanta.objs.quanta.m.toangle.a.v.def := '';
help::pkg.general.quanta.objs.quanta.m.toangle.a.v.a := 'angle/time quantity or string';
help::pkg.general.quanta.objs.quanta.m.toangle.s := 'toangle(v)';
help::pkg.general.quanta.objs.quanta.m.splitdate := [=];
help::pkg.general.quanta.objs.quanta.m.splitdate.d := 'split a date/time into a record';
help::pkg.general.quanta.objs.quanta.m.splitdate.a.v := [=];
help::pkg.general.quanta.objs.quanta.m.splitdate.a.v.d := 'value';
help::pkg.general.quanta.objs.quanta.m.splitdate.a.v.def := '';
help::pkg.general.quanta.objs.quanta.m.splitdate.a.v.a := 'angle/time quantity or string';
help::pkg.general.quanta.objs.quanta.m.splitdate.s := 'splitdate(v)';
help::pkg.general.quanta.objs.quanta.m.tos := [=];
help::pkg.general.quanta.objs.quanta.m.tos.d := 'convert quantity to string';
help::pkg.general.quanta.objs.quanta.m.tos.a.v := [=];
help::pkg.general.quanta.objs.quanta.m.tos.a.v.d := 'value';
help::pkg.general.quanta.objs.quanta.m.tos.a.v.def := '';
help::pkg.general.quanta.objs.quanta.m.tos.a.v.a := 'quantity or string';
help::pkg.general.quanta.objs.quanta.m.tos.a.prec := [=];
help::pkg.general.quanta.objs.quanta.m.tos.a.prec.d := 'convert precision of value';
help::pkg.general.quanta.objs.quanta.m.tos.a.prec.def := '0';
help::pkg.general.quanta.objs.quanta.m.tos.a.prec.a := 'integer';
help::pkg.general.quanta.objs.quanta.m.tos.s := 'tos(v, prec)';
help::pkg.general.quanta.objs.quanta.m.id := [=];
help::pkg.general.quanta.objs.quanta.m.id.d := 'identification of tool';
help::pkg.general.quanta.objs.quanta.m.id.s := 'id()';
help::pkg.general.quanta.objs.quanta.m.type := [=];
help::pkg.general.quanta.objs.quanta.m.type.d := 'type of tool';
help::pkg.general.quanta.objs.quanta.m.type.s := 'type()';
help::pkg.general.quanta.objs.quanta.m.done := [=];
help::pkg.general.quanta.objs.quanta.m.done.d := 'free resources used by tool';
help::pkg.general.quanta.objs.quanta.m.done.a.kill := [=];
help::pkg.general.quanta.objs.quanta.m.done.a.kill.d := 'force kill of the default tool';
help::pkg.general.quanta.objs.quanta.m.done.a.kill.def := 'F';
help::pkg.general.quanta.objs.quanta.m.done.a.kill.a := 'bool';
help::pkg.general.quanta.objs.quanta.m.done.s := 'done(kill)';
help::pkg.general.quanta.objs.quantagui := [=];
help::pkg.general.quanta.objs.quantagui.m := [=];
help::pkg.general.quanta.objs.quantagui.c := [=];
help::pkg.general.quanta.objs.quantagui.d := 'GUI code for quanta.g';

