%% Copyright (C) 1999,2000
%% Associated Universities, Inc. Washington DC, USA.
%%
%% This library is free software; you can redistribute it and/or modify it
%% under the terms of the GNU Library General Public License as published by
%% the Free Software Foundation; either version 2 of the License, or (at your
%% option) any later version.
%%
%% This library is distributed in the hope that it will be useful, but WITHOUT
%% ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
%% FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Library General Public
%% License for more details.
%%
%% You should have received a copy of the GNU Library General Public License
%% along with this library; if not, write to the Free Software Foundation,
%% Inc., 675 Massachusetts Ave, Cambridge, MA 02139, USA.
%%
%% Correspondence concerning AIPS++ should be addressed as follows:
%%        Internet email: aips2-request@nrao.edu.
%%        Postal address: AIPS++ Project Office
%%                        National Radio Astronomy Observatory
%%                        520 Edgemont Road
%%                        Charlottesville, VA 22903-2475 USA
%%
%% $Id: helpmenu.help,v 19.2 2004/08/25 02:15:00 cvsmgr Exp $
%%
%%--------------------------------------------------------------------------
%%
%% Tool template
%%
%%--------------------------------------------------------------------------
%%

\begin{ahobject}{helpmenu}{Tk widget for a Help menu with the standard \aipspp\ help items.}

\ahinclude{helpmenu.g}

\ahcategory{widgets}

   %
   %ahkeyword registers module keywords
   %

\ahkeyword{widgets}{}
\ahkeyword{Tk}{}

\ahmethods{}

\begin{ahdescription}

A helpmenu is a ``Help'' menu inserted into an already existing frame.  The
menu contains any help items the user designates though the helpmenu arguments
followed by all of the items required by the \aipspp\ 
\htmladdnormallink{GUI Guidelines}{../../code/install/codedevl/template-gui-guidelines}.
\end{ahdescription}

\begin{ahconstructor}{helpmenu}{Construct a ``Help'' menu}
\begin{ahargs}
  \ahaddarg{parent}{Parent of the menu}{}{Tk frame}
  \ahaddarg{menuitems}{User defined help items}{unset}{string vector}
  \ahaddarg{refmanitems}{Reference manual locations for each menuitems}{unset}{string vector}
  \ahaddarg{callback}{Callback function for non-reference manual menuitems}{unset}{function}
  \ahaddarg{helpitems}{Additional popup help items}{unset}{string vector}
  \ahaddarg{widgetset}{Widget set to use}{dws}{A widgetserver closure tool}
\end{ahargs}
\ahreturns{helpmenu widget}
\begin{ahdescription}
Constructs a helpmenu according to the specified construction arguments
and returns a ref to the widget.  The ``Help'' menu will begin with each of
the items in menuitems.  These are followed by the standard \aipspp\ help
items as recommended by the \htmladdnormallink{GUI Guidelines}{../../code/install/codedevl/template-gui-guidelines}.
If menuitems is unset, then only these standard help items will appear in the menu.
If there are menuitems, then there must be an equivalent number of
refmanitems.  Each refman item is either a string which is used as an
argument to \ahlink{help}{misc:help.function} or it is a zero-length string.
If a refman item has zero-length, then the callback function is called when
the corresponding menu item button is pressed.  This callback function takes
a single argument.  When called, that argument will be the menu item which
was pressed.  Finally, you can specify any additional popup help text items.
These are prepended to the standard popup help items. Each item appears
as a separate line in the resulting popup help with the text "Help Menu"
being both the short help and the label at the top of the long help
containing the individual items.

\begin{ahexample}
\begin{verbatim}
include 'helpmenu.g'   
f := frame();
cb := function(whichItem) {
    print 'help callback called :',whichItem;
}
r := helpmenu(f, menuitems=['Dish','PGPlotter','Special help'], 
              refmanitems=['Refman:dish','Refman:pgplotter',''],
              helpitems=['About Dish','AboutPGPlotter', 'Special help'],
	      callback=cb);
\end{verbatim}
\end{ahexample}

When the ``Dish'' button is pressed in this example, the users browser will be
directed to the dish entry in the Reference Manual.  Similarly, selecting
the ``PGPlotter'' button will display the pgplotter entry in the Reference Manual.
However, when the ``Special help'' item is selected the cb function will
be called and whichItem will have the value ``Special help''.
\end{ahdescription}
\end{ahconstructor}
 

\begin{ahfunction}{reset}{Reset the Help menu}
\ahreturns{boolean}
\begin{ahargs}
  \ahaddarg{parent}{Parent of the menu}{}{Tk frame}
  \ahaddarg{menuitems}{User defined help items}{unset}{string vector}
  \ahaddarg{refmanitems}{Reference manual locations for each menuitems}{unset}{string vector}
  \ahaddarg{callback}{Callback function for non-reference manual menuitems}{unset}{function}
  \ahaddarg{helpitems}{Additional popup help text}{unset}{string vector}
  \ahaddarg{widgetset}{Widget set to use}{dws}{A widgetserver closure tool}
\end{ahargs}
\begin{ahdescription}
This has the same syntax as the constructor.  It is intended to be used when there
is a need to change the contents of the user-set portion of the ``Help'' menu
after the menu has been made.
\end{ahdescription}
\end{ahfunction}

\begin{ahfunction}{done}{Destroy the Help menu}
\ahreturns{boolean}
\begin{ahdescription}
This function destroys the help menu.  Each button is individually destroyed and
all whenevers used by the widget are deactivated.  The main ``Help'' menu
button is also destroyed.
\end{ahdescription}

\end{ahobject}

 

