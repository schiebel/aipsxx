%% Copyright (C) 1999,2000
%% Associated Universities, Inc. Washington DC, USA.
%%
%% This library is free software; you can redistribute it and/or modify it
%% under the terms of the GNU Library General Public License as published by
%% the Free Software Foundation; either version 2 of the License, or (at your
%% option) any later version.
%%
%% This library is distributed in the hope that it will be useful, but WITHOUT
%% ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
%% FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Library General Public
%% License for more details.
%%
%% You should have received a copy of the GNU Library General Public License
%% along with this library; if not, write to the Free Software Foundation,
%% Inc., 675 Massachusetts Ave, Cambridge, MA 02139, USA.
%%
%% Correspondence concerning AIPS++ should be addressed as follows:
%%        Internet email: aips2-request@nrao.edu.
%%        Postal address: AIPS++ Project Office
%%                        National Radio Astronomy Observatory
%%                        520 Edgemont Road
%%                        Charlottesville, VA 22903-2475 USA
%%
%% $Id: recordbrowserwidget.help,v 19.2 2004/08/25 02:18:23 cvsmgr Exp $
\begin{ahobject}{recordbrowserwidget}{\aipspp\ widget to view Glish records}

\ahinclude{recbrowserwidget.g}

\ahcategory{widgets}

   %
   %ahkeyword registers module keywords
   %

\ahkeyword{widgets}{}
\ahkeyword{Tk}{}

\ahmethods{}

\begin{ahdescription}

This \aipspp\ widget allows the user to view a Glish record in a canvas.  The 
recordbrowserwidget is \aipspp\  aware and will display tables and arrays (beyond
certain limits)  using the tablebrowser and arraybrowser respectively.

\end{ahdescription}

\begin{ahconstructor}{recordbrowserwidget}{Construct a recordbrowserwidget}
\begin{ahargs}
  \ahaddarg{parent}{Parent of the widget}{F}{Tk frame}
  \ahaddarg{therecord}{A valid Glish record (required)}{}{a Glish record}
  \ahaddarg{readonly}{Flag to disallow editing}{T}{boolean}
  \ahaddarg{show}{Flag to display widget after contruction}{T}{boolean}
  \ahaddarg{width}{Initial width of the canvas}{400}{Integer}
  \ahaddarg{font}{Font of text }{''}{X font}
  \ahaddarg{widgetset}{Widget set to use}{dws}{A widgetserver closure tool}
  \ahaddarg{displaytable}{Flag indicating table awareness}{T}{boolean}
\end{ahargs}
\ahreturns{recordbrowserwidget widget}
\begin{ahdescription}
Constructs a recordbrowserwidget according to the specified construction
arguments, and returns the subsequence of the widget. Remember to use the {\tt
recordbrowserwidget} via the \ahlink{widgetserver}{widgets:widgetserver} if at all
possible.

The recordbrowser widget must always be initialized with a valid record.

If no parent is specified then a minmal recordbrowser is displayed.

You may send the recordbrowserwidget many events
\begin{enumerate}
\item \textbf{newrecord, record} causes the widget to display the specified
record i.e.
rbw$->$newrecord(myrec).
\item \textbf{font} cause the recordbrowser to use the new font sent to it,
rbw$->$font(myfont).
\item \textbf{show} causes the recordbrowser to become visible if not already.
\item \textbf{close} causes the recordbrowser to become invisible if not
already.
\item \textbf{readonly} toggles the readonly flag enabling editing if false,
rbw$->$readonly() or rbw$->$readonly(F).
\item \textbf{reset} resets the record to it's original state (only valid if
readonly=F), rbw$->$reset().
\item \textbf{vectorsize} sets the limits of arrays that are displayed, 
rbw$->$vectorsize([60,60] (The examples will let you look at arrays up to 60 by
60 in the recordbrowser, larger arrays will be viewed in in the array browser).
\item \textbf{showproperties} causes a properties dialog for the the
recordbrowser widget to be displayed, rbw$->$showproperties().  The dialog window allows the interactive setting of vectorsize and font.
\item \textbf{newfield} if readonly is F, then you may added field to the
record, rb$->$newfield(fieldName='field1.field2', fieldValue='evalable
string'). 
Note the fieldValue must be an evalable string otherwise bad things happen.
\item \textbf{deletefield} if readonly is F, then you may delete fields from
the record, rb$->$deletefield('field1.field2').  Just specify the fields in
the record you want to delete.

\end{enumerate}
The recordbrowser widget does not signal any events.
\end{ahdescription}
\begin{ahexample}
\begin{verbatim}
include 'recordbrowserwidget.g'   
rb := dws.recordbrowserwidget(therecord=system);
\end{verbatim}
Will produce a generic record-browser dialog.
\end{ahexample}
\end{ahconstructor}
 
\end{ahobject}
