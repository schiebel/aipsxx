%% Copyright (C) 1999,2000
%% Associated Universities, Inc. Washington DC, USA.
%%
%% This library is free software; you can redistribute it and/or modify it
%% under the terms of the GNU Library General Public License as published by
%% the Free Software Foundation; either version 2 of the License, or (at your
%% option) any later version.
%%
%% This library is distributed in the hope that it will be useful, but WITHOUT
%% ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
%% FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Library General Public
%% License for more details.
%%
%% You should have received a copy of the GNU Library General Public License
%% along with this library; if not, write to the Free Software Foundation,
%% Inc., 675 Massachusetts Ave, Cambridge, MA 02139, USA.
%%
%% Correspondence concerning AIPS++ should be addressed as follows:
%%        Internet email: aips2-request@nrao.edu.
%%        Postal address: AIPS++ Project Office
%%                        National Radio Astronomy Observatory
%%                        520 Edgemont Road
%%                        Charlottesville, VA 22903-2475 USA
%%
%% $Id: selectablelist.help,v 19.2 2004/08/25 02:19:56 cvsmgr Exp $
%%
%%--------------------------------------------------------------------------
%%
%% Tool template
%%
%%--------------------------------------------------------------------------
%%

\begin{ahobject}{selectablelist}{Tk widget for selection from a menu or a listbox depending on list length}

\ahinclude{selectablelist.g}

\ahcategory{widgets}

   %
   %ahkeyword registers module keywords
   %

\ahkeyword{widgets}{}
\ahkeyword{Tk}{}

\ahmethods{}

\begin{ahdescription}

This Tk widget enables you to select from a list of items.  Depending on
the length of the list, either a menu or a scrollable listbox is used
for the selection.  This is useful because for very long lists, you
don't want a menu. 

If a menu is created, then the button that this widget makes is
just a normal menu button.  If a listbox is made, then the button
is just a plain button.  When you press it, the listbox is created
close to the button.

With the listbox, there is an associated entry box into which you can
type, and the the list is searched and the match highlighted as you
type.  If you hit carriage return, then the selection is made.  Alternatively
you could click on the highlighted entry.

Whenever a selection is made, this widget emits an event called {\tt
select}.  T \$value of this event is a record with two fields.
Field ``item'' contains the name of the selected item. 
Field ``index'' conatain the index of the selected item
from the constructor list.

The widget accepts an event called {\tt setwidth}.  It is the same as
calling the \ahlink{setwidth}{widgets:selectablelist.setwidth} tool
function.

An example of the operation of this widget can be viewed in the measures
GUI (start with dm.gui()), and goto e.g.  Frame -> Which direction ->
Source. 

\end{ahdescription}



\begin{ahconstructor}{selectablelist}{Construct a selectablelist}
\begin{ahargs}
  \ahaddarg{parent}{Parent of the menu for the menu/action button}{}{Widget}
  \ahaddarg{lead}{Listbox will appear to the sw of this agent}{}{Agent}
  \ahaddarg{list}{The list of items}{}{Vector of strings}
  \ahaddarg{nbreak}{The break point for menu or listbox usage}{20}{Integer}
  \ahaddarg{label}{The label for the button}{Label}{Strings}
  \ahaddarg{updatelabel}{Update the text on the button with the selection}{F}{T or F}  
  \ahaddarg{casesensitive}{Is the text searching case sensitive}{F}{T or F}  
  \ahaddarg{hlp}{Short popuphelp text}{No help}{String}
  \ahaddarg{padx}{Horizontal padding around text}{7}{Integer}
  \ahaddarg{pady}{Vertical padding around text}{3}{Integer}
  \ahaddarg{width}{Width in character units}{Auto-scale}{Integer}
  \ahaddarg{height}{Height in character units}{1}{Integer}
  \ahaddarg{justify}{Justification of text}{`center'}{String from `center', 'left', 'right'}
  \ahaddarg{font}{Font of text }{}{X font}
  \ahaddarg{relief}{Edge relief}{`groove'}{String from `flat', `ridge', 
                                           `raised', `sunken', `groove'}
  \ahaddarg{borderwidth}{Border width}{2}{Integer}
  \ahaddarg{foreground}{Color of text}{`black'}{X color}
  \ahaddarg{background}{Background color}{`lightgrey'}{X color}
  \ahaddarg{disabled}{Is inactivated ?}{F}{Boolean}
  \ahaddarg{anchor}{Location of text}{`c'}{String  from 'c', 'n', 's', 'e', 'w', 'ne',
                                           'nw', 'se', 'sw'}
  \ahaddarg{fill}{How to expand when resized}{'none'}{String from `x', `y', `both', `none'}
  \ahaddarg{widgetset}{The widget server to use}{dws}{widgetserver tool}
\end{ahargs}
\ahreturns{Agent}
\begin{ahdescription}


The {\tt width} argument can be used in three ways.  If {\tt width=-1}
(the default), the button will be wide enough (and of fixed width) to
accomodate all of the item labels in the menu.  This means that the GUI
won't jitter when you write different length labels into it.  If {\tt
width=0}, then the button will change its width to accomodate whatever
label is written into it.  If {\tt width > 0}, then the button is again
of fixed width, with the width that you specify. 

Note that all of the construction arguments refer to the button (plain
for listbox or menu), rather than the listbox.  You have no control over
the form of the listbox (apart from {\tt .aipsrc} control. 

\end{ahdescription}



\begin{ahexample}
\begin{verbatim}
- include 'selectablelist.g'   
- list := "km hm dam m dm cm mm";
- f := frame();
- ls := selectablelist(parent=f, lead=f, list=list, nbreak=5, label='Lengths',
                     updatelabel=T);
                     
\end{verbatim}

A button labelled ``Lengths'' will appear.  When it is pressed a listbox
will popup to the south-west of the parent.  When a selection is made,
the label of the button will change to the selection.

\end{ahexample}
\end{ahconstructor}




\begin{ahfunction}{disabled}{Disable or enable the widget}
\begin{ahargs}
  \ahaddarg{disable}{disable the widget}{T}{T or F}
\end{ahargs}
\ahreturns{Bool}

\begin{ahdescription}

This \tool\ function disables or enables the widget.

\end{ahdescription}
\end{ahfunction}



\begin{ahfunction}{done}{Destroy ourselves}
\ahreturns{Bool}

\begin{ahdescription}

This \tool\ function destroys the widget.

\end{ahdescription}
\end{ahfunction}


\begin{ahfunction}{replace}{Replace the menu with the provided items}
\begin{ahargs}
  \ahaddarg{lead}{Listbox will appear to the sw of this agent}{}{Agent}
  \ahaddarg{list}{The list of items}{}{Vector of strings}
  \ahaddarg{label}{The label for the button}{Label}{Strings}
  \ahaddarg{updatelabel}{Update the text on the button with the selection}{F}{T or F}  
  \ahaddarg{casesensitive}{Is the text searching case sensitive}{F}{T or F}  
  \ahaddarg{width}{Width in character units}{Auto-scale}{Integer}
\end{ahargs}
\ahreturns{Bool}

\begin{ahdescription}

This \tool\ function replaces the list.    The arguments are as for
the \ahlink{constructor}{widgets:selectablelist}.
  
\end{ahdescription}
\end{ahfunction}


\begin{ahfunction}{setbackground}{Set the color of the background of the button}
\begin{ahargs}
  \ahaddarg{color}{The color}{}{Any X color encoded as a String}
\end{ahargs}
\ahreturns{Bool}
  
\begin{ahdescription}

This \tool\ function sets the color of the background of the button.

\end{ahdescription} 
\end{ahfunction}



\begin{ahfunction}{setforeground}{Set the color of the foreground of the button}
\begin{ahargs}
  \ahaddarg{color}{The color}{}{Any X color encoded as a String}
\end{ahargs}
\ahreturns{Bool}

\begin{ahdescription}

This \tool\ function sets the color of the foreground of the button.

\end{ahdescription}
\end{ahfunction}
  


\begin{ahfunction}{setlabel}{Set the label of the button}
\begin{ahargs}
  \ahaddarg{text}{The label text}{}{String}
\end{ahargs}
\ahreturns{Bool}

\begin{ahdescription}

This \tool\ function sets the label of the button.

\end{ahdescription}
\end{ahfunction}
  
\begin{ahfunction}{setwidth}{Set the width of the selection button}
\begin{ahargs}
  \ahaddarg{width}{The width in character units}{}{Integer}
\end{ahargs}
\ahreturns{Bool}

\begin{ahdescription}

This tool function sets the width of the selection button  in character
units.

\end{ahdescription}
\end{ahfunction}   


 

\end{ahobject}
