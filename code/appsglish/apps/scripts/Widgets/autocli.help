%% Copyright (C) 1999
%% Associated Universities, Inc. Washington DC, USA.
%%
%% This library is free software; you can redistribute it and/or modify it
%% under the terms of the GNU Library General Public License as published by
%% the Free Software Foundation; either version 2 of the License, or (at your
%% option) any later version.
%%
%% This library is distributed in the hope that it will be useful, but WITHOUT
%% ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
%% FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Library General Public
%% License for more details.
%%
%% You should have received a copy of the GNU Library General Public License
%% along with this library; if not, write to the Free Software Foundation,
%% Inc., 675 Massachusetts Ave, Cambridge, MA 02139, USA.
%%
%% Correspondence concerning AIPS++ should be addressed as follows:
%%        Internet email: aips2-request@nrao.edu.
%%        Postal address: AIPS++ Project Office
%%                        National Radio Astronomy Observatory
%%                        520 Edgemont Road
%%                        Charlottesville, VA 22903-2475 USA
%%
%% $Id: autocli.help,v 19.2 2004/08/25 02:11:30 cvsmgr Exp $
\begin{ahobject}{autocli}{Tool to build a CLI from a record}

\ahinclude{autocli.g}
\ahcategory{widgets}

\ahkeyword{widgets}{}
\begin{ahdescription}
This tool constructs a CLI corresponding to the parameters in the
input record {\tt params}. The CLI is a subsequence that has a
number of functions and events to allow interaction with the
CLI. The CLI is designed to use various of the input widgets
in the \ahlink{clientry}{clientry}. A GUI equivalent 
\ahlink{autocli}{autocli} is also available, and the common
part of the documentation is to be found there.
\end{ahdescription}

\ahfuncs{}

\begin{ahconstructor}{autogui}{Constuct an autogui}
\begin{ahargs}
\ahaddarg{params}{Record to define the autocli}{}{Record}
\ahaddarg{title}{Title}{'autocli'}{String}
\ahaddarg{cliset}{clientry to use}{dce}{clientry tool}
\end{ahargs}
\ahreturns{subsequence}
\end{ahconstructor}

\begin{ahfunction}{dismiss}{Dismiss the autocli}
\begin{ahdescription}
Also available as an event.
\end{ahdescription}
\end{ahfunction}

\begin{ahfunction}{loop}{Loop over inputs executing callbacks}
\begin{ahdescription}
This function provides the prime way of using the autocli.
The Glish function readline is used to read command lines from
the user. A certain number of intrinsic arguments are
recognized:
\begin{description}
\item[{\tt inp}] Show the current inputs
\item[{\tt help}] Show help for the current tool or function
\item[{\tt quit} or {\tt q}] Quit (without saving inputs)
\end{description}

Thereafter the callbacks are invoked.
\end{ahdescription}
\end{ahfunction}

\begin{ahfunction}{setcallbacks}{Set the callbacks to be used in loop}
\begin{ahdescription}
The call backs should be presented in a record with the names of
the function as the field names. Two arguments are passed: a record
of the values of the inputs, and the remainder of the command line.
\end{ahdescription}
\end{ahfunction}

\begin{ahfunction}{help}{Show help}
\begin{ahdescription}
This function shows the help attached to the methods and
arguments.
\end{ahdescription}
\end{ahfunction}

\begin{ahfunction}{get}{Get a record of the parameters}
\begin{ahdescription}
This returns a record containing the current parameters. WYSIWYG
applies. The corresponding event is setoptions.
\end{ahdescription}
\end{ahfunction}

\end{ahobject}
