# atomsdisplay.g: help atoms for the display package. 
# Copyright (C) 1999
# Associated Universities, Inc. Washington DC, USA.
#
# This library is free software; you can redistribute it and/or modify it
# under the terms of the GNU Library General Public License as published by
# the Free Software Foundation; either version 2 of the License, or (at your
# option) any later version.
#
# This library is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Library General Public
# License for more details.
#
# You should have received a copy of the GNU Library General Public License
# along with this library; if not, write to the Free Software Foundation,
# Inc., 675 Massachusetts Ave, Cambridge, MA 02139, USA.
#
# Correspondence concerning AIPS++ should be addressed as follows:
#        Internet email: aips2-request@nrao.edu.
#        Postal address: AIPS++ Project Office
#                        National Radio Astronomy Observatory
#                        520 Edgemont Road
#                        Charlottesville, VA 22903-2475 USA
#
# $Id: atomsdisplay.g,v 19.949 2006/09/29 01:49:20 wyoung Exp $

pragma include once
val help::pkg.display := [=];
help::pkg.display::d := 'package for image and data display';

help::pkg.display.guiutils := [=];
help::pkg.display.guiutils.objs := [=];
help::pkg.display.guiutils.funs := [=];
help::pkg.display.guiutils.d := 'GUI Related Utilities';
help::pkg.display.guiutils.funs.choice := [=];
help::pkg.display.guiutils.funs.choice.a := [=];
help::pkg.display.guiutils.funs.choice.d := 'Have a user select one of a number of choices';
help::pkg.display.guiutils.funs.choice.a.description := [=];
help::pkg.display.guiutils.funs.choice.a.description.d := 'Descriptive text for the choices';
help::pkg.display.guiutils.funs.choice.a.description.def := '';
help::pkg.display.guiutils.funs.choice.a.description.a := 'string';
help::pkg.display.guiutils.funs.choice.a.choices := [=];
help::pkg.display.guiutils.funs.choice.a.choices.d := 'One of these choices will be returned';
help::pkg.display.guiutils.funs.choice.a.choices.def := '';
help::pkg.display.guiutils.funs.choice.a.choices.a := 'string array';
help::pkg.display.guiutils.funs.choice.a.types := [=];
help::pkg.display.guiutils.funs.choice.a.types.d := 'Button types for choices';
help::pkg.display.guiutils.funs.choice.a.types.def := 'unset';
help::pkg.display.guiutils.funs.choice.a.types.a := 'string array';
help::pkg.display.guiutils.funs.choice.a.default := [=];
help::pkg.display.guiutils.funs.choice.a.default.d := 'Which choice is the default one';
help::pkg.display.guiutils.funs.choice.a.default.def := '1';
help::pkg.display.guiutils.funs.choice.a.default.a := 'integer';
help::pkg.display.guiutils.funs.choice.a.interactive := [=];
help::pkg.display.guiutils.funs.choice.a.interactive.d := 'If interactive, use a GUI, otherwise return the first choice.';
help::pkg.display.guiutils.funs.choice.a.interactive.def := '';
help::pkg.display.guiutils.funs.choice.a.interactive.a := 'boolean';
help::pkg.display.guiutils.funs.choice.a.timeout := [=];
help::pkg.display.guiutils.funs.choice.a.timeout.d := 'How long to wait for the user to respond';
help::pkg.display.guiutils.funs.choice.a.timeout.def := '';
help::pkg.display.guiutils.funs.choice.a.timeout.a := 'integer';
help::pkg.display.guiutils.funs.choice.a.widgetset := [=];
help::pkg.display.guiutils.funs.choice.a.widgetset.d := 'Which widgetserver to use';
help::pkg.display.guiutils.funs.choice.a.widgetset.def := 'dws';
help::pkg.display.guiutils.funs.choice.a.widgetset.a := 'widgetserver';
help::pkg.display.guiutils.funs.choice.s := 'choice(description, choices, types, default, interactive, timeout, widgetset)';
help::pkg.display.guiutils.funs.donechoice := [=];
help::pkg.display.guiutils.funs.donechoice.a := [=];
help::pkg.display.guiutils.funs.donechoice.d := 'A choice dialog appropriate for done()';
help::pkg.display.guiutils.funs.donechoice.a.description := [=];
help::pkg.display.guiutils.funs.donechoice.a.description.d := 'Descriptive text for the choices';
help::pkg.display.guiutils.funs.donechoice.a.description.def := '';
help::pkg.display.guiutils.funs.donechoice.a.description.a := 'string';
help::pkg.display.guiutils.funs.donechoice.a.widgetset := [=];
help::pkg.display.guiutils.funs.donechoice.a.widgetset.d := 'Which widgetserver to use';
help::pkg.display.guiutils.funs.donechoice.a.widgetset.def := 'dws';
help::pkg.display.guiutils.funs.donechoice.a.widgetset.a := 'widgetserver';
help::pkg.display.guiutils.funs.donechoice.s := 'donechoice(description, widgetset)';
help::pkg.display.guiutils.funs.exitchoice := [=];
help::pkg.display.guiutils.funs.exitchoice.a := [=];
help::pkg.display.guiutils.funs.exitchoice.d := 'A choice dialog appropriate for exit';
help::pkg.display.guiutils.funs.exitchoice.a.widgetset := [=];
help::pkg.display.guiutils.funs.exitchoice.a.widgetset.d := 'Which widgetserver to use';
help::pkg.display.guiutils.funs.exitchoice.a.widgetset.def := 'dws';
help::pkg.display.guiutils.funs.exitchoice.a.widgetset.a := 'widgetserver';
help::pkg.display.guiutils.funs.exitchoice.s := 'exitchoice(widgetset)';
help::pkg.display.guiutils.funs.filechooser := [=];
help::pkg.display.guiutils.funs.filechooser.a := [=];
help::pkg.display.guiutils.funs.filechooser.d := 'File Chooser';
help::pkg.display.guiutils.funs.filechooser.a.dirName := [=];
help::pkg.display.guiutils.funs.filechooser.a.dirName.d := 'Directory name';
help::pkg.display.guiutils.funs.filechooser.a.dirName.def := 'Current directory';
help::pkg.display.guiutils.funs.filechooser.a.dirName.a := 'Any directory name';
help::pkg.display.guiutils.funs.filechooser.a.restrictions := [=];
help::pkg.display.guiutils.funs.filechooser.a.restrictions.d := 'Whether to show tables or files';
help::pkg.display.guiutils.funs.filechooser.a.restrictions.def := '[T,T]';
help::pkg.display.guiutils.funs.filechooser.a.restrictions.a := 'Two element boolean record';
help::pkg.display.guiutils.funs.filechooser.a.title := [=];
help::pkg.display.guiutils.funs.filechooser.a.title.d := 'Title to put on Window';
help::pkg.display.guiutils.funs.filechooser.a.title.def := 'AIPS++\ chooser';
help::pkg.display.guiutils.funs.filechooser.a.title.a := 'Any String';
help::pkg.display.guiutils.funs.filechooser.a.wait := [=];
help::pkg.display.guiutils.funs.filechooser.a.wait.d := 'Flag for whether to wait for result or not';
help::pkg.display.guiutils.funs.filechooser.a.wait.def := 'T';
help::pkg.display.guiutils.funs.filechooser.a.wait.a := 'T or F';
help::pkg.display.guiutils.funs.filechooser.a.writeOK := [=];
help::pkg.display.guiutils.funs.filechooser.a.writeOK.d := 'Flag for allowing writing of files';
help::pkg.display.guiutils.funs.filechooser.a.writeOK.def := 'T';
help::pkg.display.guiutils.funs.filechooser.a.writeOK.a := 'T or F';
help::pkg.display.guiutils.funs.filechooser.a.multi := [=];
help::pkg.display.guiutils.funs.filechooser.a.multi.d := 'Flag for allowing multiple choices';
help::pkg.display.guiutils.funs.filechooser.a.multi.def := 'F';
help::pkg.display.guiutils.funs.filechooser.a.multi.a := 'T or F';
help::pkg.display.guiutils.funs.filechooser.a.access := [=];
help::pkg.display.guiutils.funs.filechooser.a.access.d := 'String specifying required access permissions of files';
help::pkg.display.guiutils.funs.filechooser.a.access.def := 'r';
help::pkg.display.guiutils.funs.filechooser.a.access.a := 'any combination of r,w, and x';
help::pkg.display.guiutils.funs.filechooser.s := 'filechooser(dirName, restrictions, title, wait, writeOK, multi, access)';
help::pkg.display.guiutils.funs.datachooser := [=];
help::pkg.display.guiutils.funs.datachooser.a := [=];
help::pkg.display.guiutils.funs.datachooser.d := 'Data Chooser';
help::pkg.display.guiutils.funs.datachooser.a.dirName := [=];
help::pkg.display.guiutils.funs.datachooser.a.dirName.d := 'Directory name';
help::pkg.display.guiutils.funs.datachooser.a.dirName.def := 'Current directory';
help::pkg.display.guiutils.funs.datachooser.a.dirName.a := 'Any directory name';
help::pkg.display.guiutils.funs.datachooser.a.title := [=];
help::pkg.display.guiutils.funs.datachooser.a.title.d := 'Title to put on Window';
help::pkg.display.guiutils.funs.datachooser.a.title.def := 'AIPS++\ chooser';
help::pkg.display.guiutils.funs.datachooser.a.title.a := 'Any String';
help::pkg.display.guiutils.funs.datachooser.a.wait := [=];
help::pkg.display.guiutils.funs.datachooser.a.wait.d := 'Flag for whether to wait for result or not';
help::pkg.display.guiutils.funs.datachooser.a.wait.def := 'T';
help::pkg.display.guiutils.funs.datachooser.a.wait.a := 'T or F';
help::pkg.display.guiutils.funs.datachooser.a.writeOK := [=];
help::pkg.display.guiutils.funs.datachooser.a.writeOK.d := 'Flag for allowing writing of files';
help::pkg.display.guiutils.funs.datachooser.a.writeOK.def := 'T';
help::pkg.display.guiutils.funs.datachooser.a.writeOK.a := 'T or F';
help::pkg.display.guiutils.funs.datachooser.a.multi := [=];
help::pkg.display.guiutils.funs.datachooser.a.multi.d := 'Flag for allowing multiple choices';
help::pkg.display.guiutils.funs.datachooser.a.multi.def := 'F';
help::pkg.display.guiutils.funs.datachooser.a.multi.a := 'T or F';
help::pkg.display.guiutils.funs.datachooser.a.access := [=];
help::pkg.display.guiutils.funs.datachooser.a.access.d := 'String specifying required access permissions of files';
help::pkg.display.guiutils.funs.datachooser.a.access.def := 'r';
help::pkg.display.guiutils.funs.datachooser.a.access.a := 'any combination of r,w, and x';
help::pkg.display.guiutils.funs.datachooser.s := 'datachooser(dirName, title, wait, writeOK, multi, access)';
help::pkg.display.guiutils.funs.tablechooser := [=];
help::pkg.display.guiutils.funs.tablechooser.a := [=];
help::pkg.display.guiutils.funs.tablechooser.d := 'Table Chooser';
help::pkg.display.guiutils.funs.tablechooser.a.dirName := [=];
help::pkg.display.guiutils.funs.tablechooser.a.dirName.d := 'Directory name';
help::pkg.display.guiutils.funs.tablechooser.a.dirName.def := 'Current directory';
help::pkg.display.guiutils.funs.tablechooser.a.dirName.a := 'Any directory name';
help::pkg.display.guiutils.funs.tablechooser.a.title := [=];
help::pkg.display.guiutils.funs.tablechooser.a.title.d := 'Title to put on Window';
help::pkg.display.guiutils.funs.tablechooser.a.title.def := 'AIPS++\ chooser';
help::pkg.display.guiutils.funs.tablechooser.a.title.a := 'Any String';
help::pkg.display.guiutils.funs.tablechooser.a.wait := [=];
help::pkg.display.guiutils.funs.tablechooser.a.wait.d := 'Flag for whether to wait for result or not';
help::pkg.display.guiutils.funs.tablechooser.a.wait.def := 'T';
help::pkg.display.guiutils.funs.tablechooser.a.wait.a := 'T or F';
help::pkg.display.guiutils.funs.tablechooser.a.writeOK := [=];
help::pkg.display.guiutils.funs.tablechooser.a.writeOK.d := 'Flag for allowing writing of files';
help::pkg.display.guiutils.funs.tablechooser.a.writeOK.def := 'T';
help::pkg.display.guiutils.funs.tablechooser.a.writeOK.a := 'T or F';
help::pkg.display.guiutils.funs.tablechooser.a.multi := [=];
help::pkg.display.guiutils.funs.tablechooser.a.multi.d := 'Flag for allowing multiple choices';
help::pkg.display.guiutils.funs.tablechooser.a.multi.def := 'F';
help::pkg.display.guiutils.funs.tablechooser.a.multi.a := 'T or F';
help::pkg.display.guiutils.funs.tablechooser.a.access := [=];
help::pkg.display.guiutils.funs.tablechooser.a.access.d := 'String specifying required access permissions of files';
help::pkg.display.guiutils.funs.tablechooser.a.access.def := 'r';
help::pkg.display.guiutils.funs.tablechooser.a.access.a := 'any combination of r,w, and x';
help::pkg.display.guiutils.funs.tablechooser.s := 'tablechooser(dirName, title, wait, writeOK, multi, access)';
help::pkg.display.guiutils.funs.chooser := [=];
help::pkg.display.guiutils.funs.chooser.a := [=];
help::pkg.display.guiutils.funs.chooser.d := 'AIPS++\ chooser subsequence';
help::pkg.display.guiutils.funs.chooser.a.dirName := [=];
help::pkg.display.guiutils.funs.chooser.a.dirName.d := 'Directory name';
help::pkg.display.guiutils.funs.chooser.a.dirName.def := 'Current directory';
help::pkg.display.guiutils.funs.chooser.a.dirName.a := 'Any directory name';
help::pkg.display.guiutils.funs.chooser.a.restrictions := [=];
help::pkg.display.guiutils.funs.chooser.a.restrictions.d := 'Whether to show tables or files';
help::pkg.display.guiutils.funs.chooser.a.restrictions.def := '[T,T]';
help::pkg.display.guiutils.funs.chooser.a.restrictions.a := 'Two element boolean record';
help::pkg.display.guiutils.funs.chooser.a.title := [=];
help::pkg.display.guiutils.funs.chooser.a.title.d := 'Title to put on Window';
help::pkg.display.guiutils.funs.chooser.a.title.def := 'AIPS++\ chooser';
help::pkg.display.guiutils.funs.chooser.a.title.a := 'Any String';
help::pkg.display.guiutils.funs.chooser.a.wait := [=];
help::pkg.display.guiutils.funs.chooser.a.wait.d := 'Flag for whether to wait for result or not';
help::pkg.display.guiutils.funs.chooser.a.wait.def := 'T';
help::pkg.display.guiutils.funs.chooser.a.wait.a := 'T or F';
help::pkg.display.guiutils.funs.chooser.a.writeOK := [=];
help::pkg.display.guiutils.funs.chooser.a.writeOK.d := 'Flag for allowing writing of files';
help::pkg.display.guiutils.funs.chooser.a.writeOK.def := 'T';
help::pkg.display.guiutils.funs.chooser.a.writeOK.a := 'T or F';
help::pkg.display.guiutils.funs.chooser.a.multi := [=];
help::pkg.display.guiutils.funs.chooser.a.multi.d := 'Flag for allowing multiple choices';
help::pkg.display.guiutils.funs.chooser.a.multi.def := 'F';
help::pkg.display.guiutils.funs.chooser.a.multi.a := 'T or F';
help::pkg.display.guiutils.funs.chooser.a.access := [=];
help::pkg.display.guiutils.funs.chooser.a.access.d := 'String specifying required access permissions of files';
help::pkg.display.guiutils.funs.chooser.a.access.def := 'r';
help::pkg.display.guiutils.funs.chooser.a.access.a := 'any combination of r,w, and x';
help::pkg.display.guiutils.funs.chooser.s := 'chooser(dirName, restrictions, title, wait, writeOK, multi, access)';
help::pkg.display.guiutils.objs.guiframework := [=];
help::pkg.display.guiutils.objs.guiframework.m := [=];
help::pkg.display.guiutils.objs.guiframework.c := [=];
help::pkg.display.guiutils.objs.guiframework.d := 'Standard framework for Glish based  AIPS++ Graphical User Interfaces (GUI s)';
help::pkg.display.guiutils.objs.guiframework.c.guiframework := [=];
help::pkg.display.guiutils.objs.guiframework.c.guiframework.d := 'Constructs the GUI framework, menus, work area, etc...';
help::pkg.display.guiutils.objs.guiframework.c.guiframework.a.title := [=];
help::pkg.display.guiutils.objs.guiframework.c.guiframework.a.title.d := 'Window title';
help::pkg.display.guiutils.objs.guiframework.c.guiframework.a.title.def := 'AIPS++ Window';
help::pkg.display.guiutils.objs.guiframework.c.guiframework.a.title.a := 'Any string';
help::pkg.display.guiutils.objs.guiframework.c.guiframework.a.menus := [=];
help::pkg.display.guiutils.objs.guiframework.c.guiframework.a.menus.d := 'menu records';
help::pkg.display.guiutils.objs.guiframework.c.guiframework.a.menus.def := 'Default file and options menus';
help::pkg.display.guiutils.objs.guiframework.c.guiframework.a.menus.a := 'Glish menus records';
help::pkg.display.guiutils.objs.guiframework.c.guiframework.a.helpmenu := [=];
help::pkg.display.guiutils.objs.guiframework.c.guiframework.a.helpmenu.d := 'help record';
help::pkg.display.guiutils.objs.guiframework.c.guiframework.a.helpmenu.def := 'Default help menus';
help::pkg.display.guiutils.objs.guiframework.c.guiframework.a.helpmenu.a := 'Glish help menu record';
help::pkg.display.guiutils.objs.guiframework.c.guiframework.a.actions := [=];
help::pkg.display.guiutils.objs.guiframework.c.guiframework.a.actions.d := 'Action record';
help::pkg.display.guiutils.objs.guiframework.c.guiframework.a.actions.def := 'Default action buttons';
help::pkg.display.guiutils.objs.guiframework.c.guiframework.a.actions.a := 'Glish action record';
help::pkg.display.guiutils.objs.guiframework.c.guiframework.a.guiframenote := [=];
help::pkg.display.guiutils.objs.guiframework.c.guiframework.a.guiframenote.d := 'note function';
help::pkg.display.guiutils.objs.guiframework.c.guiframework.a.guiframenote.def := 'note';
help::pkg.display.guiutils.objs.guiframework.c.guiframework.a.guiframenote.a := 'any note function';
help::pkg.display.guiutils.objs.guiframework.c.guiframework.a.parent := [=];
help::pkg.display.guiutils.objs.guiframework.c.guiframework.a.parent.d := 'Parent frame';
help::pkg.display.guiutils.objs.guiframework.c.guiframework.a.parent.def := 'F';
help::pkg.display.guiutils.objs.guiframework.c.guiframework.a.parent.a := 'Frame to attach guiframework';
help::pkg.display.guiutils.objs.guiframework.c.guiframework.s := 'guiframework(title, menus, helpmenu, actions, guiframenote, parent)';
help::pkg.display.guiutils.objs.guiframework.m.busy := [=];
help::pkg.display.guiutils.objs.guiframework.m.busy.d := 'Turns the icon into a watch or pointer. Disables the guiframework frame.';
help::pkg.display.guiutils.objs.guiframework.m.busy.a.busyFlag := [=];
help::pkg.display.guiutils.objs.guiframework.m.busy.a.busyFlag.d := 'Busy Flag';
help::pkg.display.guiutils.objs.guiframework.m.busy.a.busyFlag.def := 'T';
help::pkg.display.guiutils.objs.guiframework.m.busy.a.busyFlag.a := 'T or F, T for busy, F for not busy';
help::pkg.display.guiutils.objs.guiframework.m.busy.s := 'busy(busyFlag)';
help::pkg.display.guiutils.objs.guiframework.m.dismiss := [=];
help::pkg.display.guiutils.objs.guiframework.m.dismiss.d := 'Dismisses the main window.';
help::pkg.display.guiutils.objs.guiframework.m.dismiss.s := 'dismiss()';
help::pkg.display.guiutils.objs.guiframework.m.defaultmenus := [=];
help::pkg.display.guiutils.objs.guiframework.m.defaultmenus.d := 'Returns the default menus.';
help::pkg.display.guiutils.objs.guiframework.m.defaultmenus.s := 'defaultmenus()';
help::pkg.display.guiutils.objs.guiframework.m.defaulthelp := [=];
help::pkg.display.guiutils.objs.guiframework.m.defaulthelp.d := 'Returns the default help menu.';
help::pkg.display.guiutils.objs.guiframework.m.defaulthelp.s := 'defaulthelp()';
help::pkg.display.guiutils.objs.guiframework.m.defaultactions := [=];
help::pkg.display.guiutils.objs.guiframework.m.defaultactions.d := 'Returns the default actions for command buttons.';
help::pkg.display.guiutils.objs.guiframework.m.defaultactions.s := 'defaultactions()';
help::pkg.display.guiutils.objs.guiframework.m.addmenus := [=];
help::pkg.display.guiutils.objs.guiframework.m.addmenus.d := 'Add menus to the menubar.';
help::pkg.display.guiutils.objs.guiframework.m.addmenus.a.menus := [=];
help::pkg.display.guiutils.objs.guiframework.m.addmenus.a.menus.d := 'Record, containing menus';
help::pkg.display.guiutils.objs.guiframework.m.addmenus.a.menus.def := '';
help::pkg.display.guiutils.objs.guiframework.m.addmenus.a.menus.a := 'Any Glish menu record ';
help::pkg.display.guiutils.objs.guiframework.m.addmenus.s := 'addmenus(menus)';
help::pkg.display.guiutils.objs.guiframework.m.addhelp := [=];
help::pkg.display.guiutils.objs.guiframework.m.addhelp.d := 'Add help menus to the menubar.';
help::pkg.display.guiutils.objs.guiframework.m.addhelp.a.helpmenu := [=];
help::pkg.display.guiutils.objs.guiframework.m.addhelp.a.helpmenu.d := 'Help menu record';
help::pkg.display.guiutils.objs.guiframework.m.addhelp.a.helpmenu.def := '';
help::pkg.display.guiutils.objs.guiframework.m.addhelp.a.helpmenu.a := 'Glish menu record';
help::pkg.display.guiutils.objs.guiframework.m.addhelp.s := 'addhelp(helpmenu)';
help::pkg.display.guiutils.objs.guiframework.m.addactions := [=];
help::pkg.display.guiutils.objs.guiframework.m.addactions.d := 'Add buttons to command area.';
help::pkg.display.guiutils.objs.guiframework.m.addactions.a.actions := [=];
help::pkg.display.guiutils.objs.guiframework.m.addactions.a.actions.d := 'Action buttons';
help::pkg.display.guiutils.objs.guiframework.m.addactions.a.actions.def := '';
help::pkg.display.guiutils.objs.guiframework.m.addactions.a.actions.a := 'Glish action record';
help::pkg.display.guiutils.objs.guiframework.m.addactions.s := 'addactions(actions)';
help::pkg.display.guiutils.objs.guiframework.m.getworkframe := [=];
help::pkg.display.guiutils.objs.guiframework.m.getworkframe.d := 'Returns a reference to the frame where most GUI components are found.';
help::pkg.display.guiutils.objs.guiframework.m.getworkframe.s := 'getworkframe()';
help::pkg.display.guiutils.objs.guiframework.m.updatestatus := [=];
help::pkg.display.guiutils.objs.guiframework.m.updatestatus.d := 'Updates the status line on the window.';
help::pkg.display.guiutils.objs.guiframework.m.updatestatus.a.status := [=];
help::pkg.display.guiutils.objs.guiframework.m.updatestatus.a.status.d := 'Status line';
help::pkg.display.guiutils.objs.guiframework.m.updatestatus.a.status.def := '';
help::pkg.display.guiutils.objs.guiframework.m.updatestatus.a.status.a := 'Any string';
help::pkg.display.guiutils.objs.guiframework.m.updatestatus.s := 'updatestatus(status)';
help::pkg.display.guiutils.objs.guiframework.m.updatetitle := [=];
help::pkg.display.guiutils.objs.guiframework.m.updatetitle.d := 'Updates the title line on the frame/window.';
help::pkg.display.guiutils.objs.guiframework.m.updatetitle.a.status := [=];
help::pkg.display.guiutils.objs.guiframework.m.updatetitle.a.status.d := 'Status line';
help::pkg.display.guiutils.objs.guiframework.m.updatetitle.a.status.def := '';
help::pkg.display.guiutils.objs.guiframework.m.updatetitle.a.status.a := 'Any string';
help::pkg.display.guiutils.objs.guiframework.m.updatetitle.s := 'updatetitle(status)';
help::pkg.display.guiutils.objs.guiframework.m.addactionhandler := [=];
help::pkg.display.guiutils.objs.guiframework.m.addactionhandler.d := 'Sets the handler for a menu or command buttion';
help::pkg.display.guiutils.objs.guiframework.m.addactionhandler.a.button := [=];
help::pkg.display.guiutils.objs.guiframework.m.addactionhandler.a.button.d := 'button name';
help::pkg.display.guiutils.objs.guiframework.m.addactionhandler.a.button.def := 'Valid button name';
help::pkg.display.guiutils.objs.guiframework.m.addactionhandler.a.button.a := 'String';
help::pkg.display.guiutils.objs.guiframework.m.addactionhandler.a.action := [=];
help::pkg.display.guiutils.objs.guiframework.m.addactionhandler.a.action.d := 'action functions';
help::pkg.display.guiutils.objs.guiframework.m.addactionhandler.a.action.def := 'Valid function';
help::pkg.display.guiutils.objs.guiframework.m.addactionhandler.a.action.a := 'Glish function';
help::pkg.display.guiutils.objs.guiframework.m.addactionhandler.s := 'addactionhandler(button, action)';
help::pkg.display.guiutils.objs.guiframework.m.cleanup := [=];
help::pkg.display.guiutils.objs.guiframework.m.cleanup.d := 'removes agents generated by guiframework';
help::pkg.display.guiutils.objs.guiframework.m.cleanup.s := 'cleanup()';
help::pkg.display.guiutils.objs.gui := [=];
help::pkg.display.guiutils.objs.gui.m := [=];
help::pkg.display.guiutils.objs.gui.c := [=];
help::pkg.display.guiutils.objs.gui.d := 'Standard Input Forms generated from Glish records';
help::pkg.display.guiutils.objs.gui.m.inputform := [=];
help::pkg.display.guiutils.objs.gui.m.inputform.d := 'Creates a input form, either stand-alone or in a frame';
help::pkg.display.guiutils.objs.gui.m.inputform.a.scrnInputs := [=];
help::pkg.display.guiutils.objs.gui.m.inputform.a.scrnInputs.d := 'Screen input record';
help::pkg.display.guiutils.objs.gui.m.inputform.a.scrnInputs.def := '';
help::pkg.display.guiutils.objs.gui.m.inputform.a.scrnInputs.a := 'any valid screen input record';
help::pkg.display.guiutils.objs.gui.m.inputform.a.title := [=];
help::pkg.display.guiutils.objs.gui.m.inputform.a.title.d := 'Label or window title of input form';
help::pkg.display.guiutils.objs.gui.m.inputform.a.title.def := 'AIPS++\ Input Form';
help::pkg.display.guiutils.objs.gui.m.inputform.a.title.a := 'Any String';
help::pkg.display.guiutils.objs.gui.m.inputform.a.dismiss := [=];
help::pkg.display.guiutils.objs.gui.m.inputform.a.dismiss.d := 'Dismiss flag';
help::pkg.display.guiutils.objs.gui.m.inputform.a.dismiss.def := 'T';
help::pkg.display.guiutils.objs.gui.m.inputform.a.dismiss.a := 'Flag to dismiss the form after returning from one of the action events';
help::pkg.display.guiutils.objs.gui.m.inputform.a.parent := [=];
help::pkg.display.guiutils.objs.gui.m.inputform.a.parent.d := 'The parent frame';
help::pkg.display.guiutils.objs.gui.m.inputform.a.parent.def := 'F';
help::pkg.display.guiutils.objs.gui.m.inputform.a.parent.a := 'Either F or the frame to put the input form';
help::pkg.display.guiutils.objs.gui.m.inputform.s := 'inputform(scrnInputs, title, dismiss, parent)';
help::pkg.display.guiutils.objs.gui.m.tabform := [=];
help::pkg.display.guiutils.objs.gui.m.tabform.d := 'Creates a tab-styled input form, either stand-alone or in a frame';
help::pkg.display.guiutils.objs.gui.m.tabform.a.methods := [=];
help::pkg.display.guiutils.objs.gui.m.tabform.a.methods.d := 'Collection of screen input records used by inputform';
help::pkg.display.guiutils.objs.gui.m.tabform.a.methods.def := '';
help::pkg.display.guiutils.objs.gui.m.tabform.a.methods.a := 'any valid record of screen input records';
help::pkg.display.guiutils.objs.gui.m.tabform.a.title := [=];
help::pkg.display.guiutils.objs.gui.m.tabform.a.title.d := 'Label or window title of input form';
help::pkg.display.guiutils.objs.gui.m.tabform.a.title.def := 'AIPS++\ Tab Input Form';
help::pkg.display.guiutils.objs.gui.m.tabform.a.title.a := 'Any String';
help::pkg.display.guiutils.objs.gui.m.tabform.a.dismiss := [=];
help::pkg.display.guiutils.objs.gui.m.tabform.a.dismiss.d := 'Dismiss flag';
help::pkg.display.guiutils.objs.gui.m.tabform.a.dismiss.def := 'T';
help::pkg.display.guiutils.objs.gui.m.tabform.a.dismiss.a := 'Flag to dismiss the form after returning from one of the action events';
help::pkg.display.guiutils.objs.gui.m.tabform.a.parent := [=];
help::pkg.display.guiutils.objs.gui.m.tabform.a.parent.d := 'The parent frame';
help::pkg.display.guiutils.objs.gui.m.tabform.a.parent.def := 'F';
help::pkg.display.guiutils.objs.gui.m.tabform.a.parent.a := 'Either F or the frame to put the tab-input form';
help::pkg.display.guiutils.objs.gui.m.tabform.a.tabcount := [=];
help::pkg.display.guiutils.objs.gui.m.tabform.a.tabcount.d := 'Number of functions that cause a list box to be used';
help::pkg.display.guiutils.objs.gui.m.tabform.a.tabcount.def := '5';
help::pkg.display.guiutils.objs.gui.m.tabform.a.tabcount.a := 'any integer but should be less than 7';
help::pkg.display.guiutils.objs.gui.m.tabform.a.side := [=];
help::pkg.display.guiutils.objs.gui.m.tabform.a.side.d := 'Which side to pack the list box on';
help::pkg.display.guiutils.objs.gui.m.tabform.a.side.def := 'left';
help::pkg.display.guiutils.objs.gui.m.tabform.a.side.a := 'top, bottom, left, right';
help::pkg.display.guiutils.objs.gui.m.tabform.s := 'tabform(methods, title, dismiss, parent, tabcount, side)';
help::pkg.display.guiutils.objs.status_line := [=];
help::pkg.display.guiutils.objs.status_line.m := [=];
help::pkg.display.guiutils.objs.status_line.c := [=];
help::pkg.display.guiutils.objs.status_line.d := 'A one-line text widget for displaying status information.';
help::pkg.display.guiutils.objs.status_line.c.status_line := [=];
help::pkg.display.guiutils.objs.status_line.c.status_line.d := 'Construct a status line widget.';
help::pkg.display.guiutils.objs.status_line.c.status_line.a.parentFrame := [=];
help::pkg.display.guiutils.objs.status_line.c.status_line.a.parentFrame.d := 'a glishtk frame widget';
help::pkg.display.guiutils.objs.status_line.c.status_line.a.parentFrame.def := '';
help::pkg.display.guiutils.objs.status_line.c.status_line.a.parentFrame.a := '';
help::pkg.display.guiutils.objs.status_line.c.status_line.s := 'status_line(parentFrame)';
help::pkg.display.guiutils.objs.status_line.m.show := [=];
help::pkg.display.guiutils.objs.status_line.m.show.d := 'Clear the line, and display this message';
help::pkg.display.guiutils.objs.status_line.m.show.a.message := [=];
help::pkg.display.guiutils.objs.status_line.m.show.a.message.d := 'a new status message';
help::pkg.display.guiutils.objs.status_line.m.show.a.message.def := '';
help::pkg.display.guiutils.objs.status_line.m.show.a.message.a := 'any string';
help::pkg.display.guiutils.objs.status_line.m.show.s := 'show(message)';
help::pkg.display.guiutils.objs.status_line.m.clear := [=];
help::pkg.display.guiutils.objs.status_line.m.clear.d := 'Remove all text from the widget.';
help::pkg.display.guiutils.objs.status_line.m.clear.s := 'clear()';
help::pkg.display.guiutils.objs.status_line.m.append := [=];
help::pkg.display.guiutils.objs.status_line.m.append.d := 'Add text to the end of the current text.';
help::pkg.display.guiutils.objs.status_line.m.append.a.message := [=];
help::pkg.display.guiutils.objs.status_line.m.append.a.message.d := '';
help::pkg.display.guiutils.objs.status_line.m.append.a.message.def := '';
help::pkg.display.guiutils.objs.status_line.m.append.a.message.a := 'any string';
help::pkg.display.guiutils.objs.status_line.m.append.s := 'append(message)';
help::pkg.display.guiutils.objs.status_line.m.delete := [=];
help::pkg.display.guiutils.objs.status_line.m.delete.d := 'Destroy the status\_line widget';
help::pkg.display.guiutils.objs.status_line.m.delete.s := 'delete()';
help::pkg.display.guiutils.objs.messagebox := [=];
help::pkg.display.guiutils.objs.messagebox.m := [=];
help::pkg.display.guiutils.objs.messagebox.c := [=];
help::pkg.display.guiutils.objs.messagebox.d := 'A simple popup text window for displaying short to medium-size messages.';
help::pkg.display.guiutils.objs.messagebox.c.messagebox := [=];
help::pkg.display.guiutils.objs.messagebox.c.messagebox.d := 'Create a message box.';
help::pkg.display.guiutils.objs.messagebox.c.messagebox.a.message := [=];
help::pkg.display.guiutils.objs.messagebox.c.messagebox.a.message.d := 'The text to display';
help::pkg.display.guiutils.objs.messagebox.c.messagebox.a.message.def := '';
help::pkg.display.guiutils.objs.messagebox.c.messagebox.a.message.a := 'any string';
help::pkg.display.guiutils.objs.messagebox.c.messagebox.a.background := [=];
help::pkg.display.guiutils.objs.messagebox.c.messagebox.a.background.d := 'background color';
help::pkg.display.guiutils.objs.messagebox.c.messagebox.a.background.def := 'white';
help::pkg.display.guiutils.objs.messagebox.c.messagebox.a.background.a := 'any color available on your system.';
help::pkg.display.guiutils.objs.messagebox.c.messagebox.s := 'messagebox(message, background)';
help::pkg.display.guiutils.objs.messagebox.m.text := [=];
help::pkg.display.guiutils.objs.messagebox.m.text.d := 'Erase any existing text, and display the new message.';
help::pkg.display.guiutils.objs.messagebox.m.text.a.message := [=];
help::pkg.display.guiutils.objs.messagebox.m.text.a.message.d := 'New text to display';
help::pkg.display.guiutils.objs.messagebox.m.text.a.message.def := '';
help::pkg.display.guiutils.objs.messagebox.m.text.a.message.a := 'any String, newlines included';
help::pkg.display.guiutils.objs.messagebox.m.text.s := 'text(message)';
help::pkg.display.guiutils.objs.messagebox.m.delete := [=];
help::pkg.display.guiutils.objs.messagebox.m.delete.d := 'Destroy the messagebox window.';
help::pkg.display.guiutils.objs.messagebox.m.delete.s := 'delete()';
help::pkg.display.guiutils.objs.single_entry_dialog_box := [=];
help::pkg.display.guiutils.objs.single_entry_dialog_box.m := [=];
help::pkg.display.guiutils.objs.single_entry_dialog_box.c := [=];
help::pkg.display.guiutils.objs.single_entry_dialog_box.d := 'A popup dialog box for entering one item of text.';
help::pkg.display.guiutils.objs.single_entry_dialog_box.c.single_entry_dialog_box := [=];
help::pkg.display.guiutils.objs.single_entry_dialog_box.c.single_entry_dialog_box.d := 'Create the popup.';
help::pkg.display.guiutils.objs.single_entry_dialog_box.c.single_entry_dialog_box.a.prompt := [=];
help::pkg.display.guiutils.objs.single_entry_dialog_box.c.single_entry_dialog_box.a.prompt.d := 'Text to display, as a label, to the left of the text entry widget';
help::pkg.display.guiutils.objs.single_entry_dialog_box.c.single_entry_dialog_box.a.prompt.def := '\' \' ';
help::pkg.display.guiutils.objs.single_entry_dialog_box.c.single_entry_dialog_box.a.prompt.a := 'any string';
help::pkg.display.guiutils.objs.single_entry_dialog_box.c.single_entry_dialog_box.a.callbackFunction := [=];
help::pkg.display.guiutils.objs.single_entry_dialog_box.c.single_entry_dialog_box.a.callbackFunction.d := 'Called at normal termination';
help::pkg.display.guiutils.objs.single_entry_dialog_box.c.single_entry_dialog_box.a.callbackFunction.def := 'F';
help::pkg.display.guiutils.objs.single_entry_dialog_box.c.single_entry_dialog_box.a.callbackFunction.a := 'Any one-argument Glish function.';
help::pkg.display.guiutils.objs.single_entry_dialog_box.c.single_entry_dialog_box.s := 'single_entry_dialog_box(prompt, callbackFunction)';
help::pkg.display.guiutils.objs.single_entry_dialog_box.m.delete := [=];
help::pkg.display.guiutils.objs.single_entry_dialog_box.m.delete.d := 'Destroy the single\_entry\_dialog\_box.';
help::pkg.display.guiutils.objs.single_entry_dialog_box.m.delete.s := 'delete()';
help::pkg.display.guiutils.objs.evalwindow := [=];
help::pkg.display.guiutils.objs.evalwindow.m := [=];
help::pkg.display.guiutils.objs.evalwindow.c := [=];
help::pkg.display.guiutils.objs.evalwindow.d := 'A simple GUI text editor from which Glish code may be evaluated.';
help::pkg.display.guiutils.objs.evalwindow.c.evalwindow := [=];
help::pkg.display.guiutils.objs.evalwindow.c.evalwindow.d := 'Create a Glish-specific editor';
help::pkg.display.guiutils.objs.evalwindow.c.evalwindow.a.title := [=];
help::pkg.display.guiutils.objs.evalwindow.c.evalwindow.a.title.d := 'A label for the window';
help::pkg.display.guiutils.objs.evalwindow.c.evalwindow.a.title.def := '\' \' ';
help::pkg.display.guiutils.objs.evalwindow.c.evalwindow.a.title.a := 'any string';
help::pkg.display.guiutils.objs.evalwindow.c.evalwindow.a.columns := [=];
help::pkg.display.guiutils.objs.evalwindow.c.evalwindow.a.columns.d := 'Width in characters';
help::pkg.display.guiutils.objs.evalwindow.c.evalwindow.a.columns.def := '60';
help::pkg.display.guiutils.objs.evalwindow.c.evalwindow.a.columns.a := 'any integer';
help::pkg.display.guiutils.objs.evalwindow.c.evalwindow.a.rows := [=];
help::pkg.display.guiutils.objs.evalwindow.c.evalwindow.a.rows.d := 'Height in lines';
help::pkg.display.guiutils.objs.evalwindow.c.evalwindow.a.rows.def := '20';
help::pkg.display.guiutils.objs.evalwindow.c.evalwindow.a.rows.a := 'any integer';
help::pkg.display.guiutils.objs.evalwindow.c.evalwindow.s := 'evalwindow(title, columns, rows)';
help::pkg.display.guiutils.objs.evalwindow.m.contents := [=];
help::pkg.display.guiutils.objs.evalwindow.m.contents.d := 'Get all of the text in the window';
help::pkg.display.guiutils.objs.evalwindow.m.contents.s := 'contents()';
help::pkg.display.guiutils.objs.evalwindow.m.clear := [=];
help::pkg.display.guiutils.objs.evalwindow.m.clear.d := 'Deletes all the text in the window.';
help::pkg.display.guiutils.objs.evalwindow.m.clear.s := 'clear()';
help::pkg.display.guiutils.objs.evalwindow.m.delete := [=];
help::pkg.display.guiutils.objs.evalwindow.m.delete.d := 'Destroy the evalwindow';
help::pkg.display.guiutils.objs.evalwindow.m.delete.s := 'delete()';
help::pkg.display.guiutils.objs.tracewindow := [=];
help::pkg.display.guiutils.objs.tracewindow.m := [=];
help::pkg.display.guiutils.objs.tracewindow.c := [=];
help::pkg.display.guiutils.objs.tracewindow.d := 'A text display widget for tracing Glish function execution';
help::pkg.display.guiutils.objs.tracewindow.c.tracewindow := [=];
help::pkg.display.guiutils.objs.tracewindow.c.tracewindow.d := 'Create a window for navigating Glish code.';
help::pkg.display.guiutils.objs.tracewindow.c.tracewindow.a.title := [=];
help::pkg.display.guiutils.objs.tracewindow.c.tracewindow.a.title.d := 'A label for the window';
help::pkg.display.guiutils.objs.tracewindow.c.tracewindow.a.title.def := '\' \' ';
help::pkg.display.guiutils.objs.tracewindow.c.tracewindow.a.title.a := 'any string';
help::pkg.display.guiutils.objs.tracewindow.c.tracewindow.a.columns := [=];
help::pkg.display.guiutils.objs.tracewindow.c.tracewindow.a.columns.d := 'Width in characters';
help::pkg.display.guiutils.objs.tracewindow.c.tracewindow.a.columns.def := '50';
help::pkg.display.guiutils.objs.tracewindow.c.tracewindow.a.columns.a := 'any integer';
help::pkg.display.guiutils.objs.tracewindow.c.tracewindow.a.rows := [=];
help::pkg.display.guiutils.objs.tracewindow.c.tracewindow.a.rows.d := 'Height in lines';
help::pkg.display.guiutils.objs.tracewindow.c.tracewindow.a.rows.def := '12';
help::pkg.display.guiutils.objs.tracewindow.c.tracewindow.a.rows.a := 'any integer';
help::pkg.display.guiutils.objs.tracewindow.c.tracewindow.s := 'tracewindow(title, columns, rows)';
help::pkg.display.guiutils.objs.tracewindow.m.append := [=];
help::pkg.display.guiutils.objs.tracewindow.m.append.d := 'Display newString on a new line, at the bottom of existing text';
help::pkg.display.guiutils.objs.tracewindow.m.append.a.newString := [=];
help::pkg.display.guiutils.objs.tracewindow.m.append.a.newString.d := '';
help::pkg.display.guiutils.objs.tracewindow.m.append.a.newString.def := '';
help::pkg.display.guiutils.objs.tracewindow.m.append.a.newString.a := 'any string';
help::pkg.display.guiutils.objs.tracewindow.m.append.s := 'append(newString)';
help::pkg.display.guiutils.objs.tracewindow.m.clear := [=];
help::pkg.display.guiutils.objs.tracewindow.m.clear.d := 'Delete all of the text in the window';
help::pkg.display.guiutils.objs.tracewindow.m.clear.s := 'clear()';
help::pkg.display.guiutils.objs.tracewindow.m.delete := [=];
help::pkg.display.guiutils.objs.tracewindow.m.delete.d := 'Destroy the tracewindow';
help::pkg.display.guiutils.objs.tracewindow.m.delete.s := 'delete()';
help::pkg.display.guiutils.objs.tracewindow.m.view_named_function := [=];
help::pkg.display.guiutils.objs.tracewindow.m.view_named_function.d := 'Display the text of the function';
help::pkg.display.guiutils.objs.tracewindow.m.view_named_function.a.functionName := [=];
help::pkg.display.guiutils.objs.tracewindow.m.view_named_function.a.functionName.d := '';
help::pkg.display.guiutils.objs.tracewindow.m.view_named_function.a.functionName.def := '';
help::pkg.display.guiutils.objs.tracewindow.m.view_named_function.a.functionName.a := '';
help::pkg.display.guiutils.objs.tracewindow.m.view_named_function.s := 'view_named_function(functionName)';
help::pkg.display.guiutils.objs.progress := [=];
help::pkg.display.guiutils.objs.progress.m := [=];
help::pkg.display.guiutils.objs.progress.c := [=];
help::pkg.display.guiutils.objs.progress.d := 'Display visually the progress of some task';
help::pkg.display.guiutils.objs.progress.c.progress := [=];
help::pkg.display.guiutils.objs.progress.c.progress.d := 'Create a progress meter';
help::pkg.display.guiutils.objs.progress.c.progress.a.min := [=];
help::pkg.display.guiutils.objs.progress.c.progress.a.min.d := 'minimum value';
help::pkg.display.guiutils.objs.progress.c.progress.a.min.def := '';
help::pkg.display.guiutils.objs.progress.c.progress.a.min.a := 'Numeric';
help::pkg.display.guiutils.objs.progress.c.progress.a.max := [=];
help::pkg.display.guiutils.objs.progress.c.progress.a.max.d := 'maximum value';
help::pkg.display.guiutils.objs.progress.c.progress.a.max.def := '';
help::pkg.display.guiutils.objs.progress.c.progress.a.max.a := 'Numeric';
help::pkg.display.guiutils.objs.progress.c.progress.a.title := [=];
help::pkg.display.guiutils.objs.progress.c.progress.a.title.d := 'window title';
help::pkg.display.guiutils.objs.progress.c.progress.a.title.def := '""';
help::pkg.display.guiutils.objs.progress.c.progress.a.title.a := 'String';
help::pkg.display.guiutils.objs.progress.c.progress.a.subtitle := [=];
help::pkg.display.guiutils.objs.progress.c.progress.a.subtitle.d := 'bar title';
help::pkg.display.guiutils.objs.progress.c.progress.a.subtitle.def := '""';
help::pkg.display.guiutils.objs.progress.c.progress.a.subtitle.a := 'String';
help::pkg.display.guiutils.objs.progress.c.progress.a.minlabel := [=];
help::pkg.display.guiutils.objs.progress.c.progress.a.minlabel.d := 'left label';
help::pkg.display.guiutils.objs.progress.c.progress.a.minlabel.def := '"" (minimum value)';
help::pkg.display.guiutils.objs.progress.c.progress.a.minlabel.a := 'String';
help::pkg.display.guiutils.objs.progress.c.progress.a.maxlabel := [=];
help::pkg.display.guiutils.objs.progress.c.progress.a.maxlabel.d := 'right label';
help::pkg.display.guiutils.objs.progress.c.progress.a.maxlabel.def := '"" (maximum value)';
help::pkg.display.guiutils.objs.progress.c.progress.a.maxlabel.a := 'String';
help::pkg.display.guiutils.objs.progress.c.progress.a.estimate_time := [=];
help::pkg.display.guiutils.objs.progress.c.progress.a.estimate_time.d := 'estimate time remaining?';
help::pkg.display.guiutils.objs.progress.c.progress.a.estimate_time.def := 'T';
help::pkg.display.guiutils.objs.progress.c.progress.a.estimate_time.a := 'Boolean';
help::pkg.display.guiutils.objs.progress.c.progress.a.barwidth := [=];
help::pkg.display.guiutils.objs.progress.c.progress.a.barwidth.d := 'width of bar in pixels';
help::pkg.display.guiutils.objs.progress.c.progress.a.barwidth.def := '200';
help::pkg.display.guiutils.objs.progress.c.progress.a.barwidth.a := 'Integer';
help::pkg.display.guiutils.objs.progress.c.progress.a.barheight := [=];
help::pkg.display.guiutils.objs.progress.c.progress.a.barheight.d := 'height of bar in pixels';
help::pkg.display.guiutils.objs.progress.c.progress.a.barheight.def := '20';
help::pkg.display.guiutils.objs.progress.c.progress.a.barheight.a := 'Integer';
help::pkg.display.guiutils.objs.progress.c.progress.a.startopen := [=];
help::pkg.display.guiutils.objs.progress.c.progress.a.startopen.d := 'start with the window displayed? Or, how long to wait before displaying?';
help::pkg.display.guiutils.objs.progress.c.progress.a.startopen.def := '5';
help::pkg.display.guiutils.objs.progress.c.progress.a.startopen.a := 'Boolean or Integer';
help::pkg.display.guiutils.objs.progress.c.progress.s := 'progress(min, max, title, subtitle, minlabel, maxlabel, estimate_time, barwidth, barheight, startopen)';
help::pkg.display.guiutils.objs.progress.m.update := [=];
help::pkg.display.guiutils.objs.progress.m.update.d := 'Update a progress meter';
help::pkg.display.guiutils.objs.progress.m.update.a.value := [=];
help::pkg.display.guiutils.objs.progress.m.update.a.value.d := 'New value of the progress meter';
help::pkg.display.guiutils.objs.progress.m.update.a.value.def := '';
help::pkg.display.guiutils.objs.progress.m.update.a.value.a := 'Numeric';
help::pkg.display.guiutils.objs.progress.m.update.a.autodisable := [=];
help::pkg.display.guiutils.objs.progress.m.update.a.autodisable.d := 'Remove the window when ``max\' \'  is reached?';
help::pkg.display.guiutils.objs.progress.m.update.a.autodisable.def := 'T';
help::pkg.display.guiutils.objs.progress.m.update.a.autodisable.a := 'Boolean';
help::pkg.display.guiutils.objs.progress.m.update.s := 'update(value, autodisable)';
help::pkg.display.guiutils.objs.progress.m.activate := [=];
help::pkg.display.guiutils.objs.progress.m.activate.d := 'Remove the window from the screen';
help::pkg.display.guiutils.objs.progress.m.activate.s := 'activate()';
help::pkg.display.guiutils.objs.progress.m.deactivate := [=];
help::pkg.display.guiutils.objs.progress.m.deactivate.d := 'Return the window to the screen';
help::pkg.display.guiutils.objs.progress.m.deactivate.s := 'deactivate()';
help::pkg.display.guiutils.objs.displaylist := [=];
help::pkg.display.guiutils.objs.displaylist.m := [=];
help::pkg.display.guiutils.objs.displaylist.c := [=];
help::pkg.display.guiutils.objs.displaylist.d := 'Maintain an editable list of items';
help::pkg.display.guiutils.objs.displaylist.c.displaylist := [=];
help::pkg.display.guiutils.objs.displaylist.c.displaylist.d := 'Create a displaylist tool';
help::pkg.display.guiutils.objs.displaylist.c.displaylist.a.parentframe := [=];
help::pkg.display.guiutils.objs.displaylist.c.displaylist.a.parentframe.d := 'frame to use for gui';
help::pkg.display.guiutils.objs.displaylist.c.displaylist.a.parentframe.def := 'F (no frame)';
help::pkg.display.guiutils.objs.displaylist.c.displaylist.a.parentframe.a := 'frame or F';
help::pkg.display.guiutils.objs.displaylist.c.displaylist.a.formatfunction := [=];
help::pkg.display.guiutils.objs.displaylist.c.displaylist.a.formatfunction.d := 'turn list values into string for display';
help::pkg.display.guiutils.objs.displaylist.c.displaylist.a.formatfunction.def := '';
help::pkg.display.guiutils.objs.displaylist.c.displaylist.a.formatfunction.a := 'function';
help::pkg.display.guiutils.objs.displaylist.c.displaylist.s := 'displaylist(parentframe, formatfunction)';
help::pkg.display.guiutils.objs.displaylist.m.add := [=];
help::pkg.display.guiutils.objs.displaylist.m.add.d := 'add a value to the display list';
help::pkg.display.guiutils.objs.displaylist.m.add.a.value := [=];
help::pkg.display.guiutils.objs.displaylist.m.add.a.value.d := 'item to add to the draw list';
help::pkg.display.guiutils.objs.displaylist.m.add.a.value.def := '';
help::pkg.display.guiutils.objs.displaylist.m.add.a.value.a := 'any';
help::pkg.display.guiutils.objs.displaylist.m.add.s := 'add(value)';
help::pkg.display.guiutils.objs.displaylist.m.get := [=];
help::pkg.display.guiutils.objs.displaylist.m.get.d := 'get an item from the displaylist';
help::pkg.display.guiutils.objs.displaylist.m.get.a.num := [=];
help::pkg.display.guiutils.objs.displaylist.m.get.a.num.d := 'index';
help::pkg.display.guiutils.objs.displaylist.m.get.a.num.def := '';
help::pkg.display.guiutils.objs.displaylist.m.get.a.num.a := 'integer';
help::pkg.display.guiutils.objs.displaylist.m.get.a.fromdrawlist := [=];
help::pkg.display.guiutils.objs.displaylist.m.get.a.fromdrawlist.d := 'get from drawlist?';
help::pkg.display.guiutils.objs.displaylist.m.get.a.fromdrawlist.def := '';
help::pkg.display.guiutils.objs.displaylist.m.get.a.fromdrawlist.a := 'T';
help::pkg.display.guiutils.objs.displaylist.m.get.s := 'get(num, fromdrawlist)';
help::pkg.display.guiutils.objs.displaylist.m.set := [=];
help::pkg.display.guiutils.objs.displaylist.m.set.d := 'change or add an item in displaylist';
help::pkg.display.guiutils.objs.displaylist.m.set.a.num := [=];
help::pkg.display.guiutils.objs.displaylist.m.set.a.num.d := 'index';
help::pkg.display.guiutils.objs.displaylist.m.set.a.num.def := '';
help::pkg.display.guiutils.objs.displaylist.m.set.a.num.a := 'integer';
help::pkg.display.guiutils.objs.displaylist.m.set.a.value := [=];
help::pkg.display.guiutils.objs.displaylist.m.set.a.value.d := 'item to change or add in the draw list';
help::pkg.display.guiutils.objs.displaylist.m.set.a.value.def := '';
help::pkg.display.guiutils.objs.displaylist.m.set.a.value.a := 'any';
help::pkg.display.guiutils.objs.displaylist.m.set.s := 'set(num, value)';
help::pkg.display.guiutils.objs.displaylist.m.clear := [=];
help::pkg.display.guiutils.objs.displaylist.m.clear.d := 'clear the draw list and clipboard';
help::pkg.display.guiutils.objs.displaylist.m.clear.s := 'clear()';
help::pkg.display.guiutils.objs.displaylist.m.cleardrawlist := [=];
help::pkg.display.guiutils.objs.displaylist.m.cleardrawlist.d := 'clear the draw list';
help::pkg.display.guiutils.objs.displaylist.m.cleardrawlist.s := 'cleardrawlist()';
help::pkg.display.guiutils.objs.displaylist.m.clearclipboard := [=];
help::pkg.display.guiutils.objs.displaylist.m.clearclipboard.d := 'clear the clipboard';
help::pkg.display.guiutils.objs.displaylist.m.clearclipboard.s := 'clearclipboard()';
help::pkg.display.guiutils.objs.displaylist.m.ndrawlist := [=];
help::pkg.display.guiutils.objs.displaylist.m.ndrawlist.d := 'how many items are in the draw list';
help::pkg.display.guiutils.objs.displaylist.m.ndrawlist.s := 'ndrawlist()';
help::pkg.display.guiutils.objs.displaylist.m.nclipboard := [=];
help::pkg.display.guiutils.objs.displaylist.m.nclipboard.d := 'how many items are in the clipboard';
help::pkg.display.guiutils.objs.displaylist.m.nclipboard.s := 'nclipboard()';
help::pkg.display.guiutils.objs.displaylist.m.cut := [=];
help::pkg.display.guiutils.objs.displaylist.m.cut.d := 'move items from the draw list to the clipboard';
help::pkg.display.guiutils.objs.displaylist.m.cut.a.drawnums := [=];
help::pkg.display.guiutils.objs.displaylist.m.cut.a.drawnums.d := 'index array';
help::pkg.display.guiutils.objs.displaylist.m.cut.a.drawnums.def := '';
help::pkg.display.guiutils.objs.displaylist.m.cut.a.drawnums.a := 'integer';
help::pkg.display.guiutils.objs.displaylist.m.cut.s := 'cut(drawnums)';
help::pkg.display.guiutils.objs.displaylist.m.copy := [=];
help::pkg.display.guiutils.objs.displaylist.m.copy.d := 'copy items from the draw list to the clipboard';
help::pkg.display.guiutils.objs.displaylist.m.copy.a.drawnums := [=];
help::pkg.display.guiutils.objs.displaylist.m.copy.a.drawnums.d := 'index array';
help::pkg.display.guiutils.objs.displaylist.m.copy.a.drawnums.def := '';
help::pkg.display.guiutils.objs.displaylist.m.copy.a.drawnums.a := 'integer';
help::pkg.display.guiutils.objs.displaylist.m.copy.s := 'copy(drawnums)';
help::pkg.display.guiutils.objs.displaylist.m.paste := [=];
help::pkg.display.guiutils.objs.displaylist.m.paste.d := 'copy items from clipboard to the drawlist';
help::pkg.display.guiutils.objs.displaylist.m.paste.s := 'paste()';
help::pkg.display.guiutils.objs.displaylist.m.compact := [=];
help::pkg.display.guiutils.objs.displaylist.m.compact.d := 'restore wasted space in tool';
help::pkg.display.guiutils.objs.displaylist.m.compact.s := 'compact()';
help::pkg.display.guiutils.objs.displaylist.m.apply := [=];
help::pkg.display.guiutils.objs.displaylist.m.apply.d := 'call a function on items';
help::pkg.display.guiutils.objs.displaylist.m.apply.a.fun := [=];
help::pkg.display.guiutils.objs.displaylist.m.apply.a.fun.d := 'the function we are applying to items';
help::pkg.display.guiutils.objs.displaylist.m.apply.a.fun.def := '';
help::pkg.display.guiutils.objs.displaylist.m.apply.a.fun.a := 'function';
help::pkg.display.guiutils.objs.displaylist.m.apply.a.dodraw := [=];
help::pkg.display.guiutils.objs.displaylist.m.apply.a.dodraw.d := 'apply to items in draw list or clipboard';
help::pkg.display.guiutils.objs.displaylist.m.apply.a.dodraw.def := 'T (draw)';
help::pkg.display.guiutils.objs.displaylist.m.apply.a.dodraw.a := 'boolean';
help::pkg.display.guiutils.objs.displaylist.m.apply.s := 'apply(fun, dodraw)';
help::pkg.display.guiutils.objs.displaylist.m.lastchange := [=];
help::pkg.display.guiutils.objs.displaylist.m.lastchange.d := 'return a number that specifies the state of the displaylist';
help::pkg.display.guiutils.objs.displaylist.m.lastchange.s := 'lastchange()';
help::pkg.display.guiutils.objs.displaylist.m.gui := [=];
help::pkg.display.guiutils.objs.displaylist.m.gui.d := 'show the displaylist in a GUI';
help::pkg.display.guiutils.objs.displaylist.m.gui.a.parentframe := [=];
help::pkg.display.guiutils.objs.displaylist.m.gui.a.parentframe.d := 'parent frame to write into';
help::pkg.display.guiutils.objs.displaylist.m.gui.a.parentframe.def := '';
help::pkg.display.guiutils.objs.displaylist.m.gui.a.parentframe.a := 'frame';
help::pkg.display.guiutils.objs.displaylist.m.gui.s := 'gui(parentframe)';
help::pkg.display.guiutils.objs.displaylist.m.nogui := [=];
help::pkg.display.guiutils.objs.displaylist.m.nogui.d := 'turn off GUI view of displaylist';
help::pkg.display.guiutils.objs.displaylist.m.nogui.s := 'nogui()';
help::pkg.display.guiutils.objs.displaylist.m.save := [=];
help::pkg.display.guiutils.objs.displaylist.m.save.d := 'save the displaylist into a file';
help::pkg.display.guiutils.objs.displaylist.m.save.a.filename := [=];
help::pkg.display.guiutils.objs.displaylist.m.save.a.filename.d := 'file to write into';
help::pkg.display.guiutils.objs.displaylist.m.save.a.filename.def := '';
help::pkg.display.guiutils.objs.displaylist.m.save.a.filename.a := 'string';
help::pkg.display.guiutils.objs.displaylist.m.save.s := 'save(filename)';
help::pkg.display.guiutils.objs.displaylist.m.restore := [=];
help::pkg.display.guiutils.objs.displaylist.m.restore.d := 'restore the displaylist from a file';
help::pkg.display.guiutils.objs.displaylist.m.restore.a.filename := [=];
help::pkg.display.guiutils.objs.displaylist.m.restore.a.filename.d := 'file to read from';
help::pkg.display.guiutils.objs.displaylist.m.restore.a.filename.def := '';
help::pkg.display.guiutils.objs.displaylist.m.restore.a.filename.a := 'string';
help::pkg.display.guiutils.objs.displaylist.m.restore.s := 'restore(filename)';
help::pkg.display.guiutils.objs.displaylist.m.setselectcallback := [=];
help::pkg.display.guiutils.objs.displaylist.m.setselectcallback.d := 'call a function when an item is selected';
help::pkg.display.guiutils.objs.displaylist.m.setselectcallback.a.callback := [=];
help::pkg.display.guiutils.objs.displaylist.m.setselectcallback.a.callback.d := 'function to call on item';
help::pkg.display.guiutils.objs.displaylist.m.setselectcallback.a.callback.def := '';
help::pkg.display.guiutils.objs.displaylist.m.setselectcallback.a.callback.a := 'function';
help::pkg.display.guiutils.objs.displaylist.m.setselectcallback.s := 'setselectcallback(callback)';
help::pkg.display.guiutils.objs.displaylist.m.setchangecallback := [=];
help::pkg.display.guiutils.objs.displaylist.m.setchangecallback.d := 'call a function when the list changes';
help::pkg.display.guiutils.objs.displaylist.m.setchangecallback.a.callback := [=];
help::pkg.display.guiutils.objs.displaylist.m.setchangecallback.a.callback.d := 'function to call on item';
help::pkg.display.guiutils.objs.displaylist.m.setchangecallback.a.callback.def := '';
help::pkg.display.guiutils.objs.displaylist.m.setchangecallback.a.callback.a := 'function';
help::pkg.display.guiutils.objs.displaylist.m.setchangecallback.s := 'setchangecallback(callback)';
help::pkg.display.guiutils.objs.displaylist.m.setrefreshcallback := [=];
help::pkg.display.guiutils.objs.displaylist.m.setrefreshcallback.d := 'call function on cut and paste';
help::pkg.display.guiutils.objs.displaylist.m.setrefreshcallback.a.callback := [=];
help::pkg.display.guiutils.objs.displaylist.m.setrefreshcallback.a.callback.d := 'function to call on item';
help::pkg.display.guiutils.objs.displaylist.m.setrefreshcallback.a.callback.def := '';
help::pkg.display.guiutils.objs.displaylist.m.setrefreshcallback.a.callback.a := 'function';
help::pkg.display.guiutils.objs.displaylist.m.setrefreshcallback.s := 'setrefreshcallback(callback)';
help::pkg.display.guiutils.objs.displaylist.m.done := [=];
help::pkg.display.guiutils.objs.displaylist.m.done.d := 'release/destory this tool';
help::pkg.display.guiutils.objs.displaylist.m.done.s := 'done()';
help::pkg.display.guiutils.funs.displaylisttest := [=];
help::pkg.display.guiutils.funs.displaylisttest.a := [=];
help::pkg.display.guiutils.funs.displaylisttest.d := 'Test/demonstration of the displaylist class';
help::pkg.display.guiutils.funs.displaylisttest.s := 'displaylisttest()';
help::pkg.display.guiutils.funs.popuphelp := [=];
help::pkg.display.guiutils.funs.popuphelp.a := [=];
help::pkg.display.guiutils.funs.popuphelp.d := 'add popup help to a GUI';
help::pkg.display.guiutils.funs.popuphelp.a.fr := [=];
help::pkg.display.guiutils.funs.popuphelp.a.fr.d := 'agent to which popup text should be added';
help::pkg.display.guiutils.funs.popuphelp.a.fr.def := '';
help::pkg.display.guiutils.funs.popuphelp.a.fr.a := 'record or agent';
help::pkg.display.guiutils.funs.popuphelp.a.txt := [=];
help::pkg.display.guiutils.funs.popuphelp.a.txt.d := 'popup text, or, for listbox, possible callback routine';
help::pkg.display.guiutils.funs.popuphelp.a.txt.def := 'F';
help::pkg.display.guiutils.funs.popuphelp.a.txt.a := 'string or function as described above';
help::pkg.display.guiutils.funs.popuphelp.a.hlp := [=];
help::pkg.display.guiutils.funs.popuphelp.a.hlp.d := 'optional separate short help text, or,for listbox, possible callback routine';
help::pkg.display.guiutils.funs.popuphelp.a.hlp.def := 'F';
help::pkg.display.guiutils.funs.popuphelp.a.hlp.a := 'string or function as described above';
help::pkg.display.guiutils.funs.popuphelp.a.combi := [=];
help::pkg.display.guiutils.funs.popuphelp.a.combi.d := 'specifies if short text should precede long text';
help::pkg.display.guiutils.funs.popuphelp.a.combi.def := 'F';
help::pkg.display.guiutils.funs.popuphelp.a.combi.a := 'bool';
help::pkg.display.guiutils.funs.popuphelp.a.width := [=];
help::pkg.display.guiutils.funs.popuphelp.a.width.d := 'specifies maximum length of one shorthelp line';
help::pkg.display.guiutils.funs.popuphelp.a.width.def := '60';
help::pkg.display.guiutils.funs.popuphelp.a.width.a := 'integer';
help::pkg.display.guiutils.funs.popuphelp.s := 'popuphelp(fr, txt, hlp, combi, width)';
help::pkg.display.guiutils.funs.popupremove := [=];
help::pkg.display.guiutils.funs.popupremove.a := [=];
help::pkg.display.guiutils.funs.popupremove.d := 'remove popup help from a GUI';
help::pkg.display.guiutils.funs.popupremove.a.ag := [=];
help::pkg.display.guiutils.funs.popupremove.a.ag.d := 'agent which should be removed (possibly recursively)';
help::pkg.display.guiutils.funs.popupremove.a.ag.def := 'F';
help::pkg.display.guiutils.funs.popupremove.a.ag.a := 'agent';
help::pkg.display.guiutils.funs.popupremove.a.mxlevels := [=];
help::pkg.display.guiutils.funs.popupremove.a.mxlevels.d := 'max. recursion level';
help::pkg.display.guiutils.funs.popupremove.a.mxlevels.def := '8';
help::pkg.display.guiutils.funs.popupremove.a.mxlevels.a := 'Int';
help::pkg.display.guiutils.funs.popupremove.s := 'popupremove(ag, mxlevels)';
help::pkg.display.guiutils.funs.popupmenu := [=];
help::pkg.display.guiutils.funs.popupmenu.a := [=];
help::pkg.display.guiutils.funs.popupmenu.d := 'add a popup type selection help menu to a GUI';
help::pkg.display.guiutils.funs.popupmenu.a.agent := [=];
help::pkg.display.guiutils.funs.popupmenu.a.agent.d := 'agent to which menu button should be added';
help::pkg.display.guiutils.funs.popupmenu.a.agent.def := '';
help::pkg.display.guiutils.funs.popupmenu.a.agent.a := 'agent';
help::pkg.display.guiutils.funs.popupmenu.a.deflt := [=];
help::pkg.display.guiutils.funs.popupmenu.a.deflt.d := 'default popup useage type';
help::pkg.display.guiutils.funs.popupmenu.a.deflt.def := 'F';
help::pkg.display.guiutils.funs.popupmenu.a.deflt.a := 'integer';
help::pkg.display.guiutils.funs.popupmenu.a.relief := [=];
help::pkg.display.guiutils.funs.popupmenu.a.relief.d := 'button relief';
help::pkg.display.guiutils.funs.popupmenu.a.relief.def := 'flat';
help::pkg.display.guiutils.funs.popupmenu.a.relief.a := 'relief type string';
help::pkg.display.guiutils.funs.popupmenu.s := 'popupmenu(agent, deflt, relief)';
help::pkg.display.guiutils.funs.addpopuphelp := [=];
help::pkg.display.guiutils.funs.addpopuphelp.a := [=];
help::pkg.display.guiutils.funs.addpopuphelp.d := 'add popup help to a GUI';
help::pkg.display.guiutils.funs.addpopuphelp.a.agents := [=];
help::pkg.display.guiutils.funs.addpopuphelp.a.agents.d := 'structure that holds the agents';
help::pkg.display.guiutils.funs.addpopuphelp.a.agents.def := '';
help::pkg.display.guiutils.funs.addpopuphelp.a.agents.a := 'record or agent';
help::pkg.display.guiutils.funs.addpopuphelp.a.maxlevels := [=];
help::pkg.display.guiutils.funs.addpopuphelp.a.maxlevels.d := 'maximum number of levels to recurse';
help::pkg.display.guiutils.funs.addpopuphelp.a.maxlevels.def := '';
help::pkg.display.guiutils.funs.addpopuphelp.a.maxlevels.a := '4';
help::pkg.display.guiutils.funs.addpopuphelp.s := 'addpopuphelp(agents, maxlevels)';
help::pkg.display.guiutils.objs.barchart := [=];
help::pkg.display.guiutils.objs.barchart.m := [=];
help::pkg.display.guiutils.objs.barchart.c := [=];
help::pkg.display.guiutils.objs.barchart.d := 'Record values and display as a barchart';
help::pkg.display.guiutils.objs.barchart.c.barchart := [=];
help::pkg.display.guiutils.objs.barchart.c.barchart.d := 'Create a barchart tool';
help::pkg.display.guiutils.objs.barchart.c.barchart.a.title := [=];
help::pkg.display.guiutils.objs.barchart.c.barchart.a.title.d := 'title for the barchart frame';
help::pkg.display.guiutils.objs.barchart.c.barchart.a.title.def := 'AIPS++\ Bar Chart';
help::pkg.display.guiutils.objs.barchart.c.barchart.a.title.a := 'string';
help::pkg.display.guiutils.objs.barchart.c.barchart.a.width := [=];
help::pkg.display.guiutils.objs.barchart.c.barchart.a.width.d := 'width of the barchart in pixels';
help::pkg.display.guiutils.objs.barchart.c.barchart.a.width.def := '400';
help::pkg.display.guiutils.objs.barchart.c.barchart.a.width.a := 'integer';
help::pkg.display.guiutils.objs.barchart.c.barchart.a.height := [=];
help::pkg.display.guiutils.objs.barchart.c.barchart.a.height.d := 'height of the barchart in pixels';
help::pkg.display.guiutils.objs.barchart.c.barchart.a.height.def := '200';
help::pkg.display.guiutils.objs.barchart.c.barchart.a.height.a := 'integer';
help::pkg.display.guiutils.objs.barchart.c.barchart.a.large := [=];
help::pkg.display.guiutils.objs.barchart.c.barchart.a.large.d := 'charted values larger than this are displayed in red if enough colors are available';
help::pkg.display.guiutils.objs.barchart.c.barchart.a.large.def := '1.0e+38';
help::pkg.display.guiutils.objs.barchart.c.barchart.a.large.a := 'real';
help::pkg.display.guiutils.objs.barchart.c.barchart.a.show := [=];
help::pkg.display.guiutils.objs.barchart.c.barchart.a.show.d := 'show charted values?';
help::pkg.display.guiutils.objs.barchart.c.barchart.a.show.def := 'T';
help::pkg.display.guiutils.objs.barchart.c.barchart.a.show.a := 'boolean';
help::pkg.display.guiutils.objs.barchart.c.barchart.s := 'barchart(title, width, height, large, show)';
help::pkg.display.guiutils.objs.barchart.m.chart := [=];
help::pkg.display.guiutils.objs.barchart.m.chart.d := 'Chart a new name,value pair';
help::pkg.display.guiutils.objs.barchart.m.chart.a.name := [=];
help::pkg.display.guiutils.objs.barchart.m.chart.a.name.d := 'name of the barchart item';
help::pkg.display.guiutils.objs.barchart.m.chart.a.name.def := '';
help::pkg.display.guiutils.objs.barchart.m.chart.a.name.a := 'string';
help::pkg.display.guiutils.objs.barchart.m.chart.a.value := [=];
help::pkg.display.guiutils.objs.barchart.m.chart.a.value.d := 'new value for ``name\' \' ';
help::pkg.display.guiutils.objs.barchart.m.chart.a.value.def := '';
help::pkg.display.guiutils.objs.barchart.m.chart.a.value.a := 'real';
help::pkg.display.guiutils.objs.barchart.m.chart.s := 'chart(name, value)';
help::pkg.display.guiutils.objs.barchart.m.remove := [=];
help::pkg.display.guiutils.objs.barchart.m.remove.d := 'Remove an item from the barchart';
help::pkg.display.guiutils.objs.barchart.m.remove.a.name := [=];
help::pkg.display.guiutils.objs.barchart.m.remove.a.name.d := 'name of the barchart item';
help::pkg.display.guiutils.objs.barchart.m.remove.a.name.def := '';
help::pkg.display.guiutils.objs.barchart.m.remove.a.name.a := 'string';
help::pkg.display.guiutils.objs.barchart.m.remove.s := 'remove(name)';
help::pkg.display.guiutils.objs.barchart.m.values := [=];
help::pkg.display.guiutils.objs.barchart.m.values.d := 'Return all values from the barchart as a record';
help::pkg.display.guiutils.objs.barchart.m.values.s := 'values()';
help::pkg.display.guiutils.objs.barchart.m.nogui := [=];
help::pkg.display.guiutils.objs.barchart.m.nogui.d := 'Do not display the barchart any more (until gui() is called)';
help::pkg.display.guiutils.objs.barchart.m.nogui.s := 'nogui()';
help::pkg.display.guiutils.objs.barchart.m.gui := [=];
help::pkg.display.guiutils.objs.barchart.m.gui.d := 'Display the barchart if possible';
help::pkg.display.guiutils.objs.barchart.m.gui.s := 'gui()';
help::pkg.display.guiutils.objs.barchart.m.large := [=];
help::pkg.display.guiutils.objs.barchart.m.large.d := 'Display and optionally modify the ``large   value';
help::pkg.display.guiutils.objs.barchart.m.large.a.newval := [=];
help::pkg.display.guiutils.objs.barchart.m.large.a.newval.d := 'new large value';
help::pkg.display.guiutils.objs.barchart.m.large.a.newval.def := 'unset';
help::pkg.display.guiutils.objs.barchart.m.large.a.newval.a := 'real';
help::pkg.display.guiutils.objs.barchart.m.large.s := 'large(newval)';
help::pkg.display.guiutils.objs.barchart.m.done := [=];
help::pkg.display.guiutils.objs.barchart.m.done.d := 'Delete the barchart tool from memory';
help::pkg.display.guiutils.objs.barchart.m.done.s := 'done()';
help::pkg.display.guiutils.funs.choicewindow := [=];
help::pkg.display.guiutils.funs.choicewindow.a := [=];
help::pkg.display.guiutils.funs.choicewindow.d := 'Display a question in a window with multiple choice answers';
help::pkg.display.guiutils.funs.choicewindow.a.question := [=];
help::pkg.display.guiutils.funs.choicewindow.a.question.d := 'The question you want answered';
help::pkg.display.guiutils.funs.choicewindow.a.question.def := '';
help::pkg.display.guiutils.funs.choicewindow.a.question.a := 'string';
help::pkg.display.guiutils.funs.choicewindow.a.choices := [=];
help::pkg.display.guiutils.funs.choicewindow.a.choices.d := 'Vector of choices';
help::pkg.display.guiutils.funs.choicewindow.a.choices.def := '';
help::pkg.display.guiutils.funs.choicewindow.a.choices.a := 'string';
help::pkg.display.guiutils.funs.choicewindow.a.interactive := [=];
help::pkg.display.guiutils.funs.choicewindow.a.interactive.d := 'Is the session iteractive';
help::pkg.display.guiutils.funs.choicewindow.a.interactive.def := 'has\_gui()';
help::pkg.display.guiutils.funs.choicewindow.a.interactive.a := 'Boolean';
help::pkg.display.guiutils.funs.choicewindow.a.timeout := [=];
help::pkg.display.guiutils.funs.choicewindow.a.timeout.d := 'specifies the number of ticks in .2s for the window to automatically dismiss itself';
help::pkg.display.guiutils.funs.choicewindow.a.timeout.def := '150';
help::pkg.display.guiutils.funs.choicewindow.a.timeout.a := 'integer';
help::pkg.display.guiutils.funs.choicewindow.a.ws := [=];
help::pkg.display.guiutils.funs.choicewindow.a.ws.d := 'widget server';
help::pkg.display.guiutils.funs.choicewindow.a.ws.def := 'dws';
help::pkg.display.guiutils.funs.choicewindow.a.ws.a := 'agent';
help::pkg.display.guiutils.funs.choicewindow.s := 'choicewindow(question, choices, interactive, timeout, ws)';
help::pkg.display.guiutils.funs.infowindow := [=];
help::pkg.display.guiutils.funs.infowindow.a := [=];
help::pkg.display.guiutils.funs.infowindow.d := 'Display an informational message in a window';
help::pkg.display.guiutils.funs.infowindow.a.sometext := [=];
help::pkg.display.guiutils.funs.infowindow.a.sometext.d := 'Text of message you wish to display';
help::pkg.display.guiutils.funs.infowindow.a.sometext.def := '';
help::pkg.display.guiutils.funs.infowindow.a.sometext.a := 'string';
help::pkg.display.guiutils.funs.infowindow.a.title := [=];
help::pkg.display.guiutils.funs.infowindow.a.title.d := 'Title to put in window';
help::pkg.display.guiutils.funs.infowindow.a.title.def := '';
help::pkg.display.guiutils.funs.infowindow.a.title.a := 'string';
help::pkg.display.guiutils.funs.infowindow.a.selfdestruct := [=];
help::pkg.display.guiutils.funs.infowindow.a.selfdestruct.d := 'Do you want this window to automatically disappear?';
help::pkg.display.guiutils.funs.infowindow.a.selfdestruct.def := 'F';
help::pkg.display.guiutils.funs.infowindow.a.selfdestruct.a := 'Boolean';
help::pkg.display.guiutils.funs.infowindow.a.timeout := [=];
help::pkg.display.guiutils.funs.infowindow.a.timeout.d := 'specifies the number of ticks in .2s for the window to automatically dismiss itself';
help::pkg.display.guiutils.funs.infowindow.a.timeout.def := '150';
help::pkg.display.guiutils.funs.infowindow.a.timeout.a := 'integer';
help::pkg.display.guiutils.funs.infowindow.a.ws := [=];
help::pkg.display.guiutils.funs.infowindow.a.ws.d := 'widget server';
help::pkg.display.guiutils.funs.infowindow.a.ws.def := 'dws';
help::pkg.display.guiutils.funs.infowindow.a.ws.a := 'agent';
help::pkg.display.guiutils.funs.infowindow.s := 'infowindow(sometext, title, selfdestruct, timeout, ws)';

help::pkg.display.plotter := [=];
help::pkg.display.plotter.objs := [=];
help::pkg.display.plotter.funs := [=];
help::pkg.display.plotter.d := 'Module for plotting';
help::pkg.display.plotter.objs.pgplotmanager := [=];
help::pkg.display.plotter.objs.pgplotmanager.m := [=];
help::pkg.display.plotter.objs.pgplotmanager.c := [=];
help::pkg.display.plotter.objs.pgplotmanager.d := 'tool used in application development to send plot commands to a plot device';
help::pkg.display.plotter.objs.pgplotmanager.c.pgplotmanager := [=];
help::pkg.display.plotter.objs.pgplotmanager.c.pgplotmanager.d := 'Manage a previously created pgplot agent';
help::pkg.display.plotter.objs.pgplotmanager.c.pgplotmanager.a.pgpagent := [=];
help::pkg.display.plotter.objs.pgplotmanager.c.pgplotmanager.a.pgpagent.d := 'the pgpagent to manage.  A pgpagent is usually constructed either from a widgetset tool\' s pgplot() function or directly through glish with the pgplot() global function.  Alternatively, it can ``borrowed\' \'  from another pgplotmanager via its getagent() function (but see caveat described above).';
help::pkg.display.plotter.objs.pgplotmanager.c.pgplotmanager.a.pgpagent.def := 'F -- causes the device to be set to a null file (/dev/null; see explanation above.)';
help::pkg.display.plotter.objs.pgplotmanager.c.pgplotmanager.a.pgpagent.a := 'pgplot agent or F';
help::pkg.display.plotter.objs.pgplotmanager.c.pgplotmanager.a.interactive := [=];
help::pkg.display.plotter.objs.pgplotmanager.c.pgplotmanager.a.interactive.d := 'sets controls whether interactive prompting of the user should be allowed.  This is usually set to F if the PGPLOT agent is attached to a file.';
help::pkg.display.plotter.objs.pgplotmanager.c.pgplotmanager.a.interactive.def := 'T';
help::pkg.display.plotter.objs.pgplotmanager.c.pgplotmanager.a.interactive.a := 'boolean; T -- the pgplot ask() function is enabled, allowing the user to turn prompting on and  off; F -- prompting is not allowed and the ask() function has no effect.';
help::pkg.display.plotter.objs.pgplotmanager.c.pgplotmanager.a.record := [=];
help::pkg.display.plotter.objs.pgplotmanager.c.pgplotmanager.a.record.d := 'sets whether recording is initially turned on';
help::pkg.display.plotter.objs.pgplotmanager.c.pgplotmanager.a.record.def := 'F';
help::pkg.display.plotter.objs.pgplotmanager.c.pgplotmanager.a.record.a := '';
help::pkg.display.plotter.objs.pgplotmanager.c.pgplotmanager.a.playlist := [=];
help::pkg.display.plotter.objs.pgplotmanager.c.pgplotmanager.a.playlist.d := 'a displaylist tool to use to store plot commands. This allows pre-record commands to be attached to this pgplotmanager.';
help::pkg.display.plotter.objs.pgplotmanager.c.pgplotmanager.a.playlist.def := 'F -- a new display list will be created internally';
help::pkg.display.plotter.objs.pgplotmanager.c.pgplotmanager.a.playlist.a := '';
help::pkg.display.plotter.objs.pgplotmanager.c.pgplotmanager.a.ownplaylist := [=];
help::pkg.display.plotter.objs.pgplotmanager.c.pgplotmanager.a.ownplaylist.d := 'if true, the displaylist tool passed by the playlist parameter will be shut down when this tool is shut down. This is only used when the playlist parameter is used.';
help::pkg.display.plotter.objs.pgplotmanager.c.pgplotmanager.a.ownplaylist.def := 'T';
help::pkg.display.plotter.objs.pgplotmanager.c.pgplotmanager.a.ownplaylist.a := 'boolean';
help::pkg.display.plotter.objs.pgplotmanager.c.pgplotmanager.a.askfunction := [=];
help::pkg.display.plotter.objs.pgplotmanager.c.pgplotmanager.a.askfunction.d := 'the function to call when prompting the user to advance to the next plot.  This can either one of the global functions pgplotaskviaprompt() or pgplotaskviagui(), or it can be a user provided function.  The interactive parameter must be set to T for this function to get used.';
help::pkg.display.plotter.objs.pgplotmanager.c.pgplotmanager.a.askfunction.def := 'F -- pgplotaskviaprompt() will be used by default';
help::pkg.display.plotter.objs.pgplotmanager.c.pgplotmanager.a.askfunction.a := 'function';
help::pkg.display.plotter.objs.pgplotmanager.c.pgplotmanager.a.widgetset := [=];
help::pkg.display.plotter.objs.pgplotmanager.c.pgplotmanager.a.widgetset.d := 'the widgetserver tool to use when creating an internal displaylist.  This is used only when a displaylist is not provided via the playlist parameter.';
help::pkg.display.plotter.objs.pgplotmanager.c.pgplotmanager.a.widgetset.def := 'dws -- the default widgetserver tool';
help::pkg.display.plotter.objs.pgplotmanager.c.pgplotmanager.a.widgetset.a := 'widgetserver tool';
help::pkg.display.plotter.objs.pgplotmanager.c.pgplotmanager.s := 'pgplotmanager(pgpagent, interactive, record, playlist, ownplaylist, askfunction, widgetset)';
help::pkg.display.plotter.objs.pgplotmanager.c.pgplotps := [=];
help::pkg.display.plotter.objs.pgplotmanager.c.pgplotps.d := 'Create a pgplotmanager attached a file';
help::pkg.display.plotter.objs.pgplotmanager.c.pgplotps.a.psfile := [=];
help::pkg.display.plotter.objs.pgplotmanager.c.pgplotps.a.psfile.d := 'the name of output file to write plot to';
help::pkg.display.plotter.objs.pgplotmanager.c.pgplotps.a.psfile.def := '\' pgplot.ps\' ';
help::pkg.display.plotter.objs.pgplotmanager.c.pgplotps.a.psfile.a := 'string representing a file name';
help::pkg.display.plotter.objs.pgplotmanager.c.pgplotps.a.overwrite := [=];
help::pkg.display.plotter.objs.pgplotmanager.c.pgplotps.a.overwrite.d := 'whether to allow a previously existing file with the same name to be overwritten';
help::pkg.display.plotter.objs.pgplotmanager.c.pgplotps.a.overwrite.def := 'F';
help::pkg.display.plotter.objs.pgplotmanager.c.pgplotps.a.overwrite.a := 'boolean; T -- if psfile already exists, it will be overwritten; F -- if psfile already exists, this constructor will return a fail value';
help::pkg.display.plotter.objs.pgplotmanager.c.pgplotps.a.color := [=];
help::pkg.display.plotter.objs.pgplotmanager.c.pgplotps.a.color.d := 'if true, output is color postscript; otherwise, colors are converted to black-and-white or greyscale';
help::pkg.display.plotter.objs.pgplotmanager.c.pgplotps.a.color.def := 'T';
help::pkg.display.plotter.objs.pgplotmanager.c.pgplotps.a.color.a := 'boolean';
help::pkg.display.plotter.objs.pgplotmanager.c.pgplotps.a.landscape := [=];
help::pkg.display.plotter.objs.pgplotmanager.c.pgplotps.a.landscape.d := 'if true, plot is written in landscape mode (i.e. with the bottom axis of the plot oriented along the long axis of the paper); otherwise, portrait mode is used.';
help::pkg.display.plotter.objs.pgplotmanager.c.pgplotps.a.landscape.def := 'T';
help::pkg.display.plotter.objs.pgplotmanager.c.pgplotps.a.landscape.a := 'boolean';
help::pkg.display.plotter.objs.pgplotmanager.c.pgplotps.a.playlist := [=];
help::pkg.display.plotter.objs.pgplotmanager.c.pgplotps.a.playlist.d := 'a displaylist tool to use to store plot commands. This allows pre-record commands to be attached to this pgplotmanager.';
help::pkg.display.plotter.objs.pgplotmanager.c.pgplotps.a.playlist.def := 'F -- a new display list will be created internally';
help::pkg.display.plotter.objs.pgplotmanager.c.pgplotps.a.playlist.a := '';
help::pkg.display.plotter.objs.pgplotmanager.c.pgplotps.a.record := [=];
help::pkg.display.plotter.objs.pgplotmanager.c.pgplotps.a.record.d := 'sets whether recording is initially turned on';
help::pkg.display.plotter.objs.pgplotmanager.c.pgplotps.a.record.def := 'F';
help::pkg.display.plotter.objs.pgplotmanager.c.pgplotps.a.record.a := '';
help::pkg.display.plotter.objs.pgplotmanager.c.pgplotps.a.widgetset := [=];
help::pkg.display.plotter.objs.pgplotmanager.c.pgplotps.a.widgetset.d := 'the widgetserver tool to use when creating an internal displaylist.  This is used only when a displaylist is not provided via the playlist parameter.';
help::pkg.display.plotter.objs.pgplotmanager.c.pgplotps.a.widgetset.def := 'dws -- the default widgetserver tool';
help::pkg.display.plotter.objs.pgplotmanager.c.pgplotps.a.widgetset.a := 'widgetserver tool';
help::pkg.display.plotter.objs.pgplotmanager.c.pgplotps.s := 'pgplotps(psfile, overwrite, color, landscape, playlist, record, widgetset)';
help::pkg.display.plotter.objs.pgplotmanager.m.getagent := [=];
help::pkg.display.plotter.objs.pgplotmanager.m.getagent.d := 'return the PGPLOT agent being managed by this tool';
help::pkg.display.plotter.objs.pgplotmanager.m.getagent.s := 'getagent()';
help::pkg.display.plotter.objs.pgplotmanager.m.setagent := [=];
help::pkg.display.plotter.objs.pgplotmanager.m.setagent.d := 'set the PGPLOT agent to be managed by this tool';
help::pkg.display.plotter.objs.pgplotmanager.m.setagent.a.pgpagent := [=];
help::pkg.display.plotter.objs.pgplotmanager.m.setagent.a.pgpagent.d := 'the pgpagent to manage.  A pgpagent is usually constructed either from a widgetset tool\' s pgplot() function or directly through glish with the pgplot() global function.  Alternatively, it can ``borrowed\' \'  from another pgplotmanager via its getagent() function (but see caveat described above).';
help::pkg.display.plotter.objs.pgplotmanager.m.setagent.a.pgpagent.def := 'F -- causes the device to be set to a null file (/dev/null; see explanation above.)';
help::pkg.display.plotter.objs.pgplotmanager.m.setagent.a.pgpagent.a := 'pgplot agent or F';
help::pkg.display.plotter.objs.pgplotmanager.m.setagent.a.close := [=];
help::pkg.display.plotter.objs.pgplotmanager.m.setagent.a.close.d := 'if true, the previous agent will be                   explicitly closed before its replacement is set.  Set 		 this to F if agent is attached to a GUI being shared                  with another pgplotmanager';
help::pkg.display.plotter.objs.pgplotmanager.m.setagent.a.close.def := 'T';
help::pkg.display.plotter.objs.pgplotmanager.m.setagent.a.close.a := 'boolean';
help::pkg.display.plotter.objs.pgplotmanager.m.setagent.s := 'setagent(pgpagent, close)';
help::pkg.display.plotter.objs.pgplotmanager.m.resetplotnumber := [=];
help::pkg.display.plotter.objs.pgplotmanager.m.resetplotnumber.d := 'reset the internal plot number counter to 0';
help::pkg.display.plotter.objs.pgplotmanager.m.resetplotnumber.s := 'resetplotnumber()';
help::pkg.display.plotter.objs.pgplotmanager.m.displaylist := [=];
help::pkg.display.plotter.objs.pgplotmanager.m.displaylist.d := 'return the displaylist currently in use';
help::pkg.display.plotter.objs.pgplotmanager.m.displaylist.s := 'displaylist()';
help::pkg.display.plotter.objs.pgplotmanager.m.record := [=];
help::pkg.display.plotter.objs.pgplotmanager.m.record.d := 'set whether drawing commands are saved';
help::pkg.display.plotter.objs.pgplotmanager.m.record.a.newstate := [=];
help::pkg.display.plotter.objs.pgplotmanager.m.record.a.newstate.d := 'if true, recording is turned on; otherwise, it is turned off';
help::pkg.display.plotter.objs.pgplotmanager.m.record.a.newstate.def := '';
help::pkg.display.plotter.objs.pgplotmanager.m.record.a.newstate.a := 'boolean';
help::pkg.display.plotter.objs.pgplotmanager.m.record.s := 'record(newstate)';
help::pkg.display.plotter.objs.pgplotmanager.m.recording := [=];
help::pkg.display.plotter.objs.pgplotmanager.m.recording.d := 'return whether plot commands are being saved';
help::pkg.display.plotter.objs.pgplotmanager.m.recording.s := 'recording()';
help::pkg.display.plotter.objs.pgplotmanager.m.canplay := [=];
help::pkg.display.plotter.objs.pgplotmanager.m.canplay.d := 'return whether a command can be executed';
help::pkg.display.plotter.objs.pgplotmanager.m.canplay.s := 'canplay()';
help::pkg.display.plotter.objs.pgplotmanager.m.play := [=];
help::pkg.display.plotter.objs.pgplotmanager.m.play.d := 'Execute a series of plot commands';
help::pkg.display.plotter.objs.pgplotmanager.m.play.a.commands := [=];
help::pkg.display.plotter.objs.pgplotmanager.m.play.a.commands.d := 'list of plot commands to execute';
help::pkg.display.plotter.objs.pgplotmanager.m.play.a.commands.def := '';
help::pkg.display.plotter.objs.pgplotmanager.m.play.a.commands.a := 'displaylist or record';
help::pkg.display.plotter.objs.pgplotmanager.m.play.a.record := [=];
help::pkg.display.plotter.objs.pgplotmanager.m.play.a.record.d := 'save commands in our internal displaylist?';
help::pkg.display.plotter.objs.pgplotmanager.m.play.a.record.def := '';
help::pkg.display.plotter.objs.pgplotmanager.m.play.a.record.a := 'boolean';
help::pkg.display.plotter.objs.pgplotmanager.m.play.s := 'play(commands, record)';
help::pkg.display.plotter.objs.pgplotmanager.m.plotfile := [=];
help::pkg.display.plotter.objs.pgplotmanager.m.plotfile.d := 'Save the plot in native format';
help::pkg.display.plotter.objs.pgplotmanager.m.plotfile.a.file := [=];
help::pkg.display.plotter.objs.pgplotmanager.m.plotfile.a.file.d := 'file name';
help::pkg.display.plotter.objs.pgplotmanager.m.plotfile.a.file.def := 'aips++plot.plot';
help::pkg.display.plotter.objs.pgplotmanager.m.plotfile.a.file.a := 'string';
help::pkg.display.plotter.objs.pgplotmanager.m.plotfile.s := 'plotfile(file)';
help::pkg.display.plotter.objs.pgplotmanager.m.refresh := [=];
help::pkg.display.plotter.objs.pgplotmanager.m.refresh.d := 'replay the display list';
help::pkg.display.plotter.objs.pgplotmanager.m.refresh.s := 'refresh()';
help::pkg.display.plotter.objs.pgplotmanager.m.restore := [=];
help::pkg.display.plotter.objs.pgplotmanager.m.restore.d := 'Retrieve a plot';
help::pkg.display.plotter.objs.pgplotmanager.m.restore.a.file := [=];
help::pkg.display.plotter.objs.pgplotmanager.m.restore.a.file.d := 'file name';
help::pkg.display.plotter.objs.pgplotmanager.m.restore.a.file.def := 'aips++plot.plot';
help::pkg.display.plotter.objs.pgplotmanager.m.restore.a.file.a := 'string';
help::pkg.display.plotter.objs.pgplotmanager.m.restore.s := 'restore(file)';
help::pkg.display.plotter.objs.pgplotmanager.m.done := [=];
help::pkg.display.plotter.objs.pgplotmanager.m.done.d := 'shutdown the manager';
help::pkg.display.plotter.objs.pgplotmanager.m.done.s := 'done()';
help::pkg.display.plotter.objs.pgplotmanager.m.plotxy := [=];
help::pkg.display.plotter.objs.pgplotmanager.m.plotxy.d := 'Plot X,Y vectors as lines or points with auto-scaling';
help::pkg.display.plotter.objs.pgplotmanager.m.plotxy.a.x := [=];
help::pkg.display.plotter.objs.pgplotmanager.m.plotxy.a.x.d := 'X values';
help::pkg.display.plotter.objs.pgplotmanager.m.plotxy.a.x.def := '';
help::pkg.display.plotter.objs.pgplotmanager.m.plotxy.a.x.a := 'non-complex numeric array';
help::pkg.display.plotter.objs.pgplotmanager.m.plotxy.a.y := [=];
help::pkg.display.plotter.objs.pgplotmanager.m.plotxy.a.y.d := 'y values';
help::pkg.display.plotter.objs.pgplotmanager.m.plotxy.a.y.def := '';
help::pkg.display.plotter.objs.pgplotmanager.m.plotxy.a.y.a := 'non-complex numeric array';
help::pkg.display.plotter.objs.pgplotmanager.m.plotxy.a.plotlines := [=];
help::pkg.display.plotter.objs.pgplotmanager.m.plotxy.a.plotlines.d := 'Plot lines (T) or points (F)';
help::pkg.display.plotter.objs.pgplotmanager.m.plotxy.a.plotlines.def := 'T';
help::pkg.display.plotter.objs.pgplotmanager.m.plotxy.a.plotlines.a := 'boolean';
help::pkg.display.plotter.objs.pgplotmanager.m.plotxy.a.newplot := [=];
help::pkg.display.plotter.objs.pgplotmanager.m.plotxy.a.newplot.d := 'Start a new plot (T) or overplot (F)';
help::pkg.display.plotter.objs.pgplotmanager.m.plotxy.a.newplot.def := 'T';
help::pkg.display.plotter.objs.pgplotmanager.m.plotxy.a.newplot.a := 'boolean';
help::pkg.display.plotter.objs.pgplotmanager.m.plotxy.a.xtitle := [=];
help::pkg.display.plotter.objs.pgplotmanager.m.plotxy.a.xtitle.d := 'x axis title (ignored if newplot is F)';
help::pkg.display.plotter.objs.pgplotmanager.m.plotxy.a.xtitle.def := 'none';
help::pkg.display.plotter.objs.pgplotmanager.m.plotxy.a.xtitle.a := 'string';
help::pkg.display.plotter.objs.pgplotmanager.m.plotxy.a.ytitle := [=];
help::pkg.display.plotter.objs.pgplotmanager.m.plotxy.a.ytitle.d := 'y axis title (ignored if newplot is F)';
help::pkg.display.plotter.objs.pgplotmanager.m.plotxy.a.ytitle.def := 'none';
help::pkg.display.plotter.objs.pgplotmanager.m.plotxy.a.ytitle.a := 'string';
help::pkg.display.plotter.objs.pgplotmanager.m.plotxy.a.title := [=];
help::pkg.display.plotter.objs.pgplotmanager.m.plotxy.a.title.d := 'plot title (ignored if newplot is F)';
help::pkg.display.plotter.objs.pgplotmanager.m.plotxy.a.title.def := 'none';
help::pkg.display.plotter.objs.pgplotmanager.m.plotxy.a.title.a := 'string';
help::pkg.display.plotter.objs.pgplotmanager.m.plotxy.a.linecolor := [=];
help::pkg.display.plotter.objs.pgplotmanager.m.plotxy.a.linecolor.d := 'color index for lines or points';
help::pkg.display.plotter.objs.pgplotmanager.m.plotxy.a.linecolor.def := '2';
help::pkg.display.plotter.objs.pgplotmanager.m.plotxy.a.linecolor.a := 'integer';
help::pkg.display.plotter.objs.pgplotmanager.m.plotxy.a.ptsymbol := [=];
help::pkg.display.plotter.objs.pgplotmanager.m.plotxy.a.ptsymbol.d := 'symbol index (used if plotlines=F)';
help::pkg.display.plotter.objs.pgplotmanager.m.plotxy.a.ptsymbol.def := '2';
help::pkg.display.plotter.objs.pgplotmanager.m.plotxy.a.ptsymbol.a := 'integer';
help::pkg.display.plotter.objs.pgplotmanager.m.plotxy.a.mask := [=];
help::pkg.display.plotter.objs.pgplotmanager.m.plotxy.a.mask.d := 'mask for eliminating bad data points (T for good data,  F for masked data)';
help::pkg.display.plotter.objs.pgplotmanager.m.plotxy.a.mask.def := 'none';
help::pkg.display.plotter.objs.pgplotmanager.m.plotxy.a.mask.a := 'boolean array';
help::pkg.display.plotter.objs.pgplotmanager.m.plotxy.s := 'plotxy(x, y, plotlines, newplot, xtitle, ytitle, title, linecolor, ptsymbol, mask)';
help::pkg.display.plotter.objs.pgplotmanager.m.maskline := [=];
help::pkg.display.plotter.objs.pgplotmanager.m.maskline.d := 'Draw line segments based on input vectors and a mask';
help::pkg.display.plotter.objs.pgplotmanager.m.maskline.a.x := [=];
help::pkg.display.plotter.objs.pgplotmanager.m.maskline.a.x.d := 'X values';
help::pkg.display.plotter.objs.pgplotmanager.m.maskline.a.x.def := '';
help::pkg.display.plotter.objs.pgplotmanager.m.maskline.a.x.a := 'non-complex numeric array';
help::pkg.display.plotter.objs.pgplotmanager.m.maskline.a.y := [=];
help::pkg.display.plotter.objs.pgplotmanager.m.maskline.a.y.d := 'y values';
help::pkg.display.plotter.objs.pgplotmanager.m.maskline.a.y.def := '';
help::pkg.display.plotter.objs.pgplotmanager.m.maskline.a.y.a := 'non-complex numeric array';
help::pkg.display.plotter.objs.pgplotmanager.m.maskline.a.mask := [=];
help::pkg.display.plotter.objs.pgplotmanager.m.maskline.a.mask.d := 'mask for eliminating bad data points (T for good data, F for masked data)';
help::pkg.display.plotter.objs.pgplotmanager.m.maskline.a.mask.def := 'none';
help::pkg.display.plotter.objs.pgplotmanager.m.maskline.a.mask.a := 'boolean array';
help::pkg.display.plotter.objs.pgplotmanager.m.maskline.a.decimate := [=];
help::pkg.display.plotter.objs.pgplotmanager.m.maskline.a.decimate.d := 'Number of segments to decimate into';
help::pkg.display.plotter.objs.pgplotmanager.m.maskline.a.decimate.def := '10';
help::pkg.display.plotter.objs.pgplotmanager.m.maskline.a.decimate.a := 'Integer';
help::pkg.display.plotter.objs.pgplotmanager.m.maskline.s := 'maskline(x, y, mask, decimate)';
help::pkg.display.plotter.objs.pgplotmanager.m.clear := [=];
help::pkg.display.plotter.objs.pgplotmanager.m.clear.d := 'empty the display list';
help::pkg.display.plotter.objs.pgplotmanager.m.clear.s := 'clear()';
help::pkg.display.plotter.objs.pgplotmanager.m.settings := [=];
help::pkg.display.plotter.objs.pgplotmanager.m.settings.d := 'Set many PGPLOT attributes at once';
help::pkg.display.plotter.objs.pgplotmanager.m.settings.s := 'settings()';
help::pkg.display.plotter.objs.pgplotmanager.m.lastchange := [=];
help::pkg.display.plotter.objs.pgplotmanager.m.lastchange.d := 'Version of the last change';
help::pkg.display.plotter.objs.pgplotmanager.m.lastchange.s := 'lastchange()';
help::pkg.display.plotter.objs.pgplotmanager.m.addredrawfunction := [=];
help::pkg.display.plotter.objs.pgplotmanager.m.addredrawfunction.d := 'Add a function to redraw a command in the displaylist';
help::pkg.display.plotter.objs.pgplotmanager.m.addredrawfunction.a.name := [=];
help::pkg.display.plotter.objs.pgplotmanager.m.addredrawfunction.a.name.d := 'name of the draw function';
help::pkg.display.plotter.objs.pgplotmanager.m.addredrawfunction.a.name.def := '';
help::pkg.display.plotter.objs.pgplotmanager.m.addredrawfunction.a.name.a := 'string';
help::pkg.display.plotter.objs.pgplotmanager.m.addredrawfunction.a.redrawfunction := [=];
help::pkg.display.plotter.objs.pgplotmanager.m.addredrawfunction.a.redrawfunction.d := 'function to redraw a command from the displaylist';
help::pkg.display.plotter.objs.pgplotmanager.m.addredrawfunction.a.redrawfunction.def := '';
help::pkg.display.plotter.objs.pgplotmanager.m.addredrawfunction.a.redrawfunction.a := 'function';
help::pkg.display.plotter.objs.pgplotmanager.m.addredrawfunction.s := 'addredrawfunction(name, redrawfunction)';
help::pkg.display.plotter.objs.pgplotwidget := [=];
help::pkg.display.plotter.objs.pgplotwidget.m := [=];
help::pkg.display.plotter.objs.pgplotwidget.c := [=];
help::pkg.display.plotter.objs.pgplotwidget.d := 'tool used in application development to embed a pgplot canvas into some GUI';
help::pkg.display.plotter.objs.pgplotwidget.c.pgplotwidget := [=];
help::pkg.display.plotter.objs.pgplotwidget.c.pgplotwidget.d := 'Create a pgplot widget in a supplied frame';
help::pkg.display.plotter.objs.pgplotwidget.c.pgplotwidget.a.parentframe := [=];
help::pkg.display.plotter.objs.pgplotwidget.c.pgplotwidget.a.parentframe.d := 'frame to attach to';
help::pkg.display.plotter.objs.pgplotwidget.c.pgplotwidget.a.parentframe.def := '';
help::pkg.display.plotter.objs.pgplotwidget.c.pgplotwidget.a.parentframe.a := 'frame';
help::pkg.display.plotter.objs.pgplotwidget.c.pgplotwidget.a.size := [=];
help::pkg.display.plotter.objs.pgplotwidget.c.pgplotwidget.a.size.d := 'Size in pixels for the drawing area';
help::pkg.display.plotter.objs.pgplotwidget.c.pgplotwidget.a.size.def := '[600,450]';
help::pkg.display.plotter.objs.pgplotwidget.c.pgplotwidget.a.size.a := 'integer[2]';
help::pkg.display.plotter.objs.pgplotwidget.c.pgplotwidget.a.foreground := [=];
help::pkg.display.plotter.objs.pgplotwidget.c.pgplotwidget.a.foreground.d := 'Foreground colour';
help::pkg.display.plotter.objs.pgplotwidget.c.pgplotwidget.a.foreground.def := 'white';
help::pkg.display.plotter.objs.pgplotwidget.c.pgplotwidget.a.foreground.a := 'string (valid colour name';
help::pkg.display.plotter.objs.pgplotwidget.c.pgplotwidget.a.background := [=];
help::pkg.display.plotter.objs.pgplotwidget.c.pgplotwidget.a.background.d := 'Background colour';
help::pkg.display.plotter.objs.pgplotwidget.c.pgplotwidget.a.background.def := 'black';
help::pkg.display.plotter.objs.pgplotwidget.c.pgplotwidget.a.background.a := 'string (valid colour name)';
help::pkg.display.plotter.objs.pgplotwidget.c.pgplotwidget.a.padx := [=];
help::pkg.display.plotter.objs.pgplotwidget.c.pgplotwidget.a.padx.d := 'x border padding in pixels';
help::pkg.display.plotter.objs.pgplotwidget.c.pgplotwidget.a.padx.def := '2';
help::pkg.display.plotter.objs.pgplotwidget.c.pgplotwidget.a.padx.a := 'float';
help::pkg.display.plotter.objs.pgplotwidget.c.pgplotwidget.a.pady := [=];
help::pkg.display.plotter.objs.pgplotwidget.c.pgplotwidget.a.pady.d := 'y border padding in pixels';
help::pkg.display.plotter.objs.pgplotwidget.c.pgplotwidget.a.pady.def := '2';
help::pkg.display.plotter.objs.pgplotwidget.c.pgplotwidget.a.pady.a := 'float';
help::pkg.display.plotter.objs.pgplotwidget.c.pgplotwidget.a.mincolors := [=];
help::pkg.display.plotter.objs.pgplotwidget.c.pgplotwidget.a.mincolors.d := 'Minimum number of colors we require';
help::pkg.display.plotter.objs.pgplotwidget.c.pgplotwidget.a.mincolors.def := '2';
help::pkg.display.plotter.objs.pgplotwidget.c.pgplotwidget.a.mincolors.a := 'integer';
help::pkg.display.plotter.objs.pgplotwidget.c.pgplotwidget.a.maxcolors := [=];
help::pkg.display.plotter.objs.pgplotwidget.c.pgplotwidget.a.maxcolors.d := 'Maximum number of colors we will take';
help::pkg.display.plotter.objs.pgplotwidget.c.pgplotwidget.a.maxcolors.def := '100';
help::pkg.display.plotter.objs.pgplotwidget.c.pgplotwidget.a.maxcolors.a := 'integer';
help::pkg.display.plotter.objs.pgplotwidget.c.pgplotwidget.a.havemessages := [=];
help::pkg.display.plotter.objs.pgplotwidget.c.pgplotwidget.a.havemessages.d := 'Display messages on the screen?';
help::pkg.display.plotter.objs.pgplotwidget.c.pgplotwidget.a.havemessages.def := 'T';
help::pkg.display.plotter.objs.pgplotwidget.c.pgplotwidget.a.havemessages.a := 'boolean';
help::pkg.display.plotter.objs.pgplotwidget.c.pgplotwidget.a.widgetset := [=];
help::pkg.display.plotter.objs.pgplotwidget.c.pgplotwidget.a.widgetset.d := 'The widgetset to use';
help::pkg.display.plotter.objs.pgplotwidget.c.pgplotwidget.a.widgetset.def := 'dws';
help::pkg.display.plotter.objs.pgplotwidget.c.pgplotwidget.a.widgetset.a := 'A widgetserver tool';
help::pkg.display.plotter.objs.pgplotwidget.c.pgplotwidget.s := 'pgplotwidget(parentframe, size, foreground, background, padx, pady, mincolors, maxcolors, havemessages, widgetset)';
help::pkg.display.plotter.objs.pgplotwidget.m.plotxy := [=];
help::pkg.display.plotter.objs.pgplotwidget.m.plotxy.d := 'Plot X,Y vectors as lines or points with auto-scaling';
help::pkg.display.plotter.objs.pgplotwidget.m.plotxy.a.x := [=];
help::pkg.display.plotter.objs.pgplotwidget.m.plotxy.a.x.d := 'X values';
help::pkg.display.plotter.objs.pgplotwidget.m.plotxy.a.x.def := '';
help::pkg.display.plotter.objs.pgplotwidget.m.plotxy.a.x.a := 'non-complex numeric array';
help::pkg.display.plotter.objs.pgplotwidget.m.plotxy.a.y := [=];
help::pkg.display.plotter.objs.pgplotwidget.m.plotxy.a.y.d := 'y values';
help::pkg.display.plotter.objs.pgplotwidget.m.plotxy.a.y.def := '';
help::pkg.display.plotter.objs.pgplotwidget.m.plotxy.a.y.a := 'non-complex numeric array';
help::pkg.display.plotter.objs.pgplotwidget.m.plotxy.a.plotlines := [=];
help::pkg.display.plotter.objs.pgplotwidget.m.plotxy.a.plotlines.d := 'Plot lines (T) or points (F)';
help::pkg.display.plotter.objs.pgplotwidget.m.plotxy.a.plotlines.def := 'T';
help::pkg.display.plotter.objs.pgplotwidget.m.plotxy.a.plotlines.a := 'boolean';
help::pkg.display.plotter.objs.pgplotwidget.m.plotxy.a.newplot := [=];
help::pkg.display.plotter.objs.pgplotwidget.m.plotxy.a.newplot.d := 'Start a new plot (T) or overplot (F)';
help::pkg.display.plotter.objs.pgplotwidget.m.plotxy.a.newplot.def := 'T';
help::pkg.display.plotter.objs.pgplotwidget.m.plotxy.a.newplot.a := 'boolean';
help::pkg.display.plotter.objs.pgplotwidget.m.plotxy.a.xtitle := [=];
help::pkg.display.plotter.objs.pgplotwidget.m.plotxy.a.xtitle.d := 'x axis title (ignored if newplot is F)';
help::pkg.display.plotter.objs.pgplotwidget.m.plotxy.a.xtitle.def := 'none';
help::pkg.display.plotter.objs.pgplotwidget.m.plotxy.a.xtitle.a := 'string';
help::pkg.display.plotter.objs.pgplotwidget.m.plotxy.a.ytitle := [=];
help::pkg.display.plotter.objs.pgplotwidget.m.plotxy.a.ytitle.d := 'y axis title (ignored if newplot is F)';
help::pkg.display.plotter.objs.pgplotwidget.m.plotxy.a.ytitle.def := 'none';
help::pkg.display.plotter.objs.pgplotwidget.m.plotxy.a.ytitle.a := 'string';
help::pkg.display.plotter.objs.pgplotwidget.m.plotxy.a.title := [=];
help::pkg.display.plotter.objs.pgplotwidget.m.plotxy.a.title.d := 'plot title (ignored if newplot is F)';
help::pkg.display.plotter.objs.pgplotwidget.m.plotxy.a.title.def := 'none';
help::pkg.display.plotter.objs.pgplotwidget.m.plotxy.a.title.a := 'string';
help::pkg.display.plotter.objs.pgplotwidget.m.plotxy.a.linecolor := [=];
help::pkg.display.plotter.objs.pgplotwidget.m.plotxy.a.linecolor.d := 'color index for lines or points';
help::pkg.display.plotter.objs.pgplotwidget.m.plotxy.a.linecolor.def := '2';
help::pkg.display.plotter.objs.pgplotwidget.m.plotxy.a.linecolor.a := 'integer';
help::pkg.display.plotter.objs.pgplotwidget.m.plotxy.a.ptsymbol := [=];
help::pkg.display.plotter.objs.pgplotwidget.m.plotxy.a.ptsymbol.d := 'symbol index (used if plotlines=F)';
help::pkg.display.plotter.objs.pgplotwidget.m.plotxy.a.ptsymbol.def := '2';
help::pkg.display.plotter.objs.pgplotwidget.m.plotxy.a.ptsymbol.a := 'integer';
help::pkg.display.plotter.objs.pgplotwidget.m.plotxy.a.mask := [=];
help::pkg.display.plotter.objs.pgplotwidget.m.plotxy.a.mask.d := 'mask for eliminating bad data points (T for good data,  F for masked data)';
help::pkg.display.plotter.objs.pgplotwidget.m.plotxy.a.mask.def := 'none';
help::pkg.display.plotter.objs.pgplotwidget.m.plotxy.a.mask.a := 'boolean array';
help::pkg.display.plotter.objs.pgplotwidget.m.plotxy.s := 'plotxy(x, y, plotlines, newplot, xtitle, ytitle, title, linecolor, ptsymbol, mask)';
help::pkg.display.plotter.objs.pgplotwidget.m.maskline := [=];
help::pkg.display.plotter.objs.pgplotwidget.m.maskline.d := 'Draw line segments based on input vectors and a mask';
help::pkg.display.plotter.objs.pgplotwidget.m.maskline.a.x := [=];
help::pkg.display.plotter.objs.pgplotwidget.m.maskline.a.x.d := 'X values';
help::pkg.display.plotter.objs.pgplotwidget.m.maskline.a.x.def := '';
help::pkg.display.plotter.objs.pgplotwidget.m.maskline.a.x.a := 'non-complex numeric array';
help::pkg.display.plotter.objs.pgplotwidget.m.maskline.a.y := [=];
help::pkg.display.plotter.objs.pgplotwidget.m.maskline.a.y.d := 'y values';
help::pkg.display.plotter.objs.pgplotwidget.m.maskline.a.y.def := '';
help::pkg.display.plotter.objs.pgplotwidget.m.maskline.a.y.a := 'non-complex numeric array';
help::pkg.display.plotter.objs.pgplotwidget.m.maskline.a.mask := [=];
help::pkg.display.plotter.objs.pgplotwidget.m.maskline.a.mask.d := 'mask for eliminating bad data points (T for good data, F for masked data)';
help::pkg.display.plotter.objs.pgplotwidget.m.maskline.a.mask.def := 'No mask';
help::pkg.display.plotter.objs.pgplotwidget.m.maskline.a.mask.a := 'boolean array';
help::pkg.display.plotter.objs.pgplotwidget.m.maskline.a.decimate := [=];
help::pkg.display.plotter.objs.pgplotwidget.m.maskline.a.decimate.d := 'Number of segments to decimate into';
help::pkg.display.plotter.objs.pgplotwidget.m.maskline.a.decimate.def := '10';
help::pkg.display.plotter.objs.pgplotwidget.m.maskline.a.decimate.a := 'Integer';
help::pkg.display.plotter.objs.pgplotwidget.m.maskline.s := 'maskline(x, y, mask, decimate)';
help::pkg.display.plotter.objs.pgplotwidget.m.displaylist := [=];
help::pkg.display.plotter.objs.pgplotwidget.m.displaylist.d := 'Access the displaylist plot commands are kept in';
help::pkg.display.plotter.objs.pgplotwidget.m.displaylist.s := 'displaylist()';
help::pkg.display.plotter.objs.pgplotwidget.m.shortnametofullname := [=];
help::pkg.display.plotter.objs.pgplotwidget.m.shortnametofullname.d := 'Get a longer description for  pgplotwidget commands';
help::pkg.display.plotter.objs.pgplotwidget.m.shortnametofullname.s := 'shortnametofullname()';
help::pkg.display.plotter.objs.pgplotwidget.m.setcallback := [=];
help::pkg.display.plotter.objs.pgplotwidget.m.setcallback.d := 'set a function to be called for mouse or keyboard events';
help::pkg.display.plotter.objs.pgplotwidget.m.setcallback.a.name := [=];
help::pkg.display.plotter.objs.pgplotwidget.m.setcallback.a.name.d := 'events for which to call supply callback';
help::pkg.display.plotter.objs.pgplotwidget.m.setcallback.a.name.def := '';
help::pkg.display.plotter.objs.pgplotwidget.m.setcallback.a.name.a := 'motion,key,button,button[1-3],buttonup';
help::pkg.display.plotter.objs.pgplotwidget.m.setcallback.a.callback := [=];
help::pkg.display.plotter.objs.pgplotwidget.m.setcallback.a.callback.d := 'function to call on event';
help::pkg.display.plotter.objs.pgplotwidget.m.setcallback.a.callback.def := '';
help::pkg.display.plotter.objs.pgplotwidget.m.setcallback.a.callback.a := 'single argument function';
help::pkg.display.plotter.objs.pgplotwidget.m.setcallback.s := 'setcallback(name, callback)';
help::pkg.display.plotter.objs.pgplotwidget.m.deactivatecallback := [=];
help::pkg.display.plotter.objs.pgplotwidget.m.deactivatecallback.d := 'deactivate a callback';
help::pkg.display.plotter.objs.pgplotwidget.m.deactivatecallback.a.which := [=];
help::pkg.display.plotter.objs.pgplotwidget.m.deactivatecallback.a.which.d := 'callback index to remove';
help::pkg.display.plotter.objs.pgplotwidget.m.deactivatecallback.a.which.def := '';
help::pkg.display.plotter.objs.pgplotwidget.m.deactivatecallback.a.which.a := 'integer';
help::pkg.display.plotter.objs.pgplotwidget.m.deactivatecallback.s := 'deactivatecallback(which)';
help::pkg.display.plotter.objs.pgplotwidget.m.activatecallback := [=];
help::pkg.display.plotter.objs.pgplotwidget.m.activatecallback.d := 'activate a callback';
help::pkg.display.plotter.objs.pgplotwidget.m.activatecallback.a.which := [=];
help::pkg.display.plotter.objs.pgplotwidget.m.activatecallback.a.which.d := 'callback index to reactivate';
help::pkg.display.plotter.objs.pgplotwidget.m.activatecallback.a.which.def := '';
help::pkg.display.plotter.objs.pgplotwidget.m.activatecallback.a.which.a := 'integer';
help::pkg.display.plotter.objs.pgplotwidget.m.activatecallback.s := 'activatecallback(which)';
help::pkg.display.plotter.objs.pgplotwidget.m.getcallbacks := [=];
help::pkg.display.plotter.objs.pgplotwidget.m.getcallbacks.d := 'Recover callbacks';
help::pkg.display.plotter.objs.pgplotwidget.m.getcallbacks.s := 'getcallbacks()';
help::pkg.display.plotter.objs.pgplotwidget.m.record := [=];
help::pkg.display.plotter.objs.pgplotwidget.m.record.d := 'Save the drawing commands';
help::pkg.display.plotter.objs.pgplotwidget.m.record.a.newstate := [=];
help::pkg.display.plotter.objs.pgplotwidget.m.record.a.newstate.d := 'Record or not?';
help::pkg.display.plotter.objs.pgplotwidget.m.record.a.newstate.def := '';
help::pkg.display.plotter.objs.pgplotwidget.m.record.a.newstate.a := 'boolean';
help::pkg.display.plotter.objs.pgplotwidget.m.record.s := 'record(newstate)';
help::pkg.display.plotter.objs.pgplotwidget.m.recording := [=];
help::pkg.display.plotter.objs.pgplotwidget.m.recording.d := 'return whether plot commands are being saved';
help::pkg.display.plotter.objs.pgplotwidget.m.recording.s := 'recording()';
help::pkg.display.plotter.objs.pgplotwidget.m.canplay := [=];
help::pkg.display.plotter.objs.pgplotwidget.m.canplay.d := 'return whether a command can be executed';
help::pkg.display.plotter.objs.pgplotwidget.m.canplay.s := 'canplay()';
help::pkg.display.plotter.objs.pgplotwidget.m.play := [=];
help::pkg.display.plotter.objs.pgplotwidget.m.play.d := 'Execute a series of plot commands';
help::pkg.display.plotter.objs.pgplotwidget.m.play.a.commands := [=];
help::pkg.display.plotter.objs.pgplotwidget.m.play.a.commands.d := 'list of plot commands to execute';
help::pkg.display.plotter.objs.pgplotwidget.m.play.a.commands.def := '';
help::pkg.display.plotter.objs.pgplotwidget.m.play.a.commands.a := 'displaylist or record';
help::pkg.display.plotter.objs.pgplotwidget.m.play.a.record := [=];
help::pkg.display.plotter.objs.pgplotwidget.m.play.a.record.d := 'save commands in our internal displaylist?';
help::pkg.display.plotter.objs.pgplotwidget.m.play.a.record.def := '';
help::pkg.display.plotter.objs.pgplotwidget.m.play.a.record.a := 'boolean';
help::pkg.display.plotter.objs.pgplotwidget.m.play.s := 'play(commands, record)';
help::pkg.display.plotter.objs.pgplotwidget.m.postscript := [=];
help::pkg.display.plotter.objs.pgplotwidget.m.postscript.d := 'Save the plot as a PostScript file';
help::pkg.display.plotter.objs.pgplotwidget.m.postscript.a.file := [=];
help::pkg.display.plotter.objs.pgplotwidget.m.postscript.a.file.d := 'file name';
help::pkg.display.plotter.objs.pgplotwidget.m.postscript.a.file.def := 'aipsplot.ps';
help::pkg.display.plotter.objs.pgplotwidget.m.postscript.a.file.a := 'string';
help::pkg.display.plotter.objs.pgplotwidget.m.postscript.a.color := [=];
help::pkg.display.plotter.objs.pgplotwidget.m.postscript.a.color.d := 'write in color postscript?';
help::pkg.display.plotter.objs.pgplotwidget.m.postscript.a.color.def := 'T';
help::pkg.display.plotter.objs.pgplotwidget.m.postscript.a.color.a := 'boolean';
help::pkg.display.plotter.objs.pgplotwidget.m.postscript.a.landscape := [=];
help::pkg.display.plotter.objs.pgplotwidget.m.postscript.a.landscape.d := 'write landscape?';
help::pkg.display.plotter.objs.pgplotwidget.m.postscript.a.landscape.def := 'T';
help::pkg.display.plotter.objs.pgplotwidget.m.postscript.a.landscape.a := 'boolean';
help::pkg.display.plotter.objs.pgplotwidget.m.postscript.s := 'postscript(file, color, landscape)';
help::pkg.display.plotter.objs.pgplotwidget.m.plotfile := [=];
help::pkg.display.plotter.objs.pgplotwidget.m.plotfile.d := 'Save the plot in native format';
help::pkg.display.plotter.objs.pgplotwidget.m.plotfile.a.file := [=];
help::pkg.display.plotter.objs.pgplotwidget.m.plotfile.a.file.d := 'file name';
help::pkg.display.plotter.objs.pgplotwidget.m.plotfile.a.file.def := 'aips++plot.plot';
help::pkg.display.plotter.objs.pgplotwidget.m.plotfile.a.file.a := 'string';
help::pkg.display.plotter.objs.pgplotwidget.m.plotfile.s := 'plotfile(file)';
help::pkg.display.plotter.objs.pgplotwidget.m.restore := [=];
help::pkg.display.plotter.objs.pgplotwidget.m.restore.d := 'Retrieve a plot';
help::pkg.display.plotter.objs.pgplotwidget.m.restore.a.file := [=];
help::pkg.display.plotter.objs.pgplotwidget.m.restore.a.file.d := 'file name';
help::pkg.display.plotter.objs.pgplotwidget.m.restore.a.file.def := 'aips++plot.plot';
help::pkg.display.plotter.objs.pgplotwidget.m.restore.a.file.a := 'string';
help::pkg.display.plotter.objs.pgplotwidget.m.restore.s := 'restore(file)';
help::pkg.display.plotter.objs.pgplotwidget.m.refresh := [=];
help::pkg.display.plotter.objs.pgplotwidget.m.refresh.d := 'replay the display list';
help::pkg.display.plotter.objs.pgplotwidget.m.refresh.s := 'refresh()';
help::pkg.display.plotter.objs.pgplotwidget.m.resetplotnumber := [=];
help::pkg.display.plotter.objs.pgplotwidget.m.resetplotnumber.d := 'Reset internal plot number counter to 0';
help::pkg.display.plotter.objs.pgplotwidget.m.resetplotnumber.s := 'resetplotnumber()';
help::pkg.display.plotter.objs.pgplotwidget.m.size := [=];
help::pkg.display.plotter.objs.pgplotwidget.m.size.d := 'size in pixels of the pgplotwidget';
help::pkg.display.plotter.objs.pgplotwidget.m.size.s := 'size()';
help::pkg.display.plotter.objs.pgplotwidget.m.clear := [=];
help::pkg.display.plotter.objs.pgplotwidget.m.clear.d := 'empty the display list';
help::pkg.display.plotter.objs.pgplotwidget.m.clear.s := 'clear()';
help::pkg.display.plotter.objs.pgplotwidget.m.message := [=];
help::pkg.display.plotter.objs.pgplotwidget.m.message.d := 'write in the message line';
help::pkg.display.plotter.objs.pgplotwidget.m.message.a.message := [=];
help::pkg.display.plotter.objs.pgplotwidget.m.message.a.message.d := 'message to write';
help::pkg.display.plotter.objs.pgplotwidget.m.message.a.message.def := '';
help::pkg.display.plotter.objs.pgplotwidget.m.message.a.message.a := 'string';
help::pkg.display.plotter.objs.pgplotwidget.m.message.s := 'message(message)';
help::pkg.display.plotter.objs.pgplotwidget.m.settings := [=];
help::pkg.display.plotter.objs.pgplotwidget.m.settings.d := 'Set many PGPLOT attributes at once';
help::pkg.display.plotter.objs.pgplotwidget.m.settings.s := 'settings()';
help::pkg.display.plotter.objs.pgplotwidget.m.cursor := [=];
help::pkg.display.plotter.objs.pgplotwidget.m.cursor.d := 'Set the cursor';
help::pkg.display.plotter.objs.pgplotwidget.m.cursor.s := 'cursor()';
help::pkg.display.plotter.objs.pgplotwidget.m.lastchange := [=];
help::pkg.display.plotter.objs.pgplotwidget.m.lastchange.d := 'Version of the last change';
help::pkg.display.plotter.objs.pgplotwidget.m.lastchange.s := 'lastchange()';
help::pkg.display.plotter.objs.pgplotwidget.m.curs := [=];
help::pkg.display.plotter.objs.pgplotwidget.m.curs.d := 'Get a key and position';
help::pkg.display.plotter.objs.pgplotwidget.m.curs.a.x := [=];
help::pkg.display.plotter.objs.pgplotwidget.m.curs.a.x.d := 'estimated X position';
help::pkg.display.plotter.objs.pgplotwidget.m.curs.a.x.def := '0';
help::pkg.display.plotter.objs.pgplotwidget.m.curs.a.x.a := 'float';
help::pkg.display.plotter.objs.pgplotwidget.m.curs.a.y := [=];
help::pkg.display.plotter.objs.pgplotwidget.m.curs.a.y.d := 'estimated Y position';
help::pkg.display.plotter.objs.pgplotwidget.m.curs.a.y.def := '0';
help::pkg.display.plotter.objs.pgplotwidget.m.curs.a.y.a := 'float';
help::pkg.display.plotter.objs.pgplotwidget.m.curs.s := 'curs(x, y)';
help::pkg.display.plotter.objs.pgplotwidget.m.addredrawfunction := [=];
help::pkg.display.plotter.objs.pgplotwidget.m.addredrawfunction.d := 'Add a function to redraw a command in the displaylist';
help::pkg.display.plotter.objs.pgplotwidget.m.addredrawfunction.a.name := [=];
help::pkg.display.plotter.objs.pgplotwidget.m.addredrawfunction.a.name.d := 'name of the draw function';
help::pkg.display.plotter.objs.pgplotwidget.m.addredrawfunction.a.name.def := '';
help::pkg.display.plotter.objs.pgplotwidget.m.addredrawfunction.a.name.a := 'string';
help::pkg.display.plotter.objs.pgplotwidget.m.addredrawfunction.a.redrawfunction := [=];
help::pkg.display.plotter.objs.pgplotwidget.m.addredrawfunction.a.redrawfunction.d := 'function to redraw a command from the displaylist';
help::pkg.display.plotter.objs.pgplotwidget.m.addredrawfunction.a.redrawfunction.def := '';
help::pkg.display.plotter.objs.pgplotwidget.m.addredrawfunction.a.redrawfunction.a := 'function';
help::pkg.display.plotter.objs.pgplotwidget.m.addredrawfunction.s := 'addredrawfunction(name, redrawfunction)';
help::pkg.display.plotter.objs.pgplotwidget.m.done := [=];
help::pkg.display.plotter.objs.pgplotwidget.m.done.d := 'destroy the widget, release resources';
help::pkg.display.plotter.objs.pgplotwidget.m.done.s := 'done()';
help::pkg.display.plotter.objs.pgplotter := [=];
help::pkg.display.plotter.objs.pgplotter.m := [=];
help::pkg.display.plotter.objs.pgplotter.c := [=];
help::pkg.display.plotter.objs.pgplotter.d := 'stand alone pgplotter tool';
help::pkg.display.plotter.objs.pgplotter.c.pgplotter := [=];
help::pkg.display.plotter.objs.pgplotter.c.pgplotter.d := 'Create a pgplotter tool in standalone GUI';
help::pkg.display.plotter.objs.pgplotter.c.pgplotter.a.plotfile := [=];
help::pkg.display.plotter.objs.pgplotter.c.pgplotter.a.plotfile.d := 'Name of the plot file to attach to';
help::pkg.display.plotter.objs.pgplotter.c.pgplotter.a.plotfile.def := 'aips++plot.plot';
help::pkg.display.plotter.objs.pgplotter.c.pgplotter.a.plotfile.a := 'string';
help::pkg.display.plotter.objs.pgplotter.c.pgplotter.a.size := [=];
help::pkg.display.plotter.objs.pgplotter.c.pgplotter.a.size.d := 'Size in pixels for the drawing area';
help::pkg.display.plotter.objs.pgplotter.c.pgplotter.a.size.def := '[600,450]';
help::pkg.display.plotter.objs.pgplotter.c.pgplotter.a.size.a := 'integer[2]';
help::pkg.display.plotter.objs.pgplotter.c.pgplotter.a.foreground := [=];
help::pkg.display.plotter.objs.pgplotter.c.pgplotter.a.foreground.d := 'Foreground colour';
help::pkg.display.plotter.objs.pgplotter.c.pgplotter.a.foreground.def := 'white';
help::pkg.display.plotter.objs.pgplotter.c.pgplotter.a.foreground.a := 'string (valid colour name';
help::pkg.display.plotter.objs.pgplotter.c.pgplotter.a.background := [=];
help::pkg.display.plotter.objs.pgplotter.c.pgplotter.a.background.d := 'Background colour';
help::pkg.display.plotter.objs.pgplotter.c.pgplotter.a.background.def := 'black';
help::pkg.display.plotter.objs.pgplotter.c.pgplotter.a.background.a := 'string (valid colour name)';
help::pkg.display.plotter.objs.pgplotter.c.pgplotter.a.mincolors := [=];
help::pkg.display.plotter.objs.pgplotter.c.pgplotter.a.mincolors.d := 'Minimum number of colors we require';
help::pkg.display.plotter.objs.pgplotter.c.pgplotter.a.mincolors.def := '2';
help::pkg.display.plotter.objs.pgplotter.c.pgplotter.a.mincolors.a := 'integer';
help::pkg.display.plotter.objs.pgplotter.c.pgplotter.a.maxcolors := [=];
help::pkg.display.plotter.objs.pgplotter.c.pgplotter.a.maxcolors.d := 'Maximum number of colors we will take';
help::pkg.display.plotter.objs.pgplotter.c.pgplotter.a.maxcolors.def := '100';
help::pkg.display.plotter.objs.pgplotter.c.pgplotter.a.maxcolors.a := 'integer';
help::pkg.display.plotter.objs.pgplotter.c.pgplotter.s := 'pgplotter(plotfile, size, foreground, background, mincolors, maxcolors)';
help::pkg.display.plotter.objs.pgplotter.m.commandgui := [=];
help::pkg.display.plotter.objs.pgplotter.m.commandgui.d := 'Create the ``add commands   GUI';
help::pkg.display.plotter.objs.pgplotter.m.commandgui.s := 'commandgui()';
help::pkg.display.plotter.objs.pgplotter.m.editgui := [=];
help::pkg.display.plotter.objs.pgplotter.m.editgui.d := 'Create the ``edit commands   GUI';
help::pkg.display.plotter.objs.pgplotter.m.editgui.s := 'editgui()';
help::pkg.display.plotter.objs.pgplotter.m.addtool := [=];
help::pkg.display.plotter.objs.pgplotter.m.addtool.d := 'Add a tool to the Tools menu';
help::pkg.display.plotter.objs.pgplotter.m.addtool.a.name := [=];
help::pkg.display.plotter.objs.pgplotter.m.addtool.a.name.d := 'name of the tool';
help::pkg.display.plotter.objs.pgplotter.m.addtool.a.name.def := '';
help::pkg.display.plotter.objs.pgplotter.m.addtool.a.name.a := 'string';
help::pkg.display.plotter.objs.pgplotter.m.addtool.a.start := [=];
help::pkg.display.plotter.objs.pgplotter.m.addtool.a.start.d := 'function to call when the Tool GUI becomes visible';
help::pkg.display.plotter.objs.pgplotter.m.addtool.a.start.def := '';
help::pkg.display.plotter.objs.pgplotter.m.addtool.a.start.a := 'function';
help::pkg.display.plotter.objs.pgplotter.m.addtool.a.suspend := [=];
help::pkg.display.plotter.objs.pgplotter.m.addtool.a.suspend.d := 'function to call with the Tool GUI is dismissed';
help::pkg.display.plotter.objs.pgplotter.m.addtool.a.suspend.def := '';
help::pkg.display.plotter.objs.pgplotter.m.addtool.a.suspend.a := 'function';
help::pkg.display.plotter.objs.pgplotter.m.addtool.s := 'addtool(name, start, suspend)';
help::pkg.display.plotter.objs.pgplotter.m.tool := [=];
help::pkg.display.plotter.objs.pgplotter.m.tool.d := 'Show or hide a particular Tool';
help::pkg.display.plotter.objs.pgplotter.m.tool.a.name := [=];
help::pkg.display.plotter.objs.pgplotter.m.tool.a.name.d := 'name of the tool';
help::pkg.display.plotter.objs.pgplotter.m.tool.a.name.def := '';
help::pkg.display.plotter.objs.pgplotter.m.tool.a.name.a := 'string';
help::pkg.display.plotter.objs.pgplotter.m.tool.a.show := [=];
help::pkg.display.plotter.objs.pgplotter.m.tool.a.show.d := 'show or hide the tool';
help::pkg.display.plotter.objs.pgplotter.m.tool.a.show.def := 'T';
help::pkg.display.plotter.objs.pgplotter.m.tool.a.show.a := 'boolean';
help::pkg.display.plotter.objs.pgplotter.m.tool.s := 'tool(name, show)';
help::pkg.display.plotter.objs.pgplotter.m.busy := [=];
help::pkg.display.plotter.objs.pgplotter.m.busy.d := 'Set or unset the busy symbol to the mouse cursor';
help::pkg.display.plotter.objs.pgplotter.m.busy.a.isbusy := [=];
help::pkg.display.plotter.objs.pgplotter.m.busy.a.isbusy.d := 'Is the plotter busy?';
help::pkg.display.plotter.objs.pgplotter.m.busy.a.isbusy.def := 'T';
help::pkg.display.plotter.objs.pgplotter.m.busy.a.isbusy.a := 'boolean';
help::pkg.display.plotter.objs.pgplotter.m.busy.s := 'busy(isbusy)';
help::pkg.display.plotter.objs.pgplotter.m.demo := [=];
help::pkg.display.plotter.objs.pgplotter.m.demo.d := 'Demo set for PGPLOT';
help::pkg.display.plotter.objs.pgplotter.m.demo.s := 'demo()';
help::pkg.display.plotter.objs.pgplotter.m.done := [=];
help::pkg.display.plotter.objs.pgplotter.m.done.d := 'Close the pgplotter tool';
help::pkg.display.plotter.objs.pgplotter.m.done.s := 'done()';
help::pkg.display.plotter.objs.pgplotter.m.gui := [=];
help::pkg.display.plotter.objs.pgplotter.m.gui.d := 'Call back the plotter window';
help::pkg.display.plotter.objs.pgplotter.m.gui.s := 'gui()';
help::pkg.display.plotter.objs.pgplotter.m.screen := [=];
help::pkg.display.plotter.objs.pgplotter.m.screen.d := 'Dismiss the plotter window';
help::pkg.display.plotter.objs.pgplotter.m.screen.s := 'screen()';
help::pkg.display.plotter.objs.pgplotter.m.title := [=];
help::pkg.display.plotter.objs.pgplotter.m.title.d := 'Set the pgplotter window title';
help::pkg.display.plotter.objs.pgplotter.m.title.a.msg := [=];
help::pkg.display.plotter.objs.pgplotter.m.title.a.msg.d := 'Text of the new window title';
help::pkg.display.plotter.objs.pgplotter.m.title.a.msg.def := '';
help::pkg.display.plotter.objs.pgplotter.m.title.a.msg.a := 'string';
help::pkg.display.plotter.objs.pgplotter.m.title.s := 'title(msg)';
help::pkg.display.plotter.objs.pgplotter.m.userframe := [=];
help::pkg.display.plotter.objs.pgplotter.m.userframe.d := 'Return an internal user Glish/Tk frame';
help::pkg.display.plotter.objs.pgplotter.m.userframe.s := 'userframe()';
help::pkg.display.plotter.objs.pgplotter.m.ploty := [=];
help::pkg.display.plotter.objs.pgplotter.m.ploty.d := 'Plot Y vectors with auto-scaling';
help::pkg.display.plotter.objs.pgplotter.m.ploty.a.y := [=];
help::pkg.display.plotter.objs.pgplotter.m.ploty.a.y.d := 'A collection of Y vectors';
help::pkg.display.plotter.objs.pgplotter.m.ploty.a.y.def := '';
help::pkg.display.plotter.objs.pgplotter.m.ploty.a.y.a := 'float';
help::pkg.display.plotter.objs.pgplotter.m.ploty.a.xlab := [=];
help::pkg.display.plotter.objs.pgplotter.m.ploty.a.xlab.d := 'A label for the X axis';
help::pkg.display.plotter.objs.pgplotter.m.ploty.a.xlab.def := '';
help::pkg.display.plotter.objs.pgplotter.m.ploty.a.xlab.a := 'string';
help::pkg.display.plotter.objs.pgplotter.m.ploty.a.ylab := [=];
help::pkg.display.plotter.objs.pgplotter.m.ploty.a.ylab.d := 'A label for the Y axis';
help::pkg.display.plotter.objs.pgplotter.m.ploty.a.ylab.def := '';
help::pkg.display.plotter.objs.pgplotter.m.ploty.a.ylab.a := 'string';
help::pkg.display.plotter.objs.pgplotter.m.ploty.a.tlab := [=];
help::pkg.display.plotter.objs.pgplotter.m.ploty.a.tlab.d := 'A label for the plot title';
help::pkg.display.plotter.objs.pgplotter.m.ploty.a.tlab.def := '';
help::pkg.display.plotter.objs.pgplotter.m.ploty.a.tlab.a := 'string';
help::pkg.display.plotter.objs.pgplotter.m.ploty.a.plotlines := [=];
help::pkg.display.plotter.objs.pgplotter.m.ploty.a.plotlines.d := 'Toggle for plotting lines or points';
help::pkg.display.plotter.objs.pgplotter.m.ploty.a.plotlines.def := 'T (lines)';
help::pkg.display.plotter.objs.pgplotter.m.ploty.a.plotlines.a := 'Boolean';
help::pkg.display.plotter.objs.pgplotter.m.ploty.a.ptsymbol := [=];
help::pkg.display.plotter.objs.pgplotter.m.ploty.a.ptsymbol.d := 'Symbol ID';
help::pkg.display.plotter.objs.pgplotter.m.ploty.a.ptsymbol.def := '2';
help::pkg.display.plotter.objs.pgplotter.m.ploty.a.ptsymbol.a := 'integer';
help::pkg.display.plotter.objs.pgplotter.m.ploty.s := 'ploty(y, xlab, ylab, tlab, plotlines, ptsymbol)';
help::pkg.display.plotter.objs.pgplotter.m.plotxy1 := [=];
help::pkg.display.plotter.objs.pgplotter.m.plotxy1.d := 'Plot X and Y vectors with auto-scaling';
help::pkg.display.plotter.objs.pgplotter.m.plotxy1.a.x := [=];
help::pkg.display.plotter.objs.pgplotter.m.plotxy1.a.x.d := 'An X vector';
help::pkg.display.plotter.objs.pgplotter.m.plotxy1.a.x.def := '';
help::pkg.display.plotter.objs.pgplotter.m.plotxy1.a.x.a := 'float';
help::pkg.display.plotter.objs.pgplotter.m.plotxy1.a.y := [=];
help::pkg.display.plotter.objs.pgplotter.m.plotxy1.a.y.d := 'A collection of Y vectors';
help::pkg.display.plotter.objs.pgplotter.m.plotxy1.a.y.def := '';
help::pkg.display.plotter.objs.pgplotter.m.plotxy1.a.y.a := 'float';
help::pkg.display.plotter.objs.pgplotter.m.plotxy1.a.xlab := [=];
help::pkg.display.plotter.objs.pgplotter.m.plotxy1.a.xlab.d := 'A label for the X axis';
help::pkg.display.plotter.objs.pgplotter.m.plotxy1.a.xlab.def := '';
help::pkg.display.plotter.objs.pgplotter.m.plotxy1.a.xlab.a := 'string';
help::pkg.display.plotter.objs.pgplotter.m.plotxy1.a.ylab := [=];
help::pkg.display.plotter.objs.pgplotter.m.plotxy1.a.ylab.d := 'A label for the Y axis';
help::pkg.display.plotter.objs.pgplotter.m.plotxy1.a.ylab.def := '';
help::pkg.display.plotter.objs.pgplotter.m.plotxy1.a.ylab.a := 'string';
help::pkg.display.plotter.objs.pgplotter.m.plotxy1.a.tlab := [=];
help::pkg.display.plotter.objs.pgplotter.m.plotxy1.a.tlab.d := 'A label for the plot title';
help::pkg.display.plotter.objs.pgplotter.m.plotxy1.a.tlab.def := '';
help::pkg.display.plotter.objs.pgplotter.m.plotxy1.a.tlab.a := 'string';
help::pkg.display.plotter.objs.pgplotter.m.plotxy1.a.plotlines := [=];
help::pkg.display.plotter.objs.pgplotter.m.plotxy1.a.plotlines.d := 'Toggle for plotting lines or points';
help::pkg.display.plotter.objs.pgplotter.m.plotxy1.a.plotlines.def := 'T (lines)';
help::pkg.display.plotter.objs.pgplotter.m.plotxy1.a.plotlines.a := 'Boolean';
help::pkg.display.plotter.objs.pgplotter.m.plotxy1.a.ptsymbol := [=];
help::pkg.display.plotter.objs.pgplotter.m.plotxy1.a.ptsymbol.d := 'Symbol ID';
help::pkg.display.plotter.objs.pgplotter.m.plotxy1.a.ptsymbol.def := '2';
help::pkg.display.plotter.objs.pgplotter.m.plotxy1.a.ptsymbol.a := 'integer';
help::pkg.display.plotter.objs.pgplotter.m.plotxy1.s := 'plotxy1(x, y, xlab, ylab, tlab, plotlines, ptsymbol)';
help::pkg.display.plotter.objs.pgplotter.m.ploty2 := [=];
help::pkg.display.plotter.objs.pgplotter.m.ploty2.d := 'Plot Y vectors with auto-scaling using the right Y axis';
help::pkg.display.plotter.objs.pgplotter.m.ploty2.a.y := [=];
help::pkg.display.plotter.objs.pgplotter.m.ploty2.a.y.d := 'A collection of Y vectors';
help::pkg.display.plotter.objs.pgplotter.m.ploty2.a.y.def := '';
help::pkg.display.plotter.objs.pgplotter.m.ploty2.a.y.a := 'float';
help::pkg.display.plotter.objs.pgplotter.m.ploty2.a.xlab := [=];
help::pkg.display.plotter.objs.pgplotter.m.ploty2.a.xlab.d := 'A label for the X axis';
help::pkg.display.plotter.objs.pgplotter.m.ploty2.a.xlab.def := '';
help::pkg.display.plotter.objs.pgplotter.m.ploty2.a.xlab.a := 'string';
help::pkg.display.plotter.objs.pgplotter.m.ploty2.a.ylab := [=];
help::pkg.display.plotter.objs.pgplotter.m.ploty2.a.ylab.d := 'A label for the Y axis';
help::pkg.display.plotter.objs.pgplotter.m.ploty2.a.ylab.def := '';
help::pkg.display.plotter.objs.pgplotter.m.ploty2.a.ylab.a := 'string';
help::pkg.display.plotter.objs.pgplotter.m.ploty2.a.tlab := [=];
help::pkg.display.plotter.objs.pgplotter.m.ploty2.a.tlab.d := 'A label for the plot title';
help::pkg.display.plotter.objs.pgplotter.m.ploty2.a.tlab.def := '';
help::pkg.display.plotter.objs.pgplotter.m.ploty2.a.tlab.a := 'string';
help::pkg.display.plotter.objs.pgplotter.m.ploty2.a.plotlines := [=];
help::pkg.display.plotter.objs.pgplotter.m.ploty2.a.plotlines.d := 'Toggle for plotting lines or points';
help::pkg.display.plotter.objs.pgplotter.m.ploty2.a.plotlines.def := 'T (lines)';
help::pkg.display.plotter.objs.pgplotter.m.ploty2.a.plotlines.a := 'Boolean';
help::pkg.display.plotter.objs.pgplotter.m.ploty2.a.ptsymbol := [=];
help::pkg.display.plotter.objs.pgplotter.m.ploty2.a.ptsymbol.d := 'Symbol ID';
help::pkg.display.plotter.objs.pgplotter.m.ploty2.a.ptsymbol.def := '2';
help::pkg.display.plotter.objs.pgplotter.m.ploty2.a.ptsymbol.a := 'integer';
help::pkg.display.plotter.objs.pgplotter.m.ploty2.s := 'ploty2(y, xlab, ylab, tlab, plotlines, ptsymbol)';
help::pkg.display.plotter.objs.pgplotter.m.psprint := [=];
help::pkg.display.plotter.objs.pgplotter.m.psprint.d := 'Print out all of the plots in the display list';
help::pkg.display.plotter.objs.pgplotter.m.psprint.s := 'psprint()';
help::pkg.display.plotter.objs.pgplotter.m.psprinttofile := [=];
help::pkg.display.plotter.objs.pgplotter.m.psprinttofile.d := 'Print out all of the plots in the display list to the named file';
help::pkg.display.plotter.objs.pgplotter.m.psprinttofile.a.filename := [=];
help::pkg.display.plotter.objs.pgplotter.m.psprinttofile.a.filename.d := 'filename on disk to hold the plot session';
help::pkg.display.plotter.objs.pgplotter.m.psprinttofile.a.filename.def := '';
help::pkg.display.plotter.objs.pgplotter.m.psprinttofile.a.filename.a := 'string';
help::pkg.display.plotter.objs.pgplotter.m.psprinttofile.s := 'psprinttofile(filename)';
help::pkg.display.plotter.objs.pgplotter.m.plotxy2 := [=];
help::pkg.display.plotter.objs.pgplotter.m.plotxy2.d := 'Plot X and Y vectors with auto-scaling using the right and upper axes.';
help::pkg.display.plotter.objs.pgplotter.m.plotxy2.a.x := [=];
help::pkg.display.plotter.objs.pgplotter.m.plotxy2.a.x.d := 'An X vector';
help::pkg.display.plotter.objs.pgplotter.m.plotxy2.a.x.def := '';
help::pkg.display.plotter.objs.pgplotter.m.plotxy2.a.x.a := 'float';
help::pkg.display.plotter.objs.pgplotter.m.plotxy2.a.y := [=];
help::pkg.display.plotter.objs.pgplotter.m.plotxy2.a.y.d := 'A collection of Y vectors';
help::pkg.display.plotter.objs.pgplotter.m.plotxy2.a.y.def := '';
help::pkg.display.plotter.objs.pgplotter.m.plotxy2.a.y.a := 'float';
help::pkg.display.plotter.objs.pgplotter.m.plotxy2.a.xlab := [=];
help::pkg.display.plotter.objs.pgplotter.m.plotxy2.a.xlab.d := 'A label for the X axis';
help::pkg.display.plotter.objs.pgplotter.m.plotxy2.a.xlab.def := '';
help::pkg.display.plotter.objs.pgplotter.m.plotxy2.a.xlab.a := 'string';
help::pkg.display.plotter.objs.pgplotter.m.plotxy2.a.ylab := [=];
help::pkg.display.plotter.objs.pgplotter.m.plotxy2.a.ylab.d := 'A label for the Y axis';
help::pkg.display.plotter.objs.pgplotter.m.plotxy2.a.ylab.def := '';
help::pkg.display.plotter.objs.pgplotter.m.plotxy2.a.ylab.a := 'string';
help::pkg.display.plotter.objs.pgplotter.m.plotxy2.a.tlab := [=];
help::pkg.display.plotter.objs.pgplotter.m.plotxy2.a.tlab.d := 'A label for the plot title';
help::pkg.display.plotter.objs.pgplotter.m.plotxy2.a.tlab.def := '';
help::pkg.display.plotter.objs.pgplotter.m.plotxy2.a.tlab.a := 'string';
help::pkg.display.plotter.objs.pgplotter.m.plotxy2.a.plotlines := [=];
help::pkg.display.plotter.objs.pgplotter.m.plotxy2.a.plotlines.d := 'Toggle for plotting lines or points';
help::pkg.display.plotter.objs.pgplotter.m.plotxy2.a.plotlines.def := 'T (lines)';
help::pkg.display.plotter.objs.pgplotter.m.plotxy2.a.plotlines.a := 'Boolean';
help::pkg.display.plotter.objs.pgplotter.m.plotxy2.a.ptsymbol := [=];
help::pkg.display.plotter.objs.pgplotter.m.plotxy2.a.ptsymbol.d := 'Symbol ID';
help::pkg.display.plotter.objs.pgplotter.m.plotxy2.a.ptsymbol.def := '2';
help::pkg.display.plotter.objs.pgplotter.m.plotxy2.a.ptsymbol.a := 'integer';
help::pkg.display.plotter.objs.pgplotter.m.plotxy2.s := 'plotxy2(x, y, xlab, ylab, tlab, plotlines, ptsymbol)';
help::pkg.display.plotter.objs.pgplotter.m.timey := [=];
help::pkg.display.plotter.objs.pgplotter.m.timey.d := 'Plot Y vectors versus time with auto-scaling';
help::pkg.display.plotter.objs.pgplotter.m.timey.a.x := [=];
help::pkg.display.plotter.objs.pgplotter.m.timey.a.x.d := 'A vector of times';
help::pkg.display.plotter.objs.pgplotter.m.timey.a.x.def := '';
help::pkg.display.plotter.objs.pgplotter.m.timey.a.x.a := 'float';
help::pkg.display.plotter.objs.pgplotter.m.timey.a.y := [=];
help::pkg.display.plotter.objs.pgplotter.m.timey.a.y.d := 'A collection of Y vectors';
help::pkg.display.plotter.objs.pgplotter.m.timey.a.y.def := '';
help::pkg.display.plotter.objs.pgplotter.m.timey.a.y.a := 'float';
help::pkg.display.plotter.objs.pgplotter.m.timey.a.xlab := [=];
help::pkg.display.plotter.objs.pgplotter.m.timey.a.xlab.d := 'A label for the X axis';
help::pkg.display.plotter.objs.pgplotter.m.timey.a.xlab.def := '';
help::pkg.display.plotter.objs.pgplotter.m.timey.a.xlab.a := 'string';
help::pkg.display.plotter.objs.pgplotter.m.timey.a.ylab := [=];
help::pkg.display.plotter.objs.pgplotter.m.timey.a.ylab.d := 'A label for the Y axis';
help::pkg.display.plotter.objs.pgplotter.m.timey.a.ylab.def := '';
help::pkg.display.plotter.objs.pgplotter.m.timey.a.ylab.a := 'string';
help::pkg.display.plotter.objs.pgplotter.m.timey.a.tlab := [=];
help::pkg.display.plotter.objs.pgplotter.m.timey.a.tlab.d := 'A label for the plot title';
help::pkg.display.plotter.objs.pgplotter.m.timey.a.tlab.def := '';
help::pkg.display.plotter.objs.pgplotter.m.timey.a.tlab.a := 'string';
help::pkg.display.plotter.objs.pgplotter.m.timey.a.plotlines := [=];
help::pkg.display.plotter.objs.pgplotter.m.timey.a.plotlines.d := 'Toggle for plotting lines or points';
help::pkg.display.plotter.objs.pgplotter.m.timey.a.plotlines.def := 'T (lines)';
help::pkg.display.plotter.objs.pgplotter.m.timey.a.plotlines.a := 'Boolean';
help::pkg.display.plotter.objs.pgplotter.m.timey.a.ptsymbol := [=];
help::pkg.display.plotter.objs.pgplotter.m.timey.a.ptsymbol.d := 'Symbol ID';
help::pkg.display.plotter.objs.pgplotter.m.timey.a.ptsymbol.def := '2';
help::pkg.display.plotter.objs.pgplotter.m.timey.a.ptsymbol.a := 'integer';
help::pkg.display.plotter.objs.pgplotter.m.timey.s := 'timey(x, y, xlab, ylab, tlab, plotlines, ptsymbol)';
help::pkg.display.plotter.objs.pgplotter.m.timey2 := [=];
help::pkg.display.plotter.objs.pgplotter.m.timey2.d := 'Plot Y vectors versus time with auto-scaling against the right and upper axes.';
help::pkg.display.plotter.objs.pgplotter.m.timey2.a.x := [=];
help::pkg.display.plotter.objs.pgplotter.m.timey2.a.x.d := 'An vector of times';
help::pkg.display.plotter.objs.pgplotter.m.timey2.a.x.def := '';
help::pkg.display.plotter.objs.pgplotter.m.timey2.a.x.a := 'float';
help::pkg.display.plotter.objs.pgplotter.m.timey2.a.y := [=];
help::pkg.display.plotter.objs.pgplotter.m.timey2.a.y.d := 'A collection of Y vectors';
help::pkg.display.plotter.objs.pgplotter.m.timey2.a.y.def := '';
help::pkg.display.plotter.objs.pgplotter.m.timey2.a.y.a := 'float';
help::pkg.display.plotter.objs.pgplotter.m.timey2.a.xlab := [=];
help::pkg.display.plotter.objs.pgplotter.m.timey2.a.xlab.d := 'A label for the X axis';
help::pkg.display.plotter.objs.pgplotter.m.timey2.a.xlab.def := '';
help::pkg.display.plotter.objs.pgplotter.m.timey2.a.xlab.a := 'string';
help::pkg.display.plotter.objs.pgplotter.m.timey2.a.ylab := [=];
help::pkg.display.plotter.objs.pgplotter.m.timey2.a.ylab.d := 'A label for the Y axis';
help::pkg.display.plotter.objs.pgplotter.m.timey2.a.ylab.def := '';
help::pkg.display.plotter.objs.pgplotter.m.timey2.a.ylab.a := 'string';
help::pkg.display.plotter.objs.pgplotter.m.timey2.a.tlab := [=];
help::pkg.display.plotter.objs.pgplotter.m.timey2.a.tlab.d := 'A label for the plot title';
help::pkg.display.plotter.objs.pgplotter.m.timey2.a.tlab.def := '';
help::pkg.display.plotter.objs.pgplotter.m.timey2.a.tlab.a := 'string';
help::pkg.display.plotter.objs.pgplotter.m.timey2.a.plotlines := [=];
help::pkg.display.plotter.objs.pgplotter.m.timey2.a.plotlines.d := 'Toggle for plotting lines or points';
help::pkg.display.plotter.objs.pgplotter.m.timey2.a.plotlines.def := 'T (lines)';
help::pkg.display.plotter.objs.pgplotter.m.timey2.a.plotlines.a := 'Boolean';
help::pkg.display.plotter.objs.pgplotter.m.timey2.a.ptsymbol := [=];
help::pkg.display.plotter.objs.pgplotter.m.timey2.a.ptsymbol.d := 'Symbol ID';
help::pkg.display.plotter.objs.pgplotter.m.timey2.a.ptsymbol.def := '2';
help::pkg.display.plotter.objs.pgplotter.m.timey2.a.ptsymbol.a := 'integer';
help::pkg.display.plotter.objs.pgplotter.m.timey2.s := 'timey2(x, y, xlab, ylab, tlab, plotlines, ptsymbol)';
help::pkg.display.plotter.objs.pgplotter.m.type := [=];
help::pkg.display.plotter.objs.pgplotter.m.type.d := 'Return the type of object, in this case "pgplotter". This function is necessary for the toolmanager';
help::pkg.display.plotter.objs.pgplotter.m.type.s := 'type()';
help::pkg.display.plotter.objs.pgplotter.m.setxscale := [=];
help::pkg.display.plotter.objs.pgplotter.m.setxscale.d := 'Set the viewable X range of an already existing plot';
help::pkg.display.plotter.objs.pgplotter.m.setxscale.a.xmin := [=];
help::pkg.display.plotter.objs.pgplotter.m.setxscale.a.xmin.d := 'The minimum X value to show';
help::pkg.display.plotter.objs.pgplotter.m.setxscale.a.xmin.def := '';
help::pkg.display.plotter.objs.pgplotter.m.setxscale.a.xmin.a := 'float';
help::pkg.display.plotter.objs.pgplotter.m.setxscale.a.xmax := [=];
help::pkg.display.plotter.objs.pgplotter.m.setxscale.a.xmax.d := 'The maximum X value to show';
help::pkg.display.plotter.objs.pgplotter.m.setxscale.a.xmax.def := '';
help::pkg.display.plotter.objs.pgplotter.m.setxscale.a.xmax.a := 'float';
help::pkg.display.plotter.objs.pgplotter.m.setxscale.s := 'setxscale(xmin, xmax)';
help::pkg.display.plotter.objs.pgplotter.m.setyscale := [=];
help::pkg.display.plotter.objs.pgplotter.m.setyscale.d := 'Set the viewable Y range of an already existing plot';
help::pkg.display.plotter.objs.pgplotter.m.setyscale.a.Ymin := [=];
help::pkg.display.plotter.objs.pgplotter.m.setyscale.a.Ymin.d := 'The minimum Y value to show';
help::pkg.display.plotter.objs.pgplotter.m.setyscale.a.Ymin.def := '';
help::pkg.display.plotter.objs.pgplotter.m.setyscale.a.Ymin.a := 'float';
help::pkg.display.plotter.objs.pgplotter.m.setyscale.a.Ymax := [=];
help::pkg.display.plotter.objs.pgplotter.m.setyscale.a.Ymax.d := 'The maximum Y value to show';
help::pkg.display.plotter.objs.pgplotter.m.setyscale.a.Ymax.def := '';
help::pkg.display.plotter.objs.pgplotter.m.setyscale.a.Ymax.a := 'float';
help::pkg.display.plotter.objs.pgplotter.m.setyscale.s := 'setyscale(Ymin, Ymax)';
help::pkg.display.plotter.objs.pgplotter.m.sety2scale := [=];
help::pkg.display.plotter.objs.pgplotter.m.sety2scale.d := 'Set the viewable Y range of an already existing plot using the right Y axis';
help::pkg.display.plotter.objs.pgplotter.m.sety2scale.a.ymin := [=];
help::pkg.display.plotter.objs.pgplotter.m.sety2scale.a.ymin.d := 'The minimum Y value to show';
help::pkg.display.plotter.objs.pgplotter.m.sety2scale.a.ymin.def := '';
help::pkg.display.plotter.objs.pgplotter.m.sety2scale.a.ymin.a := 'float';
help::pkg.display.plotter.objs.pgplotter.m.sety2scale.a.ymax := [=];
help::pkg.display.plotter.objs.pgplotter.m.sety2scale.a.ymax.d := 'The maximum Y value to show';
help::pkg.display.plotter.objs.pgplotter.m.sety2scale.a.ymax.def := '';
help::pkg.display.plotter.objs.pgplotter.m.sety2scale.a.ymax.a := 'float';
help::pkg.display.plotter.objs.pgplotter.m.sety2scale.s := 'sety2scale(ymin, ymax)';
help::pkg.display.plotter.objs.pgplotter.m.setxaxisgrid := [=];
help::pkg.display.plotter.objs.pgplotter.m.setxaxisgrid.d := 'Turn on or off the display of the X-axis grid lines';
help::pkg.display.plotter.objs.pgplotter.m.setxaxisgrid.a.on := [=];
help::pkg.display.plotter.objs.pgplotter.m.setxaxisgrid.a.on.d := 'Turn the grid on?';
help::pkg.display.plotter.objs.pgplotter.m.setxaxisgrid.a.on.def := 'T';
help::pkg.display.plotter.objs.pgplotter.m.setxaxisgrid.a.on.a := 'boolean';
help::pkg.display.plotter.objs.pgplotter.m.setxaxisgrid.s := 'setxaxisgrid(on)';
help::pkg.display.plotter.objs.pgplotter.m.setyaxisgrid := [=];
help::pkg.display.plotter.objs.pgplotter.m.setyaxisgrid.d := 'Turn on or off the display of the Y-axis grid lines';
help::pkg.display.plotter.objs.pgplotter.m.setyaxisgrid.a.on := [=];
help::pkg.display.plotter.objs.pgplotter.m.setyaxisgrid.a.on.d := 'Turn the grid on?';
help::pkg.display.plotter.objs.pgplotter.m.setyaxisgrid.a.on.def := 'T';
help::pkg.display.plotter.objs.pgplotter.m.setyaxisgrid.a.on.a := 'boolean';
help::pkg.display.plotter.objs.pgplotter.m.setyaxisgrid.s := 'setyaxisgrid(on)';
help::pkg.display.plotter.objs.pgplotter.m.sety2axisgrid := [=];
help::pkg.display.plotter.objs.pgplotter.m.sety2axisgrid.d := 'Turn on or off the display of the Y-axis grid lines for the right Y axis.';
help::pkg.display.plotter.objs.pgplotter.m.sety2axisgrid.a.on := [=];
help::pkg.display.plotter.objs.pgplotter.m.sety2axisgrid.a.on.d := 'Turn the grid on?';
help::pkg.display.plotter.objs.pgplotter.m.sety2axisgrid.a.on.def := 'T';
help::pkg.display.plotter.objs.pgplotter.m.sety2axisgrid.a.on.a := 'boolean';
help::pkg.display.plotter.objs.pgplotter.m.sety2axisgrid.s := 'sety2axisgrid(on)';
help::pkg.display.plotter.objs.pgplotter.m.setcolor := [=];
help::pkg.display.plotter.objs.pgplotter.m.setcolor.d := 'Set the color of subsequent plotting elements (e.g. lines, points, etc).';
help::pkg.display.plotter.objs.pgplotter.m.setcolor.a.color := [=];
help::pkg.display.plotter.objs.pgplotter.m.setcolor.a.color.d := 'The PGPLOT color number to draw. ';
help::pkg.display.plotter.objs.pgplotter.m.setcolor.a.color.def := '';
help::pkg.display.plotter.objs.pgplotter.m.setcolor.a.color.a := 'integer';
help::pkg.display.plotter.objs.pgplotter.m.setcolor.s := 'setcolor(color)';
help::pkg.display.plotter.objs.pgplotter.m.setplottitle := [=];
help::pkg.display.plotter.objs.pgplotter.m.setplottitle.d := 'Set the title of the plot';
help::pkg.display.plotter.objs.pgplotter.m.setplottitle.a.title := [=];
help::pkg.display.plotter.objs.pgplotter.m.setplottitle.a.title.d := 'A title to display';
help::pkg.display.plotter.objs.pgplotter.m.setplottitle.a.title.def := '';
help::pkg.display.plotter.objs.pgplotter.m.setplottitle.a.title.a := 'string';
help::pkg.display.plotter.objs.pgplotter.m.setplottitle.s := 'setplottitle(title)';
help::pkg.display.plotter.objs.pgplotter.m.setxaxislabel := [=];
help::pkg.display.plotter.objs.pgplotter.m.setxaxislabel.d := 'Set the x-axis label';
help::pkg.display.plotter.objs.pgplotter.m.setxaxislabel.a.xlabel := [=];
help::pkg.display.plotter.objs.pgplotter.m.setxaxislabel.a.xlabel.d := 'An x-axis label to display';
help::pkg.display.plotter.objs.pgplotter.m.setxaxislabel.a.xlabel.def := '';
help::pkg.display.plotter.objs.pgplotter.m.setxaxislabel.a.xlabel.a := 'string';
help::pkg.display.plotter.objs.pgplotter.m.setxaxislabel.s := 'setxaxislabel(xlabel)';
help::pkg.display.plotter.objs.pgplotter.m.setyaxislabel := [=];
help::pkg.display.plotter.objs.pgplotter.m.setyaxislabel.d := 'Set the y-axis label';
help::pkg.display.plotter.objs.pgplotter.m.setyaxislabel.a.ylabel := [=];
help::pkg.display.plotter.objs.pgplotter.m.setyaxislabel.a.ylabel.d := 'An y-axis label to display';
help::pkg.display.plotter.objs.pgplotter.m.setyaxislabel.a.ylabel.def := '';
help::pkg.display.plotter.objs.pgplotter.m.setyaxislabel.a.ylabel.a := 'string';
help::pkg.display.plotter.objs.pgplotter.m.setyaxislabel.s := 'setyaxislabel(ylabel)';
help::pkg.display.plotter.funs.pgplottertest := [=];
help::pkg.display.plotter.funs.pgplottertest.a := [=];
help::pkg.display.plotter.funs.pgplottertest.d := 'Test pgplotter by drawing the examples';
help::pkg.display.plotter.funs.pgplottertest.a.autodestruct := [=];
help::pkg.display.plotter.funs.pgplottertest.a.autodestruct.d := 'Destroy the pgplotter immediately after the test';
help::pkg.display.plotter.funs.pgplottertest.a.autodestruct.def := 'T';
help::pkg.display.plotter.funs.pgplottertest.a.autodestruct.a := 'Boolean';
help::pkg.display.plotter.funs.pgplottertest.s := 'pgplottertest(autodestruct)';

help::pkg.display.viewer := [=];
help::pkg.display.viewer.objs := [=];
help::pkg.display.viewer.funs := [=];
help::pkg.display.viewer.d := 'Viewing \images\ and \glish\ arrays';
help::pkg.display.viewer.objs.viewer := [=];
help::pkg.display.viewer.objs.viewer.m := [=];
help::pkg.display.viewer.objs.viewer.c := [=];
help::pkg.display.viewer.objs.viewer.d := 'Tool for viewing AIPS++\ images and arrays';
help::pkg.display.viewer.objs.viewer.c.viewer := [=];
help::pkg.display.viewer.objs.viewer.c.viewer.d := 'Create a \VT';
help::pkg.display.viewer.objs.viewer.c.viewer.a.title := [=];
help::pkg.display.viewer.objs.viewer.c.viewer.a.title.d := 'Title of this \VT\ which appears in windows';
help::pkg.display.viewer.objs.viewer.c.viewer.a.title.def := '\' viewer\' ';
help::pkg.display.viewer.objs.viewer.c.viewer.a.title.a := 'String';
help::pkg.display.viewer.objs.viewer.c.viewer.a.deleteatexit := [=];
help::pkg.display.viewer.objs.viewer.c.viewer.a.deleteatexit.d := 'Delete this \VT\ when \glish\ exits?';
help::pkg.display.viewer.objs.viewer.c.viewer.a.deleteatexit.def := 'T';
help::pkg.display.viewer.objs.viewer.c.viewer.a.deleteatexit.a := 'Boolean';
help::pkg.display.viewer.objs.viewer.c.viewer.a.widgetset := [=];
help::pkg.display.viewer.objs.viewer.c.viewer.a.widgetset.d := '\widgetserverT\ to use for the GUIs';
help::pkg.display.viewer.objs.viewer.c.viewer.a.widgetset.def := 'dws';
help::pkg.display.viewer.objs.viewer.c.viewer.a.widgetset.a := '\widgetserverT';
help::pkg.display.viewer.objs.viewer.c.viewer.s := 'viewer(title, deleteatexit, widgetset)';
help::pkg.display.viewer.objs.viewer.m.alldisplaydatas := [=];
help::pkg.display.viewer.objs.viewer.m.alldisplaydatas.d := 'Return a list of all \VdisplaydataTs\ known to this \VT';
help::pkg.display.viewer.objs.viewer.m.alldisplaydatas.s := 'alldisplaydatas()';
help::pkg.display.viewer.objs.viewer.m.alldisplaypanels := [=];
help::pkg.display.viewer.objs.viewer.m.alldisplaypanels.d := 'Return a list of all \VdisplaypanelTs\ known to this \VT';
help::pkg.display.viewer.objs.viewer.m.alldisplaypanels.s := 'alldisplaypanels()';
help::pkg.display.viewer.objs.viewer.m.colormapmanager := [=];
help::pkg.display.viewer.objs.viewer.m.colormapmanager.d := 'Return the \VcolormapMT\ for this \VT';
help::pkg.display.viewer.objs.viewer.m.colormapmanager.s := 'colormapmanager()';
help::pkg.display.viewer.objs.viewer.m.deleteall := [=];
help::pkg.display.viewer.objs.viewer.m.deleteall.d := 'Delete all \VdisplaydataTs';
help::pkg.display.viewer.objs.viewer.m.deleteall.a.doneit := [=];
help::pkg.display.viewer.objs.viewer.m.deleteall.a.doneit.d := 'truly delete the \VdisplaydataTs?';
help::pkg.display.viewer.objs.viewer.m.deleteall.a.doneit.def := 'T';
help::pkg.display.viewer.objs.viewer.m.deleteall.a.doneit.a := 'Boolean';
help::pkg.display.viewer.objs.viewer.m.deleteall.a.quiet := [=];
help::pkg.display.viewer.objs.viewer.m.deleteall.a.quiet.d := 'prevent emission of updated list of \VdisplaydataTs?';
help::pkg.display.viewer.objs.viewer.m.deleteall.a.quiet.def := 'F';
help::pkg.display.viewer.objs.viewer.m.deleteall.a.quiet.a := 'Boolean';
help::pkg.display.viewer.objs.viewer.m.deleteall.s := 'deleteall(doneit, quiet)';
help::pkg.display.viewer.objs.viewer.m.deletedata := [=];
help::pkg.display.viewer.objs.viewer.m.deletedata.d := 'Delete a \VdisplaydataT';
help::pkg.display.viewer.objs.viewer.m.deletedata.a.displaydata := [=];
help::pkg.display.viewer.objs.viewer.m.deletedata.a.displaydata.d := '\VdisplaydataT\ to delete';
help::pkg.display.viewer.objs.viewer.m.deletedata.a.displaydata.def := '';
help::pkg.display.viewer.objs.viewer.m.deletedata.a.displaydata.a := '\VdisplaydataT';
help::pkg.display.viewer.objs.viewer.m.deletedata.a.doneit := [=];
help::pkg.display.viewer.objs.viewer.m.deletedata.a.doneit.d := 'truly delete the \VdisplaydataT?';
help::pkg.display.viewer.objs.viewer.m.deletedata.a.doneit.def := 'T';
help::pkg.display.viewer.objs.viewer.m.deletedata.a.doneit.a := 'Boolean';
help::pkg.display.viewer.objs.viewer.m.deletedata.a.quiet := [=];
help::pkg.display.viewer.objs.viewer.m.deletedata.a.quiet.d := 'prevent emission of updated list of \VdisplaydataTs?';
help::pkg.display.viewer.objs.viewer.m.deletedata.a.quiet.def := 'F';
help::pkg.display.viewer.objs.viewer.m.deletedata.a.quiet.a := 'Boolean';
help::pkg.display.viewer.objs.viewer.m.deletedata.s := 'deletedata(displaydata, doneit, quiet)';
help::pkg.display.viewer.objs.viewer.m.disable := [=];
help::pkg.display.viewer.objs.viewer.m.disable.d := 'Disable the GUIs of all \VdisplaypanelTs\ and \VdataMTs';
help::pkg.display.viewer.objs.viewer.m.disable.s := 'disable()';
help::pkg.display.viewer.objs.viewer.m.done := [=];
help::pkg.display.viewer.objs.viewer.m.done.d := 'Close down (destroy) this \VT';
help::pkg.display.viewer.objs.viewer.m.done.s := 'done()';
help::pkg.display.viewer.objs.viewer.m.emittoolkitlist := [=];
help::pkg.display.viewer.objs.viewer.m.emittoolkitlist.d := 'Emit an event describing the toolkitlist for this \VT';
help::pkg.display.viewer.objs.viewer.m.emittoolkitlist.s := 'emittoolkitlist()';
help::pkg.display.viewer.objs.viewer.m.enable := [=];
help::pkg.display.viewer.objs.viewer.m.enable.d := 'Enable the GUIs of all \VdisplaypanelTs\ and \VdataMTs';
help::pkg.display.viewer.objs.viewer.m.enable.s := 'enable()';
help::pkg.display.viewer.objs.viewer.m.hold := [=];
help::pkg.display.viewer.objs.viewer.m.hold.d := 'Prevent refreshes occuring on all \VdisplaypanelTs';
help::pkg.display.viewer.objs.viewer.m.hold.s := 'hold()';
help::pkg.display.viewer.objs.viewer.m.gui := [=];
help::pkg.display.viewer.objs.viewer.m.gui.d := 'Create and show a new \VdataMT\ and/or \VdisplaypanelT\ on the screen';
help::pkg.display.viewer.objs.viewer.m.gui.a.datamanager := [=];
help::pkg.display.viewer.objs.viewer.m.gui.a.datamanager.d := 'Show a new \VdataMT?';
help::pkg.display.viewer.objs.viewer.m.gui.a.datamanager.def := 'T';
help::pkg.display.viewer.objs.viewer.m.gui.a.datamanager.a := 'Boolean';
help::pkg.display.viewer.objs.viewer.m.gui.a.displaypanel := [=];
help::pkg.display.viewer.objs.viewer.m.gui.a.displaypanel.d := 'Show a new \VdisplaypanelT?';
help::pkg.display.viewer.objs.viewer.m.gui.a.displaypanel.def := 'T';
help::pkg.display.viewer.objs.viewer.m.gui.a.displaypanel.a := 'Boolean';
help::pkg.display.viewer.objs.viewer.m.gui.s := 'gui(datamanager, displaypanel)';
help::pkg.display.viewer.objs.viewer.m.loaddata := [=];
help::pkg.display.viewer.objs.viewer.m.loaddata.d := 'Create a \VdisplaydataT\ for future use';
help::pkg.display.viewer.objs.viewer.m.loaddata.a.data := [=];
help::pkg.display.viewer.objs.viewer.m.loaddata.a.data.d := 'data to load';
help::pkg.display.viewer.objs.viewer.m.loaddata.a.data.def := '';
help::pkg.display.viewer.objs.viewer.m.loaddata.a.data.a := 'array or image object, string filename of image or measurement set';
help::pkg.display.viewer.objs.viewer.m.loaddata.a.drawtype := [=];
help::pkg.display.viewer.objs.viewer.m.loaddata.a.drawtype.d := 'type of \VdisplaydataT\ to create';
help::pkg.display.viewer.objs.viewer.m.loaddata.a.drawtype.def := '';
help::pkg.display.viewer.objs.viewer.m.loaddata.a.drawtype.a := '\' raster\' , \' contour\' , \' vector\' , \' marker\' , or \' skycatalog\' ';
help::pkg.display.viewer.objs.viewer.m.loaddata.a.autoregister := [=];
help::pkg.display.viewer.objs.viewer.m.loaddata.a.autoregister.d := 'auto-register this on any auto-register \VdisplaypanelTs?';
help::pkg.display.viewer.objs.viewer.m.loaddata.a.autoregister.def := 'F';
help::pkg.display.viewer.objs.viewer.m.loaddata.a.autoregister.a := 'Boolean';
help::pkg.display.viewer.objs.viewer.m.loaddata.s := 'loaddata(data, drawtype, autoregister)';
help::pkg.display.viewer.objs.viewer.m.newcolormapmanagergui := [=];
help::pkg.display.viewer.objs.viewer.m.newcolormapmanagergui.d := 'Create and optionally display a new GUI to control this \VT s \VcolormapMT';
help::pkg.display.viewer.objs.viewer.m.newcolormapmanagergui.a.parent := [=];
help::pkg.display.viewer.objs.viewer.m.newcolormapmanagergui.a.parent.d := 'parent frame in which to place the \VdataMT';
help::pkg.display.viewer.objs.viewer.m.newcolormapmanagergui.a.parent.def := 'F';
help::pkg.display.viewer.objs.viewer.m.newcolormapmanagergui.a.parent.a := 'agent or F';
help::pkg.display.viewer.objs.viewer.m.newcolormapmanagergui.a.show := [=];
help::pkg.display.viewer.objs.viewer.m.newcolormapmanagergui.a.show.d := 'show the \VdataMT?';
help::pkg.display.viewer.objs.viewer.m.newcolormapmanagergui.a.show.def := 'T';
help::pkg.display.viewer.objs.viewer.m.newcolormapmanagergui.a.show.a := 'Boolean';
help::pkg.display.viewer.objs.viewer.m.newcolormapmanagergui.a.hasdismiss := [=];
help::pkg.display.viewer.objs.viewer.m.newcolormapmanagergui.a.hasdismiss.d := 'add a "Dismiss" button to the GUI?';
help::pkg.display.viewer.objs.viewer.m.newcolormapmanagergui.a.hasdismiss.def := 'F';
help::pkg.display.viewer.objs.viewer.m.newcolormapmanagergui.a.hasdismiss.a := 'Boolean';
help::pkg.display.viewer.objs.viewer.m.newcolormapmanagergui.a.hasdone := [=];
help::pkg.display.viewer.objs.viewer.m.newcolormapmanagergui.a.hasdone.d := 'add a "Done" button to the GUI?';
help::pkg.display.viewer.objs.viewer.m.newcolormapmanagergui.a.hasdone.def := 'F';
help::pkg.display.viewer.objs.viewer.m.newcolormapmanagergui.a.hasdone.a := 'Boolean';
help::pkg.display.viewer.objs.viewer.m.newcolormapmanagergui.a.widgetset := [=];
help::pkg.display.viewer.objs.viewer.m.newcolormapmanagergui.a.widgetset.d := '\widgetserverT\ to use to build the GUI';
help::pkg.display.viewer.objs.viewer.m.newcolormapmanagergui.a.widgetset.def := 'unset';
help::pkg.display.viewer.objs.viewer.m.newcolormapmanagergui.a.widgetset.a := '\widgetserverT\ or unset';
help::pkg.display.viewer.objs.viewer.m.newcolormapmanagergui.s := 'newcolormapmanagergui(parent, show, hasdismiss, hasdone, widgetset)';
help::pkg.display.viewer.objs.viewer.m.newdatamanager := [=];
help::pkg.display.viewer.objs.viewer.m.newdatamanager.d := 'Create and show a new \VdataMT\ on the screen';
help::pkg.display.viewer.objs.viewer.m.newdatamanager.a.parent := [=];
help::pkg.display.viewer.objs.viewer.m.newdatamanager.a.parent.d := 'parent frame in which to place the \VdataMT';
help::pkg.display.viewer.objs.viewer.m.newdatamanager.a.parent.def := 'F';
help::pkg.display.viewer.objs.viewer.m.newdatamanager.a.parent.a := 'agent or F';
help::pkg.display.viewer.objs.viewer.m.newdatamanager.a.show := [=];
help::pkg.display.viewer.objs.viewer.m.newdatamanager.a.show.d := 'show the \VdataMT?';
help::pkg.display.viewer.objs.viewer.m.newdatamanager.a.show.def := 'T';
help::pkg.display.viewer.objs.viewer.m.newdatamanager.a.show.a := 'Boolean';
help::pkg.display.viewer.objs.viewer.m.newdatamanager.a.showload := [=];
help::pkg.display.viewer.objs.viewer.m.newdatamanager.a.showload.d := 'show the "Load data" rollup?';
help::pkg.display.viewer.objs.viewer.m.newdatamanager.a.showload.def := 'F';
help::pkg.display.viewer.objs.viewer.m.newdatamanager.a.showload.a := 'Boolean';
help::pkg.display.viewer.objs.viewer.m.newdatamanager.a.showedit := [=];
help::pkg.display.viewer.objs.viewer.m.newdatamanager.a.showedit.d := 'show the "Adjust data" rollup?';
help::pkg.display.viewer.objs.viewer.m.newdatamanager.a.showedit.def := 'F';
help::pkg.display.viewer.objs.viewer.m.newdatamanager.a.showedit.a := 'Boolean';
help::pkg.display.viewer.objs.viewer.m.newdatamanager.a.hasdismiss := [=];
help::pkg.display.viewer.objs.viewer.m.newdatamanager.a.hasdismiss.d := 'add a "Dismiss" button to the GUI?';
help::pkg.display.viewer.objs.viewer.m.newdatamanager.a.hasdismiss.def := 'F';
help::pkg.display.viewer.objs.viewer.m.newdatamanager.a.hasdismiss.a := 'Boolean';
help::pkg.display.viewer.objs.viewer.m.newdatamanager.a.hasdone := [=];
help::pkg.display.viewer.objs.viewer.m.newdatamanager.a.hasdone.d := 'add a "Done" button to the GUI?';
help::pkg.display.viewer.objs.viewer.m.newdatamanager.a.hasdone.def := 'F';
help::pkg.display.viewer.objs.viewer.m.newdatamanager.a.hasdone.a := 'Boolean';
help::pkg.display.viewer.objs.viewer.m.newdatamanager.a.widgetset := [=];
help::pkg.display.viewer.objs.viewer.m.newdatamanager.a.widgetset.d := '\widgetserverT\ to use to build the GUI';
help::pkg.display.viewer.objs.viewer.m.newdatamanager.a.widgetset.def := 'unset';
help::pkg.display.viewer.objs.viewer.m.newdatamanager.a.widgetset.a := '\widgetserverT\ or unset';
help::pkg.display.viewer.objs.viewer.m.newdatamanager.s := 'newdatamanager(parent, show, showload, showedit, hasdismiss, hasdone, widgetset)';
help::pkg.display.viewer.objs.viewer.m.newdisplaypanel := [=];
help::pkg.display.viewer.objs.viewer.m.newdisplaypanel.d := 'Create and show a new \VdisplaypanelT\ on the screen';
help::pkg.display.viewer.objs.viewer.m.newdisplaypanel.a.parent := [=];
help::pkg.display.viewer.objs.viewer.m.newdisplaypanel.a.parent.d := 'parent frame in which to place the \VdisplaypanelT';
help::pkg.display.viewer.objs.viewer.m.newdisplaypanel.a.parent.def := 'F';
help::pkg.display.viewer.objs.viewer.m.newdisplaypanel.a.parent.a := 'agent or F';
help::pkg.display.viewer.objs.viewer.m.newdisplaypanel.a.width := [=];
help::pkg.display.viewer.objs.viewer.m.newdisplaypanel.a.width.d := 'width of the drawing area on screen';
help::pkg.display.viewer.objs.viewer.m.newdisplaypanel.a.width.def := '400';
help::pkg.display.viewer.objs.viewer.m.newdisplaypanel.a.width.a := 'Integer';
help::pkg.display.viewer.objs.viewer.m.newdisplaypanel.a.height := [=];
help::pkg.display.viewer.objs.viewer.m.newdisplaypanel.a.height.d := 'height of the drawing area on screen';
help::pkg.display.viewer.objs.viewer.m.newdisplaypanel.a.height.def := '300';
help::pkg.display.viewer.objs.viewer.m.newdisplaypanel.a.height.a := 'Integer';
help::pkg.display.viewer.objs.viewer.m.newdisplaypanel.a.nx := [=];
help::pkg.display.viewer.objs.viewer.m.newdisplaypanel.a.nx.d := 'number of panels in x';
help::pkg.display.viewer.objs.viewer.m.newdisplaypanel.a.nx.def := '1';
help::pkg.display.viewer.objs.viewer.m.newdisplaypanel.a.nx.a := 'Integer';
help::pkg.display.viewer.objs.viewer.m.newdisplaypanel.a.nx := [=];
help::pkg.display.viewer.objs.viewer.m.newdisplaypanel.a.nx.d := 'number of panels in y';
help::pkg.display.viewer.objs.viewer.m.newdisplaypanel.a.nx.def := '1';
help::pkg.display.viewer.objs.viewer.m.newdisplaypanel.a.nx.a := 'Integer';
help::pkg.display.viewer.objs.viewer.m.newdisplaypanel.a.maptype := [=];
help::pkg.display.viewer.objs.viewer.m.newdisplaypanel.a.maptype.d := 'how colors will be addressed on this \VdisplaypanelT';
help::pkg.display.viewer.objs.viewer.m.newdisplaypanel.a.maptype.def := '\' index\' ';
help::pkg.display.viewer.objs.viewer.m.newdisplaypanel.a.maptype.a := '\' index\'  \' rgb\'  \' hsv\' ';
help::pkg.display.viewer.objs.viewer.m.newdisplaypanel.a.newcmap := [=];
help::pkg.display.viewer.objs.viewer.m.newdisplaypanel.a.newcmap.d := 'install a private colormap?';
help::pkg.display.viewer.objs.viewer.m.newdisplaypanel.a.newcmap.def := 'unset';
help::pkg.display.viewer.objs.viewer.m.newdisplaypanel.a.newcmap.a := 'Boolean or unset';
help::pkg.display.viewer.objs.viewer.m.newdisplaypanel.a.mincolors := [=];
help::pkg.display.viewer.objs.viewer.m.newdisplaypanel.a.mincolors.d := 'minimum number of colors to allocate';
help::pkg.display.viewer.objs.viewer.m.newdisplaypanel.a.mincolors.def := 'unset';
help::pkg.display.viewer.objs.viewer.m.newdisplaypanel.a.mincolors.a := 'Integer or unset';
help::pkg.display.viewer.objs.viewer.m.newdisplaypanel.a.maxcolors := [=];
help::pkg.display.viewer.objs.viewer.m.newdisplaypanel.a.maxcolors.d := 'maximum number of colors to allocate';
help::pkg.display.viewer.objs.viewer.m.newdisplaypanel.a.maxcolors.def := 'unset';
help::pkg.display.viewer.objs.viewer.m.newdisplaypanel.a.maxcolors.a := 'Integer or unset';
help::pkg.display.viewer.objs.viewer.m.newdisplaypanel.a.autoregister := [=];
help::pkg.display.viewer.objs.viewer.m.newdisplaypanel.a.autoregister.d := 'accept auto-register data on this \VdisplaypanelT?';
help::pkg.display.viewer.objs.viewer.m.newdisplaypanel.a.autoregister.def := 'F';
help::pkg.display.viewer.objs.viewer.m.newdisplaypanel.a.autoregister.a := 'Boolean';
help::pkg.display.viewer.objs.viewer.m.newdisplaypanel.a.holdsdata := [=];
help::pkg.display.viewer.objs.viewer.m.newdisplaypanel.a.holdsdata.d := 'is this \VdisplaypanelT\ going to hold data?';
help::pkg.display.viewer.objs.viewer.m.newdisplaypanel.a.holdsdata.def := 'T';
help::pkg.display.viewer.objs.viewer.m.newdisplaypanel.a.holdsdata.a := 'Boolean';
help::pkg.display.viewer.objs.viewer.m.newdisplaypanel.a.show := [=];
help::pkg.display.viewer.objs.viewer.m.newdisplaypanel.a.show.d := 'show the \VdisplaypanelT?';
help::pkg.display.viewer.objs.viewer.m.newdisplaypanel.a.show.def := 'T';
help::pkg.display.viewer.objs.viewer.m.newdisplaypanel.a.show.a := 'Boolean';
help::pkg.display.viewer.objs.viewer.m.newdisplaypanel.a.hasgui := [=];
help::pkg.display.viewer.objs.viewer.m.newdisplaypanel.a.hasgui.d := 'adorn the \VdisplaypanelT\ with elements of a \guilong?';
help::pkg.display.viewer.objs.viewer.m.newdisplaypanel.a.hasgui.def := 'unset';
help::pkg.display.viewer.objs.viewer.m.newdisplaypanel.a.hasgui.a := 'unset or Boolean';
help::pkg.display.viewer.objs.viewer.m.newdisplaypanel.a.guihasmenubar := [=];
help::pkg.display.viewer.objs.viewer.m.newdisplaypanel.a.guihasmenubar.d := 'add the menubar if a \guishort\ is added?';
help::pkg.display.viewer.objs.viewer.m.newdisplaypanel.a.guihasmenubar.def := 'T';
help::pkg.display.viewer.objs.viewer.m.newdisplaypanel.a.guihasmenubar.a := 'Boolean';
help::pkg.display.viewer.objs.viewer.m.newdisplaypanel.a.guihascontrolbox := [=];
help::pkg.display.viewer.objs.viewer.m.newdisplaypanel.a.guihascontrolbox.d := 'add the controlbox if a \guishort\ is added?';
help::pkg.display.viewer.objs.viewer.m.newdisplaypanel.a.guihascontrolbox.def := 'T';
help::pkg.display.viewer.objs.viewer.m.newdisplaypanel.a.guihascontrolbox.a := 'Boolean';
help::pkg.display.viewer.objs.viewer.m.newdisplaypanel.a.guihasanimator := [=];
help::pkg.display.viewer.objs.viewer.m.newdisplaypanel.a.guihasanimator.d := 'add the animator tapedeck if a \guishort\ is added?';
help::pkg.display.viewer.objs.viewer.m.newdisplaypanel.a.guihasanimator.def := 'T';
help::pkg.display.viewer.objs.viewer.m.newdisplaypanel.a.guihasanimator.a := 'Boolean';
help::pkg.display.viewer.objs.viewer.m.newdisplaypanel.a.guihasbuttons := [=];
help::pkg.display.viewer.objs.viewer.m.newdisplaypanel.a.guihasbuttons.d := 'add the button bar if a \guishort\ is added?';
help::pkg.display.viewer.objs.viewer.m.newdisplaypanel.a.guihasbuttons.def := 'T';
help::pkg.display.viewer.objs.viewer.m.newdisplaypanel.a.guihasbuttons.a := 'Boolean';
help::pkg.display.viewer.objs.viewer.m.newdisplaypanel.a.hasdismiss := [=];
help::pkg.display.viewer.objs.viewer.m.newdisplaypanel.a.hasdismiss.d := 'add a "Dismiss" button to the GUI?';
help::pkg.display.viewer.objs.viewer.m.newdisplaypanel.a.hasdismiss.def := 'unset';
help::pkg.display.viewer.objs.viewer.m.newdisplaypanel.a.hasdismiss.a := 'unset or boolean';
help::pkg.display.viewer.objs.viewer.m.newdisplaypanel.a.hasdone := [=];
help::pkg.display.viewer.objs.viewer.m.newdisplaypanel.a.hasdone.d := 'add a "Done" button to the GUI?';
help::pkg.display.viewer.objs.viewer.m.newdisplaypanel.a.hasdone.def := 'unset';
help::pkg.display.viewer.objs.viewer.m.newdisplaypanel.a.hasdone.a := 'unset or boolean';
help::pkg.display.viewer.objs.viewer.m.newdisplaypanel.a.isolationmode := [=];
help::pkg.display.viewer.objs.viewer.m.newdisplaypanel.a.isolationmode.d := 'prevent user accessing other components of this \VT\ via the \guishort?';
help::pkg.display.viewer.objs.viewer.m.newdisplaypanel.a.isolationmode.def := 'F';
help::pkg.display.viewer.objs.viewer.m.newdisplaypanel.a.isolationmode.a := 'boolean';
help::pkg.display.viewer.objs.viewer.m.newdisplaypanel.a.widgetset := [=];
help::pkg.display.viewer.objs.viewer.m.newdisplaypanel.a.widgetset.d := '\widgetserverT\ to use to build the GUI';
help::pkg.display.viewer.objs.viewer.m.newdisplaypanel.a.widgetset.def := 'unset';
help::pkg.display.viewer.objs.viewer.m.newdisplaypanel.a.widgetset.a := '\widgetserverT\ or unset';
help::pkg.display.viewer.objs.viewer.m.newdisplaypanel.a.slicepanel := [=];
help::pkg.display.viewer.objs.viewer.m.newdisplaypanel.a.slicepanel.d := 'create a 3d slice panel?';
help::pkg.display.viewer.objs.viewer.m.newdisplaypanel.a.slicepanel.def := 'F';
help::pkg.display.viewer.objs.viewer.m.newdisplaypanel.a.slicepanel.a := 'Boolean';
help::pkg.display.viewer.objs.viewer.m.newdisplaypanel.s := 'newdisplaypanel(parent, width, height, nx, nx, maptype, newcmap, mincolors, maxcolors, autoregister, holdsdata, show, hasgui, guihasmenubar, guihascontrolbox, guihasanimator, guihasbuttons, hasdismiss, hasdone, isolationmode, widgetset, slicepanel)';
help::pkg.display.viewer.objs.viewer.m.release := [=];
help::pkg.display.viewer.objs.viewer.m.release.d := 'Allow refreshes to occur on all \VdisplaypanelTs';
help::pkg.display.viewer.objs.viewer.m.release.s := 'release()';
help::pkg.display.viewer.objs.viewer.m.title := [=];
help::pkg.display.viewer.objs.viewer.m.title.d := 'Return the (construction) title of this \tool';
help::pkg.display.viewer.objs.viewer.m.title.s := 'title()';
help::pkg.display.viewer.objs.viewer.m.toolkit := [=];
help::pkg.display.viewer.objs.viewer.m.toolkit.d := 'Returns the toolkit used by this \tool';
help::pkg.display.viewer.objs.viewer.m.toolkit.s := 'toolkit()';
help::pkg.display.viewer.objs.viewer.m.type := [=];
help::pkg.display.viewer.objs.viewer.m.type.d := 'Return the type of this \tool';
help::pkg.display.viewer.objs.viewer.m.type.s := 'type()';
help::pkg.display.viewer.objs.viewer.m.updatedatasets := [=];
help::pkg.display.viewer.objs.viewer.m.updatedatasets.d := 'Update the list of global images 	and arrays kept by the \VT';
help::pkg.display.viewer.objs.viewer.m.updatedatasets.s := 'updatedatasets()';
help::pkg.display.viewer.objs.viewer.m.widgetset := [=];
help::pkg.display.viewer.objs.viewer.m.widgetset.d := 'Return the \widgetserverT\ used by this \tool';
help::pkg.display.viewer.objs.viewer.m.widgetset.s := 'widgetset()';
help::pkg.display.viewer.objs.viewercanvasmanager := [=];
help::pkg.display.viewer.objs.viewercanvasmanager.m := [=];
help::pkg.display.viewer.objs.viewercanvasmanager.c := [=];
help::pkg.display.viewer.objs.viewercanvasmanager.d := 'Tool for managing the canvases of \VdisplaypanelTs';
help::pkg.display.viewer.objs.viewercanvasmanager.c.viewercanvasmanager := [=];
help::pkg.display.viewer.objs.viewercanvasmanager.c.viewercanvasmanager.d := 'Create a \VcanvasMT';
help::pkg.display.viewer.objs.viewercanvasmanager.c.viewercanvasmanager.a.displaypanel := [=];
help::pkg.display.viewer.objs.viewercanvasmanager.c.viewercanvasmanager.a.displaypanel.d := 'The \VdisplaypanelT\ which will use this \VcanvasMT';
help::pkg.display.viewer.objs.viewercanvasmanager.c.viewercanvasmanager.a.displaypanel.def := '';
help::pkg.display.viewer.objs.viewercanvasmanager.c.viewercanvasmanager.a.displaypanel.a := '\VdisplaypanelT';
help::pkg.display.viewer.objs.viewercanvasmanager.c.viewercanvasmanager.s := 'viewercanvasmanager(displaypanel)';
help::pkg.display.viewer.objs.viewercanvasmanager.m.type := [=];
help::pkg.display.viewer.objs.viewercanvasmanager.m.type.d := 'Return the type of this \tool';
help::pkg.display.viewer.objs.viewercanvasmanager.m.type.s := 'type()';
help::pkg.display.viewer.objs.viewercanvasmanager.m.viewer := [=];
help::pkg.display.viewer.objs.viewercanvasmanager.m.viewer.d := 'Return the \VT\ which manages this \tool';
help::pkg.display.viewer.objs.viewercanvasmanager.m.viewer.s := 'viewer()';
help::pkg.display.viewer.objs.viewercanvasmanager.m.done := [=];
help::pkg.display.viewer.objs.viewercanvasmanager.m.done.d := 'Close down (destroy) this \VcanvasMT';
help::pkg.display.viewer.objs.viewercanvasmanager.m.done.s := 'done()';
help::pkg.display.viewer.objs.viewercanvasmanager.m.gui := [=];
help::pkg.display.viewer.objs.viewercanvasmanager.m.gui.d := 'Create a new \guilong\ for this \tool';
help::pkg.display.viewer.objs.viewercanvasmanager.m.gui.a.parent := [=];
help::pkg.display.viewer.objs.viewercanvasmanager.m.gui.a.parent.d := 'parent frame for \guishort';
help::pkg.display.viewer.objs.viewercanvasmanager.m.gui.a.parent.def := 'F';
help::pkg.display.viewer.objs.viewercanvasmanager.m.gui.a.parent.a := 'agent or F';
help::pkg.display.viewer.objs.viewercanvasmanager.m.gui.a.show := [=];
help::pkg.display.viewer.objs.viewercanvasmanager.m.gui.a.show.d := 'map the \guishort\ to the screen immediately?';
help::pkg.display.viewer.objs.viewercanvasmanager.m.gui.a.show.def := 'T';
help::pkg.display.viewer.objs.viewercanvasmanager.m.gui.a.show.a := 'Boolean';
help::pkg.display.viewer.objs.viewercanvasmanager.m.gui.a.hasdismiss := [=];
help::pkg.display.viewer.objs.viewercanvasmanager.m.gui.a.hasdismiss.d := 'place a \' Dismiss\'  button in the \guishort?';
help::pkg.display.viewer.objs.viewercanvasmanager.m.gui.a.hasdismiss.def := 'F';
help::pkg.display.viewer.objs.viewercanvasmanager.m.gui.a.hasdismiss.a := 'Boolean';
help::pkg.display.viewer.objs.viewercanvasmanager.m.gui.a.hasdone := [=];
help::pkg.display.viewer.objs.viewercanvasmanager.m.gui.a.hasdone.d := 'place a \' Done\'  button in the \guishort?';
help::pkg.display.viewer.objs.viewercanvasmanager.m.gui.a.hasdone.def := 'F';
help::pkg.display.viewer.objs.viewercanvasmanager.m.gui.a.hasdone.a := 'Boolean';
help::pkg.display.viewer.objs.viewercanvasmanager.m.gui.a.widgetset := [=];
help::pkg.display.viewer.objs.viewercanvasmanager.m.gui.a.widgetset.d := '\widgetserverT\ to use for the \guishort';
help::pkg.display.viewer.objs.viewercanvasmanager.m.gui.a.widgetset.def := 'dws';
help::pkg.display.viewer.objs.viewercanvasmanager.m.gui.a.widgetset.a := '\widgetserverT';
help::pkg.display.viewer.objs.viewercanvasmanager.m.gui.s := 'gui(parent, show, hasdismiss, hasdone, widgetset)';
help::pkg.display.viewer.objs.viewercanvasmanager.m.getoptions := [=];
help::pkg.display.viewer.objs.viewercanvasmanager.m.getoptions.d := 'Get the current canvas settings';
help::pkg.display.viewer.objs.viewercanvasmanager.m.getoptions.s := 'getoptions()';
help::pkg.display.viewer.objs.viewercanvasmanager.m.setoptions := [=];
help::pkg.display.viewer.objs.viewercanvasmanager.m.setoptions.d := 'Install new canvas settings';
help::pkg.display.viewer.objs.viewercanvasmanager.m.setoptions.a.options := [=];
help::pkg.display.viewer.objs.viewercanvasmanager.m.setoptions.a.options.d := 'autogui short-form parameter record describing the requested state';
help::pkg.display.viewer.objs.viewercanvasmanager.m.setoptions.a.options.def := '';
help::pkg.display.viewer.objs.viewercanvasmanager.m.setoptions.a.options.a := 'record';
help::pkg.display.viewer.objs.viewercanvasmanager.m.setoptions.s := 'setoptions(options)';
help::pkg.display.viewer.objs.viewercanvasmanager.m.saveoptions := [=];
help::pkg.display.viewer.objs.viewercanvasmanager.m.saveoptions.d := 'Save the state of this \tool';
help::pkg.display.viewer.objs.viewercanvasmanager.m.saveoptions.a.setname := [=];
help::pkg.display.viewer.objs.viewercanvasmanager.m.saveoptions.a.setname.d := 'name under which to store this state';
help::pkg.display.viewer.objs.viewercanvasmanager.m.saveoptions.a.setname.def := '';
help::pkg.display.viewer.objs.viewercanvasmanager.m.saveoptions.a.setname.a := 'string';
help::pkg.display.viewer.objs.viewercanvasmanager.m.saveoptions.s := 'saveoptions(setname)';
help::pkg.display.viewer.objs.viewercanvasmanager.m.restoreoptions := [=];
help::pkg.display.viewer.objs.viewercanvasmanager.m.restoreoptions.d := 'Restore a previously saved state of this \tool';
help::pkg.display.viewer.objs.viewercanvasmanager.m.restoreoptions.a.setname := [=];
help::pkg.display.viewer.objs.viewercanvasmanager.m.restoreoptions.a.setname.d := 'name of state to retrieve';
help::pkg.display.viewer.objs.viewercanvasmanager.m.restoreoptions.a.setname.def := '';
help::pkg.display.viewer.objs.viewercanvasmanager.m.restoreoptions.a.setname.a := 'string';
help::pkg.display.viewer.objs.viewercanvasmanager.m.restoreoptions.s := 'restoreoptions(setname)';
help::pkg.display.viewer.objs.viewercanvasprintmanager := [=];
help::pkg.display.viewer.objs.viewercanvasprintmanager.m := [=];
help::pkg.display.viewer.objs.viewercanvasprintmanager.c := [=];
help::pkg.display.viewer.objs.viewercanvasprintmanager.d := 'Tool for managing the printing of canvases of \VdisplaypanelTs';
help::pkg.display.viewer.objs.viewercanvasprintmanager.c.viewercanvasprintmanager := [=];
help::pkg.display.viewer.objs.viewercanvasprintmanager.c.viewercanvasprintmanager.d := 'Create a \VcanvasprintMT';
help::pkg.display.viewer.objs.viewercanvasprintmanager.c.viewercanvasprintmanager.a.displaypanel := [=];
help::pkg.display.viewer.objs.viewercanvasprintmanager.c.viewercanvasprintmanager.a.displaypanel.d := 'The \VdisplaypanelT\ which will use this \VcanvasprintMT';
help::pkg.display.viewer.objs.viewercanvasprintmanager.c.viewercanvasprintmanager.a.displaypanel.def := '';
help::pkg.display.viewer.objs.viewercanvasprintmanager.c.viewercanvasprintmanager.a.displaypanel.a := '\VdisplaypanelT';
help::pkg.display.viewer.objs.viewercanvasprintmanager.c.viewercanvasprintmanager.s := 'viewercanvasprintmanager(displaypanel)';
help::pkg.display.viewer.objs.viewercanvasprintmanager.m.type := [=];
help::pkg.display.viewer.objs.viewercanvasprintmanager.m.type.d := 'Return the type of this \tool';
help::pkg.display.viewer.objs.viewercanvasprintmanager.m.type.s := 'type()';
help::pkg.display.viewer.objs.viewercanvasprintmanager.m.viewer := [=];
help::pkg.display.viewer.objs.viewercanvasprintmanager.m.viewer.d := 'Return the \VT\ which owns this \tool';
help::pkg.display.viewer.objs.viewercanvasprintmanager.m.viewer.s := 'viewer()';
help::pkg.display.viewer.objs.viewercanvasprintmanager.m.done := [=];
help::pkg.display.viewer.objs.viewercanvasprintmanager.m.done.d := 'Close down (destroy) this \VcanvasprintMT';
help::pkg.display.viewer.objs.viewercanvasprintmanager.m.done.s := 'done()';
help::pkg.display.viewer.objs.viewercanvasprintmanager.m.gui := [=];
help::pkg.display.viewer.objs.viewercanvasprintmanager.m.gui.d := 'Create a new \guilong\ for this \tool';
help::pkg.display.viewer.objs.viewercanvasprintmanager.m.gui.a.parent := [=];
help::pkg.display.viewer.objs.viewercanvasprintmanager.m.gui.a.parent.d := 'parent frame for \guishort';
help::pkg.display.viewer.objs.viewercanvasprintmanager.m.gui.a.parent.def := 'F';
help::pkg.display.viewer.objs.viewercanvasprintmanager.m.gui.a.parent.a := 'agent or F';
help::pkg.display.viewer.objs.viewercanvasprintmanager.m.gui.a.show := [=];
help::pkg.display.viewer.objs.viewercanvasprintmanager.m.gui.a.show.d := 'map the \guishort\ to the screen immediately?';
help::pkg.display.viewer.objs.viewercanvasprintmanager.m.gui.a.show.def := 'T';
help::pkg.display.viewer.objs.viewercanvasprintmanager.m.gui.a.show.a := 'Boolean';
help::pkg.display.viewer.objs.viewercanvasprintmanager.m.gui.a.hasdismiss := [=];
help::pkg.display.viewer.objs.viewercanvasprintmanager.m.gui.a.hasdismiss.d := 'place a \' Dismiss\'  button in the \guishort?';
help::pkg.display.viewer.objs.viewercanvasprintmanager.m.gui.a.hasdismiss.def := 'F';
help::pkg.display.viewer.objs.viewercanvasprintmanager.m.gui.a.hasdismiss.a := 'Boolean';
help::pkg.display.viewer.objs.viewercanvasprintmanager.m.gui.a.hasdone := [=];
help::pkg.display.viewer.objs.viewercanvasprintmanager.m.gui.a.hasdone.d := 'place a \' Done\'  button in the \guishort?';
help::pkg.display.viewer.objs.viewercanvasprintmanager.m.gui.a.hasdone.def := 'F';
help::pkg.display.viewer.objs.viewercanvasprintmanager.m.gui.a.hasdone.a := 'Boolean';
help::pkg.display.viewer.objs.viewercanvasprintmanager.m.gui.a.widgetset := [=];
help::pkg.display.viewer.objs.viewercanvasprintmanager.m.gui.a.widgetset.d := '\widgetserverT\ to use for the \guishort';
help::pkg.display.viewer.objs.viewercanvasprintmanager.m.gui.a.widgetset.def := 'unset';
help::pkg.display.viewer.objs.viewercanvasprintmanager.m.gui.a.widgetset.a := '\widgetserverT';
help::pkg.display.viewer.objs.viewercanvasprintmanager.m.gui.s := 'gui(parent, show, hasdismiss, hasdone, widgetset)';
help::pkg.display.viewer.objs.viewercanvasprintmanager.m.writeps := [=];
help::pkg.display.viewer.objs.viewercanvasprintmanager.m.writeps.d := 'Write a PostScript file';
help::pkg.display.viewer.objs.viewercanvasprintmanager.m.writeps.a.filename := [=];
help::pkg.display.viewer.objs.viewercanvasprintmanager.m.writeps.a.filename.d := 'name of file to write';
help::pkg.display.viewer.objs.viewercanvasprintmanager.m.writeps.a.filename.def := 'unset';
help::pkg.display.viewer.objs.viewercanvasprintmanager.m.writeps.a.filename.a := 'string or unset';
help::pkg.display.viewer.objs.viewercanvasprintmanager.m.writeps.a.media := [=];
help::pkg.display.viewer.objs.viewercanvasprintmanager.m.writeps.a.media.d := 'paper type';
help::pkg.display.viewer.objs.viewercanvasprintmanager.m.writeps.a.media.def := '\' A4\' ';
help::pkg.display.viewer.objs.viewercanvasprintmanager.m.writeps.a.media.a := '\' A4\'  \' LETTER\' ';
help::pkg.display.viewer.objs.viewercanvasprintmanager.m.writeps.a.landscape := [=];
help::pkg.display.viewer.objs.viewercanvasprintmanager.m.writeps.a.landscape.d := 'print in landscape mode?';
help::pkg.display.viewer.objs.viewercanvasprintmanager.m.writeps.a.landscape.def := 'F';
help::pkg.display.viewer.objs.viewercanvasprintmanager.m.writeps.a.landscape.a := 'boolean';
help::pkg.display.viewer.objs.viewercanvasprintmanager.m.writeps.a.dpi := [=];
help::pkg.display.viewer.objs.viewercanvasprintmanager.m.writeps.a.dpi.d := 'resolution of output in dots per inch';
help::pkg.display.viewer.objs.viewercanvasprintmanager.m.writeps.a.dpi.def := '100';
help::pkg.display.viewer.objs.viewercanvasprintmanager.m.writeps.a.dpi.a := 'integer';
help::pkg.display.viewer.objs.viewercanvasprintmanager.m.writeps.a.zoom := [=];
help::pkg.display.viewer.objs.viewercanvasprintmanager.m.writeps.a.zoom.d := 'scaling of output';
help::pkg.display.viewer.objs.viewercanvasprintmanager.m.writeps.a.zoom.def := '1.0';
help::pkg.display.viewer.objs.viewercanvasprintmanager.m.writeps.a.zoom.a := 'float in (0,1]';
help::pkg.display.viewer.objs.viewercanvasprintmanager.m.writeps.a.eps := [=];
help::pkg.display.viewer.objs.viewercanvasprintmanager.m.writeps.a.eps.d := 'generate encapsulated PostScript output';
help::pkg.display.viewer.objs.viewercanvasprintmanager.m.writeps.a.eps.def := 'F';
help::pkg.display.viewer.objs.viewercanvasprintmanager.m.writeps.a.eps.a := 'boolean';
help::pkg.display.viewer.objs.viewercanvasprintmanager.m.writeps.s := 'writeps(filename, media, landscape, dpi, zoom, eps)';
help::pkg.display.viewer.objs.viewercanvasprintmanager.m.writexpm := [=];
help::pkg.display.viewer.objs.viewercanvasprintmanager.m.writexpm.d := 'Write an X11 Pixmap file';
help::pkg.display.viewer.objs.viewercanvasprintmanager.m.writexpm.a.filename := [=];
help::pkg.display.viewer.objs.viewercanvasprintmanager.m.writexpm.a.filename.d := 'name of file to write';
help::pkg.display.viewer.objs.viewercanvasprintmanager.m.writexpm.a.filename.def := 'unset';
help::pkg.display.viewer.objs.viewercanvasprintmanager.m.writexpm.a.filename.a := 'string or unset';
help::pkg.display.viewer.objs.viewercanvasprintmanager.m.writexpm.s := 'writexpm(filename)';
help::pkg.display.viewer.objs.viewercolormapmanager := [=];
help::pkg.display.viewer.objs.viewercolormapmanager.m := [=];
help::pkg.display.viewer.objs.viewercolormapmanager.c := [=];
help::pkg.display.viewer.objs.viewercolormapmanager.d := 'Tool for managing colormaps used by the Viewer tool';
help::pkg.display.viewer.objs.viewercolormapmanager.c.viewercolormapmanager := [=];
help::pkg.display.viewer.objs.viewercolormapmanager.c.viewercolormapmanager.d := 'Create a \VcolormapMT';
help::pkg.display.viewer.objs.viewercolormapmanager.c.viewercolormapmanager.a.viewer := [=];
help::pkg.display.viewer.objs.viewercolormapmanager.c.viewercolormapmanager.a.viewer.d := 'The \VT\ which will use this \VcolormapMT';
help::pkg.display.viewer.objs.viewercolormapmanager.c.viewercolormapmanager.a.viewer.def := '';
help::pkg.display.viewer.objs.viewercolormapmanager.c.viewercolormapmanager.a.viewer.a := '\VT';
help::pkg.display.viewer.objs.viewercolormapmanager.c.viewercolormapmanager.s := 'viewercolormapmanager(viewer)';
help::pkg.display.viewer.objs.viewercolormapmanager.m.type := [=];
help::pkg.display.viewer.objs.viewercolormapmanager.m.type.d := 'Return the type of this \tool';
help::pkg.display.viewer.objs.viewercolormapmanager.m.type.s := 'type()';
help::pkg.display.viewer.objs.viewercolormapmanager.m.viewer := [=];
help::pkg.display.viewer.objs.viewercolormapmanager.m.viewer.d := 'Return the \VT\ which manages this \tool';
help::pkg.display.viewer.objs.viewercolormapmanager.m.viewer.s := 'viewer()';
help::pkg.display.viewer.objs.viewercolormapmanager.m.done := [=];
help::pkg.display.viewer.objs.viewercolormapmanager.m.done.d := 'Close down (destroy) this \VcolormapMT';
help::pkg.display.viewer.objs.viewercolormapmanager.m.done.s := 'done()';
help::pkg.display.viewer.objs.viewercolormapmanager.m.gui := [=];
help::pkg.display.viewer.objs.viewercolormapmanager.m.gui.d := 'Create a new \guilong\ for this \tool';
help::pkg.display.viewer.objs.viewercolormapmanager.m.gui.a.parent := [=];
help::pkg.display.viewer.objs.viewercolormapmanager.m.gui.a.parent.d := 'parent frame for \guishort';
help::pkg.display.viewer.objs.viewercolormapmanager.m.gui.a.parent.def := 'F';
help::pkg.display.viewer.objs.viewercolormapmanager.m.gui.a.parent.a := 'agent or F';
help::pkg.display.viewer.objs.viewercolormapmanager.m.gui.a.show := [=];
help::pkg.display.viewer.objs.viewercolormapmanager.m.gui.a.show.d := 'map the \guishort\ to the screen immediately?';
help::pkg.display.viewer.objs.viewercolormapmanager.m.gui.a.show.def := 'T';
help::pkg.display.viewer.objs.viewercolormapmanager.m.gui.a.show.a := 'Boolean';
help::pkg.display.viewer.objs.viewercolormapmanager.m.gui.a.hasdismiss := [=];
help::pkg.display.viewer.objs.viewercolormapmanager.m.gui.a.hasdismiss.d := 'place a \' Dismiss\'  button in the \guishort?';
help::pkg.display.viewer.objs.viewercolormapmanager.m.gui.a.hasdismiss.def := 'F';
help::pkg.display.viewer.objs.viewercolormapmanager.m.gui.a.hasdismiss.a := 'Boolean';
help::pkg.display.viewer.objs.viewercolormapmanager.m.gui.a.hasdone := [=];
help::pkg.display.viewer.objs.viewercolormapmanager.m.gui.a.hasdone.d := 'place a \' Done\'  button in the \guishort?';
help::pkg.display.viewer.objs.viewercolormapmanager.m.gui.a.hasdone.def := 'F';
help::pkg.display.viewer.objs.viewercolormapmanager.m.gui.a.hasdone.a := 'Boolean';
help::pkg.display.viewer.objs.viewercolormapmanager.m.gui.a.widgetset := [=];
help::pkg.display.viewer.objs.viewercolormapmanager.m.gui.a.widgetset.d := '\widgetserverT\ to use for the \guishort';
help::pkg.display.viewer.objs.viewercolormapmanager.m.gui.a.widgetset.def := 'dws';
help::pkg.display.viewer.objs.viewercolormapmanager.m.gui.a.widgetset.a := '\widgetserverT';
help::pkg.display.viewer.objs.viewercolormapmanager.m.gui.s := 'gui(parent, show, hasdismiss, hasdone, widgetset)';
help::pkg.display.viewer.objs.viewercolormapmanager.m.colormapnames := [=];
help::pkg.display.viewer.objs.viewercolormapmanager.m.colormapnames.d := 'Return the names of the available colormaps';
help::pkg.display.viewer.objs.viewercolormapmanager.m.colormapnames.s := 'colormapnames()';
help::pkg.display.viewer.objs.viewercolormapmanager.m.colormap := [=];
help::pkg.display.viewer.objs.viewercolormapmanager.m.colormap.d := 'Return a handle to a named colormap';
help::pkg.display.viewer.objs.viewercolormapmanager.m.colormap.a.name := [=];
help::pkg.display.viewer.objs.viewercolormapmanager.m.colormap.a.name.d := 'name of requested colormap';
help::pkg.display.viewer.objs.viewercolormapmanager.m.colormap.a.name.def := '';
help::pkg.display.viewer.objs.viewercolormapmanager.m.colormap.a.name.a := 'string';
help::pkg.display.viewer.objs.viewercolormapmanager.m.colormap.s := 'colormap(name)';
help::pkg.display.viewer.objs.viewercolormapmanager.m.nmaps := [=];
help::pkg.display.viewer.objs.viewercolormapmanager.m.nmaps.d := 'Return the number of colormaps available';
help::pkg.display.viewer.objs.viewercolormapmanager.m.nmaps.s := 'nmaps()';
help::pkg.display.viewer.objs.viewercolormapmanager.m.getbrightness := [=];
help::pkg.display.viewer.objs.viewercolormapmanager.m.getbrightness.d := 'Return the brightness setting of a named colormap';
help::pkg.display.viewer.objs.viewercolormapmanager.m.getbrightness.a.name := [=];
help::pkg.display.viewer.objs.viewercolormapmanager.m.getbrightness.a.name.d := 'name of colormap to query';
help::pkg.display.viewer.objs.viewercolormapmanager.m.getbrightness.a.name.def := '';
help::pkg.display.viewer.objs.viewercolormapmanager.m.getbrightness.a.name.a := 'string';
help::pkg.display.viewer.objs.viewercolormapmanager.m.getbrightness.s := 'getbrightness(name)';
help::pkg.display.viewer.objs.viewercolormapmanager.m.setbrightness := [=];
help::pkg.display.viewer.objs.viewercolormapmanager.m.setbrightness.d := 'Set the brightness of a named colormap';
help::pkg.display.viewer.objs.viewercolormapmanager.m.setbrightness.a.name := [=];
help::pkg.display.viewer.objs.viewercolormapmanager.m.setbrightness.a.name.d := 'name of colormap to modify';
help::pkg.display.viewer.objs.viewercolormapmanager.m.setbrightness.a.name.def := '';
help::pkg.display.viewer.objs.viewercolormapmanager.m.setbrightness.a.name.a := 'string';
help::pkg.display.viewer.objs.viewercolormapmanager.m.setbrightness.a.value := [=];
help::pkg.display.viewer.objs.viewercolormapmanager.m.setbrightness.a.value.d := 'new brightness value';
help::pkg.display.viewer.objs.viewercolormapmanager.m.setbrightness.a.value.def := '';
help::pkg.display.viewer.objs.viewercolormapmanager.m.setbrightness.a.value.a := 'float in range 0 to 1';
help::pkg.display.viewer.objs.viewercolormapmanager.m.setbrightness.s := 'setbrightness(name, value)';
help::pkg.display.viewer.objs.viewercolormapmanager.m.getcontrast := [=];
help::pkg.display.viewer.objs.viewercolormapmanager.m.getcontrast.d := 'Return the contrast setting of a named colormap';
help::pkg.display.viewer.objs.viewercolormapmanager.m.getcontrast.a.name := [=];
help::pkg.display.viewer.objs.viewercolormapmanager.m.getcontrast.a.name.d := 'name of colormap to query';
help::pkg.display.viewer.objs.viewercolormapmanager.m.getcontrast.a.name.def := '';
help::pkg.display.viewer.objs.viewercolormapmanager.m.getcontrast.a.name.a := 'string';
help::pkg.display.viewer.objs.viewercolormapmanager.m.getcontrast.s := 'getcontrast(name)';
help::pkg.display.viewer.objs.viewercolormapmanager.m.setcontrast := [=];
help::pkg.display.viewer.objs.viewercolormapmanager.m.setcontrast.d := 'Set the contrast of a named colormap';
help::pkg.display.viewer.objs.viewercolormapmanager.m.setcontrast.a.name := [=];
help::pkg.display.viewer.objs.viewercolormapmanager.m.setcontrast.a.name.d := 'name of colormap to modify';
help::pkg.display.viewer.objs.viewercolormapmanager.m.setcontrast.a.name.def := '';
help::pkg.display.viewer.objs.viewercolormapmanager.m.setcontrast.a.name.a := 'string';
help::pkg.display.viewer.objs.viewercolormapmanager.m.setcontrast.a.value := [=];
help::pkg.display.viewer.objs.viewercolormapmanager.m.setcontrast.a.value.d := 'new contrast value';
help::pkg.display.viewer.objs.viewercolormapmanager.m.setcontrast.a.value.def := '';
help::pkg.display.viewer.objs.viewercolormapmanager.m.setcontrast.a.value.a := 'float in range 0 to 1';
help::pkg.display.viewer.objs.viewercolormapmanager.m.setcontrast.s := 'setcontrast(name, value)';
help::pkg.display.viewer.objs.viewercolormapmanager.m.getinvertflags := [=];
help::pkg.display.viewer.objs.viewercolormapmanager.m.getinvertflags.d := 'Get the current red, green and blue invert state';
help::pkg.display.viewer.objs.viewercolormapmanager.m.getinvertflags.a.name := [=];
help::pkg.display.viewer.objs.viewercolormapmanager.m.getinvertflags.a.name.d := 'name of colormap to query';
help::pkg.display.viewer.objs.viewercolormapmanager.m.getinvertflags.a.name.def := '';
help::pkg.display.viewer.objs.viewercolormapmanager.m.getinvertflags.a.name.a := 'string';
help::pkg.display.viewer.objs.viewercolormapmanager.m.getinvertflags.s := 'getinvertflags(name)';
help::pkg.display.viewer.objs.viewercolormapmanager.m.setinvertflags := [=];
help::pkg.display.viewer.objs.viewercolormapmanager.m.setinvertflags.d := 'Set the red, green and blue invert state of a colormap';
help::pkg.display.viewer.objs.viewercolormapmanager.m.setinvertflags.a.name := [=];
help::pkg.display.viewer.objs.viewercolormapmanager.m.setinvertflags.a.name.d := 'name of colormap to modify';
help::pkg.display.viewer.objs.viewercolormapmanager.m.setinvertflags.a.name.def := '';
help::pkg.display.viewer.objs.viewercolormapmanager.m.setinvertflags.a.name.a := 'string';
help::pkg.display.viewer.objs.viewercolormapmanager.m.setinvertflags.a.value := [=];
help::pkg.display.viewer.objs.viewercolormapmanager.m.setinvertflags.a.value.d := 'length 3 vector describing invert state';
help::pkg.display.viewer.objs.viewercolormapmanager.m.setinvertflags.a.value.def := '';
help::pkg.display.viewer.objs.viewercolormapmanager.m.setinvertflags.a.value.a := 'vector of booleans';
help::pkg.display.viewer.objs.viewercolormapmanager.m.setinvertflags.s := 'setinvertflags(name, value)';
help::pkg.display.viewer.objs.viewercolormapmanager.m.reset := [=];
help::pkg.display.viewer.objs.viewercolormapmanager.m.reset.d := 'reset the named colormap to its default state';
help::pkg.display.viewer.objs.viewercolormapmanager.m.reset.a.name := [=];
help::pkg.display.viewer.objs.viewercolormapmanager.m.reset.a.name.d := 'name of colormap to restore to initial state';
help::pkg.display.viewer.objs.viewercolormapmanager.m.reset.a.name.def := '';
help::pkg.display.viewer.objs.viewercolormapmanager.m.reset.a.name.a := 'string';
help::pkg.display.viewer.objs.viewercolormapmanager.m.reset.s := 'reset(name)';
help::pkg.display.viewer.objs.viewercolormapmanager.m.resetall := [=];
help::pkg.display.viewer.objs.viewercolormapmanager.m.resetall.d := 'reset all colormaps to initial state';
help::pkg.display.viewer.objs.viewercolormapmanager.m.resetall.s := 'resetall()';
help::pkg.display.viewer.objs.viewerdisplaydata := [=];
help::pkg.display.viewer.objs.viewerdisplaydata.m := [=];
help::pkg.display.viewer.objs.viewerdisplaydata.c := [=];
help::pkg.display.viewer.objs.viewerdisplaydata.d := 'Tool for managing the drawing of AIPS++\ data';
help::pkg.display.viewer.objs.viewerdisplaydata.c.viewerdisplaydata := [=];
help::pkg.display.viewer.objs.viewerdisplaydata.c.viewerdisplaydata.d := 'Create a \VdisplaydataT';
help::pkg.display.viewer.objs.viewerdisplaydata.c.viewerdisplaydata.a.viewer := [=];
help::pkg.display.viewer.objs.viewerdisplaydata.c.viewerdisplaydata.a.viewer.d := 'the \VT\ which will manage this \tool';
help::pkg.display.viewer.objs.viewerdisplaydata.c.viewerdisplaydata.a.viewer.def := '';
help::pkg.display.viewer.objs.viewerdisplaydata.c.viewerdisplaydata.a.viewer.a := '\VT';
help::pkg.display.viewer.objs.viewerdisplaydata.c.viewerdisplaydata.a.name := [=];
help::pkg.display.viewer.objs.viewerdisplaydata.c.viewerdisplaydata.a.name.d := 'a unique name for this \VdisplaydataT';
help::pkg.display.viewer.objs.viewerdisplaydata.c.viewerdisplaydata.a.name.def := '';
help::pkg.display.viewer.objs.viewerdisplaydata.c.viewerdisplaydata.a.name.a := 'string';
help::pkg.display.viewer.objs.viewerdisplaydata.c.viewerdisplaydata.a.displaytype := [=];
help::pkg.display.viewer.objs.viewerdisplaydata.c.viewerdisplaydata.a.displaytype.d := 'a string describing the type of drawing';
help::pkg.display.viewer.objs.viewerdisplaydata.c.viewerdisplaydata.a.displaytype.def := '';
help::pkg.display.viewer.objs.viewerdisplaydata.c.viewerdisplaydata.a.displaytype.a := '\' raster\' , \' contour\' , \' simpleaxes\'  or \' skycatalog\' ';
help::pkg.display.viewer.objs.viewerdisplaydata.c.viewerdisplaydata.a.data := [=];
help::pkg.display.viewer.objs.viewerdisplaydata.c.viewerdisplaydata.a.data.d := 'The data source to draw, either an AIPS++\ \image\ name, or a \glish\ array';
help::pkg.display.viewer.objs.viewerdisplaydata.c.viewerdisplaydata.a.data.def := '';
help::pkg.display.viewer.objs.viewerdisplaydata.c.viewerdisplaydata.a.data.a := 'string or array';
help::pkg.display.viewer.objs.viewerdisplaydata.c.viewerdisplaydata.s := 'viewerdisplaydata(viewer, name, displaytype, data)';
help::pkg.display.viewer.objs.viewerdisplaydata.m.addtouserchoicelist := [=];
help::pkg.display.viewer.objs.viewerdisplaydata.m.addtouserchoicelist.d := 'Add a new possibility to an option which is of type  userchoice ';
help::pkg.display.viewer.objs.viewerdisplaydata.m.addtouserchoicelist.a.vl := [=];
help::pkg.display.viewer.objs.viewerdisplaydata.m.addtouserchoicelist.a.vl.d := 'record with fields \' param\'  which is the string identifier of the option, and \' newitem\'  which is the new option to add to the list.';
help::pkg.display.viewer.objs.viewerdisplaydata.m.addtouserchoicelist.a.vl.def := '';
help::pkg.display.viewer.objs.viewerdisplaydata.m.addtouserchoicelist.a.vl.a := 'record';
help::pkg.display.viewer.objs.viewerdisplaydata.m.addtouserchoicelist.s := 'addtouserchoicelist(vl)';
help::pkg.display.viewer.objs.viewerdisplaydata.m.classtype := [=];
help::pkg.display.viewer.objs.viewerdisplaydata.m.classtype.d := 'Return the class type of this \VdisplaydataT';
help::pkg.display.viewer.objs.viewerdisplaydata.m.classtype.s := 'classtype()';
help::pkg.display.viewer.objs.viewerdisplaydata.m.ddd := [=];
help::pkg.display.viewer.objs.viewerdisplaydata.m.ddd.d := 'Return the drawingdisplaydata agent';
help::pkg.display.viewer.objs.viewerdisplaydata.m.ddd.s := 'ddd()';
help::pkg.display.viewer.objs.viewerdisplaydata.m.ddproxy := [=];
help::pkg.display.viewer.objs.viewerdisplaydata.m.ddproxy.d := 'Return the true displaydata agent';
help::pkg.display.viewer.objs.viewerdisplaydata.m.ddproxy.s := 'ddproxy()';
help::pkg.display.viewer.objs.viewerdisplaydata.m.displaytype := [=];
help::pkg.display.viewer.objs.viewerdisplaydata.m.displaytype.d := 'Return the displaytype';
help::pkg.display.viewer.objs.viewerdisplaydata.m.displaytype.s := 'displaytype()';
help::pkg.display.viewer.objs.viewerdisplaydata.m.done := [=];
help::pkg.display.viewer.objs.viewerdisplaydata.m.done.d := 'Close down (destroy) this \VdisplaydataT';
help::pkg.display.viewer.objs.viewerdisplaydata.m.done.s := 'done()';
help::pkg.display.viewer.objs.viewerdisplaydata.m.filename := [=];
help::pkg.display.viewer.objs.viewerdisplaydata.m.filename.d := 'Return a handle to the underlying image/array';
help::pkg.display.viewer.objs.viewerdisplaydata.m.filename.s := 'filename()';
help::pkg.display.viewer.objs.viewerdisplaydata.m.getoptions := [=];
help::pkg.display.viewer.objs.viewerdisplaydata.m.getoptions.d := 'Return a record describing the state of this \tool';
help::pkg.display.viewer.objs.viewerdisplaydata.m.getoptions.s := 'getoptions()';
help::pkg.display.viewer.objs.viewerdisplaydata.m.hasbeam := [=];
help::pkg.display.viewer.objs.viewerdisplaydata.m.hasbeam.d := 'has this \VdisplaydataT a restoring beam defined';
help::pkg.display.viewer.objs.viewerdisplaydata.m.hasbeam.s := 'hasbeam()';
help::pkg.display.viewer.objs.viewerdisplaydata.m.name := [=];
help::pkg.display.viewer.objs.viewerdisplaydata.m.name.d := 'Return the (unique) name of this \tool';
help::pkg.display.viewer.objs.viewerdisplaydata.m.name.s := 'name()';
help::pkg.display.viewer.objs.viewerdisplaydata.m.newdisplaydatagui := [=];
help::pkg.display.viewer.objs.viewerdisplaydata.m.newdisplaydatagui.d := 'Create a new \guilong\ for this \tool';
help::pkg.display.viewer.objs.viewerdisplaydata.m.newdisplaydatagui.a.parent := [=];
help::pkg.display.viewer.objs.viewerdisplaydata.m.newdisplaydatagui.a.parent.d := 'parent frame for \guishort';
help::pkg.display.viewer.objs.viewerdisplaydata.m.newdisplaydatagui.a.parent.def := 'F';
help::pkg.display.viewer.objs.viewerdisplaydata.m.newdisplaydatagui.a.parent.a := 'agent or F';
help::pkg.display.viewer.objs.viewerdisplaydata.m.newdisplaydatagui.a.uneditable := [=];
help::pkg.display.viewer.objs.viewerdisplaydata.m.newdisplaydatagui.a.uneditable.d := 'parameters which should not be editable';
help::pkg.display.viewer.objs.viewerdisplaydata.m.newdisplaydatagui.a.uneditable.def := '``\' \' ';
help::pkg.display.viewer.objs.viewerdisplaydata.m.newdisplaydatagui.a.uneditable.a := 'vector of strings';
help::pkg.display.viewer.objs.viewerdisplaydata.m.newdisplaydatagui.a.show := [=];
help::pkg.display.viewer.objs.viewerdisplaydata.m.newdisplaydatagui.a.show.d := 'map the \guishort\ to the screen immediately?';
help::pkg.display.viewer.objs.viewerdisplaydata.m.newdisplaydatagui.a.show.def := 'T';
help::pkg.display.viewer.objs.viewerdisplaydata.m.newdisplaydatagui.a.show.a := 'Boolean';
help::pkg.display.viewer.objs.viewerdisplaydata.m.newdisplaydatagui.a.hasdismiss := [=];
help::pkg.display.viewer.objs.viewerdisplaydata.m.newdisplaydatagui.a.hasdismiss.d := 'place a \' Dismiss\'  button in the \guishort?';
help::pkg.display.viewer.objs.viewerdisplaydata.m.newdisplaydatagui.a.hasdismiss.def := 'F';
help::pkg.display.viewer.objs.viewerdisplaydata.m.newdisplaydatagui.a.hasdismiss.a := 'Boolean';
help::pkg.display.viewer.objs.viewerdisplaydata.m.newdisplaydatagui.a.hasdone := [=];
help::pkg.display.viewer.objs.viewerdisplaydata.m.newdisplaydatagui.a.hasdone.d := 'place a \' Done\'  button in the \guishort?';
help::pkg.display.viewer.objs.viewerdisplaydata.m.newdisplaydatagui.a.hasdone.def := 'F';
help::pkg.display.viewer.objs.viewerdisplaydata.m.newdisplaydatagui.a.hasdone.a := 'Boolean';
help::pkg.display.viewer.objs.viewerdisplaydata.m.newdisplaydatagui.a.widgetset := [=];
help::pkg.display.viewer.objs.viewerdisplaydata.m.newdisplaydatagui.a.widgetset.d := '\widgetserverT\ to use for the \guishort';
help::pkg.display.viewer.objs.viewerdisplaydata.m.newdisplaydatagui.a.widgetset.def := 'dws';
help::pkg.display.viewer.objs.viewerdisplaydata.m.newdisplaydatagui.a.widgetset.a := '\widgetserverT';
help::pkg.display.viewer.objs.viewerdisplaydata.m.newdisplaydatagui.s := 'newdisplaydatagui(parent, uneditable, show, hasdismiss, hasdone, widgetset)';
help::pkg.display.viewer.objs.viewerdisplaydata.m.pixeltype := [=];
help::pkg.display.viewer.objs.viewerdisplaydata.m.pixeltype.d := 'Return the data type of the pixels';
help::pkg.display.viewer.objs.viewerdisplaydata.m.pixeltype.s := 'pixeltype()';
help::pkg.display.viewer.objs.viewerdisplaydata.m.restoreoptions := [=];
help::pkg.display.viewer.objs.viewerdisplaydata.m.restoreoptions.d := 'Restore a previously saved state of this \tool';
help::pkg.display.viewer.objs.viewerdisplaydata.m.restoreoptions.a.setname := [=];
help::pkg.display.viewer.objs.viewerdisplaydata.m.restoreoptions.a.setname.d := 'name of state to retrieve';
help::pkg.display.viewer.objs.viewerdisplaydata.m.restoreoptions.a.setname.def := '';
help::pkg.display.viewer.objs.viewerdisplaydata.m.restoreoptions.a.setname.a := 'string';
help::pkg.display.viewer.objs.viewerdisplaydata.m.restoreoptions.s := 'restoreoptions(setname)';
help::pkg.display.viewer.objs.viewerdisplaydata.m.saveoptions := [=];
help::pkg.display.viewer.objs.viewerdisplaydata.m.saveoptions.d := 'Save the state of this \tool';
help::pkg.display.viewer.objs.viewerdisplaydata.m.saveoptions.a.setname := [=];
help::pkg.display.viewer.objs.viewerdisplaydata.m.saveoptions.a.setname.d := 'name under which to store this state';
help::pkg.display.viewer.objs.viewerdisplaydata.m.saveoptions.a.setname.def := '';
help::pkg.display.viewer.objs.viewerdisplaydata.m.saveoptions.a.setname.a := 'string';
help::pkg.display.viewer.objs.viewerdisplaydata.m.saveoptions.s := 'saveoptions(setname)';
help::pkg.display.viewer.objs.viewerdisplaydata.m.setoptions := [=];
help::pkg.display.viewer.objs.viewerdisplaydata.m.setoptions.d := 'Set the state of this \tool';
help::pkg.display.viewer.objs.viewerdisplaydata.m.setoptions.a.newopts := [=];
help::pkg.display.viewer.objs.viewerdisplaydata.m.setoptions.a.newopts.d := 'options record describing requested state';
help::pkg.display.viewer.objs.viewerdisplaydata.m.setoptions.a.newopts.def := '';
help::pkg.display.viewer.objs.viewerdisplaydata.m.setoptions.a.newopts.a := 'record';
help::pkg.display.viewer.objs.viewerdisplaydata.m.setoptions.a.emit := [=];
help::pkg.display.viewer.objs.viewerdisplaydata.m.setoptions.a.emit.d := 'emit the options that have been installed';
help::pkg.display.viewer.objs.viewerdisplaydata.m.setoptions.a.emit.def := 'T';
help::pkg.display.viewer.objs.viewerdisplaydata.m.setoptions.a.emit.a := 'Boolean';
help::pkg.display.viewer.objs.viewerdisplaydata.m.setoptions.a.id := [=];
help::pkg.display.viewer.objs.viewerdisplaydata.m.setoptions.a.id.d := 'option request identification tag';
help::pkg.display.viewer.objs.viewerdisplaydata.m.setoptions.a.id.def := '-1';
help::pkg.display.viewer.objs.viewerdisplaydata.m.setoptions.a.id.a := 'Numeric';
help::pkg.display.viewer.objs.viewerdisplaydata.m.setoptions.s := 'setoptions(newopts, emit, id)';
help::pkg.display.viewer.objs.viewerdisplaydata.m.type := [=];
help::pkg.display.viewer.objs.viewerdisplaydata.m.type.d := 'Return the type of this \tool';
help::pkg.display.viewer.objs.viewerdisplaydata.m.type.s := 'type()';
help::pkg.display.viewer.objs.viewerdisplaydata.m.wedgedd := [=];
help::pkg.display.viewer.objs.viewerdisplaydata.m.wedgedd.d := 'Return the Wedge displaydata agent';
help::pkg.display.viewer.objs.viewerdisplaydata.m.wedgedd.s := 'wedgedd()';
help::pkg.display.viewer.objs.viewerdisplaydata.m.viewer := [=];
help::pkg.display.viewer.objs.viewerdisplaydata.m.viewer.d := 'Return the \VT\ which manages this \tool';
help::pkg.display.viewer.objs.viewerdisplaydata.m.viewer.s := 'viewer()';
help::pkg.display.viewer.objs.viewerdisplaydata.m.zlength := [=];
help::pkg.display.viewer.objs.viewerdisplaydata.m.zlength.d := 'Return the length of the movie axes';
help::pkg.display.viewer.objs.viewerdisplaydata.m.zlength.s := 'zlength()';
help::pkg.display.viewer.objs.viewerdisplaypanel := [=];
help::pkg.display.viewer.objs.viewerdisplaypanel.m := [=];
help::pkg.display.viewer.objs.viewerdisplaypanel.c := [=];
help::pkg.display.viewer.objs.viewerdisplaypanel.d := 'Tool for providing drawing windows (canvases)';
help::pkg.display.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel := [=];
help::pkg.display.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.d := 'Create a \VdisplaypanelT';
help::pkg.display.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.a.parent := [=];
help::pkg.display.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.a.parent.d := 'parent frame for the panel';
help::pkg.display.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.a.parent.def := 'F';
help::pkg.display.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.a.parent.a := 'agent or F';
help::pkg.display.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.a.viewer := [=];
help::pkg.display.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.a.viewer.d := 'the \VT\ which will manager this \tool';
help::pkg.display.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.a.viewer.def := '';
help::pkg.display.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.a.viewer.a := '\VT';
help::pkg.display.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.a.width := [=];
help::pkg.display.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.a.width.d := 'width in pixels of the drawing area';
help::pkg.display.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.a.width.def := '250';
help::pkg.display.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.a.width.a := 'integer';
help::pkg.display.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.a.height := [=];
help::pkg.display.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.a.height.d := 'height in pixels of the drawing area';
help::pkg.display.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.a.height.def := '250';
help::pkg.display.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.a.height.a := 'integer';
help::pkg.display.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.a.nx := [=];
help::pkg.display.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.a.nx.d := 'number of panels in x';
help::pkg.display.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.a.nx.def := '1';
help::pkg.display.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.a.nx.a := 'integer';
help::pkg.display.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.a.nx := [=];
help::pkg.display.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.a.nx.d := 'number of panels in y';
help::pkg.display.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.a.nx.def := '1';
help::pkg.display.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.a.nx.a := 'integer';
help::pkg.display.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.a.maptype := [=];
help::pkg.display.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.a.maptype.d := 'how colors will be addressed on this \VdisplaypanelT';
help::pkg.display.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.a.maptype.def := '\' index\' ';
help::pkg.display.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.a.maptype.a := '\' index\'  \' rgb\'  \' hsv\' ';
help::pkg.display.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.a.newcmap := [=];
help::pkg.display.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.a.newcmap.d := 'install a private colormap? (ignored if a parent frame is provided)';
help::pkg.display.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.a.newcmap.def := 'F';
help::pkg.display.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.a.newcmap.a := 'boolean';
help::pkg.display.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.a.mincolors := [=];
help::pkg.display.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.a.mincolors.d := 'minimum number of colors to allocate';
help::pkg.display.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.a.mincolors.def := 'unset';
help::pkg.display.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.a.mincolors.a := 'Integer or unset';
help::pkg.display.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.a.maxcolors := [=];
help::pkg.display.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.a.maxcolors.d := 'maximum number of colors to allocate';
help::pkg.display.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.a.maxcolors.def := 'unset';
help::pkg.display.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.a.maxcolors.a := 'Integer or unset';
help::pkg.display.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.a.autoregister := [=];
help::pkg.display.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.a.autoregister.d := 'accept auto-register data on this \VdisplaypanelT?';
help::pkg.display.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.a.autoregister.def := 'F';
help::pkg.display.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.a.autoregister.a := 'boolean';
help::pkg.display.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.a.holdsdata := [=];
help::pkg.display.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.a.holdsdata.d := 'is this \VdisplaypanelT\ going to hold data?';
help::pkg.display.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.a.holdsdata.def := 'T';
help::pkg.display.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.a.holdsdata.a := 'boolean';
help::pkg.display.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.a.show := [=];
help::pkg.display.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.a.show.d := 'show the \VdisplaypanelT?';
help::pkg.display.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.a.show.def := 'T';
help::pkg.display.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.a.show.a := 'boolean';
help::pkg.display.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.a.widgetset := [=];
help::pkg.display.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.a.widgetset.d := '\widgetserverT\ to use to build the \guishort';
help::pkg.display.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.a.widgetset.def := 'unset';
help::pkg.display.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.a.widgetset.a := '\widgetserverT\ or unset';
help::pkg.display.viewer.objs.viewerdisplaypanel.c.viewerdisplaypanel.s := 'viewerdisplaypanel(parent, viewer, width, height, nx, nx, maptype, newcmap, mincolors, maxcolors, autoregister, holdsdata, show, widgetset)';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.addgui := [=];
help::pkg.display.viewer.objs.viewerdisplaypanel.m.addgui.d := 'Add various \guishort\ components to this \VdisplaypanelT';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.addgui.a.guihasmenubar := [=];
help::pkg.display.viewer.objs.viewerdisplaypanel.m.addgui.a.guihasmenubar.d := 'add a menu bar (top)?';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.addgui.a.guihasmenubar.def := 'T';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.addgui.a.guihasmenubar.a := 'boolean';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.addgui.a.guihascontrolbox := [=];
help::pkg.display.viewer.objs.viewerdisplaypanel.m.addgui.a.guihascontrolbox.d := 'add a control box (left)?';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.addgui.a.guihascontrolbox.def := 'T';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.addgui.a.guihascontrolbox.a := 'boolean';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.addgui.a.guihasanimator := [=];
help::pkg.display.viewer.objs.viewerdisplaypanel.m.addgui.a.guihasanimator.d := 'add an animator/tapedeck (right)?';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.addgui.a.guihasanimator.def := 'T';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.addgui.a.guihasanimator.a := 'boolean';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.addgui.a.guihasbuttons := [=];
help::pkg.display.viewer.objs.viewerdisplaypanel.m.addgui.a.guihasbuttons.d := 'add buttons (bottom)?';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.addgui.a.guihasbuttons.def := 'T';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.addgui.a.guihasbuttons.a := 'boolean';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.addgui.a.hasdismiss := [=];
help::pkg.display.viewer.objs.viewerdisplaypanel.m.addgui.a.hasdismiss.d := 'add a ``Dismiss\' \'  button to the \guishort?';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.addgui.a.hasdismiss.def := 'unset';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.addgui.a.hasdismiss.a := 'unset or boolean';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.addgui.a.hasdone := [=];
help::pkg.display.viewer.objs.viewerdisplaypanel.m.addgui.a.hasdone.d := 'add a ``Done\' \'  button to the \guishort?';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.addgui.a.hasdone.def := 'unset';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.addgui.a.hasdone.a := 'unset or boolean';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.addgui.a.isolationmode := [=];
help::pkg.display.viewer.objs.viewerdisplaypanel.m.addgui.a.isolationmode.d := 'prevent user accessing other components of this \VT?';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.addgui.a.isolationmode.def := 'F';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.addgui.a.isolationmode.a := 'boolean';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.addgui.s := 'addgui(guihasmenubar, guihascontrolbox, guihasanimator, guihasbuttons, hasdismiss, hasdone, isolationmode)';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.adjust := [=];
help::pkg.display.viewer.objs.viewerdisplaypanel.m.adjust.d := 'Display adjustment panel for \VdisplaydataTs';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.adjust.a.displaydata := [=];
help::pkg.display.viewer.objs.viewerdisplaypanel.m.adjust.a.displaydata.d := 'name of displaydata';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.adjust.a.displaydata.def := 'F';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.adjust.a.displaydata.a := 'string';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.adjust.s := 'adjust(displaydata)';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.animator := [=];
help::pkg.display.viewer.objs.viewerdisplaypanel.m.animator.d := 'Return the \VanimatorT\ used by this \tool';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.animator.s := 'animator()';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.annotationdd := [=];
help::pkg.display.viewer.objs.viewerdisplaypanel.m.annotationdd.d := 'Return the agent of the annotation layer';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.annotationdd.s := 'annotationdd()';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.autoregister := [=];
help::pkg.display.viewer.objs.viewerdisplaypanel.m.autoregister.d := 'Set or query the auto-register state of this \VdisplaypanelT';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.autoregister.a.set := [=];
help::pkg.display.viewer.objs.viewerdisplaypanel.m.autoregister.a.set.d := 'Auto-register on or off';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.autoregister.a.set.def := 'unset';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.autoregister.a.set.a := 'boolean or unset';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.autoregister.s := 'autoregister(set)';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.canvasmanager := [=];
help::pkg.display.viewer.objs.viewerdisplaypanel.m.canvasmanager.d := 'Return the \VcanvasMT\ used by this \tool';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.canvasmanager.s := 'canvasmanager()';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.canvasprintmanager := [=];
help::pkg.display.viewer.objs.viewerdisplaypanel.m.canvasprintmanager.d := 'Return the \VcanvasprintMT\ used by this \VdisplaypanelT';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.canvasprintmanager.s := 'canvasprintmanager()';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.viewer := [=];
help::pkg.display.viewer.objs.viewerdisplaypanel.m.viewer.d := 'Return the \VT\ which manages this \tool';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.viewer.s := 'viewer()';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.dying := [=];
help::pkg.display.viewer.objs.viewerdisplaypanel.m.dying.d := 'Is this \VdisplaypanelT\ in the process of destroying itself?';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.dying.s := 'dying()';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.done := [=];
help::pkg.display.viewer.objs.viewerdisplaypanel.m.done.d := 'Close down (destroy) this \VdisplaypanelT';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.done.s := 'done()';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.upperframe := [=];
help::pkg.display.viewer.objs.viewerdisplaypanel.m.upperframe.d := 'Return the upper frame in the \VdisplaypanelT\ window';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.upperframe.s := 'upperframe()';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.lowerframe := [=];
help::pkg.display.viewer.objs.viewerdisplaypanel.m.lowerframe.d := 'Return the lower frame in the \VdisplaypanelT\ window';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.lowerframe.s := 'lowerframe()';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.leftframe := [=];
help::pkg.display.viewer.objs.viewerdisplaypanel.m.leftframe.d := 'Return the left frame in the \VdisplaypanelT\ window';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.leftframe.s := 'leftframe()';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.rightframe := [=];
help::pkg.display.viewer.objs.viewerdisplaypanel.m.rightframe.d := 'Return the right frame in the \VdisplaypanelT\ window';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.rightframe.s := 'rightframe()';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.writexpm := [=];
help::pkg.display.viewer.objs.viewerdisplaypanel.m.writexpm.d := 'Write an X11 Pixmap of the \VdisplaypanelT\ to disk';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.writexpm.a.filename := [=];
help::pkg.display.viewer.objs.viewerdisplaypanel.m.writexpm.a.filename.d := 'name of X11 Pixmap file';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.writexpm.a.filename.def := '';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.writexpm.a.filename.a := 'string';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.writexpm.s := 'writexpm(filename)';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.annotator := [=];
help::pkg.display.viewer.objs.viewerdisplaypanel.m.annotator.d := 'Return the viewerannotations created by this \VdisplaypanelT\ on construction';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.annotator.s := 'annotator()';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.newcmap := [=];
help::pkg.display.viewer.objs.viewerdisplaypanel.m.newcmap.d := 'Query whether this \VdisplaypanelT\ is using a new colormap';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.newcmap.s := 'newcmap()';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.holdsdata := [=];
help::pkg.display.viewer.objs.viewerdisplaypanel.m.holdsdata.d := 'Returns whether this \VdisplaypanelT\ can hold \VdisplaydataTs';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.holdsdata.s := 'holdsdata()';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.status := [=];
help::pkg.display.viewer.objs.viewerdisplaypanel.m.status.d := 'Return a record describing various attributes of the \VdisplaypanelT';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.status.s := 'status()';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.getoptions := [=];
help::pkg.display.viewer.objs.viewerdisplaypanel.m.getoptions.d := 'Return a record describing some modifiable state of this \tool';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.getoptions.s := 'getoptions()';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.setoptions := [=];
help::pkg.display.viewer.objs.viewerdisplaypanel.m.setoptions.d := 'Set the modifiable state of this \tool';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.setoptions.a.options := [=];
help::pkg.display.viewer.objs.viewerdisplaypanel.m.setoptions.a.options.d := 'options record describing the requested state';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.setoptions.a.options.def := '';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.setoptions.a.options.a := 'record';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.setoptions.s := 'setoptions(options)';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.hold := [=];
help::pkg.display.viewer.objs.viewerdisplaypanel.m.hold.d := 'Prevent refreshes occuring on this \VdisplaypanelT';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.hold.s := 'hold()';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.release := [=];
help::pkg.display.viewer.objs.viewerdisplaypanel.m.release.d := 'Allow refreshes to occur on this \VdisplaypanelT';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.release.s := 'release()';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.disablecontrols := [=];
help::pkg.display.viewer.objs.viewerdisplaypanel.m.disablecontrols.d := 'Temporarily disable the controls on this \VdisplaypanelT';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.disablecontrols.s := 'disablecontrols()';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.enablecontrols := [=];
help::pkg.display.viewer.objs.viewerdisplaypanel.m.enablecontrols.d := 'Re-enable the controls on this \VdisplaypanelT';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.enablecontrols.s := 'enablecontrols()';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.newcanvasmanagergui := [=];
help::pkg.display.viewer.objs.viewerdisplaypanel.m.newcanvasmanagergui.d := 'Create and (probably) show a new \guilong\ for this \tool s \VcanvasMT';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.newcanvasmanagergui.a.parent := [=];
help::pkg.display.viewer.objs.viewerdisplaypanel.m.newcanvasmanagergui.a.parent.d := 'parent frame in which to place the \VcanvasMT';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.newcanvasmanagergui.a.parent.def := 'F';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.newcanvasmanagergui.a.parent.a := 'agent or F';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.newcanvasmanagergui.a.show := [=];
help::pkg.display.viewer.objs.viewerdisplaypanel.m.newcanvasmanagergui.a.show.d := 'show the \VcanvasMT?';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.newcanvasmanagergui.a.show.def := 'T';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.newcanvasmanagergui.a.show.a := 'boolean';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.newcanvasmanagergui.a.hasdismiss := [=];
help::pkg.display.viewer.objs.viewerdisplaypanel.m.newcanvasmanagergui.a.hasdismiss.d := 'add a "Dismiss" button to the \guishort?';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.newcanvasmanagergui.a.hasdismiss.def := 'F';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.newcanvasmanagergui.a.hasdismiss.a := 'boolean';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.newcanvasmanagergui.a.hasdone := [=];
help::pkg.display.viewer.objs.viewerdisplaypanel.m.newcanvasmanagergui.a.hasdone.d := 'add a "Done" button to the \guishort?';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.newcanvasmanagergui.a.hasdone.def := 'F';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.newcanvasmanagergui.a.hasdone.a := 'boolean';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.newcanvasmanagergui.a.widgetset := [=];
help::pkg.display.viewer.objs.viewerdisplaypanel.m.newcanvasmanagergui.a.widgetset.d := '\widgetserverT\ to use to build the \guishort';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.newcanvasmanagergui.a.widgetset.def := 'unset';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.newcanvasmanagergui.a.widgetset.a := '\widgetserverT\ or unset';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.newcanvasmanagergui.s := 'newcanvasmanagergui(parent, show, hasdismiss, hasdone, widgetset)';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.newcanvasprintmanagergui := [=];
help::pkg.display.viewer.objs.viewerdisplaypanel.m.newcanvasprintmanagergui.d := 'Create and (probably) show a new \guilong\ for this \tool s \VcanvasprintMT';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.newcanvasprintmanagergui.a.parent := [=];
help::pkg.display.viewer.objs.viewerdisplaypanel.m.newcanvasprintmanagergui.a.parent.d := 'parent frame in which to place the \VcanvasprintMT';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.newcanvasprintmanagergui.a.parent.def := 'F';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.newcanvasprintmanagergui.a.parent.a := 'agent or F';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.newcanvasprintmanagergui.a.show := [=];
help::pkg.display.viewer.objs.viewerdisplaypanel.m.newcanvasprintmanagergui.a.show.d := 'show the \VcanvasprintMT?';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.newcanvasprintmanagergui.a.show.def := 'T';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.newcanvasprintmanagergui.a.show.a := 'boolean';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.newcanvasprintmanagergui.a.hasdismiss := [=];
help::pkg.display.viewer.objs.viewerdisplaypanel.m.newcanvasprintmanagergui.a.hasdismiss.d := 'add a "Dismiss" button to the \guishort?';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.newcanvasprintmanagergui.a.hasdismiss.def := 'F';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.newcanvasprintmanagergui.a.hasdismiss.a := 'boolean';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.newcanvasprintmanagergui.a.hasdone := [=];
help::pkg.display.viewer.objs.viewerdisplaypanel.m.newcanvasprintmanagergui.a.hasdone.d := 'add a "Done" button to the \guishort?';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.newcanvasprintmanagergui.a.hasdone.def := 'F';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.newcanvasprintmanagergui.a.hasdone.a := 'boolean';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.newcanvasprintmanagergui.a.widgetset := [=];
help::pkg.display.viewer.objs.viewerdisplaypanel.m.newcanvasprintmanagergui.a.widgetset.d := '\widgetserverT\ to use to build the \guishort';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.newcanvasprintmanagergui.a.widgetset.def := 'unset';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.newcanvasprintmanagergui.a.widgetset.a := '\widgetserverT\ or unset';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.newcanvasprintmanagergui.s := 'newcanvasprintmanagergui(parent, show, hasdismiss, hasdone, widgetset)';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.testpattern := [=];
help::pkg.display.viewer.objs.viewerdisplaypanel.m.testpattern.d := 'Turn a test pattern on or off on the \VdisplaypanelT';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.testpattern.a.onoff := [=];
help::pkg.display.viewer.objs.viewerdisplaypanel.m.testpattern.a.onoff.d := 'turn pattern on (T) or off (F)';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.testpattern.a.onoff.def := '';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.testpattern.a.onoff.a := 'boolean';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.testpattern.s := 'testpattern(onoff)';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.type := [=];
help::pkg.display.viewer.objs.viewerdisplaypanel.m.type.d := 'Return the type of this \tool';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.type.s := 'type()';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.registercolormap := [=];
help::pkg.display.viewer.objs.viewerdisplaypanel.m.registercolormap.d := 'Explicitly register a colormap on the \VdisplaypanelT';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.registercolormap.a.map := [=];
help::pkg.display.viewer.objs.viewerdisplaypanel.m.registercolormap.a.map.d := 'name of colormap to register';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.registercolormap.a.map.def := '';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.registercolormap.a.map.a := 'string';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.registercolormap.s := 'registercolormap(map)';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.unregistercolormap := [=];
help::pkg.display.viewer.objs.viewerdisplaypanel.m.unregistercolormap.d := 'Explicitly unregister a colormap on the \VdisplaypanelT';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.unregistercolormap.a.map := [=];
help::pkg.display.viewer.objs.viewerdisplaypanel.m.unregistercolormap.a.map.d := 'name of colormap to unregister';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.unregistercolormap.a.map.def := '';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.unregistercolormap.a.map.a := 'string';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.unregistercolormap.s := 'unregistercolormap(map)';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.register := [=];
help::pkg.display.viewer.objs.viewerdisplaypanel.m.register.d := 'Register a \VdisplaydataT\ for drawing';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.register.a.displaydata := [=];
help::pkg.display.viewer.objs.viewerdisplaypanel.m.register.a.displaydata.d := '\VdisplaydataT\ to register';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.register.a.displaydata.def := '';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.register.a.displaydata.a := '\VdisplaydataT';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.register.s := 'register(displaydata)';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.unregister := [=];
help::pkg.display.viewer.objs.viewerdisplaypanel.m.unregister.d := 'Unregister a \VdisplaydataT\ from this \VdisplaypanelT';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.unregister.a.displaydata := [=];
help::pkg.display.viewer.objs.viewerdisplaypanel.m.unregister.a.displaydata.d := '\VdisplaydataT\ to unregister';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.unregister.a.displaydata.def := '';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.unregister.a.displaydata.a := '\VdisplaydataT';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.unregister.s := 'unregister(displaydata)';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.isregistered := [=];
help::pkg.display.viewer.objs.viewerdisplaypanel.m.isregistered.d := 'Query whether a \VdisplaydataT\ is registered on this \VdisplaypanelT';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.isregistered.a.displaydata := [=];
help::pkg.display.viewer.objs.viewerdisplaypanel.m.isregistered.a.displaydata.d := '\VdisplaydataT\ to query';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.isregistered.a.displaydata.def := '';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.isregistered.a.displaydata.a := '\VdisplaydataT';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.isregistered.s := 'isregistered(displaydata)';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.registerednames := [=];
help::pkg.display.viewer.objs.viewerdisplaypanel.m.registerednames.d := 'Return a vector of the names of registered \VdisplaydataTs';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.registerednames.s := 'registerednames()';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.registrationflags := [=];
help::pkg.display.viewer.objs.viewerdisplaypanel.m.registrationflags.d := 'Return a record describing which \VdisplaydataTs\ are registered on this \tool';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.registrationflags.s := 'registrationflags()';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.unregisterall := [=];
help::pkg.display.viewer.objs.viewerdisplaypanel.m.unregisterall.d := 'Unregister all \VdisplaydataTs\ from this \VdisplaypanelT';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.unregisterall.s := 'unregisterall()';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.unzoom := [=];
help::pkg.display.viewer.objs.viewerdisplaypanel.m.unzoom.d := 'Unzoom the current view';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.unzoom.s := 'unzoom()';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.setzoom := [=];
help::pkg.display.viewer.objs.viewerdisplaypanel.m.setzoom.d := 'Set a specific zoom';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.setzoom.a.blc := [=];
help::pkg.display.viewer.objs.viewerdisplaypanel.m.setzoom.a.blc.d := 'bottom-left linear coordinates of zoom';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.setzoom.a.blc.def := '';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.setzoom.a.blc.a := '2-vector';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.setzoom.a.trc := [=];
help::pkg.display.viewer.objs.viewerdisplaypanel.m.setzoom.a.trc.d := 'top-right linear coordinates of zoom';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.setzoom.a.trc.def := '';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.setzoom.a.trc.a := '2-vector';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.setzoom.s := 'setzoom(blc, trc)';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.zoom := [=];
help::pkg.display.viewer.objs.viewerdisplaypanel.m.zoom.d := 'Zoom by a given factor';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.zoom.a.xfac := [=];
help::pkg.display.viewer.objs.viewerdisplaypanel.m.zoom.a.xfac.d := 'scale factor in X direction';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.zoom.a.xfac.def := '2.0';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.zoom.a.xfac.a := 'float';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.zoom.a.yfac := [=];
help::pkg.display.viewer.objs.viewerdisplaypanel.m.zoom.a.yfac.d := 'scale factor in Y direction';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.zoom.a.yfac.def := 'unset';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.zoom.a.yfac.a := 'unset or float';
help::pkg.display.viewer.objs.viewerdisplaypanel.m.zoom.s := 'zoom(xfac, yfac)';
help::pkg.display.viewer.objs.viewerslicedp := [=];
help::pkg.display.viewer.objs.viewerslicedp.m := [=];
help::pkg.display.viewer.objs.viewerslicedp.c := [=];
help::pkg.display.viewer.objs.viewerslicedp.d := 'Tool for providing 3D slice canvases';
help::pkg.display.viewer.objs.viewerslicedp.c.viewerslicedp := [=];
help::pkg.display.viewer.objs.viewerslicedp.c.viewerslicedp.d := 'Create a \VslicedpT';
help::pkg.display.viewer.objs.viewerslicedp.c.viewerslicedp.a.parent := [=];
help::pkg.display.viewer.objs.viewerslicedp.c.viewerslicedp.a.parent.d := 'parent frame for the panel';
help::pkg.display.viewer.objs.viewerslicedp.c.viewerslicedp.a.parent.def := 'F';
help::pkg.display.viewer.objs.viewerslicedp.c.viewerslicedp.a.parent.a := 'agent or F';
help::pkg.display.viewer.objs.viewerslicedp.c.viewerslicedp.a.viewer := [=];
help::pkg.display.viewer.objs.viewerslicedp.c.viewerslicedp.a.viewer.d := 'the \VT\ which will manager this \tool';
help::pkg.display.viewer.objs.viewerslicedp.c.viewerslicedp.a.viewer.def := '';
help::pkg.display.viewer.objs.viewerslicedp.c.viewerslicedp.a.viewer.a := '\VT';
help::pkg.display.viewer.objs.viewerslicedp.c.viewerslicedp.a.width := [=];
help::pkg.display.viewer.objs.viewerslicedp.c.viewerslicedp.a.width.d := 'width in pixels of the drawing area';
help::pkg.display.viewer.objs.viewerslicedp.c.viewerslicedp.a.width.def := '250';
help::pkg.display.viewer.objs.viewerslicedp.c.viewerslicedp.a.width.a := 'integer';
help::pkg.display.viewer.objs.viewerslicedp.c.viewerslicedp.a.height := [=];
help::pkg.display.viewer.objs.viewerslicedp.c.viewerslicedp.a.height.d := 'height in pixels of the drawing area';
help::pkg.display.viewer.objs.viewerslicedp.c.viewerslicedp.a.height.def := '250';
help::pkg.display.viewer.objs.viewerslicedp.c.viewerslicedp.a.height.a := 'integer';
help::pkg.display.viewer.objs.viewerslicedp.c.viewerslicedp.a.maptype := [=];
help::pkg.display.viewer.objs.viewerslicedp.c.viewerslicedp.a.maptype.d := 'how colors will be addressed on this \VslicedpT';
help::pkg.display.viewer.objs.viewerslicedp.c.viewerslicedp.a.maptype.def := '\' index\' ';
help::pkg.display.viewer.objs.viewerslicedp.c.viewerslicedp.a.maptype.a := '\' index\'  \' rgb\'  \' hsv\' ';
help::pkg.display.viewer.objs.viewerslicedp.c.viewerslicedp.a.newcmap := [=];
help::pkg.display.viewer.objs.viewerslicedp.c.viewerslicedp.a.newcmap.d := 'install a private colormap? (ignored if a parent frame is provided)';
help::pkg.display.viewer.objs.viewerslicedp.c.viewerslicedp.a.newcmap.def := 'F';
help::pkg.display.viewer.objs.viewerslicedp.c.viewerslicedp.a.newcmap.a := 'boolean';
help::pkg.display.viewer.objs.viewerslicedp.c.viewerslicedp.a.mincolors := [=];
help::pkg.display.viewer.objs.viewerslicedp.c.viewerslicedp.a.mincolors.d := 'minimum number of colors to allocate';
help::pkg.display.viewer.objs.viewerslicedp.c.viewerslicedp.a.mincolors.def := 'unset';
help::pkg.display.viewer.objs.viewerslicedp.c.viewerslicedp.a.mincolors.a := 'Integer or unset';
help::pkg.display.viewer.objs.viewerslicedp.c.viewerslicedp.a.maxcolors := [=];
help::pkg.display.viewer.objs.viewerslicedp.c.viewerslicedp.a.maxcolors.d := 'maximum number of colors to allocate';
help::pkg.display.viewer.objs.viewerslicedp.c.viewerslicedp.a.maxcolors.def := 'unset';
help::pkg.display.viewer.objs.viewerslicedp.c.viewerslicedp.a.maxcolors.a := 'Integer or unset';
help::pkg.display.viewer.objs.viewerslicedp.c.viewerslicedp.a.autoregister := [=];
help::pkg.display.viewer.objs.viewerslicedp.c.viewerslicedp.a.autoregister.d := 'accept auto-register data on this \VslicedpT?';
help::pkg.display.viewer.objs.viewerslicedp.c.viewerslicedp.a.autoregister.def := 'F';
help::pkg.display.viewer.objs.viewerslicedp.c.viewerslicedp.a.autoregister.a := 'boolean';
help::pkg.display.viewer.objs.viewerslicedp.c.viewerslicedp.a.holdsdata := [=];
help::pkg.display.viewer.objs.viewerslicedp.c.viewerslicedp.a.holdsdata.d := 'is this \VslicedpT\ going to hold data?';
help::pkg.display.viewer.objs.viewerslicedp.c.viewerslicedp.a.holdsdata.def := 'T';
help::pkg.display.viewer.objs.viewerslicedp.c.viewerslicedp.a.holdsdata.a := 'boolean';
help::pkg.display.viewer.objs.viewerslicedp.c.viewerslicedp.a.show := [=];
help::pkg.display.viewer.objs.viewerslicedp.c.viewerslicedp.a.show.d := 'show the \VslicedpT?';
help::pkg.display.viewer.objs.viewerslicedp.c.viewerslicedp.a.show.def := 'T';
help::pkg.display.viewer.objs.viewerslicedp.c.viewerslicedp.a.show.a := 'boolean';
help::pkg.display.viewer.objs.viewerslicedp.c.viewerslicedp.a.widgetset := [=];
help::pkg.display.viewer.objs.viewerslicedp.c.viewerslicedp.a.widgetset.d := '\widgetserverT\ to use to build the \guishort';
help::pkg.display.viewer.objs.viewerslicedp.c.viewerslicedp.a.widgetset.def := 'unset';
help::pkg.display.viewer.objs.viewerslicedp.c.viewerslicedp.a.widgetset.a := '\widgetserverT\ or unset';
help::pkg.display.viewer.objs.viewerslicedp.c.viewerslicedp.s := 'viewerslicedp(parent, viewer, width, height, maptype, newcmap, mincolors, maxcolors, autoregister, holdsdata, show, widgetset)';
help::pkg.display.viewer.objs.viewerslicedp.m.setoptions := [=];
help::pkg.display.viewer.objs.viewerslicedp.m.setoptions.d := 'Set the modifiable state of this \tool';
help::pkg.display.viewer.objs.viewerslicedp.m.setoptions.a.options := [=];
help::pkg.display.viewer.objs.viewerslicedp.m.setoptions.a.options.d := 'options record describing the requested state';
help::pkg.display.viewer.objs.viewerslicedp.m.setoptions.a.options.def := '';
help::pkg.display.viewer.objs.viewerslicedp.m.setoptions.a.options.a := 'record';
help::pkg.display.viewer.objs.viewerslicedp.m.setoptions.s := 'setoptions(options)';
help::pkg.display.viewer.objs.viewerslicedp.m.preload := [=];
help::pkg.display.viewer.objs.viewerslicedp.m.preload.d := 'Cache all views in display memory';
help::pkg.display.viewer.objs.viewerslicedp.m.preload.s := 'preload()';
help::pkg.display.viewer.objs.viewerstandardgui := [=];
help::pkg.display.viewer.objs.viewerstandardgui.m := [=];
help::pkg.display.viewer.objs.viewerstandardgui.c := [=];
help::pkg.display.viewer.objs.viewerstandardgui.d := 'Interface for operating \VT\ \guilongs';
help::pkg.display.viewer.objs.viewerstandardgui.m.map := [=];
help::pkg.display.viewer.objs.viewerstandardgui.m.map.d := 'Map the \guilong\ to the screen';
help::pkg.display.viewer.objs.viewerstandardgui.m.map.a.force := [=];
help::pkg.display.viewer.objs.viewerstandardgui.m.map.a.force.d := 'force map even if this \tool\ seems to be mapped already';
help::pkg.display.viewer.objs.viewerstandardgui.m.map.a.force.def := 'F';
help::pkg.display.viewer.objs.viewerstandardgui.m.map.a.force.a := 'boolean';
help::pkg.display.viewer.objs.viewerstandardgui.m.map.s := 'map(force)';
help::pkg.display.viewer.objs.viewerstandardgui.m.unmap := [=];
help::pkg.display.viewer.objs.viewerstandardgui.m.unmap.d := 'Remove the \guilong\ from the screen';
help::pkg.display.viewer.objs.viewerstandardgui.m.unmap.a.force := [=];
help::pkg.display.viewer.objs.viewerstandardgui.m.unmap.a.force.d := 'force unmap even if this \tool\ seems to be unmapped already';
help::pkg.display.viewer.objs.viewerstandardgui.m.unmap.a.force.def := 'F';
help::pkg.display.viewer.objs.viewerstandardgui.m.unmap.a.force.a := 'boolean';
help::pkg.display.viewer.objs.viewerstandardgui.m.unmap.s := 'unmap(force)';
help::pkg.display.viewer.objs.viewerstandardgui.m.done := [=];
help::pkg.display.viewer.objs.viewerstandardgui.m.done.d := 'Close down (finished with) this \guilong';
help::pkg.display.viewer.objs.viewerstandardgui.m.done.s := 'done()';
help::pkg.display.viewer.objs.viewerstandardgui.m.ismapped := [=];
help::pkg.display.viewer.objs.viewerstandardgui.m.ismapped.d := 'Is this \guilong\ mapped to the screen or its parent frame?';
help::pkg.display.viewer.objs.viewerstandardgui.m.ismapped.s := 'ismapped()';
help::pkg.display.viewer.objs.viewerstandardgui.m.dismiss := [=];
help::pkg.display.viewer.objs.viewerstandardgui.m.dismiss.d := 'Hide this \guilong';
help::pkg.display.viewer.objs.viewerstandardgui.m.dismiss.s := 'dismiss()';
help::pkg.display.viewer.objs.viewerstandardgui.m.gui := [=];
help::pkg.display.viewer.objs.viewerstandardgui.m.gui.d := 'Map this \guilong';
help::pkg.display.viewer.objs.viewerstandardgui.m.gui.s := 'gui()';
help::pkg.display.viewer.objs.viewerstandardgui.m.disable := [=];
help::pkg.display.viewer.objs.viewerstandardgui.m.disable.d := 'Disable this \guilong';
help::pkg.display.viewer.objs.viewerstandardgui.m.disable.s := 'disable()';
help::pkg.display.viewer.objs.viewerstandardgui.m.enable := [=];
help::pkg.display.viewer.objs.viewerstandardgui.m.enable.d := 'Enable this \guilong';
help::pkg.display.viewer.objs.viewerstandardgui.m.enable.s := 'enable()';
help::pkg.display.viewer.objs.viewerdatamanager := [=];
help::pkg.display.viewer.objs.viewerdatamanager.m := [=];
help::pkg.display.viewer.objs.viewerdatamanager.c := [=];
help::pkg.display.viewer.objs.viewerdatamanager.d := 'Tool for importing data into the Viewer';
help::pkg.display.viewer.objs.viewerannotations := [=];
help::pkg.display.viewer.objs.viewerannotations.m := [=];
help::pkg.display.viewer.objs.viewerannotations.c := [=];
help::pkg.display.viewer.objs.viewerannotations.d := 'Tool for drawing annotations onto a displaypanel.';
help::pkg.display.viewer.objs.viewerannotations.c.viewerannotations := [=];
help::pkg.display.viewer.objs.viewerannotations.c.viewerannotations.d := 'Create a \VannotationsT';
help::pkg.display.viewer.objs.viewerannotations.c.viewerannotations.a.displaypanel := [=];
help::pkg.display.viewer.objs.viewerannotations.c.viewerannotations.a.displaypanel.d := 'displaypanel to attach to';
help::pkg.display.viewer.objs.viewerannotations.c.viewerannotations.a.displaypanel.def := '';
help::pkg.display.viewer.objs.viewerannotations.c.viewerannotations.a.displaypanel.a := 'agent';
help::pkg.display.viewer.objs.viewerannotations.c.viewerannotations.a.title := [=];
help::pkg.display.viewer.objs.viewerannotations.c.viewerannotations.a.title.d := 'the title to use for the \guishort\ frame';
help::pkg.display.viewer.objs.viewerannotations.c.viewerannotations.a.title.def := '``Unknown Draw Area\' \' ';
help::pkg.display.viewer.objs.viewerannotations.c.viewerannotations.a.title.a := 'String';
help::pkg.display.viewer.objs.viewerannotations.c.viewerannotations.a.widgetset := [=];
help::pkg.display.viewer.objs.viewerannotations.c.viewerannotations.a.widgetset.d := '\widgetserverT\ to use to build the \guishort';
help::pkg.display.viewer.objs.viewerannotations.c.viewerannotations.a.widgetset.def := 'ddlws';
help::pkg.display.viewer.objs.viewerannotations.c.viewerannotations.a.widgetset.a := '\widgetserverT\ or unset';
help::pkg.display.viewer.objs.viewerannotations.c.viewerannotations.s := 'viewerannotations(displaypanel, title, widgetset)';
help::pkg.display.viewer.objs.viewerannotations.m.done := [=];
help::pkg.display.viewer.objs.viewerannotations.m.done.d := 'Destroy this \VannotationsT.';
help::pkg.display.viewer.objs.viewerannotations.m.done.s := 'done()';
help::pkg.display.viewer.objs.viewerannotations.m.dismiss := [=];
help::pkg.display.viewer.objs.viewerannotations.m.dismiss.d := 'Remove the \VannotationsT\ \guishort\ from the screen';
help::pkg.display.viewer.objs.viewerannotations.m.dismiss.s := 'dismiss()';
help::pkg.display.viewer.objs.viewerannotations.m.print := [=];
help::pkg.display.viewer.objs.viewerannotations.m.print.d := 'Print the annotations onto the supplied pixelcanvas';
help::pkg.display.viewer.objs.viewerannotations.m.print.a.pixelcanvas := [=];
help::pkg.display.viewer.objs.viewerannotations.m.print.a.pixelcanvas.d := 'PixelCanvas proxy to print the annotations    to';
help::pkg.display.viewer.objs.viewerannotations.m.print.a.pixelcanvas.def := '';
help::pkg.display.viewer.objs.viewerannotations.m.print.a.pixelcanvas.a := 'Pixelcanvas proxy';
help::pkg.display.viewer.objs.viewerannotations.m.print.s := 'print(pixelcanvas)';
help::pkg.display.viewer.objs.viewerannotations.m.newshape := [=];
help::pkg.display.viewer.objs.viewerannotations.m.newshape.d := 'Create a new shape based on a record';
help::pkg.display.viewer.objs.viewerannotations.m.newshape.a.shapesettings := [=];
help::pkg.display.viewer.objs.viewerannotations.m.newshape.a.shapesettings.d := 'Settings describing the shape';
help::pkg.display.viewer.objs.viewerannotations.m.newshape.a.shapesettings.def := '';
help::pkg.display.viewer.objs.viewerannotations.m.newshape.a.shapesettings.a := 'Record';
help::pkg.display.viewer.objs.viewerannotations.m.newshape.s := 'newshape(shapesettings)';
help::pkg.display.viewer.objs.viewerannotations.m.deleteshape := [=];
help::pkg.display.viewer.objs.viewerannotations.m.deleteshape.d := 'Delete a shape from the annotations';
help::pkg.display.viewer.objs.viewerannotations.m.deleteshape.a.index := [=];
help::pkg.display.viewer.objs.viewerannotations.m.deleteshape.a.index.d := 'Index of the shape';
help::pkg.display.viewer.objs.viewerannotations.m.deleteshape.a.index.def := '';
help::pkg.display.viewer.objs.viewerannotations.m.deleteshape.a.index.a := 'Integer';
help::pkg.display.viewer.objs.viewerannotations.m.deleteshape.s := 'deleteshape(index)';
help::pkg.display.viewer.objs.viewerannotations.m.whichshape := [=];
help::pkg.display.viewer.objs.viewerannotations.m.whichshape.d := 'Return the index of the currently active shape';
help::pkg.display.viewer.objs.viewerannotations.m.whichshape.s := 'whichshape()';
help::pkg.display.viewer.objs.viewerannotations.m.createshape := [=];
help::pkg.display.viewer.objs.viewerannotations.m.createshape.d := 'Create a shape, based on options and also user input';
help::pkg.display.viewer.objs.viewerannotations.m.createshape.s := 'createshape()';
help::pkg.display.viewer.objs.viewerannotations.m.availableshape := [=];
help::pkg.display.viewer.objs.viewerannotations.m.availableshape.d := 'Return a list of the available shapes';
help::pkg.display.viewer.objs.viewerannotations.m.availableshape.s := 'availableshape()';
help::pkg.display.viewer.objs.viewerannotations.m.setkey := [=];
help::pkg.display.viewer.objs.viewerannotations.m.setkey.d := 'Set the key (mouse button) which the user will use to control the annotations';
help::pkg.display.viewer.objs.viewerannotations.m.setkey.a.keysym := [=];
help::pkg.display.viewer.objs.viewerannotations.m.setkey.a.keysym.d := 'New key symbol';
help::pkg.display.viewer.objs.viewerannotations.m.setkey.a.keysym.def := '';
help::pkg.display.viewer.objs.viewerannotations.m.setkey.a.keysym.a := 'Key Symbol, some are defined as   glish global variables';
help::pkg.display.viewer.objs.viewerannotations.m.setkey.s := 'setkey(keysym)';
help::pkg.display.viewer.objs.viewerannotations.m.getalloptions := [=];
help::pkg.display.viewer.objs.viewerannotations.m.getalloptions.d := 'Return options for all the shapes currently displayed';
help::pkg.display.viewer.objs.viewerannotations.m.getalloptions.s := 'getalloptions()';
help::pkg.display.viewer.objs.viewerannotations.m.setalloptions := [=];
help::pkg.display.viewer.objs.viewerannotations.m.setalloptions.d := 'Sets the annotations based on information provided in the record';
help::pkg.display.viewer.objs.viewerannotations.m.setalloptions.s := 'setalloptions()';
help::pkg.display.viewer.objs.viewerannotations.m.getshapeoptions := [=];
help::pkg.display.viewer.objs.viewerannotations.m.getshapeoptions.d := 'Returns the option record for the specified shape';
help::pkg.display.viewer.objs.viewerannotations.m.getshapeoptions.a.whichshape := [=];
help::pkg.display.viewer.objs.viewerannotations.m.getshapeoptions.a.whichshape.d := 'Return options for this shape';
help::pkg.display.viewer.objs.viewerannotations.m.getshapeoptions.a.whichshape.def := '';
help::pkg.display.viewer.objs.viewerannotations.m.getshapeoptions.a.whichshape.a := 'Integer';
help::pkg.display.viewer.objs.viewerannotations.m.getshapeoptions.s := 'getshapeoptions(whichshape)';
help::pkg.display.viewer.objs.viewerannotations.m.setshapeoptions := [=];
help::pkg.display.viewer.objs.viewerannotations.m.setshapeoptions.d := 'Set the options of a specific shape';
help::pkg.display.viewer.objs.viewerannotations.m.setshapeoptions.a.whichshape := [=];
help::pkg.display.viewer.objs.viewerannotations.m.setshapeoptions.a.whichshape.d := 'Set the options for this shape';
help::pkg.display.viewer.objs.viewerannotations.m.setshapeoptions.a.whichshape.def := '';
help::pkg.display.viewer.objs.viewerannotations.m.setshapeoptions.a.whichshape.a := 'Integer';
help::pkg.display.viewer.objs.viewerannotations.m.setshapeoptions.a.newoptions := [=];
help::pkg.display.viewer.objs.viewerannotations.m.setshapeoptions.a.newoptions.d := 'Options to set';
help::pkg.display.viewer.objs.viewerannotations.m.setshapeoptions.a.newoptions.def := '';
help::pkg.display.viewer.objs.viewerannotations.m.setshapeoptions.a.newoptions.a := 'Record';
help::pkg.display.viewer.objs.viewerannotations.m.setshapeoptions.s := 'setshapeoptions(whichshape, newoptions)';
help::pkg.display.viewer.objs.viewerannotations.m.addlockedtocurrent := [=];
help::pkg.display.viewer.objs.viewerannotations.m.addlockedtocurrent.d := '``Lock   a shape to the currently selected one';
help::pkg.display.viewer.objs.viewerannotations.m.addlockedtocurrent.a.whichshape := [=];
help::pkg.display.viewer.objs.viewerannotations.m.addlockedtocurrent.a.whichshape.d := 'Which shape do you wish to lock to the   selected one';
help::pkg.display.viewer.objs.viewerannotations.m.addlockedtocurrent.a.whichshape.def := '';
help::pkg.display.viewer.objs.viewerannotations.m.addlockedtocurrent.a.whichshape.a := 'Integer';
help::pkg.display.viewer.objs.viewerannotations.m.addlockedtocurrent.s := 'addlockedtocurrent(whichshape)';
help::pkg.display.viewer.objs.viewerannotations.m.removelockedfromcurrent := [=];
help::pkg.display.viewer.objs.viewerannotations.m.removelockedfromcurrent.d := 'Remove a locked item from the currently selected shape.';
help::pkg.display.viewer.objs.viewerannotations.m.removelockedfromcurrent.a.lockeditemindex := [=];
help::pkg.display.viewer.objs.viewerannotations.m.removelockedfromcurrent.a.lockeditemindex.d := 'Index of shape to remove from lock';
help::pkg.display.viewer.objs.viewerannotations.m.removelockedfromcurrent.a.lockeditemindex.def := '';
help::pkg.display.viewer.objs.viewerannotations.m.removelockedfromcurrent.a.lockeditemindex.a := 'Integer';
help::pkg.display.viewer.objs.viewerannotations.m.removelockedfromcurrent.s := 'removelockedfromcurrent(lockeditemindex)';
help::pkg.display.viewer.objs.skycatalog := [=];
help::pkg.display.viewer.objs.skycatalog.m := [=];
help::pkg.display.viewer.objs.skycatalog.c := [=];
help::pkg.display.viewer.objs.skycatalog.d := 'Tool to create and manipulate \VT\ readable skycatalog tables';
help::pkg.display.viewer.objs.skycatalog.c.skycatalog := [=];
help::pkg.display.viewer.objs.skycatalog.c.skycatalog.d := 'Create a skycatalog \tool';
help::pkg.display.viewer.objs.skycatalog.c.skycatalog.a.filename := [=];
help::pkg.display.viewer.objs.skycatalog.c.skycatalog.a.filename.d := 'Name of the skycatalog table';
help::pkg.display.viewer.objs.skycatalog.c.skycatalog.a.filename.def := 'unset';
help::pkg.display.viewer.objs.skycatalog.c.skycatalog.a.filename.a := 'String';
help::pkg.display.viewer.objs.skycatalog.c.skycatalog.s := 'skycatalog(filename)';
help::pkg.display.viewer.objs.skycatalog.m.addunit := [=];
help::pkg.display.viewer.objs.skycatalog.m.addunit.d := 'Add a unit to a column';
help::pkg.display.viewer.objs.skycatalog.m.addunit.a.colname := [=];
help::pkg.display.viewer.objs.skycatalog.m.addunit.a.colname.d := 'column name';
help::pkg.display.viewer.objs.skycatalog.m.addunit.a.colname.def := '';
help::pkg.display.viewer.objs.skycatalog.m.addunit.a.colname.a := 'String';
help::pkg.display.viewer.objs.skycatalog.m.addunit.a.unit := [=];
help::pkg.display.viewer.objs.skycatalog.m.addunit.a.unit.d := 'Unit to put into column';
help::pkg.display.viewer.objs.skycatalog.m.addunit.a.unit.def := '';
help::pkg.display.viewer.objs.skycatalog.m.addunit.a.unit.a := 'String';
help::pkg.display.viewer.objs.skycatalog.m.addunit.s := 'addunit(colname, unit)';
help::pkg.display.viewer.objs.skycatalog.m.done := [=];
help::pkg.display.viewer.objs.skycatalog.m.done.d := 'Close this \tool';
help::pkg.display.viewer.objs.skycatalog.m.done.a.delete := [=];
help::pkg.display.viewer.objs.skycatalog.m.done.a.delete.d := 'delete the table';
help::pkg.display.viewer.objs.skycatalog.m.done.a.delete.def := 'F';
help::pkg.display.viewer.objs.skycatalog.m.done.a.delete.a := 'Boolean';
help::pkg.display.viewer.objs.skycatalog.m.done.s := 'done(delete)';
help::pkg.display.viewer.objs.skycatalog.m.fromascii := [=];
help::pkg.display.viewer.objs.skycatalog.m.fromascii.d := 'Create the \tool\ from an ascii file';
help::pkg.display.viewer.objs.skycatalog.m.fromascii.a.asciifile := [=];
help::pkg.display.viewer.objs.skycatalog.m.fromascii.a.asciifile.d := 'The source ASCII file';
help::pkg.display.viewer.objs.skycatalog.m.fromascii.a.asciifile.def := 'unset';
help::pkg.display.viewer.objs.skycatalog.m.fromascii.a.asciifile.a := 'String';
help::pkg.display.viewer.objs.skycatalog.m.fromascii.a.hasheader := [=];
help::pkg.display.viewer.objs.skycatalog.m.fromascii.a.hasheader.d := 'Does the ASCII file include a header definition?';
help::pkg.display.viewer.objs.skycatalog.m.fromascii.a.hasheader.def := 'F';
help::pkg.display.viewer.objs.skycatalog.m.fromascii.a.hasheader.a := 'Boolean';
help::pkg.display.viewer.objs.skycatalog.m.fromascii.a.longcol := [=];
help::pkg.display.viewer.objs.skycatalog.m.fromascii.a.longcol.d := 'The column name or number containing the   Longitude component';
help::pkg.display.viewer.objs.skycatalog.m.fromascii.a.longcol.def := 'unset';
help::pkg.display.viewer.objs.skycatalog.m.fromascii.a.longcol.a := 'String or Integer (see description)';
help::pkg.display.viewer.objs.skycatalog.m.fromascii.a.latcol := [=];
help::pkg.display.viewer.objs.skycatalog.m.fromascii.a.latcol.d := 'The column name or number containing the   Latitude component';
help::pkg.display.viewer.objs.skycatalog.m.fromascii.a.latcol.def := 'unset';
help::pkg.display.viewer.objs.skycatalog.m.fromascii.a.latcol.a := 'String or Integer (see description)';
help::pkg.display.viewer.objs.skycatalog.m.fromascii.a.dirtype := [=];
help::pkg.display.viewer.objs.skycatalog.m.fromascii.a.dirtype.d := 'The direction type of the coordinate';
help::pkg.display.viewer.objs.skycatalog.m.fromascii.a.dirtype.def := 'J2000';
help::pkg.display.viewer.objs.skycatalog.m.fromascii.a.dirtype.a := 'String';
help::pkg.display.viewer.objs.skycatalog.m.fromascii.a.unit := [=];
help::pkg.display.viewer.objs.skycatalog.m.fromascii.a.unit.d := 'The unit of the coordinates';
help::pkg.display.viewer.objs.skycatalog.m.fromascii.a.unit.def := 'deg';
help::pkg.display.viewer.objs.skycatalog.m.fromascii.a.unit.a := 'String';
help::pkg.display.viewer.objs.skycatalog.m.fromascii.s := 'fromascii(asciifile, hasheader, longcol, latcol, dirtype, unit)';
help::pkg.display.viewer.objs.skycatalog.m.fromcomponentlist := [=];
help::pkg.display.viewer.objs.skycatalog.m.fromcomponentlist.d := 'Create the \tool\ from a componentlist';
help::pkg.display.viewer.objs.skycatalog.m.fromcomponentlist.a.code := [=];
help::pkg.display.viewer.objs.skycatalog.m.fromcomponentlist.a.code.d := 'The componentlist \tool';
help::pkg.display.viewer.objs.skycatalog.m.fromcomponentlist.a.code.def := 'unset';
help::pkg.display.viewer.objs.skycatalog.m.fromcomponentlist.a.code.a := 'componentlist \tool';
help::pkg.display.viewer.objs.skycatalog.m.fromcomponentlist.s := 'fromcomponentlist(code)';
help::pkg.display.viewer.objs.skycatalog.m.mergecolumns := [=];
help::pkg.display.viewer.objs.skycatalog.m.mergecolumns.d := 'Merge n columns into one';
help::pkg.display.viewer.objs.skycatalog.m.mergecolumns.a.columns := [=];
help::pkg.display.viewer.objs.skycatalog.m.mergecolumns.a.columns.d := 'Names of the columns to merge';
help::pkg.display.viewer.objs.skycatalog.m.mergecolumns.a.columns.def := '';
help::pkg.display.viewer.objs.skycatalog.m.mergecolumns.a.columns.a := 'String';
help::pkg.display.viewer.objs.skycatalog.m.mergecolumns.a.name := [=];
help::pkg.display.viewer.objs.skycatalog.m.mergecolumns.a.name.d := 'name of the output column';
help::pkg.display.viewer.objs.skycatalog.m.mergecolumns.a.name.def := 'unset';
help::pkg.display.viewer.objs.skycatalog.m.mergecolumns.a.name.a := 'String';
help::pkg.display.viewer.objs.skycatalog.m.mergecolumns.s := 'mergecolumns(columns, name)';
help::pkg.display.viewer.objs.skycatalog.m.name := [=];
help::pkg.display.viewer.objs.skycatalog.m.name.d := 'Return the name of the table';
help::pkg.display.viewer.objs.skycatalog.m.name.s := 'name()';
help::pkg.display.viewer.objs.skycatalog.m.renamecolumn := [=];
help::pkg.display.viewer.objs.skycatalog.m.renamecolumn.d := 'Rename a column';
help::pkg.display.viewer.objs.skycatalog.m.renamecolumn.a.oldname := [=];
help::pkg.display.viewer.objs.skycatalog.m.renamecolumn.a.oldname.d := 'column name';
help::pkg.display.viewer.objs.skycatalog.m.renamecolumn.a.oldname.def := '';
help::pkg.display.viewer.objs.skycatalog.m.renamecolumn.a.oldname.a := 'String';
help::pkg.display.viewer.objs.skycatalog.m.renamecolumn.a.newname := [=];
help::pkg.display.viewer.objs.skycatalog.m.renamecolumn.a.newname.d := 'new column name';
help::pkg.display.viewer.objs.skycatalog.m.renamecolumn.a.newname.def := '';
help::pkg.display.viewer.objs.skycatalog.m.renamecolumn.a.newname.a := 'String';
help::pkg.display.viewer.objs.skycatalog.m.renamecolumn.s := 'renamecolumn(oldname, newname)';
help::pkg.display.viewer.objs.skycatalog.m.table := [=];
help::pkg.display.viewer.objs.skycatalog.m.table.d := 'Return the underling table \tool';
help::pkg.display.viewer.objs.skycatalog.m.table.s := 'table()';
help::pkg.display.viewer.objs.skycatalog.m.type := [=];
help::pkg.display.viewer.objs.skycatalog.m.type.d := 'Return the \tool\ type';
help::pkg.display.viewer.objs.skycatalog.m.type.s := 'type()';
help::pkg.display.viewer.funs.is_viewer := [=];
help::pkg.display.viewer.funs.is_viewer.a := [=];
help::pkg.display.viewer.funs.is_viewer.d := 'Is the argument a viewer tool?';
help::pkg.display.viewer.funs.is_viewer.a.tool := [=];
help::pkg.display.viewer.funs.is_viewer.a.tool.d := 'The variable that you wish to test';
help::pkg.display.viewer.funs.is_viewer.a.tool.def := 'no default';
help::pkg.display.viewer.funs.is_viewer.a.tool.a := 'Any glish variable';
help::pkg.display.viewer.funs.is_viewer.s := 'is_viewer(tool)';

help::pkg.display.widgets := [=];
help::pkg.display.widgets.objs := [=];
help::pkg.display.widgets.funs := [=];
help::pkg.display.widgets.d := 'Generic compound widgets based on Tk';
help::pkg.display.widgets.objs.actionoptionmenu := [=];
help::pkg.display.widgets.objs.actionoptionmenu.m := [=];
help::pkg.display.widgets.objs.actionoptionmenu.c := [=];
help::pkg.display.widgets.objs.actionoptionmenu.d := 'Tk widget where the action menu label changes with selection';
help::pkg.display.widgets.objs.actionoptionmenu.c.actionoptionmenu := [=];
help::pkg.display.widgets.objs.actionoptionmenu.c.actionoptionmenu.d := 'Construct an actionoptionmenu';
help::pkg.display.widgets.objs.actionoptionmenu.c.actionoptionmenu.a.parent := [=];
help::pkg.display.widgets.objs.actionoptionmenu.c.actionoptionmenu.a.parent.d := 'Parent of the menu';
help::pkg.display.widgets.objs.actionoptionmenu.c.actionoptionmenu.a.parent.def := '';
help::pkg.display.widgets.objs.actionoptionmenu.c.actionoptionmenu.a.parent.a := 'Widget';
help::pkg.display.widgets.objs.actionoptionmenu.c.actionoptionmenu.a.labels := [=];
help::pkg.display.widgets.objs.actionoptionmenu.c.actionoptionmenu.a.labels.d := 'The menu item labels';
help::pkg.display.widgets.objs.actionoptionmenu.c.actionoptionmenu.a.labels.def := 'Empty menu';
help::pkg.display.widgets.objs.actionoptionmenu.c.actionoptionmenu.a.labels.a := 'Vector of strings';
help::pkg.display.widgets.objs.actionoptionmenu.c.actionoptionmenu.a.names := [=];
help::pkg.display.widgets.objs.actionoptionmenu.c.actionoptionmenu.a.names.d := 'The menu item names';
help::pkg.display.widgets.objs.actionoptionmenu.c.actionoptionmenu.a.names.def := 'Empty menu';
help::pkg.display.widgets.objs.actionoptionmenu.c.actionoptionmenu.a.names.a := 'Vector of strings';
help::pkg.display.widgets.objs.actionoptionmenu.c.actionoptionmenu.a.values := [=];
help::pkg.display.widgets.objs.actionoptionmenu.c.actionoptionmenu.a.values.d := 'The menu item values';
help::pkg.display.widgets.objs.actionoptionmenu.c.actionoptionmenu.a.values.def := 'Empty menu';
help::pkg.display.widgets.objs.actionoptionmenu.c.actionoptionmenu.a.values.a := 'Vector of anything';
help::pkg.display.widgets.objs.actionoptionmenu.c.actionoptionmenu.a.hlp := [=];
help::pkg.display.widgets.objs.actionoptionmenu.c.actionoptionmenu.a.hlp.d := 'Short popuphelp text';
help::pkg.display.widgets.objs.actionoptionmenu.c.actionoptionmenu.a.hlp.def := 'No help';
help::pkg.display.widgets.objs.actionoptionmenu.c.actionoptionmenu.a.hlp.a := 'String';
help::pkg.display.widgets.objs.actionoptionmenu.c.actionoptionmenu.a.hlp2 := [=];
help::pkg.display.widgets.objs.actionoptionmenu.c.actionoptionmenu.a.hlp2.d := 'Long popuphelp text';
help::pkg.display.widgets.objs.actionoptionmenu.c.actionoptionmenu.a.hlp2.def := 'No help';
help::pkg.display.widgets.objs.actionoptionmenu.c.actionoptionmenu.a.hlp2.a := 'String';
help::pkg.display.widgets.objs.actionoptionmenu.c.actionoptionmenu.a.nbreak := [=];
help::pkg.display.widgets.objs.actionoptionmenu.c.actionoptionmenu.a.nbreak.d := 'The break point for menu or listbox usage';
help::pkg.display.widgets.objs.actionoptionmenu.c.actionoptionmenu.a.nbreak.def := '20';
help::pkg.display.widgets.objs.actionoptionmenu.c.actionoptionmenu.a.nbreak.a := 'Integer';
help::pkg.display.widgets.objs.actionoptionmenu.c.actionoptionmenu.a.padx := [=];
help::pkg.display.widgets.objs.actionoptionmenu.c.actionoptionmenu.a.padx.d := 'Horizontal padding around text';
help::pkg.display.widgets.objs.actionoptionmenu.c.actionoptionmenu.a.padx.def := '7';
help::pkg.display.widgets.objs.actionoptionmenu.c.actionoptionmenu.a.padx.a := 'Integer';
help::pkg.display.widgets.objs.actionoptionmenu.c.actionoptionmenu.a.pady := [=];
help::pkg.display.widgets.objs.actionoptionmenu.c.actionoptionmenu.a.pady.d := 'Vertical padding around text';
help::pkg.display.widgets.objs.actionoptionmenu.c.actionoptionmenu.a.pady.def := '3';
help::pkg.display.widgets.objs.actionoptionmenu.c.actionoptionmenu.a.pady.a := 'Integer';
help::pkg.display.widgets.objs.actionoptionmenu.c.actionoptionmenu.a.width := [=];
help::pkg.display.widgets.objs.actionoptionmenu.c.actionoptionmenu.a.width.d := 'Width in character units';
help::pkg.display.widgets.objs.actionoptionmenu.c.actionoptionmenu.a.width.def := 'Auto-scale';
help::pkg.display.widgets.objs.actionoptionmenu.c.actionoptionmenu.a.width.a := 'Integer';
help::pkg.display.widgets.objs.actionoptionmenu.c.actionoptionmenu.a.updatelabel := [=];
help::pkg.display.widgets.objs.actionoptionmenu.c.actionoptionmenu.a.updatelabel.d := 'Update menu label with selected item';
help::pkg.display.widgets.objs.actionoptionmenu.c.actionoptionmenu.a.updatelabel.def := 'T';
help::pkg.display.widgets.objs.actionoptionmenu.c.actionoptionmenu.a.updatelabel.a := 'T or F';
help::pkg.display.widgets.objs.actionoptionmenu.c.actionoptionmenu.a.height := [=];
help::pkg.display.widgets.objs.actionoptionmenu.c.actionoptionmenu.a.height.d := 'Height in character units';
help::pkg.display.widgets.objs.actionoptionmenu.c.actionoptionmenu.a.height.def := '1';
help::pkg.display.widgets.objs.actionoptionmenu.c.actionoptionmenu.a.height.a := 'Integer';
help::pkg.display.widgets.objs.actionoptionmenu.c.actionoptionmenu.a.justify := [=];
help::pkg.display.widgets.objs.actionoptionmenu.c.actionoptionmenu.a.justify.d := 'Justification of text';
help::pkg.display.widgets.objs.actionoptionmenu.c.actionoptionmenu.a.justify.def := '`center\' ';
help::pkg.display.widgets.objs.actionoptionmenu.c.actionoptionmenu.a.justify.a := 'String from `center\' , \' left\' , \' right\' ';
help::pkg.display.widgets.objs.actionoptionmenu.c.actionoptionmenu.a.font := [=];
help::pkg.display.widgets.objs.actionoptionmenu.c.actionoptionmenu.a.font.d := 'Font of text ';
help::pkg.display.widgets.objs.actionoptionmenu.c.actionoptionmenu.a.font.def := '';
help::pkg.display.widgets.objs.actionoptionmenu.c.actionoptionmenu.a.font.a := 'X font';
help::pkg.display.widgets.objs.actionoptionmenu.c.actionoptionmenu.a.relief := [=];
help::pkg.display.widgets.objs.actionoptionmenu.c.actionoptionmenu.a.relief.d := 'Edge relief';
help::pkg.display.widgets.objs.actionoptionmenu.c.actionoptionmenu.a.relief.def := '`groove\' ';
help::pkg.display.widgets.objs.actionoptionmenu.c.actionoptionmenu.a.relief.a := 'String from `flat\' , `ridge\' ,                                             `raised\' , `sunken\' , `groove\' ';
help::pkg.display.widgets.objs.actionoptionmenu.c.actionoptionmenu.a.borderwidth := [=];
help::pkg.display.widgets.objs.actionoptionmenu.c.actionoptionmenu.a.borderwidth.d := 'Border width';
help::pkg.display.widgets.objs.actionoptionmenu.c.actionoptionmenu.a.borderwidth.def := '2';
help::pkg.display.widgets.objs.actionoptionmenu.c.actionoptionmenu.a.borderwidth.a := 'Integer';
help::pkg.display.widgets.objs.actionoptionmenu.c.actionoptionmenu.a.foreground := [=];
help::pkg.display.widgets.objs.actionoptionmenu.c.actionoptionmenu.a.foreground.d := 'Color of text';
help::pkg.display.widgets.objs.actionoptionmenu.c.actionoptionmenu.a.foreground.def := '`black\' ';
help::pkg.display.widgets.objs.actionoptionmenu.c.actionoptionmenu.a.foreground.a := 'X color';
help::pkg.display.widgets.objs.actionoptionmenu.c.actionoptionmenu.a.background := [=];
help::pkg.display.widgets.objs.actionoptionmenu.c.actionoptionmenu.a.background.d := 'Background color';
help::pkg.display.widgets.objs.actionoptionmenu.c.actionoptionmenu.a.background.def := '`lightgrey\' ';
help::pkg.display.widgets.objs.actionoptionmenu.c.actionoptionmenu.a.background.a := 'X color';
help::pkg.display.widgets.objs.actionoptionmenu.c.actionoptionmenu.a.disabled := [=];
help::pkg.display.widgets.objs.actionoptionmenu.c.actionoptionmenu.a.disabled.d := 'Is inactivated ?';
help::pkg.display.widgets.objs.actionoptionmenu.c.actionoptionmenu.a.disabled.def := 'F';
help::pkg.display.widgets.objs.actionoptionmenu.c.actionoptionmenu.a.disabled.a := 'Boolean';
help::pkg.display.widgets.objs.actionoptionmenu.c.actionoptionmenu.a.anchor := [=];
help::pkg.display.widgets.objs.actionoptionmenu.c.actionoptionmenu.a.anchor.d := 'Location of text';
help::pkg.display.widgets.objs.actionoptionmenu.c.actionoptionmenu.a.anchor.def := '`c\' ';
help::pkg.display.widgets.objs.actionoptionmenu.c.actionoptionmenu.a.anchor.a := 'String  from \' c\' , \' n\' , \' s\' , \' e\' , \' w\' , \' ne\' ,                                            \' nw\' , \' se\' , \' sw\' ';
help::pkg.display.widgets.objs.actionoptionmenu.c.actionoptionmenu.a.fill := [=];
help::pkg.display.widgets.objs.actionoptionmenu.c.actionoptionmenu.a.fill.d := 'How to expand when resized';
help::pkg.display.widgets.objs.actionoptionmenu.c.actionoptionmenu.a.fill.def := '\' none\' ';
help::pkg.display.widgets.objs.actionoptionmenu.c.actionoptionmenu.a.fill.a := 'String from `x\' , `y\' , `both\' , `none\' ';
help::pkg.display.widgets.objs.actionoptionmenu.c.actionoptionmenu.a.widgetset := [=];
help::pkg.display.widgets.objs.actionoptionmenu.c.actionoptionmenu.a.widgetset.d := 'The widget server to use';
help::pkg.display.widgets.objs.actionoptionmenu.c.actionoptionmenu.a.widgetset.def := 'dws';
help::pkg.display.widgets.objs.actionoptionmenu.c.actionoptionmenu.a.widgetset.a := 'widgetserver tool';
help::pkg.display.widgets.objs.actionoptionmenu.c.actionoptionmenu.s := 'actionoptionmenu(parent, labels, names, values, hlp, hlp2, nbreak, padx, pady, width, updatelabel, height, justify, font, relief, borderwidth, foreground, background, disabled, anchor, fill, widgetset)';
help::pkg.display.widgets.objs.autocli := [=];
help::pkg.display.widgets.objs.autocli.m := [=];
help::pkg.display.widgets.objs.autocli.c := [=];
help::pkg.display.widgets.objs.autocli.d := 'Tool to build a CLI from a record';
help::pkg.display.widgets.objs.autocli.c.autogui := [=];
help::pkg.display.widgets.objs.autocli.c.autogui.d := 'Constuct an autogui';
help::pkg.display.widgets.objs.autocli.c.autogui.a.params := [=];
help::pkg.display.widgets.objs.autocli.c.autogui.a.params.d := 'Record to define the autocli';
help::pkg.display.widgets.objs.autocli.c.autogui.a.params.def := '';
help::pkg.display.widgets.objs.autocli.c.autogui.a.params.a := 'Record';
help::pkg.display.widgets.objs.autocli.c.autogui.a.title := [=];
help::pkg.display.widgets.objs.autocli.c.autogui.a.title.d := 'Title';
help::pkg.display.widgets.objs.autocli.c.autogui.a.title.def := '\' autocli\' ';
help::pkg.display.widgets.objs.autocli.c.autogui.a.title.a := 'String';
help::pkg.display.widgets.objs.autocli.c.autogui.a.cliset := [=];
help::pkg.display.widgets.objs.autocli.c.autogui.a.cliset.d := 'clientry to use';
help::pkg.display.widgets.objs.autocli.c.autogui.a.cliset.def := 'dce';
help::pkg.display.widgets.objs.autocli.c.autogui.a.cliset.a := 'clientry tool';
help::pkg.display.widgets.objs.autocli.c.autogui.s := 'autogui(params, title, cliset)';
help::pkg.display.widgets.objs.autocli.m.dismiss := [=];
help::pkg.display.widgets.objs.autocli.m.dismiss.d := 'Dismiss the autocli';
help::pkg.display.widgets.objs.autocli.m.dismiss.s := 'dismiss()';
help::pkg.display.widgets.objs.autocli.m.loop := [=];
help::pkg.display.widgets.objs.autocli.m.loop.d := 'Loop over inputs executing callbacks';
help::pkg.display.widgets.objs.autocli.m.loop.s := 'loop()';
help::pkg.display.widgets.objs.autocli.m.setcallbacks := [=];
help::pkg.display.widgets.objs.autocli.m.setcallbacks.d := 'Set the callbacks to be used in loop';
help::pkg.display.widgets.objs.autocli.m.setcallbacks.s := 'setcallbacks()';
help::pkg.display.widgets.objs.autocli.m.help := [=];
help::pkg.display.widgets.objs.autocli.m.help.d := 'Show help';
help::pkg.display.widgets.objs.autocli.m.help.s := 'help()';
help::pkg.display.widgets.objs.autocli.m.get := [=];
help::pkg.display.widgets.objs.autocli.m.get.d := 'Get a record of the parameters';
help::pkg.display.widgets.objs.autocli.m.get.s := 'get()';
help::pkg.display.widgets.objs.autogui := [=];
help::pkg.display.widgets.objs.autogui.m := [=];
help::pkg.display.widgets.objs.autogui.c := [=];
help::pkg.display.widgets.objs.autogui.d := 'Tool to build and operate a graphical form interface';
help::pkg.display.widgets.objs.autogui.c.autogui := [=];
help::pkg.display.widgets.objs.autogui.c.autogui.d := 'Create an autogui \tool';
help::pkg.display.widgets.objs.autogui.c.autogui.a.params := [=];
help::pkg.display.widgets.objs.autogui.c.autogui.a.params.d := 'Record to define the autogui';
help::pkg.display.widgets.objs.autogui.c.autogui.a.params.def := '';
help::pkg.display.widgets.objs.autogui.c.autogui.a.params.a := 'Record';
help::pkg.display.widgets.objs.autogui.c.autogui.a.title := [=];
help::pkg.display.widgets.objs.autogui.c.autogui.a.title.d := 'title string if top-level frame constructed internally';
help::pkg.display.widgets.objs.autogui.c.autogui.a.title.def := '\' autogui\' ';
help::pkg.display.widgets.objs.autogui.c.autogui.a.title.a := 'String';
help::pkg.display.widgets.objs.autogui.c.autogui.a.toplevel := [=];
help::pkg.display.widgets.objs.autogui.c.autogui.a.toplevel.d := 'top-level parent frame';
help::pkg.display.widgets.objs.autogui.c.autogui.a.toplevel.def := 'F';
help::pkg.display.widgets.objs.autogui.c.autogui.a.toplevel.a := 'frame or boolean';
help::pkg.display.widgets.objs.autogui.c.autogui.a.map := [=];
help::pkg.display.widgets.objs.autogui.c.autogui.a.map.d := 'map the GUI to the screen immediately?';
help::pkg.display.widgets.objs.autogui.c.autogui.a.map.def := 'T';
help::pkg.display.widgets.objs.autogui.c.autogui.a.map.a := 'boolean';
help::pkg.display.widgets.objs.autogui.c.autogui.a.actionlabel := [=];
help::pkg.display.widgets.objs.autogui.c.autogui.a.actionlabel.d := 'label for action button';
help::pkg.display.widgets.objs.autogui.c.autogui.a.actionlabel.def := 'F';
help::pkg.display.widgets.objs.autogui.c.autogui.a.actionlabel.a := 'string or boolean';
help::pkg.display.widgets.objs.autogui.c.autogui.a.autoapply := [=];
help::pkg.display.widgets.objs.autogui.c.autogui.a.autoapply.d := 'Show auto-apply buttons';
help::pkg.display.widgets.objs.autogui.c.autogui.a.autoapply.def := 'T';
help::pkg.display.widgets.objs.autogui.c.autogui.a.autoapply.a := 'boolean';
help::pkg.display.widgets.objs.autogui.c.autogui.a.expand := [=];
help::pkg.display.widgets.objs.autogui.c.autogui.a.expand.d := 'Expand policy';
help::pkg.display.widgets.objs.autogui.c.autogui.a.expand.def := '\' none\' ';
help::pkg.display.widgets.objs.autogui.c.autogui.a.expand.a := '\' x\' |\' y\' |\' both\' |\' none\' ';
help::pkg.display.widgets.objs.autogui.c.autogui.a.widgetset := [=];
help::pkg.display.widgets.objs.autogui.c.autogui.a.widgetset.d := 'widgetserver \tool\ to use to build the GUI';
help::pkg.display.widgets.objs.autogui.c.autogui.a.widgetset.def := 'dws';
help::pkg.display.widgets.objs.autogui.c.autogui.a.widgetset.a := 'widgetserver \tool';
help::pkg.display.widgets.objs.autogui.c.autogui.s := 'autogui(params, title, toplevel, map, actionlabel, autoapply, expand, widgetset)';
help::pkg.display.widgets.objs.autogui.m.buttonbar := [=];
help::pkg.display.widgets.objs.autogui.m.buttonbar.d := 'Return the frame in which buttons are placed';
help::pkg.display.widgets.objs.autogui.m.buttonbar.s := 'buttonbar()';
help::pkg.display.widgets.objs.autogui.m.get := [=];
help::pkg.display.widgets.objs.autogui.m.get.d := 'Read the GUI and return the current settings';
help::pkg.display.widgets.objs.autogui.m.get.s := 'get()';
help::pkg.display.widgets.objs.autogui.m.map := [=];
help::pkg.display.widgets.objs.autogui.m.map.d := 'Map the GUI to the screen';
help::pkg.display.widgets.objs.autogui.m.map.s := 'map()';
help::pkg.display.widgets.objs.autogui.m.done := [=];
help::pkg.display.widgets.objs.autogui.m.done.d := 'Finish using this autogui \tool';
help::pkg.display.widgets.objs.autogui.m.done.s := 'done()';
help::pkg.display.widgets.objs.autogui.m.fillgui := [=];
help::pkg.display.widgets.objs.autogui.m.fillgui.d := 'Fill the autogui \tool\ with updated values';
help::pkg.display.widgets.objs.autogui.m.fillgui.a.wparams := [=];
help::pkg.display.widgets.objs.autogui.m.fillgui.a.wparams.d := 'new parameter values';
help::pkg.display.widgets.objs.autogui.m.fillgui.a.wparams.def := '';
help::pkg.display.widgets.objs.autogui.m.fillgui.a.wparams.a := 'full-form parameter record';
help::pkg.display.widgets.objs.autogui.m.fillgui.a.what := [=];
help::pkg.display.widgets.objs.autogui.m.fillgui.a.what.d := 'which sub-field to extract new values from';
help::pkg.display.widgets.objs.autogui.m.fillgui.a.what.def := '\' value\' ';
help::pkg.display.widgets.objs.autogui.m.fillgui.a.what.a := '\' value\'  or \' default\' ';
help::pkg.display.widgets.objs.autogui.m.fillgui.s := 'fillgui(wparams, what)';
help::pkg.display.widgets.objs.autogui.m.modifygui := [=];
help::pkg.display.widgets.objs.autogui.m.modifygui.d := 'Modify the GUI parameter set';
help::pkg.display.widgets.objs.autogui.m.modifygui.a.wparams := [=];
help::pkg.display.widgets.objs.autogui.m.modifygui.a.wparams.d := 'new parameters';
help::pkg.display.widgets.objs.autogui.m.modifygui.a.wparams.def := '';
help::pkg.display.widgets.objs.autogui.m.modifygui.a.wparams.a := 'full-form parameter record';
help::pkg.display.widgets.objs.autogui.m.modifygui.s := 'modifygui(wparams)';
help::pkg.display.widgets.funs.autoguitest := [=];
help::pkg.display.widgets.funs.autoguitest.a := [=];
help::pkg.display.widgets.funs.autoguitest.d := 'Test the autogui';
help::pkg.display.widgets.funs.autoguitest.s := 'autoguitest()';
help::pkg.display.widgets.objs.blinklabel := [=];
help::pkg.display.widgets.objs.blinklabel.m := [=];
help::pkg.display.widgets.objs.blinklabel.c := [=];
help::pkg.display.widgets.objs.blinklabel.d := 'Glish/Tk label which can be made to blink';
help::pkg.display.widgets.objs.blinklabel.c.blinklabel := [=];
help::pkg.display.widgets.objs.blinklabel.c.blinklabel.d := 'Construct a blinklabel';
help::pkg.display.widgets.objs.blinklabel.c.blinklabel.a.parent := [=];
help::pkg.display.widgets.objs.blinklabel.c.blinklabel.a.parent.d := 'Parent of the label';
help::pkg.display.widgets.objs.blinklabel.c.blinklabel.a.parent.def := '';
help::pkg.display.widgets.objs.blinklabel.c.blinklabel.a.parent.a := 'Tk frame';
help::pkg.display.widgets.objs.blinklabel.c.blinklabel.a.text := [=];
help::pkg.display.widgets.objs.blinklabel.c.blinklabel.a.text.d := 'label text';
help::pkg.display.widgets.objs.blinklabel.c.blinklabel.a.text.def := '\' label\' ';
help::pkg.display.widgets.objs.blinklabel.c.blinklabel.a.text.a := 'string';
help::pkg.display.widgets.objs.blinklabel.c.blinklabel.a.justify := [=];
help::pkg.display.widgets.objs.blinklabel.c.blinklabel.a.justify.d := 'justification of text';
help::pkg.display.widgets.objs.blinklabel.c.blinklabel.a.justify.def := '\' left\' ';
help::pkg.display.widgets.objs.blinklabel.c.blinklabel.a.justify.a := '\' center\'  \' left\'  \' right\' ';
help::pkg.display.widgets.objs.blinklabel.c.blinklabel.a.hlp := [=];
help::pkg.display.widgets.objs.blinklabel.c.blinklabel.a.hlp.d := 'text for popuphelp';
help::pkg.display.widgets.objs.blinklabel.c.blinklabel.a.hlp.def := '\' \' ';
help::pkg.display.widgets.objs.blinklabel.c.blinklabel.a.hlp.a := 'string';
help::pkg.display.widgets.objs.blinklabel.c.blinklabel.a.padx := [=];
help::pkg.display.widgets.objs.blinklabel.c.blinklabel.a.padx.d := 'horizontal padding';
help::pkg.display.widgets.objs.blinklabel.c.blinklabel.a.padx.def := '4';
help::pkg.display.widgets.objs.blinklabel.c.blinklabel.a.padx.a := 'dimension';
help::pkg.display.widgets.objs.blinklabel.c.blinklabel.a.pady := [=];
help::pkg.display.widgets.objs.blinklabel.c.blinklabel.a.pady.d := 'vertical padding';
help::pkg.display.widgets.objs.blinklabel.c.blinklabel.a.pady.def := '2';
help::pkg.display.widgets.objs.blinklabel.c.blinklabel.a.pady.a := 'dimension';
help::pkg.display.widgets.objs.blinklabel.c.blinklabel.a.font := [=];
help::pkg.display.widgets.objs.blinklabel.c.blinklabel.a.font.d := 'text font';
help::pkg.display.widgets.objs.blinklabel.c.blinklabel.a.font.def := '\' \' ';
help::pkg.display.widgets.objs.blinklabel.c.blinklabel.a.font.a := 'X font';
help::pkg.display.widgets.objs.blinklabel.c.blinklabel.a.width := [=];
help::pkg.display.widgets.objs.blinklabel.c.blinklabel.a.width.d := 'width in character units';
help::pkg.display.widgets.objs.blinklabel.c.blinklabel.a.width.def := '0';
help::pkg.display.widgets.objs.blinklabel.c.blinklabel.a.width.a := 'integer';
help::pkg.display.widgets.objs.blinklabel.c.blinklabel.a.relief := [=];
help::pkg.display.widgets.objs.blinklabel.c.blinklabel.a.relief.d := 'border relief';
help::pkg.display.widgets.objs.blinklabel.c.blinklabel.a.relief.def := '\' flat\' ';
help::pkg.display.widgets.objs.blinklabel.c.blinklabel.a.relief.a := '`flat\'  `ridge\' ,                                             `raised\'  `sunken\'  `groove\' ';
help::pkg.display.widgets.objs.blinklabel.c.blinklabel.a.borderwidth := [=];
help::pkg.display.widgets.objs.blinklabel.c.blinklabel.a.borderwidth.d := 'border width';
help::pkg.display.widgets.objs.blinklabel.c.blinklabel.a.borderwidth.def := '2';
help::pkg.display.widgets.objs.blinklabel.c.blinklabel.a.borderwidth.a := 'dimension';
help::pkg.display.widgets.objs.blinklabel.c.blinklabel.a.foreground := [=];
help::pkg.display.widgets.objs.blinklabel.c.blinklabel.a.foreground.d := 'color of text';
help::pkg.display.widgets.objs.blinklabel.c.blinklabel.a.foreground.def := '`black\' ';
help::pkg.display.widgets.objs.blinklabel.c.blinklabel.a.foreground.a := 'X color';
help::pkg.display.widgets.objs.blinklabel.c.blinklabel.a.background := [=];
help::pkg.display.widgets.objs.blinklabel.c.blinklabel.a.background.d := 'background color';
help::pkg.display.widgets.objs.blinklabel.c.blinklabel.a.background.def := '`lightgrey\' ';
help::pkg.display.widgets.objs.blinklabel.c.blinklabel.a.background.a := 'X color';
help::pkg.display.widgets.objs.blinklabel.c.blinklabel.a.anchor := [=];
help::pkg.display.widgets.objs.blinklabel.c.blinklabel.a.anchor.d := 'location of text';
help::pkg.display.widgets.objs.blinklabel.c.blinklabel.a.anchor.def := '\' c\' ';
help::pkg.display.widgets.objs.blinklabel.c.blinklabel.a.anchor.a := '\' c\'  \' n\'  \' s\'  \' e\'  \' w\'  \' ne\'   					   \' nw\'  \' se\'  \' sw\' ';
help::pkg.display.widgets.objs.blinklabel.c.blinklabel.a.fill := [=];
help::pkg.display.widgets.objs.blinklabel.c.blinklabel.a.fill.d := 'how to expand when resized';
help::pkg.display.widgets.objs.blinklabel.c.blinklabel.a.fill.def := '\' none\' ';
help::pkg.display.widgets.objs.blinklabel.c.blinklabel.a.fill.a := '\' x\'  \' y\'  \' both\'  \' none';
help::pkg.display.widgets.objs.blinklabel.c.blinklabel.a.blink := [=];
help::pkg.display.widgets.objs.blinklabel.c.blinklabel.a.blink.d := 'whether to blink immediately';
help::pkg.display.widgets.objs.blinklabel.c.blinklabel.a.blink.def := 'F';
help::pkg.display.widgets.objs.blinklabel.c.blinklabel.a.blink.a := 'T F';
help::pkg.display.widgets.objs.blinklabel.c.blinklabel.a.interval := [=];
help::pkg.display.widgets.objs.blinklabel.c.blinklabel.a.interval.d := 'blink rate in seconds';
help::pkg.display.widgets.objs.blinklabel.c.blinklabel.a.interval.def := '1';
help::pkg.display.widgets.objs.blinklabel.c.blinklabel.a.interval.a := 'float';
help::pkg.display.widgets.objs.blinklabel.c.blinklabel.a.widgetset := [=];
help::pkg.display.widgets.objs.blinklabel.c.blinklabel.a.widgetset.d := 'widgetserver to use to make label';
help::pkg.display.widgets.objs.blinklabel.c.blinklabel.a.widgetset.def := 'dws';
help::pkg.display.widgets.objs.blinklabel.c.blinklabel.a.widgetset.a := 'widgetserver object';
help::pkg.display.widgets.objs.blinklabel.c.blinklabel.s := 'blinklabel(parent, text, justify, hlp, padx, pady, font, width, relief, borderwidth, foreground, background, anchor, fill, blink, interval, widgetset)';
help::pkg.display.widgets.objs.blinklabel.m.blink := [=];
help::pkg.display.widgets.objs.blinklabel.m.blink.d := 'Switch blinking on or off';
help::pkg.display.widgets.objs.blinklabel.m.blink.a.on := [=];
help::pkg.display.widgets.objs.blinklabel.m.blink.a.on.d := 'blinking on (T) or off (F)';
help::pkg.display.widgets.objs.blinklabel.m.blink.a.on.def := 'T';
help::pkg.display.widgets.objs.blinklabel.m.blink.a.on.a := 'T F';
help::pkg.display.widgets.objs.blinklabel.m.blink.a.interval := [=];
help::pkg.display.widgets.objs.blinklabel.m.blink.a.interval.d := 'blink interval in seconds';
help::pkg.display.widgets.objs.blinklabel.m.blink.a.interval.def := '1';
help::pkg.display.widgets.objs.blinklabel.m.blink.a.interval.a := 'float';
help::pkg.display.widgets.objs.blinklabel.m.blink.s := 'blink(on, interval)';
help::pkg.display.widgets.objs.blinklabel.m.done := [=];
help::pkg.display.widgets.objs.blinklabel.m.done.d := 'Destroy ourselves';
help::pkg.display.widgets.objs.blinklabel.m.done.s := 'done()';
help::pkg.display.widgets.objs.checkmenu := [=];
help::pkg.display.widgets.objs.checkmenu.m := [=];
help::pkg.display.widgets.objs.checkmenu.c := [=];
help::pkg.display.widgets.objs.checkmenu.d := 'Tk widget to provide a flat check button menu';
help::pkg.display.widgets.objs.checkmenu.c.checkmenu := [=];
help::pkg.display.widgets.objs.checkmenu.c.checkmenu.d := 'Construct a checkmenu';
help::pkg.display.widgets.objs.checkmenu.c.checkmenu.a.parent := [=];
help::pkg.display.widgets.objs.checkmenu.c.checkmenu.a.parent.d := 'Parent of the menu';
help::pkg.display.widgets.objs.checkmenu.c.checkmenu.a.parent.def := '';
help::pkg.display.widgets.objs.checkmenu.c.checkmenu.a.parent.a := 'Widget';
help::pkg.display.widgets.objs.checkmenu.c.checkmenu.a.label := [=];
help::pkg.display.widgets.objs.checkmenu.c.checkmenu.a.label.d := 'The label of the menu';
help::pkg.display.widgets.objs.checkmenu.c.checkmenu.a.label.def := '``checkmenu\' \' ';
help::pkg.display.widgets.objs.checkmenu.c.checkmenu.a.label.a := 'String';
help::pkg.display.widgets.objs.checkmenu.c.checkmenu.a.names := [=];
help::pkg.display.widgets.objs.checkmenu.c.checkmenu.a.names.d := 'The menu item names';
help::pkg.display.widgets.objs.checkmenu.c.checkmenu.a.names.def := 'Empty menu';
help::pkg.display.widgets.objs.checkmenu.c.checkmenu.a.names.a := 'Vector of strings';
help::pkg.display.widgets.objs.checkmenu.c.checkmenu.a.values := [=];
help::pkg.display.widgets.objs.checkmenu.c.checkmenu.a.values.d := 'The menu item values';
help::pkg.display.widgets.objs.checkmenu.c.checkmenu.a.values.def := 'Empty menu';
help::pkg.display.widgets.objs.checkmenu.c.checkmenu.a.values.a := 'Vector of anything';
help::pkg.display.widgets.objs.checkmenu.c.checkmenu.a.hlp := [=];
help::pkg.display.widgets.objs.checkmenu.c.checkmenu.a.hlp.d := 'Short popuphelp text';
help::pkg.display.widgets.objs.checkmenu.c.checkmenu.a.hlp.def := 'No help';
help::pkg.display.widgets.objs.checkmenu.c.checkmenu.a.hlp.a := 'String';
help::pkg.display.widgets.objs.checkmenu.c.checkmenu.a.hlp2 := [=];
help::pkg.display.widgets.objs.checkmenu.c.checkmenu.a.hlp2.d := 'Long popuphelp text';
help::pkg.display.widgets.objs.checkmenu.c.checkmenu.a.hlp2.def := 'No help';
help::pkg.display.widgets.objs.checkmenu.c.checkmenu.a.hlp2.a := 'String';
help::pkg.display.widgets.objs.checkmenu.c.checkmenu.a.padx := [=];
help::pkg.display.widgets.objs.checkmenu.c.checkmenu.a.padx.d := 'Horizontal padding around text';
help::pkg.display.widgets.objs.checkmenu.c.checkmenu.a.padx.def := '7';
help::pkg.display.widgets.objs.checkmenu.c.checkmenu.a.padx.a := 'Integer';
help::pkg.display.widgets.objs.checkmenu.c.checkmenu.a.pady := [=];
help::pkg.display.widgets.objs.checkmenu.c.checkmenu.a.pady.d := 'Vertical padding around text';
help::pkg.display.widgets.objs.checkmenu.c.checkmenu.a.pady.def := '3';
help::pkg.display.widgets.objs.checkmenu.c.checkmenu.a.pady.a := 'Integer';
help::pkg.display.widgets.objs.checkmenu.c.checkmenu.a.width := [=];
help::pkg.display.widgets.objs.checkmenu.c.checkmenu.a.width.d := 'Width in character units';
help::pkg.display.widgets.objs.checkmenu.c.checkmenu.a.width.def := '0 [Auto-scale]';
help::pkg.display.widgets.objs.checkmenu.c.checkmenu.a.width.a := 'Integer';
help::pkg.display.widgets.objs.checkmenu.c.checkmenu.a.height := [=];
help::pkg.display.widgets.objs.checkmenu.c.checkmenu.a.height.d := 'Height in character units';
help::pkg.display.widgets.objs.checkmenu.c.checkmenu.a.height.def := '1';
help::pkg.display.widgets.objs.checkmenu.c.checkmenu.a.height.a := 'Integer';
help::pkg.display.widgets.objs.checkmenu.c.checkmenu.a.justify := [=];
help::pkg.display.widgets.objs.checkmenu.c.checkmenu.a.justify.d := 'Justification of text';
help::pkg.display.widgets.objs.checkmenu.c.checkmenu.a.justify.def := '`center\' ';
help::pkg.display.widgets.objs.checkmenu.c.checkmenu.a.justify.a := 'String from `center\' , \' left\' , \' right\' ';
help::pkg.display.widgets.objs.checkmenu.c.checkmenu.a.font := [=];
help::pkg.display.widgets.objs.checkmenu.c.checkmenu.a.font.d := 'Font of text ';
help::pkg.display.widgets.objs.checkmenu.c.checkmenu.a.font.def := '';
help::pkg.display.widgets.objs.checkmenu.c.checkmenu.a.font.a := 'X font';
help::pkg.display.widgets.objs.checkmenu.c.checkmenu.a.relief := [=];
help::pkg.display.widgets.objs.checkmenu.c.checkmenu.a.relief.d := 'Edge relief';
help::pkg.display.widgets.objs.checkmenu.c.checkmenu.a.relief.def := '`groove\' ';
help::pkg.display.widgets.objs.checkmenu.c.checkmenu.a.relief.a := 'String from `flat\' , `ridge\' ,                                             `raised\' , `sunken\' , `groove\' ';
help::pkg.display.widgets.objs.checkmenu.c.checkmenu.a.borderwidth := [=];
help::pkg.display.widgets.objs.checkmenu.c.checkmenu.a.borderwidth.d := 'Border width';
help::pkg.display.widgets.objs.checkmenu.c.checkmenu.a.borderwidth.def := '2';
help::pkg.display.widgets.objs.checkmenu.c.checkmenu.a.borderwidth.a := 'Integer';
help::pkg.display.widgets.objs.checkmenu.c.checkmenu.a.foreground := [=];
help::pkg.display.widgets.objs.checkmenu.c.checkmenu.a.foreground.d := 'Color of text';
help::pkg.display.widgets.objs.checkmenu.c.checkmenu.a.foreground.def := '`black\' ';
help::pkg.display.widgets.objs.checkmenu.c.checkmenu.a.foreground.a := 'X color';
help::pkg.display.widgets.objs.checkmenu.c.checkmenu.a.background := [=];
help::pkg.display.widgets.objs.checkmenu.c.checkmenu.a.background.d := 'Background color';
help::pkg.display.widgets.objs.checkmenu.c.checkmenu.a.background.def := '`lightgrey\' ';
help::pkg.display.widgets.objs.checkmenu.c.checkmenu.a.background.a := 'X color';
help::pkg.display.widgets.objs.checkmenu.c.checkmenu.a.disabled := [=];
help::pkg.display.widgets.objs.checkmenu.c.checkmenu.a.disabled.d := 'Is inactivated ?';
help::pkg.display.widgets.objs.checkmenu.c.checkmenu.a.disabled.def := 'F';
help::pkg.display.widgets.objs.checkmenu.c.checkmenu.a.disabled.a := 'Boolean';
help::pkg.display.widgets.objs.checkmenu.c.checkmenu.a.anchor := [=];
help::pkg.display.widgets.objs.checkmenu.c.checkmenu.a.anchor.d := 'Location of text';
help::pkg.display.widgets.objs.checkmenu.c.checkmenu.a.anchor.def := '`c\' ';
help::pkg.display.widgets.objs.checkmenu.c.checkmenu.a.anchor.a := 'String  from \' c\' , \' n\' , \' s\' , \' e\' , \' w\' , \' ne\' ,                                            \' nw\' , \' se\' , \' sw\' ';
help::pkg.display.widgets.objs.checkmenu.c.checkmenu.a.fill := [=];
help::pkg.display.widgets.objs.checkmenu.c.checkmenu.a.fill.d := 'How to expand when resized';
help::pkg.display.widgets.objs.checkmenu.c.checkmenu.a.fill.def := '\' none\' ';
help::pkg.display.widgets.objs.checkmenu.c.checkmenu.a.fill.a := 'String from `x\' , `y\' , `both\' , `none\' ';
help::pkg.display.widgets.objs.checkmenu.c.checkmenu.a.widgetset := [=];
help::pkg.display.widgets.objs.checkmenu.c.checkmenu.a.widgetset.d := 'The widget server to use';
help::pkg.display.widgets.objs.checkmenu.c.checkmenu.a.widgetset.def := 'dws';
help::pkg.display.widgets.objs.checkmenu.c.checkmenu.a.widgetset.a := 'widgetserver tool';
help::pkg.display.widgets.objs.checkmenu.c.checkmenu.s := 'checkmenu(parent, label, names, values, hlp, hlp2, padx, pady, width, height, justify, font, relief, borderwidth, foreground, background, disabled, anchor, fill, widgetset)';
help::pkg.display.widgets.objs.checkmenu.m.extend := [=];
help::pkg.display.widgets.objs.checkmenu.m.extend.d := 'Extend the menu with more items';
help::pkg.display.widgets.objs.checkmenu.m.extend.a.names := [=];
help::pkg.display.widgets.objs.checkmenu.m.extend.a.names.d := 'The menu item names';
help::pkg.display.widgets.objs.checkmenu.m.extend.a.names.def := 'Empty menu';
help::pkg.display.widgets.objs.checkmenu.m.extend.a.names.a := 'Vector of strings';
help::pkg.display.widgets.objs.checkmenu.m.extend.a.values := [=];
help::pkg.display.widgets.objs.checkmenu.m.extend.a.values.d := 'The menu item values';
help::pkg.display.widgets.objs.checkmenu.m.extend.a.values.def := 'Empty menu';
help::pkg.display.widgets.objs.checkmenu.m.extend.a.values.a := 'Vector of anything';
help::pkg.display.widgets.objs.checkmenu.m.extend.s := 'extend(names, values)';
help::pkg.display.widgets.objs.checkmenu.m.replace := [=];
help::pkg.display.widgets.objs.checkmenu.m.replace.d := 'Replace the menu with the provided items';
help::pkg.display.widgets.objs.checkmenu.m.replace.a.label := [=];
help::pkg.display.widgets.objs.checkmenu.m.replace.a.label.d := 'The label of the menu';
help::pkg.display.widgets.objs.checkmenu.m.replace.a.label.def := '``checkmenu\' \' ';
help::pkg.display.widgets.objs.checkmenu.m.replace.a.label.a := 'String';
help::pkg.display.widgets.objs.checkmenu.m.replace.a.names := [=];
help::pkg.display.widgets.objs.checkmenu.m.replace.a.names.d := 'The menu item names';
help::pkg.display.widgets.objs.checkmenu.m.replace.a.names.def := 'Empty menu';
help::pkg.display.widgets.objs.checkmenu.m.replace.a.names.a := 'Vector of strings';
help::pkg.display.widgets.objs.checkmenu.m.replace.a.values := [=];
help::pkg.display.widgets.objs.checkmenu.m.replace.a.values.d := 'The menu item values';
help::pkg.display.widgets.objs.checkmenu.m.replace.a.values.def := 'Empty menu';
help::pkg.display.widgets.objs.checkmenu.m.replace.a.values.a := 'Vector of anything';
help::pkg.display.widgets.objs.checkmenu.m.replace.a.width := [=];
help::pkg.display.widgets.objs.checkmenu.m.replace.a.width.d := 'Width in character units';
help::pkg.display.widgets.objs.checkmenu.m.replace.a.width.def := '0 [Auto-scale]';
help::pkg.display.widgets.objs.checkmenu.m.replace.a.width.a := 'Integer';
help::pkg.display.widgets.objs.checkmenu.m.replace.s := 'replace(label, names, values, width)';
help::pkg.display.widgets.objs.checkmenu.m.selectindex := [=];
help::pkg.display.widgets.objs.checkmenu.m.selectindex.d := 'Select an item in the menu by index';
help::pkg.display.widgets.objs.checkmenu.m.selectindex.a.idx := [=];
help::pkg.display.widgets.objs.checkmenu.m.selectindex.a.idx.d := 'The menu item index';
help::pkg.display.widgets.objs.checkmenu.m.selectindex.a.idx.def := '';
help::pkg.display.widgets.objs.checkmenu.m.selectindex.a.idx.a := 'Integer';
help::pkg.display.widgets.objs.checkmenu.m.selectindex.a.state := [=];
help::pkg.display.widgets.objs.checkmenu.m.selectindex.a.state.d := 'The state for the check box';
help::pkg.display.widgets.objs.checkmenu.m.selectindex.a.state.def := 'Opposite state';
help::pkg.display.widgets.objs.checkmenu.m.selectindex.a.state.a := 'T of F';
help::pkg.display.widgets.objs.checkmenu.m.selectindex.s := 'selectindex(idx, state)';
help::pkg.display.widgets.objs.checkmenu.m.selectname := [=];
help::pkg.display.widgets.objs.checkmenu.m.selectname.d := 'Select an item in the menu by name';
help::pkg.display.widgets.objs.checkmenu.m.selectname.a.name := [=];
help::pkg.display.widgets.objs.checkmenu.m.selectname.a.name.d := 'The menu item name';
help::pkg.display.widgets.objs.checkmenu.m.selectname.a.name.def := '';
help::pkg.display.widgets.objs.checkmenu.m.selectname.a.name.a := 'String';
help::pkg.display.widgets.objs.checkmenu.m.selectname.a.state := [=];
help::pkg.display.widgets.objs.checkmenu.m.selectname.a.state.d := 'The state for the check box';
help::pkg.display.widgets.objs.checkmenu.m.selectname.a.state.def := 'Opposite state';
help::pkg.display.widgets.objs.checkmenu.m.selectname.a.state.a := 'T of F';
help::pkg.display.widgets.objs.checkmenu.m.selectname.s := 'selectname(name, state)';
help::pkg.display.widgets.objs.checkmenu.m.selectvalue := [=];
help::pkg.display.widgets.objs.checkmenu.m.selectvalue.d := 'Select an item in the menu by value';
help::pkg.display.widgets.objs.checkmenu.m.selectvalue.a.value := [=];
help::pkg.display.widgets.objs.checkmenu.m.selectvalue.a.value.d := 'The menu item value';
help::pkg.display.widgets.objs.checkmenu.m.selectvalue.a.value.def := '';
help::pkg.display.widgets.objs.checkmenu.m.selectvalue.a.value.a := 'Same type as at construction';
help::pkg.display.widgets.objs.checkmenu.m.selectvalue.a.state := [=];
help::pkg.display.widgets.objs.checkmenu.m.selectvalue.a.state.d := 'The state for the check box';
help::pkg.display.widgets.objs.checkmenu.m.selectvalue.a.state.def := 'Opposite state';
help::pkg.display.widgets.objs.checkmenu.m.selectvalue.a.state.a := 'T of F';
help::pkg.display.widgets.objs.checkmenu.m.selectvalue.s := 'selectvalue(value, state)';
help::pkg.display.widgets.objs.checkmenu.m.getlabel := [=];
help::pkg.display.widgets.objs.checkmenu.m.getlabel.d := 'Get the label of the menu button';
help::pkg.display.widgets.objs.checkmenu.m.getlabel.s := 'getlabel()';
help::pkg.display.widgets.objs.checkmenu.m.getnames := [=];
help::pkg.display.widgets.objs.checkmenu.m.getnames.d := 'Gets all of the names associated with the menu';
help::pkg.display.widgets.objs.checkmenu.m.getnames.s := 'getnames()';
help::pkg.display.widgets.objs.checkmenu.m.getvalues := [=];
help::pkg.display.widgets.objs.checkmenu.m.getvalues.d := 'Gets all of the values associated with the menu';
help::pkg.display.widgets.objs.checkmenu.m.getvalues.s := 'getvalues()';
help::pkg.display.widgets.objs.checkmenu.m.getstate := [=];
help::pkg.display.widgets.objs.checkmenu.m.getstate.d := 'Get the state of the specified check button';
help::pkg.display.widgets.objs.checkmenu.m.getstate.a.idx := [=];
help::pkg.display.widgets.objs.checkmenu.m.getstate.a.idx.d := 'The index of the menu item';
help::pkg.display.widgets.objs.checkmenu.m.getstate.a.idx.def := '';
help::pkg.display.widgets.objs.checkmenu.m.getstate.a.idx.a := 'Integer';
help::pkg.display.widgets.objs.checkmenu.m.getstate.s := 'getstate(idx)';
help::pkg.display.widgets.objs.checkmenu.m.getstates := [=];
help::pkg.display.widgets.objs.checkmenu.m.getstates.d := 'Get the states of all of the check buttons';
help::pkg.display.widgets.objs.checkmenu.m.getstates.s := 'getstates()';
help::pkg.display.widgets.objs.checkmenu.m.getonstates := [=];
help::pkg.display.widgets.objs.checkmenu.m.getonstates.d := 'Get the indices of the items which are checked';
help::pkg.display.widgets.objs.checkmenu.m.getonstates.s := 'getonstates()';
help::pkg.display.widgets.objs.checkmenu.m.getoffstates := [=];
help::pkg.display.widgets.objs.checkmenu.m.getoffstates.d := 'Get the indices of the items which are not checked';
help::pkg.display.widgets.objs.checkmenu.m.getoffstates.s := 'getoffstates()';
help::pkg.display.widgets.objs.checkmenu.m.findname := [=];
help::pkg.display.widgets.objs.checkmenu.m.findname.d := 'Find the index of the item with the given name';
help::pkg.display.widgets.objs.checkmenu.m.findname.a.name := [=];
help::pkg.display.widgets.objs.checkmenu.m.findname.a.name.d := 'The menu item name';
help::pkg.display.widgets.objs.checkmenu.m.findname.a.name.def := '';
help::pkg.display.widgets.objs.checkmenu.m.findname.a.name.a := 'String';
help::pkg.display.widgets.objs.checkmenu.m.findname.s := 'findname(name)';
help::pkg.display.widgets.objs.checkmenu.m.findvalue := [=];
help::pkg.display.widgets.objs.checkmenu.m.findvalue.d := 'Find the index of the item with the given value';
help::pkg.display.widgets.objs.checkmenu.m.findvalue.a.value := [=];
help::pkg.display.widgets.objs.checkmenu.m.findvalue.a.value.d := 'The menu item value';
help::pkg.display.widgets.objs.checkmenu.m.findvalue.a.value.def := '';
help::pkg.display.widgets.objs.checkmenu.m.findvalue.a.value.a := 'Same type as the array ``value\' \'  used in  construction';
help::pkg.display.widgets.objs.checkmenu.m.findvalue.s := 'findvalue(value)';
help::pkg.display.widgets.objs.checkmenu.m.setlabel := [=];
help::pkg.display.widgets.objs.checkmenu.m.setlabel.d := 'Set the label of the checkmenu';
help::pkg.display.widgets.objs.checkmenu.m.setlabel.a.label := [=];
help::pkg.display.widgets.objs.checkmenu.m.setlabel.a.label.d := 'The label';
help::pkg.display.widgets.objs.checkmenu.m.setlabel.a.label.def := '';
help::pkg.display.widgets.objs.checkmenu.m.setlabel.a.label.a := 'String';
help::pkg.display.widgets.objs.checkmenu.m.setlabel.a.width := [=];
help::pkg.display.widgets.objs.checkmenu.m.setlabel.a.width.d := 'Width of button';
help::pkg.display.widgets.objs.checkmenu.m.setlabel.a.width.def := '-1';
help::pkg.display.widgets.objs.checkmenu.m.setlabel.a.width.a := 'Integer';
help::pkg.display.widgets.objs.checkmenu.m.setlabel.s := 'setlabel(label, width)';
help::pkg.display.widgets.objs.checkmenu.m.reset := [=];
help::pkg.display.widgets.objs.checkmenu.m.reset.d := 'Resets the state of all check buttons to F';
help::pkg.display.widgets.objs.checkmenu.m.reset.s := 'reset()';
help::pkg.display.widgets.objs.checkmenu.m.setforeground := [=];
help::pkg.display.widgets.objs.checkmenu.m.setforeground.d := 'Set the color of the foreground of the checkmenu button';
help::pkg.display.widgets.objs.checkmenu.m.setforeground.a.color := [=];
help::pkg.display.widgets.objs.checkmenu.m.setforeground.a.color.d := 'The color';
help::pkg.display.widgets.objs.checkmenu.m.setforeground.a.color.def := '';
help::pkg.display.widgets.objs.checkmenu.m.setforeground.a.color.a := 'Any X color encoded as a String';
help::pkg.display.widgets.objs.checkmenu.m.setforeground.s := 'setforeground(color)';
help::pkg.display.widgets.objs.checkmenu.m.setbackground := [=];
help::pkg.display.widgets.objs.checkmenu.m.setbackground.d := 'Set the color of the background of the checkmenu button';
help::pkg.display.widgets.objs.checkmenu.m.setbackground.a.color := [=];
help::pkg.display.widgets.objs.checkmenu.m.setbackground.a.color.d := 'The color';
help::pkg.display.widgets.objs.checkmenu.m.setbackground.a.color.def := '';
help::pkg.display.widgets.objs.checkmenu.m.setbackground.a.color.a := 'Any X color encoded as a String';
help::pkg.display.widgets.objs.checkmenu.m.setbackground.s := 'setbackground(color)';
help::pkg.display.widgets.objs.checkmenu.m.disabled := [=];
help::pkg.display.widgets.objs.checkmenu.m.disabled.d := 'Disable or enable the checkmenu widget';
help::pkg.display.widgets.objs.checkmenu.m.disabled.a.disable := [=];
help::pkg.display.widgets.objs.checkmenu.m.disabled.a.disable.d := 'Disable the widget';
help::pkg.display.widgets.objs.checkmenu.m.disabled.a.disable.def := 'T';
help::pkg.display.widgets.objs.checkmenu.m.disabled.a.disable.a := 'T or F';
help::pkg.display.widgets.objs.checkmenu.m.disabled.s := 'disabled(disable)';
help::pkg.display.widgets.objs.checkmenu.m.isenabled := [=];
help::pkg.display.widgets.objs.checkmenu.m.isenabled.d := 'Is the checkmenu widget enabled ?';
help::pkg.display.widgets.objs.checkmenu.m.isenabled.s := 'isenabled()';
help::pkg.display.widgets.objs.combobox := [=];
help::pkg.display.widgets.objs.combobox.m := [=];
help::pkg.display.widgets.objs.combobox.c := [=];
help::pkg.display.widgets.objs.combobox.d := 'A widget for selecting one or more items from a list.';
help::pkg.display.widgets.objs.combobox.c.combobox := [=];
help::pkg.display.widgets.objs.combobox.c.combobox.d := 'Construct a combobox';
help::pkg.display.widgets.objs.combobox.c.combobox.a.parent := [=];
help::pkg.display.widgets.objs.combobox.c.combobox.a.parent.d := 'a frame to hold the combobox';
help::pkg.display.widgets.objs.combobox.c.combobox.a.parent.def := '';
help::pkg.display.widgets.objs.combobox.c.combobox.a.parent.a := 'glishtk frame';
help::pkg.display.widgets.objs.combobox.c.combobox.a.labeltext := [=];
help::pkg.display.widgets.objs.combobox.c.combobox.a.labeltext.d := 'a label for the combobox';
help::pkg.display.widgets.objs.combobox.c.combobox.a.labeltext.def := '\' label\' ';
help::pkg.display.widgets.objs.combobox.c.combobox.a.labeltext.a := 'string';
help::pkg.display.widgets.objs.combobox.c.combobox.a.items := [=];
help::pkg.display.widgets.objs.combobox.c.combobox.a.items.d := 'The initial contents of the combobox data. The first item will be selected.  If F the contents will be empty';
help::pkg.display.widgets.objs.combobox.c.combobox.a.items.def := 'F';
help::pkg.display.widgets.objs.combobox.c.combobox.a.items.a := 'an array of strings';
help::pkg.display.widgets.objs.combobox.c.combobox.a.addonreturn := [=];
help::pkg.display.widgets.objs.combobox.c.combobox.a.addonreturn.d := 'Should a return in the entry widget automatically add the entry value to the contents?';
help::pkg.display.widgets.objs.combobox.c.combobox.a.addonreturn.def := 'T';
help::pkg.display.widgets.objs.combobox.c.combobox.a.addonreturn.a := 'T or F';
help::pkg.display.widgets.objs.combobox.c.combobox.a.entrydisabled := [=];
help::pkg.display.widgets.objs.combobox.c.combobox.a.entrydisabled.d := 'When the entry is disabled, the user can not edit in the entry, the combobox otherwise functions normally.';
help::pkg.display.widgets.objs.combobox.c.combobox.a.entrydisabled.def := 'F';
help::pkg.display.widgets.objs.combobox.c.combobox.a.entrydisabled.a := 'T or F';
help::pkg.display.widgets.objs.combobox.c.combobox.a.canclearpopup := [=];
help::pkg.display.widgets.objs.combobox.c.combobox.a.canclearpopup.d := 'When this is true, the listbox comes with a ``Clear\' \'  button which, when pressed, clears the contents.';
help::pkg.display.widgets.objs.combobox.c.combobox.a.canclearpopup.def := 'F';
help::pkg.display.widgets.objs.combobox.c.combobox.a.canclearpopup.a := 'T or F';
help::pkg.display.widgets.objs.combobox.c.combobox.a.autoinsertorder := [=];
help::pkg.display.widgets.objs.combobox.c.combobox.a.autoinsertorder.d := 'Determines where each new item is inserted if no specific location is given.';
help::pkg.display.widgets.objs.combobox.c.combobox.a.autoinsertorder.def := '\' tail\' ';
help::pkg.display.widgets.objs.combobox.c.combobox.a.autoinsertorder.a := '\' tail\' ,\' head\' ';
help::pkg.display.widgets.objs.combobox.c.combobox.a.disabled := [=];
help::pkg.display.widgets.objs.combobox.c.combobox.a.disabled.d := 'Disable the combobox, turns off all graphical interaction.';
help::pkg.display.widgets.objs.combobox.c.combobox.a.disabled.def := 'F';
help::pkg.display.widgets.objs.combobox.c.combobox.a.disabled.a := 'T or F';
help::pkg.display.widgets.objs.combobox.c.combobox.a.borderwidth := [=];
help::pkg.display.widgets.objs.combobox.c.combobox.a.borderwidth.d := 'The borderwidth of the outer combobox frame.';
help::pkg.display.widgets.objs.combobox.c.combobox.a.borderwidth.def := '2';
help::pkg.display.widgets.objs.combobox.c.combobox.a.borderwidth.a := 'any integer';
help::pkg.display.widgets.objs.combobox.c.combobox.a.exportselection := [=];
help::pkg.display.widgets.objs.combobox.c.combobox.a.exportselection.d := 'exportselection value for entry.';
help::pkg.display.widgets.objs.combobox.c.combobox.a.exportselection.def := 'T';
help::pkg.display.widgets.objs.combobox.c.combobox.a.exportselection.a := 'T or F';
help::pkg.display.widgets.objs.combobox.c.combobox.a.vscrollbar := [=];
help::pkg.display.widgets.objs.combobox.c.combobox.a.vscrollbar.d := 'The type of vertical scrollbar that the listbox has.';
help::pkg.display.widgets.objs.combobox.c.combobox.a.vscrollbar.def := '\' ondemand\' ';
help::pkg.display.widgets.objs.combobox.c.combobox.a.vscrollbar.a := '\' ondemand\' ,\' always\' ,\' none\' ';
help::pkg.display.widgets.objs.combobox.c.combobox.a.hscrollbar := [=];
help::pkg.display.widgets.objs.combobox.c.combobox.a.hscrollbar.d := 'The type of horizontal scrollbar that the listbox and the entry have.';
help::pkg.display.widgets.objs.combobox.c.combobox.a.hscrollbar.def := '\' none\' ';
help::pkg.display.widgets.objs.combobox.c.combobox.a.hscrollbar.a := '\' ondemand\' ,\' always\' ,\' none\' ';
help::pkg.display.widgets.objs.combobox.c.combobox.a.labelwidth := [=];
help::pkg.display.widgets.objs.combobox.c.combobox.a.labelwidth.d := 'The width, in characters, of the label.';
help::pkg.display.widgets.objs.combobox.c.combobox.a.labelwidth.def := '0';
help::pkg.display.widgets.objs.combobox.c.combobox.a.labelwidth.a := 'any integer';
help::pkg.display.widgets.objs.combobox.c.combobox.a.labelfont := [=];
help::pkg.display.widgets.objs.combobox.c.combobox.a.labelfont.d := 'The font used in the label.';
help::pkg.display.widgets.objs.combobox.c.combobox.a.labelfont.def := '';
help::pkg.display.widgets.objs.combobox.c.combobox.a.labelfont.a := 'any X font.';
help::pkg.display.widgets.objs.combobox.c.combobox.a.labelrelief := [=];
help::pkg.display.widgets.objs.combobox.c.combobox.a.labelrelief.d := 'The relief of the label.';
help::pkg.display.widgets.objs.combobox.c.combobox.a.labelrelief.def := '\' flat\' ';
help::pkg.display.widgets.objs.combobox.c.combobox.a.labelrelief.a := 'any glishtk relief';
help::pkg.display.widgets.objs.combobox.c.combobox.a.labeljustify := [=];
help::pkg.display.widgets.objs.combobox.c.combobox.a.labeljustify.d := 'The text justification of the label.';
help::pkg.display.widgets.objs.combobox.c.combobox.a.labeljustify.def := '\' left\' ';
help::pkg.display.widgets.objs.combobox.c.combobox.a.labeljustify.a := 'any glishtk text justificiation';
help::pkg.display.widgets.objs.combobox.c.combobox.a.labelbackground := [=];
help::pkg.display.widgets.objs.combobox.c.combobox.a.labelbackground.d := 'The background color of the label.';
help::pkg.display.widgets.objs.combobox.c.combobox.a.labelbackground.def := '\' lightgrey\' ';
help::pkg.display.widgets.objs.combobox.c.combobox.a.labelbackground.a := 'any X color.';
help::pkg.display.widgets.objs.combobox.c.combobox.a.labelforeground := [=];
help::pkg.display.widgets.objs.combobox.c.combobox.a.labelforeground.d := 'The foreground color of the label.';
help::pkg.display.widgets.objs.combobox.c.combobox.a.labelforeground.def := '\' black\' ';
help::pkg.display.widgets.objs.combobox.c.combobox.a.labelforeground.a := 'any X color.';
help::pkg.display.widgets.objs.combobox.c.combobox.a.labelanchor := [=];
help::pkg.display.widgets.objs.combobox.c.combobox.a.labelanchor.d := 'The text anchor point within the label.';
help::pkg.display.widgets.objs.combobox.c.combobox.a.labelanchor.def := '\' c\' ';
help::pkg.display.widgets.objs.combobox.c.combobox.a.labelanchor.a := 'any glishtk anchor.';
help::pkg.display.widgets.objs.combobox.c.combobox.a.entrywidth := [=];
help::pkg.display.widgets.objs.combobox.c.combobox.a.entrywidth.d := 'The width, in characters, of the entry.';
help::pkg.display.widgets.objs.combobox.c.combobox.a.entrywidth.def := '30';
help::pkg.display.widgets.objs.combobox.c.combobox.a.entrywidth.a := 'any integer';
help::pkg.display.widgets.objs.combobox.c.combobox.a.entryfont := [=];
help::pkg.display.widgets.objs.combobox.c.combobox.a.entryfont.d := 'The font used in the entry.';
help::pkg.display.widgets.objs.combobox.c.combobox.a.entryfont.def := '';
help::pkg.display.widgets.objs.combobox.c.combobox.a.entryfont.a := 'any X font.';
help::pkg.display.widgets.objs.combobox.c.combobox.a.entryrelief := [=];
help::pkg.display.widgets.objs.combobox.c.combobox.a.entryrelief.d := 'The relief of the entry.';
help::pkg.display.widgets.objs.combobox.c.combobox.a.entryrelief.def := '\' sunken\' ';
help::pkg.display.widgets.objs.combobox.c.combobox.a.entryrelief.a := 'any glishtk relief';
help::pkg.display.widgets.objs.combobox.c.combobox.a.entryjustify := [=];
help::pkg.display.widgets.objs.combobox.c.combobox.a.entryjustify.d := 'The text justification of the entry.';
help::pkg.display.widgets.objs.combobox.c.combobox.a.entryjustify.def := '\' left\' ';
help::pkg.display.widgets.objs.combobox.c.combobox.a.entryjustify.a := 'any glishtk text justificiation';
help::pkg.display.widgets.objs.combobox.c.combobox.a.entrybackground := [=];
help::pkg.display.widgets.objs.combobox.c.combobox.a.entrybackground.d := 'The background color of the entry.';
help::pkg.display.widgets.objs.combobox.c.combobox.a.entrybackground.def := '\' lightgrey\' ';
help::pkg.display.widgets.objs.combobox.c.combobox.a.entrybackground.a := 'any X color.';
help::pkg.display.widgets.objs.combobox.c.combobox.a.entryforeground := [=];
help::pkg.display.widgets.objs.combobox.c.combobox.a.entryforeground.d := 'The foreground color of the entry.';
help::pkg.display.widgets.objs.combobox.c.combobox.a.entryforeground.def := '\' black\' ';
help::pkg.display.widgets.objs.combobox.c.combobox.a.entryforeground.a := 'any X color.';
help::pkg.display.widgets.objs.combobox.c.combobox.a.entryanchor := [=];
help::pkg.display.widgets.objs.combobox.c.combobox.a.entryanchor.d := 'The text anchor point within the entry.';
help::pkg.display.widgets.objs.combobox.c.combobox.a.entryanchor.def := '\' c\' ';
help::pkg.display.widgets.objs.combobox.c.combobox.a.entryanchor.a := 'any glishtk anchor.';
help::pkg.display.widgets.objs.combobox.c.combobox.a.arrowbutton := [=];
help::pkg.display.widgets.objs.combobox.c.combobox.a.arrowbutton.d := 'The file containing the bitmap to use for the arrow button.';
help::pkg.display.widgets.objs.combobox.c.combobox.a.arrowbutton.def := '\' downarrow.xbm\' ';
help::pkg.display.widgets.objs.combobox.c.combobox.a.arrowbutton.a := 'any X bitmap file.';
help::pkg.display.widgets.objs.combobox.c.combobox.a.arrowbackground := [=];
help::pkg.display.widgets.objs.combobox.c.combobox.a.arrowbackground.d := 'The background color of the arrow button.';
help::pkg.display.widgets.objs.combobox.c.combobox.a.arrowbackground.def := '\' lightgrey\' ';
help::pkg.display.widgets.objs.combobox.c.combobox.a.arrowbackground.a := 'any X color.';
help::pkg.display.widgets.objs.combobox.c.combobox.a.arrowforeground := [=];
help::pkg.display.widgets.objs.combobox.c.combobox.a.arrowforeground.d := 'The foreground color of the arrow button.';
help::pkg.display.widgets.objs.combobox.c.combobox.a.arrowforeground.def := '\' black\' ';
help::pkg.display.widgets.objs.combobox.c.combobox.a.arrowforeground.a := 'any X color.';
help::pkg.display.widgets.objs.combobox.c.combobox.a.listboxheight := [=];
help::pkg.display.widgets.objs.combobox.c.combobox.a.listboxheight.d := 'The height of the listbox when a horizontal scrollbar is present.';
help::pkg.display.widgets.objs.combobox.c.combobox.a.listboxheight.def := '6';
help::pkg.display.widgets.objs.combobox.c.combobox.a.listboxheight.a := 'any integer';
help::pkg.display.widgets.objs.combobox.c.combobox.a.help := [=];
help::pkg.display.widgets.objs.combobox.c.combobox.a.help.d := 'Short popup help text';
help::pkg.display.widgets.objs.combobox.c.combobox.a.help.def := '';
help::pkg.display.widgets.objs.combobox.c.combobox.a.help.a := 'String';
help::pkg.display.widgets.objs.combobox.c.combobox.a.widgetset := [=];
help::pkg.display.widgets.objs.combobox.c.combobox.a.widgetset.d := 'Widget set to use';
help::pkg.display.widgets.objs.combobox.c.combobox.a.widgetset.def := 'dws';
help::pkg.display.widgets.objs.combobox.c.combobox.a.widgetset.a := 'A widgetserver closure tool';
help::pkg.display.widgets.objs.combobox.c.combobox.s := 'combobox(parent, labeltext, items, addonreturn, entrydisabled, canclearpopup, autoinsertorder, disabled, borderwidth, exportselection, vscrollbar, hscrollbar, labelwidth, labelfont, labelrelief, labeljustify, labelbackground, labelforeground, labelanchor, entrywidth, entryfont, entryrelief, entryjustify, entrybackground, entryforeground, entryanchor, arrowbutton, arrowbackground, arrowforeground, listboxheight, help, widgetset)';
help::pkg.display.widgets.objs.combobox.m.agent := [=];
help::pkg.display.widgets.objs.combobox.m.agent.d := 'Get a reference to the agent which emits events from this combobox.';
help::pkg.display.widgets.objs.combobox.m.agent.s := 'agent()';
help::pkg.display.widgets.objs.combobox.m.pixelwidth := [=];
help::pkg.display.widgets.objs.combobox.m.pixelwidth.d := 'The true width, in pixels, of the outer combobox frame.';
help::pkg.display.widgets.objs.combobox.m.pixelwidth.s := 'pixelwidth()';
help::pkg.display.widgets.objs.combobox.m.pixelheight := [=];
help::pkg.display.widgets.objs.combobox.m.pixelheight.d := 'The true height, in pixels, of the outer combobox frame.';
help::pkg.display.widgets.objs.combobox.m.pixelheight.s := 'pixelheight()';
help::pkg.display.widgets.objs.combobox.m.get := [=];
help::pkg.display.widgets.objs.combobox.m.get.d := 'Get an item or range of items from the combobox.';
help::pkg.display.widgets.objs.combobox.m.get.a.first := [=];
help::pkg.display.widgets.objs.combobox.m.get.a.first.d := 'The first item to get';
help::pkg.display.widgets.objs.combobox.m.get.a.first.def := '';
help::pkg.display.widgets.objs.combobox.m.get.a.first.a := 'Any valid item number from 0 to the end plus \' selected\'  and \' end\' ';
help::pkg.display.widgets.objs.combobox.m.get.a.last := [=];
help::pkg.display.widgets.objs.combobox.m.get.a.last.d := 'The last item to get, if F just get the first';
help::pkg.display.widgets.objs.combobox.m.get.a.last.def := 'F';
help::pkg.display.widgets.objs.combobox.m.get.a.last.a := 'Any index >= first or F';
help::pkg.display.widgets.objs.combobox.m.get.s := 'get(first, last)';
help::pkg.display.widgets.objs.combobox.m.selection := [=];
help::pkg.display.widgets.objs.combobox.m.selection.d := 'Retrieve the index number of the current selection.';
help::pkg.display.widgets.objs.combobox.m.selection.s := 'selection()';
help::pkg.display.widgets.objs.combobox.m.select := [=];
help::pkg.display.widgets.objs.combobox.m.select.d := 'Select the indicated item by index number and place it in the entry.';
help::pkg.display.widgets.objs.combobox.m.select.a.whichitem := [=];
help::pkg.display.widgets.objs.combobox.m.select.a.whichitem.d := 'The item to select';
help::pkg.display.widgets.objs.combobox.m.select.a.whichitem.def := '';
help::pkg.display.widgets.objs.combobox.m.select.a.whichitem.a := 'Any valid item number from 0 to the end plus \' selected\'  and \' end\' ';
help::pkg.display.widgets.objs.combobox.m.select.s := 'select(whichitem)';
help::pkg.display.widgets.objs.combobox.m.getentry := [=];
help::pkg.display.widgets.objs.combobox.m.getentry.d := 'Get the contents of the entry.';
help::pkg.display.widgets.objs.combobox.m.getentry.s := 'getentry()';
help::pkg.display.widgets.objs.combobox.m.addonreturn := [=];
help::pkg.display.widgets.objs.combobox.m.addonreturn.d := 'Sets the behavior when the user presses return in the entry.';
help::pkg.display.widgets.objs.combobox.m.addonreturn.a.addonreturn := [=];
help::pkg.display.widgets.objs.combobox.m.addonreturn.a.addonreturn.d := 'The requested behavior';
help::pkg.display.widgets.objs.combobox.m.addonreturn.a.addonreturn.def := '';
help::pkg.display.widgets.objs.combobox.m.addonreturn.a.addonreturn.a := 'T or F';
help::pkg.display.widgets.objs.combobox.m.addonreturn.s := 'addonreturn(addonreturn)';
help::pkg.display.widgets.objs.combobox.m.canclearpopup := [=];
help::pkg.display.widgets.objs.combobox.m.canclearpopup.d := 'Is there a clear button on the listbox popup.';
help::pkg.display.widgets.objs.combobox.m.canclearpopup.a.tOrF := [=];
help::pkg.display.widgets.objs.combobox.m.canclearpopup.a.tOrF.d := 'Is there a clear button';
help::pkg.display.widgets.objs.combobox.m.canclearpopup.a.tOrF.def := '';
help::pkg.display.widgets.objs.combobox.m.canclearpopup.a.tOrF.a := 'T or F';
help::pkg.display.widgets.objs.combobox.m.canclearpopup.s := 'canclearpopup(tOrF)';
help::pkg.display.widgets.objs.combobox.m.borderwidth := [=];
help::pkg.display.widgets.objs.combobox.m.borderwidth.d := 'Change the borderwidth of the outer combobox frame.';
help::pkg.display.widgets.objs.combobox.m.borderwidth.a.newwidth := [=];
help::pkg.display.widgets.objs.combobox.m.borderwidth.a.newwidth.d := 'The new width';
help::pkg.display.widgets.objs.combobox.m.borderwidth.a.newwidth.def := '';
help::pkg.display.widgets.objs.combobox.m.borderwidth.a.newwidth.a := 'any positive integer.';
help::pkg.display.widgets.objs.combobox.m.borderwidth.s := 'borderwidth(newwidth)';
help::pkg.display.widgets.objs.combobox.m.exportselection := [=];
help::pkg.display.widgets.objs.combobox.m.exportselection.d := 'Change the export selection property of the entry.';
help::pkg.display.widgets.objs.combobox.m.exportselection.a.tOrF := [=];
help::pkg.display.widgets.objs.combobox.m.exportselection.a.tOrF.d := 'The new exportselection value';
help::pkg.display.widgets.objs.combobox.m.exportselection.a.tOrF.def := '';
help::pkg.display.widgets.objs.combobox.m.exportselection.a.tOrF.a := 'T or F.';
help::pkg.display.widgets.objs.combobox.m.exportselection.s := 'exportselection(tOrF)';
help::pkg.display.widgets.objs.combobox.m.disabled := [=];
help::pkg.display.widgets.objs.combobox.m.disabled.d := 'Disable (T) or enable (F) the entire combobox.';
help::pkg.display.widgets.objs.combobox.m.disabled.a.tOrF := [=];
help::pkg.display.widgets.objs.combobox.m.disabled.a.tOrF.d := 'The new state of the combobox';
help::pkg.display.widgets.objs.combobox.m.disabled.a.tOrF.def := '';
help::pkg.display.widgets.objs.combobox.m.disabled.a.tOrF.a := 'T or F.';
help::pkg.display.widgets.objs.combobox.m.disabled.s := 'disabled(tOrF)';
help::pkg.display.widgets.objs.combobox.m.delete := [=];
help::pkg.display.widgets.objs.combobox.m.delete.d := 'Delete an item or range of items from the combobox.';
help::pkg.display.widgets.objs.combobox.m.delete.a.first := [=];
help::pkg.display.widgets.objs.combobox.m.delete.a.first.d := 'The first item to delete';
help::pkg.display.widgets.objs.combobox.m.delete.a.first.def := '';
help::pkg.display.widgets.objs.combobox.m.delete.a.first.a := 'Any valid item number from 0 to the end plus \' selected\'  and \' end\' ';
help::pkg.display.widgets.objs.combobox.m.delete.a.last := [=];
help::pkg.display.widgets.objs.combobox.m.delete.a.last.d := 'The last item to delete, if F just get the first';
help::pkg.display.widgets.objs.combobox.m.delete.a.last.def := 'F';
help::pkg.display.widgets.objs.combobox.m.delete.a.last.a := 'Any index >= first or F';
help::pkg.display.widgets.objs.combobox.m.delete.s := 'delete(first, last)';
help::pkg.display.widgets.objs.combobox.m.insert := [=];
help::pkg.display.widgets.objs.combobox.m.insert.d := 'Insert an item into the combobox.';
help::pkg.display.widgets.objs.combobox.m.insert.a.newitem := [=];
help::pkg.display.widgets.objs.combobox.m.insert.a.newitem.d := 'The thing to insert';
help::pkg.display.widgets.objs.combobox.m.insert.a.newitem.def := '';
help::pkg.display.widgets.objs.combobox.m.insert.a.newitem.a := 'A string';
help::pkg.display.widgets.objs.combobox.m.insert.a.index := [=];
help::pkg.display.widgets.objs.combobox.m.insert.a.index.d := 'Its new location';
help::pkg.display.widgets.objs.combobox.m.insert.a.index.def := 'F';
help::pkg.display.widgets.objs.combobox.m.insert.a.index.a := 'Any index <= largest index + 1';
help::pkg.display.widgets.objs.combobox.m.insert.a.select := [=];
help::pkg.display.widgets.objs.combobox.m.insert.a.select.d := 'Select this item';
help::pkg.display.widgets.objs.combobox.m.insert.a.select.def := 'F';
help::pkg.display.widgets.objs.combobox.m.insert.a.select.a := 'T or F';
help::pkg.display.widgets.objs.combobox.m.insert.s := 'insert(newitem, index, select)';
help::pkg.display.widgets.objs.combobox.m.insertentry := [=];
help::pkg.display.widgets.objs.combobox.m.insertentry.d := 'Replace the contents of the entry.';
help::pkg.display.widgets.objs.combobox.m.insertentry.a.newentry := [=];
help::pkg.display.widgets.objs.combobox.m.insertentry.a.newentry.d := 'The new contents of the entry';
help::pkg.display.widgets.objs.combobox.m.insertentry.a.newentry.def := '';
help::pkg.display.widgets.objs.combobox.m.insertentry.a.newentry.a := 'A string';
help::pkg.display.widgets.objs.combobox.m.insertentry.s := 'insertentry(newentry)';
help::pkg.display.widgets.objs.combobox.m.vscrollbar := [=];
help::pkg.display.widgets.objs.combobox.m.vscrollbar.d := 'Change the vertical scrollbar behavior of the combobox popup.';
help::pkg.display.widgets.objs.combobox.m.vscrollbar.a.vscrollbar := [=];
help::pkg.display.widgets.objs.combobox.m.vscrollbar.a.vscrollbar.d := 'The new vertical scrollbar behavior';
help::pkg.display.widgets.objs.combobox.m.vscrollbar.a.vscrollbar.def := '';
help::pkg.display.widgets.objs.combobox.m.vscrollbar.a.vscrollbar.a := '\' ondemand\' , \' always\' , \' none\' ';
help::pkg.display.widgets.objs.combobox.m.vscrollbar.s := 'vscrollbar(vscrollbar)';
help::pkg.display.widgets.objs.combobox.m.hscrollbar := [=];
help::pkg.display.widgets.objs.combobox.m.hscrollbar.d := 'Change the horizontal scrollbar behavior of the entry and the combobox popup.';
help::pkg.display.widgets.objs.combobox.m.hscrollbar.a.hscrollbar := [=];
help::pkg.display.widgets.objs.combobox.m.hscrollbar.a.hscrollbar.d := 'The new horizontal scrollbar behavior';
help::pkg.display.widgets.objs.combobox.m.hscrollbar.a.hscrollbar.def := '';
help::pkg.display.widgets.objs.combobox.m.hscrollbar.a.hscrollbar.a := '\' ondemand\' , \' always\' , \' none\' ';
help::pkg.display.widgets.objs.combobox.m.hscrollbar.s := 'hscrollbar(hscrollbar)';
help::pkg.display.widgets.objs.combobox.m.autoinserorder := [=];
help::pkg.display.widgets.objs.combobox.m.autoinserorder.d := 'Change the automatic insertion behavior.';
help::pkg.display.widgets.objs.combobox.m.autoinserorder.a.insertorder := [=];
help::pkg.display.widgets.objs.combobox.m.autoinserorder.a.insertorder.d := 'The new automatic insertion behavior';
help::pkg.display.widgets.objs.combobox.m.autoinserorder.a.insertorder.def := '';
help::pkg.display.widgets.objs.combobox.m.autoinserorder.a.insertorder.a := '\' tail\' , \' head\' ';
help::pkg.display.widgets.objs.combobox.m.autoinserorder.s := 'autoinserorder(insertorder)';
help::pkg.display.widgets.objs.combobox.m.bind := [=];
help::pkg.display.widgets.objs.combobox.m.bind.d := 'Bind an X event to the combobox entry.';
help::pkg.display.widgets.objs.combobox.m.bind.a.xevent := [=];
help::pkg.display.widgets.objs.combobox.m.bind.a.xevent.d := 'The X event to be bound.';
help::pkg.display.widgets.objs.combobox.m.bind.a.xevent.def := '';
help::pkg.display.widgets.objs.combobox.m.bind.a.xevent.a := 'An X event in glishtk syntax';
help::pkg.display.widgets.objs.combobox.m.bind.a.eventname := [=];
help::pkg.display.widgets.objs.combobox.m.bind.a.eventname.d := 'The name which will be associated with this event.';
help::pkg.display.widgets.objs.combobox.m.bind.a.eventname.def := '';
help::pkg.display.widgets.objs.combobox.m.bind.a.eventname.a := 'A string';
help::pkg.display.widgets.objs.combobox.m.bind.s := 'bind(xevent, eventname)';
help::pkg.display.widgets.objs.combobox.m.cursor := [=];
help::pkg.display.widgets.objs.combobox.m.cursor.d := 'Change the default cursor within the combobox.';
help::pkg.display.widgets.objs.combobox.m.cursor.a.xcursor := [=];
help::pkg.display.widgets.objs.combobox.m.cursor.a.xcursor.d := 'The new default cursor.';
help::pkg.display.widgets.objs.combobox.m.cursor.a.xcursor.def := '';
help::pkg.display.widgets.objs.combobox.m.cursor.a.xcursor.a := 'An X cursor';
help::pkg.display.widgets.objs.combobox.m.cursor.s := 'cursor(xcursor)';
help::pkg.display.widgets.objs.combobox.m.popupcursor := [=];
help::pkg.display.widgets.objs.combobox.m.popupcursor.d := 'Change the default cursor within the combobox popup.';
help::pkg.display.widgets.objs.combobox.m.popupcursor.a.xcursor := [=];
help::pkg.display.widgets.objs.combobox.m.popupcursor.a.xcursor.d := 'The new default cursor in the popup.';
help::pkg.display.widgets.objs.combobox.m.popupcursor.a.xcursor.def := '';
help::pkg.display.widgets.objs.combobox.m.popupcursor.a.xcursor.a := 'An X cursor';
help::pkg.display.widgets.objs.combobox.m.popupcursor.s := 'popupcursor(xcursor)';
help::pkg.display.widgets.objs.combobox.m.labeltext := [=];
help::pkg.display.widgets.objs.combobox.m.labeltext.d := 'Change the text of the combobox label.';
help::pkg.display.widgets.objs.combobox.m.labeltext.a.newlabel := [=];
help::pkg.display.widgets.objs.combobox.m.labeltext.a.newlabel.d := 'The new label text.';
help::pkg.display.widgets.objs.combobox.m.labeltext.a.newlabel.def := '';
help::pkg.display.widgets.objs.combobox.m.labeltext.a.newlabel.a := 'A string.';
help::pkg.display.widgets.objs.combobox.m.labeltext.s := 'labeltext(newlabel)';
help::pkg.display.widgets.objs.combobox.m.labelwidth := [=];
help::pkg.display.widgets.objs.combobox.m.labelwidth.d := 'Change the width of the combobox label.';
help::pkg.display.widgets.objs.combobox.m.labelwidth.a.newwidth := [=];
help::pkg.display.widgets.objs.combobox.m.labelwidth.a.newwidth.d := 'The new label width.';
help::pkg.display.widgets.objs.combobox.m.labelwidth.a.newwidth.def := '';
help::pkg.display.widgets.objs.combobox.m.labelwidth.a.newwidth.a := 'An integer.';
help::pkg.display.widgets.objs.combobox.m.labelwidth.s := 'labelwidth(newwidth)';
help::pkg.display.widgets.objs.combobox.m.labelfont := [=];
help::pkg.display.widgets.objs.combobox.m.labelfont.d := 'Change the font of the combobox label.';
help::pkg.display.widgets.objs.combobox.m.labelfont.a.newfont := [=];
help::pkg.display.widgets.objs.combobox.m.labelfont.a.newfont.d := 'The new label font.';
help::pkg.display.widgets.objs.combobox.m.labelfont.a.newfont.def := '';
help::pkg.display.widgets.objs.combobox.m.labelfont.a.newfont.a := 'An X font.';
help::pkg.display.widgets.objs.combobox.m.labelfont.s := 'labelfont(newfont)';
help::pkg.display.widgets.objs.combobox.m.labelrelief := [=];
help::pkg.display.widgets.objs.combobox.m.labelrelief.d := 'Change the relief of the combobox label.';
help::pkg.display.widgets.objs.combobox.m.labelrelief.a.newrelief := [=];
help::pkg.display.widgets.objs.combobox.m.labelrelief.a.newrelief.d := 'The new label relief.';
help::pkg.display.widgets.objs.combobox.m.labelrelief.a.newrelief.def := '';
help::pkg.display.widgets.objs.combobox.m.labelrelief.a.newrelief.a := 'A glishtk relief string.';
help::pkg.display.widgets.objs.combobox.m.labelrelief.s := 'labelrelief(newrelief)';
help::pkg.display.widgets.objs.combobox.m.labeljustify := [=];
help::pkg.display.widgets.objs.combobox.m.labeljustify.d := 'Change the text justification within the combobox label.';
help::pkg.display.widgets.objs.combobox.m.labeljustify.a.newjustify := [=];
help::pkg.display.widgets.objs.combobox.m.labeljustify.a.newjustify.d := 'The new label text justification.';
help::pkg.display.widgets.objs.combobox.m.labeljustify.a.newjustify.def := '';
help::pkg.display.widgets.objs.combobox.m.labeljustify.a.newjustify.a := 'A glishtk justify string.';
help::pkg.display.widgets.objs.combobox.m.labeljustify.s := 'labeljustify(newjustify)';
help::pkg.display.widgets.objs.combobox.m.labelforeground := [=];
help::pkg.display.widgets.objs.combobox.m.labelforeground.d := 'Change the foreground color of the combobox label.';
help::pkg.display.widgets.objs.combobox.m.labelforeground.a.newforeground := [=];
help::pkg.display.widgets.objs.combobox.m.labelforeground.a.newforeground.d := 'The new label foreground color.';
help::pkg.display.widgets.objs.combobox.m.labelforeground.a.newforeground.def := '';
help::pkg.display.widgets.objs.combobox.m.labelforeground.a.newforeground.a := 'An X color.';
help::pkg.display.widgets.objs.combobox.m.labelforeground.s := 'labelforeground(newforeground)';
help::pkg.display.widgets.objs.combobox.m.labelbackground := [=];
help::pkg.display.widgets.objs.combobox.m.labelbackground.d := 'Change the background color of the combobox label.';
help::pkg.display.widgets.objs.combobox.m.labelbackground.a.newbackground := [=];
help::pkg.display.widgets.objs.combobox.m.labelbackground.a.newbackground.d := 'The new label background color.';
help::pkg.display.widgets.objs.combobox.m.labelbackground.a.newbackground.def := '';
help::pkg.display.widgets.objs.combobox.m.labelbackground.a.newbackground.a := 'An X color.';
help::pkg.display.widgets.objs.combobox.m.labelbackground.s := 'labelbackground(newbackground)';
help::pkg.display.widgets.objs.combobox.m.labelanchor := [=];
help::pkg.display.widgets.objs.combobox.m.labelanchor.d := 'Change the anchor attribute of the combobox label.';
help::pkg.display.widgets.objs.combobox.m.labelanchor.a.newanchor := [=];
help::pkg.display.widgets.objs.combobox.m.labelanchor.a.newanchor.d := 'The new label anchor attribute.';
help::pkg.display.widgets.objs.combobox.m.labelanchor.a.newanchor.def := '';
help::pkg.display.widgets.objs.combobox.m.labelanchor.a.newanchor.a := 'A glishtk anchor string.';
help::pkg.display.widgets.objs.combobox.m.labelanchor.s := 'labelanchor(newanchor)';
help::pkg.display.widgets.objs.combobox.m.entrydisabled := [=];
help::pkg.display.widgets.objs.combobox.m.entrydisabled.d := 'Disable or enable the entry.';
help::pkg.display.widgets.objs.combobox.m.entrydisabled.a.tOrF := [=];
help::pkg.display.widgets.objs.combobox.m.entrydisabled.a.tOrF.d := 'The state of the entry.';
help::pkg.display.widgets.objs.combobox.m.entrydisabled.a.tOrF.def := '';
help::pkg.display.widgets.objs.combobox.m.entrydisabled.a.tOrF.a := 'T or F.';
help::pkg.display.widgets.objs.combobox.m.entrydisabled.s := 'entrydisabled(tOrF)';
help::pkg.display.widgets.objs.combobox.m.entrywidth := [=];
help::pkg.display.widgets.objs.combobox.m.entrywidth.d := 'Change the width of the combobox entry.';
help::pkg.display.widgets.objs.combobox.m.entrywidth.a.newwidth := [=];
help::pkg.display.widgets.objs.combobox.m.entrywidth.a.newwidth.d := 'The new entry width.';
help::pkg.display.widgets.objs.combobox.m.entrywidth.a.newwidth.def := '';
help::pkg.display.widgets.objs.combobox.m.entrywidth.a.newwidth.a := 'An integer.';
help::pkg.display.widgets.objs.combobox.m.entrywidth.s := 'entrywidth(newwidth)';
help::pkg.display.widgets.objs.combobox.m.entryfont := [=];
help::pkg.display.widgets.objs.combobox.m.entryfont.d := 'Change the font of the combobox entry and popup.';
help::pkg.display.widgets.objs.combobox.m.entryfont.a.newfont := [=];
help::pkg.display.widgets.objs.combobox.m.entryfont.a.newfont.d := 'The new entry font.';
help::pkg.display.widgets.objs.combobox.m.entryfont.a.newfont.def := '';
help::pkg.display.widgets.objs.combobox.m.entryfont.a.newfont.a := 'An X font.';
help::pkg.display.widgets.objs.combobox.m.entryfont.s := 'entryfont(newfont)';
help::pkg.display.widgets.objs.combobox.m.entryrelief := [=];
help::pkg.display.widgets.objs.combobox.m.entryrelief.d := 'Change the relief of the combobox entry and popup.';
help::pkg.display.widgets.objs.combobox.m.entryrelief.a.newrelief := [=];
help::pkg.display.widgets.objs.combobox.m.entryrelief.a.newrelief.d := 'The new entry relief.';
help::pkg.display.widgets.objs.combobox.m.entryrelief.a.newrelief.def := '';
help::pkg.display.widgets.objs.combobox.m.entryrelief.a.newrelief.a := 'A glishtk relief string.';
help::pkg.display.widgets.objs.combobox.m.entryrelief.s := 'entryrelief(newrelief)';
help::pkg.display.widgets.objs.combobox.m.entryjustify := [=];
help::pkg.display.widgets.objs.combobox.m.entryjustify.d := 'Change the text justification within the combobox entry and popup.';
help::pkg.display.widgets.objs.combobox.m.entryjustify.a.newjustify := [=];
help::pkg.display.widgets.objs.combobox.m.entryjustify.a.newjustify.d := 'The new entry text justification.';
help::pkg.display.widgets.objs.combobox.m.entryjustify.a.newjustify.def := '';
help::pkg.display.widgets.objs.combobox.m.entryjustify.a.newjustify.a := 'A glishtk justify string.';
help::pkg.display.widgets.objs.combobox.m.entryjustify.s := 'entryjustify(newjustify)';
help::pkg.display.widgets.objs.combobox.m.entryforeground := [=];
help::pkg.display.widgets.objs.combobox.m.entryforeground.d := 'Change the foreground color of the combobox entry and popup.';
help::pkg.display.widgets.objs.combobox.m.entryforeground.a.newforeground := [=];
help::pkg.display.widgets.objs.combobox.m.entryforeground.a.newforeground.d := 'The new entry foreground color.';
help::pkg.display.widgets.objs.combobox.m.entryforeground.a.newforeground.def := '';
help::pkg.display.widgets.objs.combobox.m.entryforeground.a.newforeground.a := 'An X color.';
help::pkg.display.widgets.objs.combobox.m.entryforeground.s := 'entryforeground(newforeground)';
help::pkg.display.widgets.objs.combobox.m.entrybackground := [=];
help::pkg.display.widgets.objs.combobox.m.entrybackground.d := 'Change the background color of the combobox entry and popup.';
help::pkg.display.widgets.objs.combobox.m.entrybackground.a.newbackground := [=];
help::pkg.display.widgets.objs.combobox.m.entrybackground.a.newbackground.d := 'The new entry background color.';
help::pkg.display.widgets.objs.combobox.m.entrybackground.a.newbackground.def := '';
help::pkg.display.widgets.objs.combobox.m.entrybackground.a.newbackground.a := 'An X color.';
help::pkg.display.widgets.objs.combobox.m.entrybackground.s := 'entrybackground(newbackground)';
help::pkg.display.widgets.objs.combobox.m.arrowbutton := [=];
help::pkg.display.widgets.objs.combobox.m.arrowbutton.d := 'Change the bitmap which is the arrow button.';
help::pkg.display.widgets.objs.combobox.m.arrowbutton.a.newbutton := [=];
help::pkg.display.widgets.objs.combobox.m.arrowbutton.a.newbutton.d := 'The new arrow button bitmap.';
help::pkg.display.widgets.objs.combobox.m.arrowbutton.a.newbutton.def := '';
help::pkg.display.widgets.objs.combobox.m.arrowbutton.a.newbutton.a := 'The name of a file containing an X bitmap.';
help::pkg.display.widgets.objs.combobox.m.arrowbutton.s := 'arrowbutton(newbutton)';
help::pkg.display.widgets.objs.combobox.m.arrowbackground := [=];
help::pkg.display.widgets.objs.combobox.m.arrowbackground.d := 'Change the background color of the arrow button.';
help::pkg.display.widgets.objs.combobox.m.arrowbackground.a.newbackground := [=];
help::pkg.display.widgets.objs.combobox.m.arrowbackground.a.newbackground.d := 'The new arrow button background color.';
help::pkg.display.widgets.objs.combobox.m.arrowbackground.a.newbackground.def := '';
help::pkg.display.widgets.objs.combobox.m.arrowbackground.a.newbackground.a := 'An X color.';
help::pkg.display.widgets.objs.combobox.m.arrowbackground.s := 'arrowbackground(newbackground)';
help::pkg.display.widgets.objs.combobox.m.arrowforeground := [=];
help::pkg.display.widgets.objs.combobox.m.arrowforeground.d := 'Change the foreground color of the arrow button.';
help::pkg.display.widgets.objs.combobox.m.arrowforeground.a.newforeground := [=];
help::pkg.display.widgets.objs.combobox.m.arrowforeground.a.newforeground.d := 'The new arrow button foreground color.';
help::pkg.display.widgets.objs.combobox.m.arrowforeground.a.newforeground.def := '';
help::pkg.display.widgets.objs.combobox.m.arrowforeground.a.newforeground.a := 'An X color.';
help::pkg.display.widgets.objs.combobox.m.arrowforeground.s := 'arrowforeground(newforeground)';
help::pkg.display.widgets.objs.combobox.m.listboxheight := [=];
help::pkg.display.widgets.objs.combobox.m.listboxheight.d := 'Change the height of the listbox.';
help::pkg.display.widgets.objs.combobox.m.listboxheight.a.newheight := [=];
help::pkg.display.widgets.objs.combobox.m.listboxheight.a.newheight.d := 'The new listbox height.';
help::pkg.display.widgets.objs.combobox.m.listboxheight.a.newheight.def := '';
help::pkg.display.widgets.objs.combobox.m.listboxheight.a.newheight.a := 'An integer.';
help::pkg.display.widgets.objs.combobox.m.listboxheight.s := 'listboxheight(newheight)';
help::pkg.display.widgets.objs.deleteregions := [=];
help::pkg.display.widgets.objs.deleteregions.m := [=];
help::pkg.display.widgets.objs.deleteregions.c := [=];
help::pkg.display.widgets.objs.deleteregions.d := 'Tk widget to delete image regions from a Table';
help::pkg.display.widgets.objs.deleteregions.c.deleteregions := [=];
help::pkg.display.widgets.objs.deleteregions.c.deleteregions.d := 'Construct a deleteregions widget';
help::pkg.display.widgets.objs.deleteregions.c.deleteregions.a.parent := [=];
help::pkg.display.widgets.objs.deleteregions.c.deleteregions.a.parent.d := 'Parent for the widget';
help::pkg.display.widgets.objs.deleteregions.c.deleteregions.a.parent.def := '';
help::pkg.display.widgets.objs.deleteregions.c.deleteregions.a.parent.a := 'Widget';
help::pkg.display.widgets.objs.deleteregions.c.deleteregions.a.table := [=];
help::pkg.display.widgets.objs.deleteregions.c.deleteregions.a.table.d := 'The table of interest';
help::pkg.display.widgets.objs.deleteregions.c.deleteregions.a.table.def := '\' \' ';
help::pkg.display.widgets.objs.deleteregions.c.deleteregions.a.table.a := 'Table tool, image tool or string';
help::pkg.display.widgets.objs.deleteregions.c.deleteregions.a.regions := [=];
help::pkg.display.widgets.objs.deleteregions.c.deleteregions.a.regions.d := 'Regions or region names (for source \' record\'  or \' global\' ';
help::pkg.display.widgets.objs.deleteregions.c.deleteregions.a.regions.def := '""';
help::pkg.display.widgets.objs.deleteregions.c.deleteregions.a.regions.a := 'Record or vector of strings';
help::pkg.display.widgets.objs.deleteregions.c.deleteregions.a.source := [=];
help::pkg.display.widgets.objs.deleteregions.c.deleteregions.a.source.d := 'Source of the regions';
help::pkg.display.widgets.objs.deleteregions.c.deleteregions.a.source.def := '\' table\' ';
help::pkg.display.widgets.objs.deleteregions.c.deleteregions.a.source.a := 'String from \' table\' , \' record\' , or \' global\' ';
help::pkg.display.widgets.objs.deleteregions.c.deleteregions.a.widgetset := [=];
help::pkg.display.widgets.objs.deleteregions.c.deleteregions.a.widgetset.d := 'The widget server to use';
help::pkg.display.widgets.objs.deleteregions.c.deleteregions.a.widgetset.def := 'dws';
help::pkg.display.widgets.objs.deleteregions.c.deleteregions.a.widgetset.a := 'widgetserver tool';
help::pkg.display.widgets.objs.deleteregions.c.deleteregions.s := 'deleteregions(parent, table, regions, source, widgetset)';
help::pkg.display.widgets.objs.deleteregions.m.done := [=];
help::pkg.display.widgets.objs.deleteregions.m.done.d := 'Destroy ourselves';
help::pkg.display.widgets.objs.deleteregions.m.done.s := 'done()';
help::pkg.display.widgets.objs.deleteregions.m.gui := [=];
help::pkg.display.widgets.objs.deleteregions.m.gui.d := 'Restart the GUI';
help::pkg.display.widgets.objs.deleteregions.m.gui.s := 'gui()';
help::pkg.display.widgets.objs.deleteregions.m.refresh := [=];
help::pkg.display.widgets.objs.deleteregions.m.refresh.d := 'Refresh the display';
help::pkg.display.widgets.objs.deleteregions.m.refresh.s := 'refresh()';
help::pkg.display.widgets.objs.deleteregions.m.setregions := [=];
help::pkg.display.widgets.objs.deleteregions.m.setregions.d := 'Set new regions';
help::pkg.display.widgets.objs.deleteregions.m.setregions.a.regions := [=];
help::pkg.display.widgets.objs.deleteregions.m.setregions.a.regions.d := 'Regions or region names (for source \' record\'  or \' global\' ';
help::pkg.display.widgets.objs.deleteregions.m.setregions.a.regions.def := '""';
help::pkg.display.widgets.objs.deleteregions.m.setregions.a.regions.a := 'Record or vector of strings';
help::pkg.display.widgets.objs.deleteregions.m.setregions.s := 'setregions(regions)';
help::pkg.display.widgets.objs.deleteregions.m.settable := [=];
help::pkg.display.widgets.objs.deleteregions.m.settable.d := 'Set a (new) table';
help::pkg.display.widgets.objs.deleteregions.m.settable.a.table := [=];
help::pkg.display.widgets.objs.deleteregions.m.settable.a.table.d := 'The table of interest';
help::pkg.display.widgets.objs.deleteregions.m.settable.a.table.def := '\' \' ';
help::pkg.display.widgets.objs.deleteregions.m.settable.a.table.a := 'Table tool, image tool or string';
help::pkg.display.widgets.objs.deleteregions.m.settable.s := 'settable(table)';
help::pkg.display.widgets.objs.dialogbox := [=];
help::pkg.display.widgets.objs.dialogbox.m := [=];
help::pkg.display.widgets.objs.dialogbox.c := [=];
help::pkg.display.widgets.objs.dialogbox.d := 'Tk widget to get input from the user';
help::pkg.display.widgets.objs.dialogbox.c.dialogbox := [=];
help::pkg.display.widgets.objs.dialogbox.c.dialogbox.d := 'Construct a dialogbox';
help::pkg.display.widgets.objs.dialogbox.c.dialogbox.a.label := [=];
help::pkg.display.widgets.objs.dialogbox.c.dialogbox.a.label.d := 'The label for the entry box';
help::pkg.display.widgets.objs.dialogbox.c.dialogbox.a.label.def := '\' Enter value\' ';
help::pkg.display.widgets.objs.dialogbox.c.dialogbox.a.label.a := 'String';
help::pkg.display.widgets.objs.dialogbox.c.dialogbox.a.title := [=];
help::pkg.display.widgets.objs.dialogbox.c.dialogbox.a.title.d := 'The title for the entry box';
help::pkg.display.widgets.objs.dialogbox.c.dialogbox.a.title.def := '\' Dialog box\' ';
help::pkg.display.widgets.objs.dialogbox.c.dialogbox.a.title.a := 'String';
help::pkg.display.widgets.objs.dialogbox.c.dialogbox.a.type := [=];
help::pkg.display.widgets.objs.dialogbox.c.dialogbox.a.type.d := 'The type of entry widgets';
help::pkg.display.widgets.objs.dialogbox.c.dialogbox.a.type.def := '\' entry\' ';
help::pkg.display.widgets.objs.dialogbox.c.dialogbox.a.type.a := '\' entry\' , \' file\' ,        \' string\' , \' boolean\' , \' measure\' , \' quantity\' , \' record\' , \' region\' ,        \' scalar, \' untyped\' ';
help::pkg.display.widgets.objs.dialogbox.c.dialogbox.a.value := [=];
help::pkg.display.widgets.objs.dialogbox.c.dialogbox.a.value.d := 'The initial value to insert';
help::pkg.display.widgets.objs.dialogbox.c.dialogbox.a.value.def := '';
help::pkg.display.widgets.objs.dialogbox.c.dialogbox.a.value.a := 'Appropriate type';
help::pkg.display.widgets.objs.dialogbox.c.dialogbox.a.hlp := [=];
help::pkg.display.widgets.objs.dialogbox.c.dialogbox.a.hlp.d := 'Popup help for entry box';
help::pkg.display.widgets.objs.dialogbox.c.dialogbox.a.hlp.def := '';
help::pkg.display.widgets.objs.dialogbox.c.dialogbox.a.hlp.a := 'String';
help::pkg.display.widgets.objs.dialogbox.c.dialogbox.a.helpOnLabel := [=];
help::pkg.display.widgets.objs.dialogbox.c.dialogbox.a.helpOnLabel.d := 'Is the popup help on the label or the entry box';
help::pkg.display.widgets.objs.dialogbox.c.dialogbox.a.helpOnLabel.def := 'T';
help::pkg.display.widgets.objs.dialogbox.c.dialogbox.a.helpOnLabel.a := 'T or F';
help::pkg.display.widgets.objs.dialogbox.c.dialogbox.a.widgetset := [=];
help::pkg.display.widgets.objs.dialogbox.c.dialogbox.a.widgetset.d := 'The widget server to use';
help::pkg.display.widgets.objs.dialogbox.c.dialogbox.a.widgetset.def := 'dws';
help::pkg.display.widgets.objs.dialogbox.c.dialogbox.a.widgetset.a := 'widgetserver object';
help::pkg.display.widgets.objs.dialogbox.c.dialogbox.s := 'dialogbox(label, title, type, value, hlp, helpOnLabel, widgetset)';
help::pkg.display.widgets.objs.extendoptionmenu := [=];
help::pkg.display.widgets.objs.extendoptionmenu.m := [=];
help::pkg.display.widgets.objs.extendoptionmenu.c := [=];
help::pkg.display.widgets.objs.extendoptionmenu.d := 'Tk widget where the (interactively extendable) menu label changes with selection';
help::pkg.display.widgets.objs.extendoptionmenu.c.extendoptionmenu := [=];
help::pkg.display.widgets.objs.extendoptionmenu.c.extendoptionmenu.d := 'Construct an extendoptionmenu';
help::pkg.display.widgets.objs.extendoptionmenu.c.extendoptionmenu.a.parent := [=];
help::pkg.display.widgets.objs.extendoptionmenu.c.extendoptionmenu.a.parent.d := 'Parent of the menu';
help::pkg.display.widgets.objs.extendoptionmenu.c.extendoptionmenu.a.parent.def := '';
help::pkg.display.widgets.objs.extendoptionmenu.c.extendoptionmenu.a.parent.a := 'Widget';
help::pkg.display.widgets.objs.extendoptionmenu.c.extendoptionmenu.a.labels := [=];
help::pkg.display.widgets.objs.extendoptionmenu.c.extendoptionmenu.a.labels.d := 'The menu item labels';
help::pkg.display.widgets.objs.extendoptionmenu.c.extendoptionmenu.a.labels.def := 'Empty menu';
help::pkg.display.widgets.objs.extendoptionmenu.c.extendoptionmenu.a.labels.a := 'Vector of strings';
help::pkg.display.widgets.objs.extendoptionmenu.c.extendoptionmenu.a.hlp := [=];
help::pkg.display.widgets.objs.extendoptionmenu.c.extendoptionmenu.a.hlp.d := 'Short popuphelp text';
help::pkg.display.widgets.objs.extendoptionmenu.c.extendoptionmenu.a.hlp.def := 'No help';
help::pkg.display.widgets.objs.extendoptionmenu.c.extendoptionmenu.a.hlp.a := 'String';
help::pkg.display.widgets.objs.extendoptionmenu.c.extendoptionmenu.a.hlp2 := [=];
help::pkg.display.widgets.objs.extendoptionmenu.c.extendoptionmenu.a.hlp2.d := 'Long popuphelp text';
help::pkg.display.widgets.objs.extendoptionmenu.c.extendoptionmenu.a.hlp2.def := 'No help';
help::pkg.display.widgets.objs.extendoptionmenu.c.extendoptionmenu.a.hlp2.a := 'String';
help::pkg.display.widgets.objs.extendoptionmenu.c.extendoptionmenu.a.nbreak := [=];
help::pkg.display.widgets.objs.extendoptionmenu.c.extendoptionmenu.a.nbreak.d := 'The break point for menu or listbox usage';
help::pkg.display.widgets.objs.extendoptionmenu.c.extendoptionmenu.a.nbreak.def := '20';
help::pkg.display.widgets.objs.extendoptionmenu.c.extendoptionmenu.a.nbreak.a := 'Integer';
help::pkg.display.widgets.objs.extendoptionmenu.c.extendoptionmenu.a.symbol := [=];
help::pkg.display.widgets.objs.extendoptionmenu.c.extendoptionmenu.a.symbol.d := 'Special symbol for menu extension';
help::pkg.display.widgets.objs.extendoptionmenu.c.extendoptionmenu.a.symbol.def := '`...\' ';
help::pkg.display.widgets.objs.extendoptionmenu.c.extendoptionmenu.a.symbol.a := 'String';
help::pkg.display.widgets.objs.extendoptionmenu.c.extendoptionmenu.a.callback1 := [=];
help::pkg.display.widgets.objs.extendoptionmenu.c.extendoptionmenu.a.callback1.d := 'Callback function when special symbol selected';
help::pkg.display.widgets.objs.extendoptionmenu.c.extendoptionmenu.a.callback1.def := 'F';
help::pkg.display.widgets.objs.extendoptionmenu.c.extendoptionmenu.a.callback1.a := 'String';
help::pkg.display.widgets.objs.extendoptionmenu.c.extendoptionmenu.a.callback2 := [=];
help::pkg.display.widgets.objs.extendoptionmenu.c.extendoptionmenu.a.callback2.d := 'Callback function when special symbol selected';
help::pkg.display.widgets.objs.extendoptionmenu.c.extendoptionmenu.a.callback2.def := 'F';
help::pkg.display.widgets.objs.extendoptionmenu.c.extendoptionmenu.a.callback2.a := 'String';
help::pkg.display.widgets.objs.extendoptionmenu.c.extendoptionmenu.a.callbackdata := [=];
help::pkg.display.widgets.objs.extendoptionmenu.c.extendoptionmenu.a.callbackdata.d := 'Data for callback2 calculations';
help::pkg.display.widgets.objs.extendoptionmenu.c.extendoptionmenu.a.callbackdata.def := 'F';
help::pkg.display.widgets.objs.extendoptionmenu.c.extendoptionmenu.a.callbackdata.a := 'Any Glish variable';
help::pkg.display.widgets.objs.extendoptionmenu.c.extendoptionmenu.a.dialoglabel := [=];
help::pkg.display.widgets.objs.extendoptionmenu.c.extendoptionmenu.a.dialoglabel.d := 'Label for dialogbox';
help::pkg.display.widgets.objs.extendoptionmenu.c.extendoptionmenu.a.dialoglabel.def := '`Item\' ';
help::pkg.display.widgets.objs.extendoptionmenu.c.extendoptionmenu.a.dialoglabel.a := 'String';
help::pkg.display.widgets.objs.extendoptionmenu.c.extendoptionmenu.a.dialogtitle := [=];
help::pkg.display.widgets.objs.extendoptionmenu.c.extendoptionmenu.a.dialogtitle.d := 'Title for dialogbox';
help::pkg.display.widgets.objs.extendoptionmenu.c.extendoptionmenu.a.dialogtitle.def := '`Enter new item <CR>\' ';
help::pkg.display.widgets.objs.extendoptionmenu.c.extendoptionmenu.a.dialogtitle.a := 'String';
help::pkg.display.widgets.objs.extendoptionmenu.c.extendoptionmenu.a.padx := [=];
help::pkg.display.widgets.objs.extendoptionmenu.c.extendoptionmenu.a.padx.d := 'Horizontal padding around text';
help::pkg.display.widgets.objs.extendoptionmenu.c.extendoptionmenu.a.padx.def := '7';
help::pkg.display.widgets.objs.extendoptionmenu.c.extendoptionmenu.a.padx.a := 'Integer';
help::pkg.display.widgets.objs.extendoptionmenu.c.extendoptionmenu.a.pady := [=];
help::pkg.display.widgets.objs.extendoptionmenu.c.extendoptionmenu.a.pady.d := 'Vertical padding around text';
help::pkg.display.widgets.objs.extendoptionmenu.c.extendoptionmenu.a.pady.def := '3';
help::pkg.display.widgets.objs.extendoptionmenu.c.extendoptionmenu.a.pady.a := 'Integer';
help::pkg.display.widgets.objs.extendoptionmenu.c.extendoptionmenu.a.width := [=];
help::pkg.display.widgets.objs.extendoptionmenu.c.extendoptionmenu.a.width.d := 'Width in character units';
help::pkg.display.widgets.objs.extendoptionmenu.c.extendoptionmenu.a.width.def := 'Auto-scale';
help::pkg.display.widgets.objs.extendoptionmenu.c.extendoptionmenu.a.width.a := 'Integer';
help::pkg.display.widgets.objs.extendoptionmenu.c.extendoptionmenu.a.updatelabel := [=];
help::pkg.display.widgets.objs.extendoptionmenu.c.extendoptionmenu.a.updatelabel.d := 'Update menu label with selected item';
help::pkg.display.widgets.objs.extendoptionmenu.c.extendoptionmenu.a.updatelabel.def := 'T';
help::pkg.display.widgets.objs.extendoptionmenu.c.extendoptionmenu.a.updatelabel.a := 'T or F';
help::pkg.display.widgets.objs.extendoptionmenu.c.extendoptionmenu.a.height := [=];
help::pkg.display.widgets.objs.extendoptionmenu.c.extendoptionmenu.a.height.d := 'Height in character units';
help::pkg.display.widgets.objs.extendoptionmenu.c.extendoptionmenu.a.height.def := '1';
help::pkg.display.widgets.objs.extendoptionmenu.c.extendoptionmenu.a.height.a := 'Integer';
help::pkg.display.widgets.objs.extendoptionmenu.c.extendoptionmenu.a.justify := [=];
help::pkg.display.widgets.objs.extendoptionmenu.c.extendoptionmenu.a.justify.d := 'Justification of text';
help::pkg.display.widgets.objs.extendoptionmenu.c.extendoptionmenu.a.justify.def := '`center\' ';
help::pkg.display.widgets.objs.extendoptionmenu.c.extendoptionmenu.a.justify.a := 'String from `center\' , \' left\' , \' right\' ';
help::pkg.display.widgets.objs.extendoptionmenu.c.extendoptionmenu.a.font := [=];
help::pkg.display.widgets.objs.extendoptionmenu.c.extendoptionmenu.a.font.d := 'Font of text ';
help::pkg.display.widgets.objs.extendoptionmenu.c.extendoptionmenu.a.font.def := '';
help::pkg.display.widgets.objs.extendoptionmenu.c.extendoptionmenu.a.font.a := 'X font';
help::pkg.display.widgets.objs.extendoptionmenu.c.extendoptionmenu.a.relief := [=];
help::pkg.display.widgets.objs.extendoptionmenu.c.extendoptionmenu.a.relief.d := 'Edge relief';
help::pkg.display.widgets.objs.extendoptionmenu.c.extendoptionmenu.a.relief.def := '`groove\' ';
help::pkg.display.widgets.objs.extendoptionmenu.c.extendoptionmenu.a.relief.a := 'String from `flat\' , `ridge\' ,                                             `raised\' , `sunken\' , `groove\' ';
help::pkg.display.widgets.objs.extendoptionmenu.c.extendoptionmenu.a.borderwidth := [=];
help::pkg.display.widgets.objs.extendoptionmenu.c.extendoptionmenu.a.borderwidth.d := 'Border width';
help::pkg.display.widgets.objs.extendoptionmenu.c.extendoptionmenu.a.borderwidth.def := '2';
help::pkg.display.widgets.objs.extendoptionmenu.c.extendoptionmenu.a.borderwidth.a := 'Integer';
help::pkg.display.widgets.objs.extendoptionmenu.c.extendoptionmenu.a.foreground := [=];
help::pkg.display.widgets.objs.extendoptionmenu.c.extendoptionmenu.a.foreground.d := 'Color of text';
help::pkg.display.widgets.objs.extendoptionmenu.c.extendoptionmenu.a.foreground.def := '`black\' ';
help::pkg.display.widgets.objs.extendoptionmenu.c.extendoptionmenu.a.foreground.a := 'X color';
help::pkg.display.widgets.objs.extendoptionmenu.c.extendoptionmenu.a.background := [=];
help::pkg.display.widgets.objs.extendoptionmenu.c.extendoptionmenu.a.background.d := 'Background color';
help::pkg.display.widgets.objs.extendoptionmenu.c.extendoptionmenu.a.background.def := '`lightgrey\' ';
help::pkg.display.widgets.objs.extendoptionmenu.c.extendoptionmenu.a.background.a := 'X color';
help::pkg.display.widgets.objs.extendoptionmenu.c.extendoptionmenu.a.disabled := [=];
help::pkg.display.widgets.objs.extendoptionmenu.c.extendoptionmenu.a.disabled.d := 'Is inactivated ?';
help::pkg.display.widgets.objs.extendoptionmenu.c.extendoptionmenu.a.disabled.def := 'F';
help::pkg.display.widgets.objs.extendoptionmenu.c.extendoptionmenu.a.disabled.a := 'Boolean';
help::pkg.display.widgets.objs.extendoptionmenu.c.extendoptionmenu.a.anchor := [=];
help::pkg.display.widgets.objs.extendoptionmenu.c.extendoptionmenu.a.anchor.d := 'Location of text';
help::pkg.display.widgets.objs.extendoptionmenu.c.extendoptionmenu.a.anchor.def := '`c\' ';
help::pkg.display.widgets.objs.extendoptionmenu.c.extendoptionmenu.a.anchor.a := 'String  from \' c\' , \' n\' , \' s\' , \' e\' , \' w\' , \' ne\' ,                                            \' nw\' , \' se\' , \' sw\' ';
help::pkg.display.widgets.objs.extendoptionmenu.c.extendoptionmenu.a.fill := [=];
help::pkg.display.widgets.objs.extendoptionmenu.c.extendoptionmenu.a.fill.d := 'How to expand when resized';
help::pkg.display.widgets.objs.extendoptionmenu.c.extendoptionmenu.a.fill.def := '\' none\' ';
help::pkg.display.widgets.objs.extendoptionmenu.c.extendoptionmenu.a.fill.a := 'String from `x\' , `y\' , `both\' , `none\' ';
help::pkg.display.widgets.objs.extendoptionmenu.c.extendoptionmenu.a.widgetset := [=];
help::pkg.display.widgets.objs.extendoptionmenu.c.extendoptionmenu.a.widgetset.d := 'The widget server to use';
help::pkg.display.widgets.objs.extendoptionmenu.c.extendoptionmenu.a.widgetset.def := 'dws';
help::pkg.display.widgets.objs.extendoptionmenu.c.extendoptionmenu.a.widgetset.a := 'widgetserver tool';
help::pkg.display.widgets.objs.extendoptionmenu.c.extendoptionmenu.s := 'extendoptionmenu(parent, labels, hlp, hlp2, nbreak, symbol, callback1, callback2, callbackdata, dialoglabel, dialogtitle, padx, pady, width, updatelabel, height, justify, font, relief, borderwidth, foreground, background, disabled, anchor, fill, widgetset)';
help::pkg.display.widgets.objs.extendoptionmenu.m.extend := [=];
help::pkg.display.widgets.objs.extendoptionmenu.m.extend.d := 'Extend the menu with more items';
help::pkg.display.widgets.objs.extendoptionmenu.m.extend.a.labels := [=];
help::pkg.display.widgets.objs.extendoptionmenu.m.extend.a.labels.d := 'The menu item labels';
help::pkg.display.widgets.objs.extendoptionmenu.m.extend.a.labels.def := 'Empty menu';
help::pkg.display.widgets.objs.extendoptionmenu.m.extend.a.labels.a := 'Vector of strings';
help::pkg.display.widgets.objs.extendoptionmenu.m.extend.a.width := [=];
help::pkg.display.widgets.objs.extendoptionmenu.m.extend.a.width.d := 'Width in character units';
help::pkg.display.widgets.objs.extendoptionmenu.m.extend.a.width.def := 'Auto-scale';
help::pkg.display.widgets.objs.extendoptionmenu.m.extend.a.width.a := 'Integer';
help::pkg.display.widgets.objs.extendoptionmenu.m.extend.s := 'extend(labels, width)';
help::pkg.display.widgets.objs.extendoptionmenu.m.replace := [=];
help::pkg.display.widgets.objs.extendoptionmenu.m.replace.d := 'Replace the menu with the provided items';
help::pkg.display.widgets.objs.extendoptionmenu.m.replace.a.labels := [=];
help::pkg.display.widgets.objs.extendoptionmenu.m.replace.a.labels.d := 'The menu item labels';
help::pkg.display.widgets.objs.extendoptionmenu.m.replace.a.labels.def := 'Empty menu';
help::pkg.display.widgets.objs.extendoptionmenu.m.replace.a.labels.a := 'Vector of strings';
help::pkg.display.widgets.objs.extendoptionmenu.m.replace.a.width := [=];
help::pkg.display.widgets.objs.extendoptionmenu.m.replace.a.width.d := 'Width in character units';
help::pkg.display.widgets.objs.extendoptionmenu.m.replace.a.width.def := 'Auto-scale';
help::pkg.display.widgets.objs.extendoptionmenu.m.replace.a.width.a := 'Integer';
help::pkg.display.widgets.objs.extendoptionmenu.m.replace.s := 'replace(labels, width)';
help::pkg.display.widgets.objs.extendoptionmenu.m.selectindex := [=];
help::pkg.display.widgets.objs.extendoptionmenu.m.selectindex.d := 'Select an item in the menu by index';
help::pkg.display.widgets.objs.extendoptionmenu.m.selectindex.a.idx := [=];
help::pkg.display.widgets.objs.extendoptionmenu.m.selectindex.a.idx.d := 'The menu item index';
help::pkg.display.widgets.objs.extendoptionmenu.m.selectindex.a.idx.def := '';
help::pkg.display.widgets.objs.extendoptionmenu.m.selectindex.a.idx.a := 'Integer';
help::pkg.display.widgets.objs.extendoptionmenu.m.selectindex.s := 'selectindex(idx)';
help::pkg.display.widgets.objs.extendoptionmenu.m.selectlabel := [=];
help::pkg.display.widgets.objs.extendoptionmenu.m.selectlabel.d := 'Select an item in the menu by label';
help::pkg.display.widgets.objs.extendoptionmenu.m.selectlabel.a.label := [=];
help::pkg.display.widgets.objs.extendoptionmenu.m.selectlabel.a.label.d := 'The menu item label';
help::pkg.display.widgets.objs.extendoptionmenu.m.selectlabel.a.label.def := '';
help::pkg.display.widgets.objs.extendoptionmenu.m.selectlabel.a.label.a := 'Same type as the array ``labels\' \'  used in construction';
help::pkg.display.widgets.objs.extendoptionmenu.m.selectlabel.s := 'selectlabel(label)';
help::pkg.display.widgets.objs.extendoptionmenu.m.getindex := [=];
help::pkg.display.widgets.objs.extendoptionmenu.m.getindex.d := 'Get the index of the current selection';
help::pkg.display.widgets.objs.extendoptionmenu.m.getindex.s := 'getindex()';
help::pkg.display.widgets.objs.extendoptionmenu.m.getpreviousindex := [=];
help::pkg.display.widgets.objs.extendoptionmenu.m.getpreviousindex.d := 'Get the index previous to the current selection';
help::pkg.display.widgets.objs.extendoptionmenu.m.getpreviousindex.s := 'getpreviousindex()';
help::pkg.display.widgets.objs.extendoptionmenu.m.getlabel := [=];
help::pkg.display.widgets.objs.extendoptionmenu.m.getlabel.d := 'Get the label of the current selection';
help::pkg.display.widgets.objs.extendoptionmenu.m.getlabel.s := 'getlabel()';
help::pkg.display.widgets.objs.extendoptionmenu.m.getlabels := [=];
help::pkg.display.widgets.objs.extendoptionmenu.m.getlabels.d := 'Gets all of the labels associated with the menu';
help::pkg.display.widgets.objs.extendoptionmenu.m.getlabels.s := 'getlabels()';
help::pkg.display.widgets.objs.extendoptionmenu.m.findlabel := [=];
help::pkg.display.widgets.objs.extendoptionmenu.m.findlabel.d := 'Find the index of the item with the given label';
help::pkg.display.widgets.objs.extendoptionmenu.m.findlabel.a.label := [=];
help::pkg.display.widgets.objs.extendoptionmenu.m.findlabel.a.label.d := 'The menu item label';
help::pkg.display.widgets.objs.extendoptionmenu.m.findlabel.a.label.def := '';
help::pkg.display.widgets.objs.extendoptionmenu.m.findlabel.a.label.a := 'Same type as the array ``labels\' \'  used in construction';
help::pkg.display.widgets.objs.extendoptionmenu.m.findlabel.s := 'findlabel(label)';
help::pkg.display.widgets.objs.extendoptionmenu.m.geteventmask := [=];
help::pkg.display.widgets.objs.extendoptionmenu.m.geteventmask.d := 'Get the event mask';
help::pkg.display.widgets.objs.extendoptionmenu.m.geteventmask.s := 'geteventmask()';
help::pkg.display.widgets.objs.extendoptionmenu.m.seteventmask := [=];
help::pkg.display.widgets.objs.extendoptionmenu.m.seteventmask.d := 'Set the event mask';
help::pkg.display.widgets.objs.extendoptionmenu.m.seteventmask.a.mask := [=];
help::pkg.display.widgets.objs.extendoptionmenu.m.seteventmask.a.mask.d := 'The event mask';
help::pkg.display.widgets.objs.extendoptionmenu.m.seteventmask.a.mask.def := '';
help::pkg.display.widgets.objs.extendoptionmenu.m.seteventmask.a.mask.a := 'Vector of Bool';
help::pkg.display.widgets.objs.extendoptionmenu.m.seteventmask.s := 'seteventmask(mask)';
help::pkg.display.widgets.objs.extendoptionmenu.m.setforeground := [=];
help::pkg.display.widgets.objs.extendoptionmenu.m.setforeground.d := 'Set the color of the foreground of the extendoptionmenu button';
help::pkg.display.widgets.objs.extendoptionmenu.m.setforeground.a.color := [=];
help::pkg.display.widgets.objs.extendoptionmenu.m.setforeground.a.color.d := 'The color';
help::pkg.display.widgets.objs.extendoptionmenu.m.setforeground.a.color.def := '';
help::pkg.display.widgets.objs.extendoptionmenu.m.setforeground.a.color.a := 'Any X color encoded as a String';
help::pkg.display.widgets.objs.extendoptionmenu.m.setforeground.s := 'setforeground(color)';
help::pkg.display.widgets.objs.extendoptionmenu.m.setbackground := [=];
help::pkg.display.widgets.objs.extendoptionmenu.m.setbackground.d := 'Set the color of the background of the extendoptionmenu button';
help::pkg.display.widgets.objs.extendoptionmenu.m.setbackground.a.color := [=];
help::pkg.display.widgets.objs.extendoptionmenu.m.setbackground.a.color.d := 'The color';
help::pkg.display.widgets.objs.extendoptionmenu.m.setbackground.a.color.def := '';
help::pkg.display.widgets.objs.extendoptionmenu.m.setbackground.a.color.a := 'Any X color encoded as a String';
help::pkg.display.widgets.objs.extendoptionmenu.m.setbackground.s := 'setbackground(color)';
help::pkg.display.widgets.objs.extendoptionmenu.m.setwidth := [=];
help::pkg.display.widgets.objs.extendoptionmenu.m.setwidth.d := 'Set the width of the optionmenu button';
help::pkg.display.widgets.objs.extendoptionmenu.m.setwidth.a.width := [=];
help::pkg.display.widgets.objs.extendoptionmenu.m.setwidth.a.width.d := 'The width in character units';
help::pkg.display.widgets.objs.extendoptionmenu.m.setwidth.a.width.def := '';
help::pkg.display.widgets.objs.extendoptionmenu.m.setwidth.a.width.a := 'Integer';
help::pkg.display.widgets.objs.extendoptionmenu.m.setwidth.s := 'setwidth(width)';
help::pkg.display.widgets.objs.extendoptionmenu.m.disabled := [=];
help::pkg.display.widgets.objs.extendoptionmenu.m.disabled.d := 'Disable or enable the extendoptionmenu widget';
help::pkg.display.widgets.objs.extendoptionmenu.m.disabled.a.disable := [=];
help::pkg.display.widgets.objs.extendoptionmenu.m.disabled.a.disable.d := 'Disable the widget';
help::pkg.display.widgets.objs.extendoptionmenu.m.disabled.a.disable.def := 'T';
help::pkg.display.widgets.objs.extendoptionmenu.m.disabled.a.disable.a := 'T or F';
help::pkg.display.widgets.objs.extendoptionmenu.m.disabled.s := 'disabled(disable)';
help::pkg.display.widgets.objs.extendoptionmenu.m.done := [=];
help::pkg.display.widgets.objs.extendoptionmenu.m.done.d := 'Destroy ourselves';
help::pkg.display.widgets.objs.extendoptionmenu.m.done.s := 'done()';
help::pkg.display.widgets.objs.fontchooserwidget := [=];
help::pkg.display.widgets.objs.fontchooserwidget.m := [=];
help::pkg.display.widgets.objs.fontchooserwidget.c := [=];
help::pkg.display.widgets.objs.fontchooserwidget.d := 'AIPS++ widget to help users select a font';
help::pkg.display.widgets.objs.fontchooserwidget.c.fontchooserwidget := [=];
help::pkg.display.widgets.objs.fontchooserwidget.c.fontchooserwidget.d := 'Construct a fontchooserwidget';
help::pkg.display.widgets.objs.fontchooserwidget.c.fontchooserwidget.a.parent := [=];
help::pkg.display.widgets.objs.fontchooserwidget.c.fontchooserwidget.a.parent.d := 'Parent of the menu';
help::pkg.display.widgets.objs.fontchooserwidget.c.fontchooserwidget.a.parent.def := 'F';
help::pkg.display.widgets.objs.fontchooserwidget.c.fontchooserwidget.a.parent.a := 'Tk frame';
help::pkg.display.widgets.objs.fontchooserwidget.c.fontchooserwidget.a.font := [=];
help::pkg.display.widgets.objs.fontchooserwidget.c.fontchooserwidget.a.font.d := 'Font of text ';
help::pkg.display.widgets.objs.fontchooserwidget.c.fontchooserwidget.a.font.def := 'F';
help::pkg.display.widgets.objs.fontchooserwidget.c.fontchooserwidget.a.font.a := 'X font';
help::pkg.display.widgets.objs.fontchooserwidget.c.fontchooserwidget.a.widgetset := [=];
help::pkg.display.widgets.objs.fontchooserwidget.c.fontchooserwidget.a.widgetset.d := 'Widget set to use';
help::pkg.display.widgets.objs.fontchooserwidget.c.fontchooserwidget.a.widgetset.def := 'dws';
help::pkg.display.widgets.objs.fontchooserwidget.c.fontchooserwidget.a.widgetset.a := 'A widgetserver closure tool';
help::pkg.display.widgets.objs.fontchooserwidget.c.fontchooserwidget.s := 'fontchooserwidget(parent, font, widgetset)';
help::pkg.display.widgets.objs.gchooser := [=];
help::pkg.display.widgets.objs.gchooser.m := [=];
help::pkg.display.widgets.objs.gchooser.c := [=];
help::pkg.display.widgets.objs.gchooser.d := 'Tool for generating widgets for choosing items interactively';
help::pkg.display.widgets.objs.gchooser.c.gchooser := [=];
help::pkg.display.widgets.objs.gchooser.c.gchooser.d := 'Make a gchooser tool';
help::pkg.display.widgets.objs.gchooser.c.gchooser.a.parent := [=];
help::pkg.display.widgets.objs.gchooser.c.gchooser.a.parent.d := 'Parent frame: optional';
help::pkg.display.widgets.objs.gchooser.c.gchooser.a.parent.def := 'F';
help::pkg.display.widgets.objs.gchooser.c.gchooser.a.parent.a := 'frame agent';
help::pkg.display.widgets.objs.gchooser.c.gchooser.a.labels := [=];
help::pkg.display.widgets.objs.gchooser.c.gchooser.a.labels.d := 'List of labels';
help::pkg.display.widgets.objs.gchooser.c.gchooser.a.labels.def := '\' \' ';
help::pkg.display.widgets.objs.gchooser.c.gchooser.a.labels.a := 'Vector of strings';
help::pkg.display.widgets.objs.gchooser.c.gchooser.a.x := [=];
help::pkg.display.widgets.objs.gchooser.c.gchooser.a.x.d := 'X positions';
help::pkg.display.widgets.objs.gchooser.c.gchooser.a.x.def := '[]';
help::pkg.display.widgets.objs.gchooser.c.gchooser.a.x.a := 'Numeric vector';
help::pkg.display.widgets.objs.gchooser.c.gchooser.a.y := [=];
help::pkg.display.widgets.objs.gchooser.c.gchooser.a.y.d := 'Y positions';
help::pkg.display.widgets.objs.gchooser.c.gchooser.a.y.def := '[]';
help::pkg.display.widgets.objs.gchooser.c.gchooser.a.y.a := 'Numeric vector';
help::pkg.display.widgets.objs.gchooser.c.gchooser.a.xref := [=];
help::pkg.display.widgets.objs.gchooser.c.gchooser.a.xref.d := 'X reference';
help::pkg.display.widgets.objs.gchooser.c.gchooser.a.xref.def := 'unset';
help::pkg.display.widgets.objs.gchooser.c.gchooser.a.xref.a := 'Numeric';
help::pkg.display.widgets.objs.gchooser.c.gchooser.a.yref := [=];
help::pkg.display.widgets.objs.gchooser.c.gchooser.a.yref.d := 'Y reference';
help::pkg.display.widgets.objs.gchooser.c.gchooser.a.yref.def := 'unset';
help::pkg.display.widgets.objs.gchooser.c.gchooser.a.yref.a := 'Numeric';
help::pkg.display.widgets.objs.gchooser.c.gchooser.a.autoref := [=];
help::pkg.display.widgets.objs.gchooser.c.gchooser.a.autoref.d := 'Determine reference position automatically';
help::pkg.display.widgets.objs.gchooser.c.gchooser.a.autoref.def := 'F';
help::pkg.display.widgets.objs.gchooser.c.gchooser.a.autoref.a := 'Boolean';
help::pkg.display.widgets.objs.gchooser.c.gchooser.a.title := [=];
help::pkg.display.widgets.objs.gchooser.c.gchooser.a.title.d := 'Title of widget';
help::pkg.display.widgets.objs.gchooser.c.gchooser.a.title.def := '\' Graphical chooser (AIPS++)\' ';
help::pkg.display.widgets.objs.gchooser.c.gchooser.a.title.a := 'String';
help::pkg.display.widgets.objs.gchooser.c.gchooser.a.xlabel := [=];
help::pkg.display.widgets.objs.gchooser.c.gchooser.a.xlabel.d := 'X axis label';
help::pkg.display.widgets.objs.gchooser.c.gchooser.a.xlabel.def := '\' X\' ';
help::pkg.display.widgets.objs.gchooser.c.gchooser.a.xlabel.a := 'String';
help::pkg.display.widgets.objs.gchooser.c.gchooser.a.ylabel := [=];
help::pkg.display.widgets.objs.gchooser.c.gchooser.a.ylabel.d := 'Y axis label';
help::pkg.display.widgets.objs.gchooser.c.gchooser.a.ylabel.def := '\' Y\' ';
help::pkg.display.widgets.objs.gchooser.c.gchooser.a.ylabel.a := 'String';
help::pkg.display.widgets.objs.gchooser.c.gchooser.a.axes := [=];
help::pkg.display.widgets.objs.gchooser.c.gchooser.a.axes.d := 'Type of axis';
help::pkg.display.widgets.objs.gchooser.c.gchooser.a.axes.def := '\' \' |\' sky\' ';
help::pkg.display.widgets.objs.gchooser.c.gchooser.a.axes.a := 'String';
help::pkg.display.widgets.objs.gchooser.c.gchooser.a.plottitle := [=];
help::pkg.display.widgets.objs.gchooser.c.gchooser.a.plottitle.d := 'Plot title';
help::pkg.display.widgets.objs.gchooser.c.gchooser.a.plottitle.def := '\' \' ';
help::pkg.display.widgets.objs.gchooser.c.gchooser.a.plottitle.a := 'String';
help::pkg.display.widgets.objs.gchooser.c.gchooser.a.width := [=];
help::pkg.display.widgets.objs.gchooser.c.gchooser.a.width.d := 'Width of plot frame (pixels)';
help::pkg.display.widgets.objs.gchooser.c.gchooser.a.width.def := '500';
help::pkg.display.widgets.objs.gchooser.c.gchooser.a.width.a := 'Integer';
help::pkg.display.widgets.objs.gchooser.c.gchooser.a.height := [=];
help::pkg.display.widgets.objs.gchooser.c.gchooser.a.height.d := 'Height of plot frame (pixels)';
help::pkg.display.widgets.objs.gchooser.c.gchooser.a.height.def := '500';
help::pkg.display.widgets.objs.gchooser.c.gchooser.a.height.a := 'Integer';
help::pkg.display.widgets.objs.gchooser.c.gchooser.a.pad := [=];
help::pkg.display.widgets.objs.gchooser.c.gchooser.a.pad.d := 'Padding around plot (fraction of axis length)';
help::pkg.display.widgets.objs.gchooser.c.gchooser.a.pad.def := '0.15';
help::pkg.display.widgets.objs.gchooser.c.gchooser.a.pad.a := 'Float';
help::pkg.display.widgets.objs.gchooser.c.gchooser.a.widgetset := [=];
help::pkg.display.widgets.objs.gchooser.c.gchooser.a.widgetset.d := 'Widget server to use';
help::pkg.display.widgets.objs.gchooser.c.gchooser.a.widgetset.def := 'dws';
help::pkg.display.widgets.objs.gchooser.c.gchooser.a.widgetset.a := 'A widgetserver closure tool';
help::pkg.display.widgets.objs.gchooser.c.gchooser.s := 'gchooser(parent, labels, x, y, xref, yref, autoref, title, xlabel, ylabel, axes, plottitle, width, height, pad, widgetset)';
help::pkg.display.widgets.funs.gchoosertest := [=];
help::pkg.display.widgets.funs.gchoosertest.a := [=];
help::pkg.display.widgets.funs.gchoosertest.d := 'Test the gchooser widgets';
help::pkg.display.widgets.funs.gchoosertest.s := 'gchoosertest()';
help::pkg.display.widgets.objs.gopher := [=];
help::pkg.display.widgets.objs.gopher.m := [=];
help::pkg.display.widgets.objs.gopher.c := [=];
help::pkg.display.widgets.objs.gopher.d := 'Tool for  getting useful information';
help::pkg.display.widgets.objs.gopher.c.gopher := [=];
help::pkg.display.widgets.objs.gopher.c.gopher.d := 'Make a gopher tool';
help::pkg.display.widgets.objs.gopher.c.gopher.a.widgetset := [=];
help::pkg.display.widgets.objs.gopher.c.gopher.a.widgetset.d := 'Widget server to use';
help::pkg.display.widgets.objs.gopher.c.gopher.a.widgetset.def := 'dws';
help::pkg.display.widgets.objs.gopher.c.gopher.a.widgetset.a := 'A widgetserver closure   tool';
help::pkg.display.widgets.objs.gopher.c.gopher.s := 'gopher(widgetset)';
help::pkg.display.widgets.objs.gopher.m.fromimage := [=];
help::pkg.display.widgets.objs.gopher.m.fromimage.d := 'Get various types of information from an image';
help::pkg.display.widgets.objs.gopher.m.fromimage.a.file := [=];
help::pkg.display.widgets.objs.gopher.m.fromimage.a.file.d := 'Image file name';
help::pkg.display.widgets.objs.gopher.m.fromimage.a.file.def := '';
help::pkg.display.widgets.objs.gopher.m.fromimage.a.file.a := 'String';
help::pkg.display.widgets.objs.gopher.m.fromimage.a.what := [=];
help::pkg.display.widgets.objs.gopher.m.fromimage.a.what.d := 'Thing to return';
help::pkg.display.widgets.objs.gopher.m.fromimage.a.what.def := '\' region\' |\' position\' |\' statistics\' ';
help::pkg.display.widgets.objs.gopher.m.fromimage.a.what.a := 'String';
help::pkg.display.widgets.objs.gopher.m.fromimage.s := 'fromimage(file, what)';
help::pkg.display.widgets.objs.gopher.m.fromms := [=];
help::pkg.display.widgets.objs.gopher.m.fromms.d := 'Get various types of information from a measurementset';
help::pkg.display.widgets.objs.gopher.m.fromms.a.file := [=];
help::pkg.display.widgets.objs.gopher.m.fromms.a.file.d := 'MeasurementSet file name';
help::pkg.display.widgets.objs.gopher.m.fromms.a.file.def := '';
help::pkg.display.widgets.objs.gopher.m.fromms.a.file.a := 'String';
help::pkg.display.widgets.objs.gopher.m.fromms.a.what := [=];
help::pkg.display.widgets.objs.gopher.m.fromms.a.what.d := 'Thing to return';
help::pkg.display.widgets.objs.gopher.m.fromms.a.what.def := '\' antennas\' |\' baselines\' |\' fields\' |\' spectralwindows\' ';
help::pkg.display.widgets.objs.gopher.m.fromms.a.what.a := 'String';
help::pkg.display.widgets.objs.gopher.m.fromms.s := 'fromms(file, what)';
help::pkg.display.widgets.objs.guientry := [=];
help::pkg.display.widgets.objs.guientry.m := [=];
help::pkg.display.widgets.objs.guientry.c := [=];
help::pkg.display.widgets.objs.guientry.d := 'Tool for generating widgets for type-in of a GUI';
help::pkg.display.widgets.objs.guientry.c.guientry := [=];
help::pkg.display.widgets.objs.guientry.c.guientry.d := 'Make a guientry tool';
help::pkg.display.widgets.objs.guientry.c.guientry.a.width := [=];
help::pkg.display.widgets.objs.guientry.c.guientry.a.width.d := 'Initial width of entry field (characters)';
help::pkg.display.widgets.objs.guientry.c.guientry.a.width.def := '30';
help::pkg.display.widgets.objs.guientry.c.guientry.a.width.a := 'Integer';
help::pkg.display.widgets.objs.guientry.c.guientry.a.relief := [=];
help::pkg.display.widgets.objs.guientry.c.guientry.a.relief.d := 'Edge relief';
help::pkg.display.widgets.objs.guientry.c.guientry.a.relief.def := '\' flat\' ';
help::pkg.display.widgets.objs.guientry.c.guientry.a.relief.a := 'String from `flat\' , `ridge\' ,    `raised\' , `sunken\' , `groove\' ';
help::pkg.display.widgets.objs.guientry.c.guientry.a.font := [=];
help::pkg.display.widgets.objs.guientry.c.guientry.a.font.d := 'Font of text ';
help::pkg.display.widgets.objs.guientry.c.guientry.a.font.def := '\' \' ';
help::pkg.display.widgets.objs.guientry.c.guientry.a.font.a := 'X font';
help::pkg.display.widgets.objs.guientry.c.guientry.a.background := [=];
help::pkg.display.widgets.objs.guientry.c.guientry.a.background.d := 'Background color';
help::pkg.display.widgets.objs.guientry.c.guientry.a.background.def := '`lightgrey\' ';
help::pkg.display.widgets.objs.guientry.c.guientry.a.background.a := 'X color';
help::pkg.display.widgets.objs.guientry.c.guientry.a.foreground := [=];
help::pkg.display.widgets.objs.guientry.c.guientry.a.foreground.d := 'Color of text';
help::pkg.display.widgets.objs.guientry.c.guientry.a.foreground.def := '`black\' ';
help::pkg.display.widgets.objs.guientry.c.guientry.a.foreground.a := 'X color';
help::pkg.display.widgets.objs.guientry.c.guientry.a.editablecolor := [=];
help::pkg.display.widgets.objs.guientry.c.guientry.a.editablecolor.d := 'Color for editable values';
help::pkg.display.widgets.objs.guientry.c.guientry.a.editablecolor.def := '`white\' ';
help::pkg.display.widgets.objs.guientry.c.guientry.a.editablecolor.a := 'X color';
help::pkg.display.widgets.objs.guientry.c.guientry.a.uneditablecolor := [=];
help::pkg.display.widgets.objs.guientry.c.guientry.a.uneditablecolor.d := 'Color for uneditabe values';
help::pkg.display.widgets.objs.guientry.c.guientry.a.uneditablecolor.def := '`lightgray\' ';
help::pkg.display.widgets.objs.guientry.c.guientry.a.uneditablecolor.a := 'X color';
help::pkg.display.widgets.objs.guientry.c.guientry.a.unsetcolor := [=];
help::pkg.display.widgets.objs.guientry.c.guientry.a.unsetcolor.d := 'Color for unset values';
help::pkg.display.widgets.objs.guientry.c.guientry.a.unsetcolor.def := '`yellow\' ';
help::pkg.display.widgets.objs.guientry.c.guientry.a.unsetcolor.a := 'X color';
help::pkg.display.widgets.objs.guientry.c.guientry.a.illegalcolor := [=];
help::pkg.display.widgets.objs.guientry.c.guientry.a.illegalcolor.d := 'Color for illegal values';
help::pkg.display.widgets.objs.guientry.c.guientry.a.illegalcolor.def := '`red\' ';
help::pkg.display.widgets.objs.guientry.c.guientry.a.illegalcolor.a := 'X color';
help::pkg.display.widgets.objs.guientry.c.guientry.a.borderwidth := [=];
help::pkg.display.widgets.objs.guientry.c.guientry.a.borderwidth.d := 'Borderwidth';
help::pkg.display.widgets.objs.guientry.c.guientry.a.borderwidth.def := '1';
help::pkg.display.widgets.objs.guientry.c.guientry.a.borderwidth.a := 'Integer';
help::pkg.display.widgets.objs.guientry.c.guientry.a.expand := [=];
help::pkg.display.widgets.objs.guientry.c.guientry.a.expand.d := 'Expand policy';
help::pkg.display.widgets.objs.guientry.c.guientry.a.expand.def := '\' none\' ';
help::pkg.display.widgets.objs.guientry.c.guientry.a.expand.a := '\' x\' |\' y\' |\' both\' |\' none\' ';
help::pkg.display.widgets.objs.guientry.c.guientry.a.widgetset := [=];
help::pkg.display.widgets.objs.guientry.c.guientry.a.widgetset.d := 'Widget server to use';
help::pkg.display.widgets.objs.guientry.c.guientry.a.widgetset.def := 'dws';
help::pkg.display.widgets.objs.guientry.c.guientry.a.widgetset.a := 'A widgetserver tool';
help::pkg.display.widgets.objs.guientry.c.guientry.s := 'guientry(width, relief, font, background, foreground, editablecolor, uneditablecolor, unsetcolor, illegalcolor, borderwidth, expand, widgetset)';
help::pkg.display.widgets.objs.guientry.m.scalar := [=];
help::pkg.display.widgets.objs.guientry.m.scalar.d := 'Make a widget for a scalar entry';
help::pkg.display.widgets.objs.guientry.m.scalar.a.parent := [=];
help::pkg.display.widgets.objs.guientry.m.scalar.a.parent.d := 'Parent of the menu';
help::pkg.display.widgets.objs.guientry.m.scalar.a.parent.def := '';
help::pkg.display.widgets.objs.guientry.m.scalar.a.parent.a := 'Tk frame';
help::pkg.display.widgets.objs.guientry.m.scalar.a.value := [=];
help::pkg.display.widgets.objs.guientry.m.scalar.a.value.d := 'Value to insert on start';
help::pkg.display.widgets.objs.guientry.m.scalar.a.value.def := '';
help::pkg.display.widgets.objs.guientry.m.scalar.a.value.a := 'String or unset';
help::pkg.display.widgets.objs.guientry.m.scalar.a.default := [=];
help::pkg.display.widgets.objs.guientry.m.scalar.a.default.d := 'Default value used to determine type of GUI';
help::pkg.display.widgets.objs.guientry.m.scalar.a.default.def := '';
help::pkg.display.widgets.objs.guientry.m.scalar.a.default.a := 'String';
help::pkg.display.widgets.objs.guientry.m.scalar.a.options := [=];
help::pkg.display.widgets.objs.guientry.m.scalar.a.options.d := 'options';
help::pkg.display.widgets.objs.guientry.m.scalar.a.options.def := '\' \' ';
help::pkg.display.widgets.objs.guientry.m.scalar.a.options.a := 'Glish value';
help::pkg.display.widgets.objs.guientry.m.scalar.a.allowunset := [=];
help::pkg.display.widgets.objs.guientry.m.scalar.a.allowunset.d := 'Allow unset values';
help::pkg.display.widgets.objs.guientry.m.scalar.a.allowunset.def := 'T';
help::pkg.display.widgets.objs.guientry.m.scalar.a.allowunset.a := 'Boolean';
help::pkg.display.widgets.objs.guientry.m.scalar.a.editable := [=];
help::pkg.display.widgets.objs.guientry.m.scalar.a.editable.d := 'Is the entry editable by the user';
help::pkg.display.widgets.objs.guientry.m.scalar.a.editable.def := 'T';
help::pkg.display.widgets.objs.guientry.m.scalar.a.editable.a := 'Boolean';
help::pkg.display.widgets.objs.guientry.m.scalar.a.hlp := [=];
help::pkg.display.widgets.objs.guientry.m.scalar.a.hlp.d := 'Popup help string';
help::pkg.display.widgets.objs.guientry.m.scalar.a.hlp.def := 'Unset';
help::pkg.display.widgets.objs.guientry.m.scalar.a.hlp.a := 'String';
help::pkg.display.widgets.objs.guientry.m.scalar.s := 'scalar(parent, value, default, options, allowunset, editable, hlp)';
help::pkg.display.widgets.objs.guientry.m.array := [=];
help::pkg.display.widgets.objs.guientry.m.array.d := 'Make a widget for an array entry';
help::pkg.display.widgets.objs.guientry.m.array.a.parent := [=];
help::pkg.display.widgets.objs.guientry.m.array.a.parent.d := 'Parent of the menu';
help::pkg.display.widgets.objs.guientry.m.array.a.parent.def := '';
help::pkg.display.widgets.objs.guientry.m.array.a.parent.a := 'Tk frame';
help::pkg.display.widgets.objs.guientry.m.array.a.value := [=];
help::pkg.display.widgets.objs.guientry.m.array.a.value.d := 'Value to insert on start';
help::pkg.display.widgets.objs.guientry.m.array.a.value.def := '';
help::pkg.display.widgets.objs.guientry.m.array.a.value.a := 'Variable or unset';
help::pkg.display.widgets.objs.guientry.m.array.a.default := [=];
help::pkg.display.widgets.objs.guientry.m.array.a.default.d := 'Default value';
help::pkg.display.widgets.objs.guientry.m.array.a.default.def := '';
help::pkg.display.widgets.objs.guientry.m.array.a.default.a := 'Variable';
help::pkg.display.widgets.objs.guientry.m.array.a.options := [=];
help::pkg.display.widgets.objs.guientry.m.array.a.options.d := 'options';
help::pkg.display.widgets.objs.guientry.m.array.a.options.def := '\' \' ';
help::pkg.display.widgets.objs.guientry.m.array.a.options.a := 'string';
help::pkg.display.widgets.objs.guientry.m.array.a.allowunset := [=];
help::pkg.display.widgets.objs.guientry.m.array.a.allowunset.d := 'Allow unset values';
help::pkg.display.widgets.objs.guientry.m.array.a.allowunset.def := 'T';
help::pkg.display.widgets.objs.guientry.m.array.a.allowunset.a := 'Boolean';
help::pkg.display.widgets.objs.guientry.m.array.a.editable := [=];
help::pkg.display.widgets.objs.guientry.m.array.a.editable.d := 'Is the entry editable by the user';
help::pkg.display.widgets.objs.guientry.m.array.a.editable.def := 'T';
help::pkg.display.widgets.objs.guientry.m.array.a.editable.a := 'Boolean';
help::pkg.display.widgets.objs.guientry.m.array.a.maxdisplay := [=];
help::pkg.display.widgets.objs.guientry.m.array.a.maxdisplay.d := 'Maximum number of elements that will be displayed';
help::pkg.display.widgets.objs.guientry.m.array.a.maxdisplay.def := '100';
help::pkg.display.widgets.objs.guientry.m.array.a.maxdisplay.a := 'Positive integer';
help::pkg.display.widgets.objs.guientry.m.array.a.hlp := [=];
help::pkg.display.widgets.objs.guientry.m.array.a.hlp.d := 'Popup help string';
help::pkg.display.widgets.objs.guientry.m.array.a.hlp.def := 'Unset';
help::pkg.display.widgets.objs.guientry.m.array.a.hlp.a := 'String';
help::pkg.display.widgets.objs.guientry.m.array.s := 'array(parent, value, default, options, allowunset, editable, maxdisplay, hlp)';
help::pkg.display.widgets.objs.guientry.m.booleanarray := [=];
help::pkg.display.widgets.objs.guientry.m.booleanarray.d := 'Make a widget for a boolean array entry';
help::pkg.display.widgets.objs.guientry.m.booleanarray.a.parent := [=];
help::pkg.display.widgets.objs.guientry.m.booleanarray.a.parent.d := 'Parent of the menu';
help::pkg.display.widgets.objs.guientry.m.booleanarray.a.parent.def := '';
help::pkg.display.widgets.objs.guientry.m.booleanarray.a.parent.a := 'Tk frame';
help::pkg.display.widgets.objs.guientry.m.booleanarray.a.value := [=];
help::pkg.display.widgets.objs.guientry.m.booleanarray.a.value.d := 'Value to insert on start';
help::pkg.display.widgets.objs.guientry.m.booleanarray.a.value.def := 'T';
help::pkg.display.widgets.objs.guientry.m.booleanarray.a.value.a := 'T or F';
help::pkg.display.widgets.objs.guientry.m.booleanarray.a.default := [=];
help::pkg.display.widgets.objs.guientry.m.booleanarray.a.default.d := 'Default value';
help::pkg.display.widgets.objs.guientry.m.booleanarray.a.default.def := 'T';
help::pkg.display.widgets.objs.guientry.m.booleanarray.a.default.a := 'T or F';
help::pkg.display.widgets.objs.guientry.m.booleanarray.a.options := [=];
help::pkg.display.widgets.objs.guientry.m.booleanarray.a.options.d := 'options';
help::pkg.display.widgets.objs.guientry.m.booleanarray.a.options.def := '\' \' ';
help::pkg.display.widgets.objs.guientry.m.booleanarray.a.options.a := 'string';
help::pkg.display.widgets.objs.guientry.m.booleanarray.a.allowunset := [=];
help::pkg.display.widgets.objs.guientry.m.booleanarray.a.allowunset.d := 'Allow unset values';
help::pkg.display.widgets.objs.guientry.m.booleanarray.a.allowunset.def := 'T';
help::pkg.display.widgets.objs.guientry.m.booleanarray.a.allowunset.a := 'Boolean';
help::pkg.display.widgets.objs.guientry.m.booleanarray.a.editable := [=];
help::pkg.display.widgets.objs.guientry.m.booleanarray.a.editable.d := 'Is the entry editable by the user';
help::pkg.display.widgets.objs.guientry.m.booleanarray.a.editable.def := 'T';
help::pkg.display.widgets.objs.guientry.m.booleanarray.a.editable.a := 'Boolean';
help::pkg.display.widgets.objs.guientry.m.booleanarray.a.maxdisplay := [=];
help::pkg.display.widgets.objs.guientry.m.booleanarray.a.maxdisplay.d := 'Maximum number of elements that will be displayed';
help::pkg.display.widgets.objs.guientry.m.booleanarray.a.maxdisplay.def := '100';
help::pkg.display.widgets.objs.guientry.m.booleanarray.a.maxdisplay.a := 'Positive integer';
help::pkg.display.widgets.objs.guientry.m.booleanarray.a.hlp := [=];
help::pkg.display.widgets.objs.guientry.m.booleanarray.a.hlp.d := 'Popup help string';
help::pkg.display.widgets.objs.guientry.m.booleanarray.a.hlp.def := 'Unset';
help::pkg.display.widgets.objs.guientry.m.booleanarray.a.hlp.a := 'String';
help::pkg.display.widgets.objs.guientry.m.booleanarray.s := 'booleanarray(parent, value, default, options, allowunset, editable, maxdisplay, hlp)';
help::pkg.display.widgets.objs.guientry.m.boolean := [=];
help::pkg.display.widgets.objs.guientry.m.boolean.d := 'Make a widget for a boolean entry';
help::pkg.display.widgets.objs.guientry.m.boolean.a.parent := [=];
help::pkg.display.widgets.objs.guientry.m.boolean.a.parent.d := 'Parent of the menu';
help::pkg.display.widgets.objs.guientry.m.boolean.a.parent.def := '';
help::pkg.display.widgets.objs.guientry.m.boolean.a.parent.a := 'Tk frame';
help::pkg.display.widgets.objs.guientry.m.boolean.a.value := [=];
help::pkg.display.widgets.objs.guientry.m.boolean.a.value.d := 'Value to insert on start';
help::pkg.display.widgets.objs.guientry.m.boolean.a.value.def := '';
help::pkg.display.widgets.objs.guientry.m.boolean.a.value.a := 'Variable or unset';
help::pkg.display.widgets.objs.guientry.m.boolean.a.default := [=];
help::pkg.display.widgets.objs.guientry.m.boolean.a.default.d := 'Default value';
help::pkg.display.widgets.objs.guientry.m.boolean.a.default.def := '';
help::pkg.display.widgets.objs.guientry.m.boolean.a.default.a := 'Variable';
help::pkg.display.widgets.objs.guientry.m.boolean.a.options := [=];
help::pkg.display.widgets.objs.guientry.m.boolean.a.options.d := 'options';
help::pkg.display.widgets.objs.guientry.m.boolean.a.options.def := '\' \' ';
help::pkg.display.widgets.objs.guientry.m.boolean.a.options.a := 'string';
help::pkg.display.widgets.objs.guientry.m.boolean.a.allowunset := [=];
help::pkg.display.widgets.objs.guientry.m.boolean.a.allowunset.d := 'Allow unset values';
help::pkg.display.widgets.objs.guientry.m.boolean.a.allowunset.def := 'T';
help::pkg.display.widgets.objs.guientry.m.boolean.a.allowunset.a := 'Boolean';
help::pkg.display.widgets.objs.guientry.m.boolean.a.editable := [=];
help::pkg.display.widgets.objs.guientry.m.boolean.a.editable.d := 'Is the entry editable by the user';
help::pkg.display.widgets.objs.guientry.m.boolean.a.editable.def := 'T';
help::pkg.display.widgets.objs.guientry.m.boolean.a.editable.a := 'Boolean';
help::pkg.display.widgets.objs.guientry.m.boolean.a.hlp := [=];
help::pkg.display.widgets.objs.guientry.m.boolean.a.hlp.d := 'Popup help string';
help::pkg.display.widgets.objs.guientry.m.boolean.a.hlp.def := 'Unset';
help::pkg.display.widgets.objs.guientry.m.boolean.a.hlp.a := 'String';
help::pkg.display.widgets.objs.guientry.m.boolean.s := 'boolean(parent, value, default, options, allowunset, editable, hlp)';
help::pkg.display.widgets.objs.guientry.m.choice := [=];
help::pkg.display.widgets.objs.guientry.m.choice.d := 'Make a widget for a choice entry';
help::pkg.display.widgets.objs.guientry.m.choice.a.parent := [=];
help::pkg.display.widgets.objs.guientry.m.choice.a.parent.d := 'Parent of the menu';
help::pkg.display.widgets.objs.guientry.m.choice.a.parent.def := '';
help::pkg.display.widgets.objs.guientry.m.choice.a.parent.a := 'Tk frame';
help::pkg.display.widgets.objs.guientry.m.choice.a.value := [=];
help::pkg.display.widgets.objs.guientry.m.choice.a.value.d := 'Value to insert on start';
help::pkg.display.widgets.objs.guientry.m.choice.a.value.def := '';
help::pkg.display.widgets.objs.guientry.m.choice.a.value.a := 'Variable or unset';
help::pkg.display.widgets.objs.guientry.m.choice.a.default := [=];
help::pkg.display.widgets.objs.guientry.m.choice.a.default.d := 'Default value';
help::pkg.display.widgets.objs.guientry.m.choice.a.default.def := '';
help::pkg.display.widgets.objs.guientry.m.choice.a.default.a := 'Variable';
help::pkg.display.widgets.objs.guientry.m.choice.a.options := [=];
help::pkg.display.widgets.objs.guientry.m.choice.a.options.d := 'Possible choices';
help::pkg.display.widgets.objs.guientry.m.choice.a.options.def := '';
help::pkg.display.widgets.objs.guientry.m.choice.a.options.a := 'Vector of strings';
help::pkg.display.widgets.objs.guientry.m.choice.a.allowunset := [=];
help::pkg.display.widgets.objs.guientry.m.choice.a.allowunset.d := 'Allow unset values';
help::pkg.display.widgets.objs.guientry.m.choice.a.allowunset.def := 'T';
help::pkg.display.widgets.objs.guientry.m.choice.a.allowunset.a := 'Boolean';
help::pkg.display.widgets.objs.guientry.m.choice.a.editable := [=];
help::pkg.display.widgets.objs.guientry.m.choice.a.editable.d := 'Is the entry editable by the user';
help::pkg.display.widgets.objs.guientry.m.choice.a.editable.def := 'T';
help::pkg.display.widgets.objs.guientry.m.choice.a.editable.a := 'Boolean';
help::pkg.display.widgets.objs.guientry.m.choice.a.hlp := [=];
help::pkg.display.widgets.objs.guientry.m.choice.a.hlp.d := 'Popup help string';
help::pkg.display.widgets.objs.guientry.m.choice.a.hlp.def := 'Unset';
help::pkg.display.widgets.objs.guientry.m.choice.a.hlp.a := 'String';
help::pkg.display.widgets.objs.guientry.m.choice.s := 'choice(parent, value, default, options, allowunset, editable, hlp)';
help::pkg.display.widgets.objs.guientry.m.check := [=];
help::pkg.display.widgets.objs.guientry.m.check.d := 'Make a widget for a check entry';
help::pkg.display.widgets.objs.guientry.m.check.a.parent := [=];
help::pkg.display.widgets.objs.guientry.m.check.a.parent.d := 'Parent of the menu';
help::pkg.display.widgets.objs.guientry.m.check.a.parent.def := '';
help::pkg.display.widgets.objs.guientry.m.check.a.parent.a := 'Tk frame';
help::pkg.display.widgets.objs.guientry.m.check.a.value := [=];
help::pkg.display.widgets.objs.guientry.m.check.a.value.d := 'Value to insert on start';
help::pkg.display.widgets.objs.guientry.m.check.a.value.def := '';
help::pkg.display.widgets.objs.guientry.m.check.a.value.a := 'Variable or unset';
help::pkg.display.widgets.objs.guientry.m.check.a.default := [=];
help::pkg.display.widgets.objs.guientry.m.check.a.default.d := 'Default value';
help::pkg.display.widgets.objs.guientry.m.check.a.default.def := '';
help::pkg.display.widgets.objs.guientry.m.check.a.default.a := 'Variable';
help::pkg.display.widgets.objs.guientry.m.check.a.options := [=];
help::pkg.display.widgets.objs.guientry.m.check.a.options.d := 'Possible choices';
help::pkg.display.widgets.objs.guientry.m.check.a.options.def := '';
help::pkg.display.widgets.objs.guientry.m.check.a.options.a := 'Vector of strings';
help::pkg.display.widgets.objs.guientry.m.check.a.allowunset := [=];
help::pkg.display.widgets.objs.guientry.m.check.a.allowunset.d := 'Allow unset values';
help::pkg.display.widgets.objs.guientry.m.check.a.allowunset.def := 'T';
help::pkg.display.widgets.objs.guientry.m.check.a.allowunset.a := 'Boolean';
help::pkg.display.widgets.objs.guientry.m.check.a.editable := [=];
help::pkg.display.widgets.objs.guientry.m.check.a.editable.d := 'Is the entry editable by the user';
help::pkg.display.widgets.objs.guientry.m.check.a.editable.def := 'T';
help::pkg.display.widgets.objs.guientry.m.check.a.editable.a := 'Boolean';
help::pkg.display.widgets.objs.guientry.m.check.a.nperline := [=];
help::pkg.display.widgets.objs.guientry.m.check.a.nperline.d := 'Number of items per line';
help::pkg.display.widgets.objs.guientry.m.check.a.nperline.def := '4';
help::pkg.display.widgets.objs.guientry.m.check.a.nperline.a := 'Positive integer';
help::pkg.display.widgets.objs.guientry.m.check.a.hlp := [=];
help::pkg.display.widgets.objs.guientry.m.check.a.hlp.d := 'Popup help string';
help::pkg.display.widgets.objs.guientry.m.check.a.hlp.def := 'Unset';
help::pkg.display.widgets.objs.guientry.m.check.a.hlp.a := 'String';
help::pkg.display.widgets.objs.guientry.m.check.s := 'check(parent, value, default, options, allowunset, editable, nperline, hlp)';
help::pkg.display.widgets.objs.guientry.m.file := [=];
help::pkg.display.widgets.objs.guientry.m.file.d := 'Make a widget for a file entry';
help::pkg.display.widgets.objs.guientry.m.file.a.parent := [=];
help::pkg.display.widgets.objs.guientry.m.file.a.parent.d := 'Parent of the menu';
help::pkg.display.widgets.objs.guientry.m.file.a.parent.def := '';
help::pkg.display.widgets.objs.guientry.m.file.a.parent.a := 'Tk frame';
help::pkg.display.widgets.objs.guientry.m.file.a.value := [=];
help::pkg.display.widgets.objs.guientry.m.file.a.value.d := 'Value to insert on start';
help::pkg.display.widgets.objs.guientry.m.file.a.value.def := '';
help::pkg.display.widgets.objs.guientry.m.file.a.value.a := 'Variable or unset';
help::pkg.display.widgets.objs.guientry.m.file.a.default := [=];
help::pkg.display.widgets.objs.guientry.m.file.a.default.d := 'Default value';
help::pkg.display.widgets.objs.guientry.m.file.a.default.def := '';
help::pkg.display.widgets.objs.guientry.m.file.a.default.a := 'Variable';
help::pkg.display.widgets.objs.guientry.m.file.a.options := [=];
help::pkg.display.widgets.objs.guientry.m.file.a.options.d := 'options';
help::pkg.display.widgets.objs.guientry.m.file.a.options.def := '\' \' ';
help::pkg.display.widgets.objs.guientry.m.file.a.options.a := 'string';
help::pkg.display.widgets.objs.guientry.m.file.a.allowunset := [=];
help::pkg.display.widgets.objs.guientry.m.file.a.allowunset.d := 'Allow unset values';
help::pkg.display.widgets.objs.guientry.m.file.a.allowunset.def := 'T';
help::pkg.display.widgets.objs.guientry.m.file.a.allowunset.a := 'Boolean';
help::pkg.display.widgets.objs.guientry.m.file.a.editable := [=];
help::pkg.display.widgets.objs.guientry.m.file.a.editable.d := 'Is the entry editable by the user';
help::pkg.display.widgets.objs.guientry.m.file.a.editable.def := 'T';
help::pkg.display.widgets.objs.guientry.m.file.a.editable.a := 'Boolean';
help::pkg.display.widgets.objs.guientry.m.file.a.types := [=];
help::pkg.display.widgets.objs.guientry.m.file.a.types.d := 'File types to show (catalog)';
help::pkg.display.widgets.objs.guientry.m.file.a.types.def := '';
help::pkg.display.widgets.objs.guientry.m.file.a.types.a := 'String';
help::pkg.display.widgets.objs.guientry.m.file.a.hlp := [=];
help::pkg.display.widgets.objs.guientry.m.file.a.hlp.d := 'Popup help string';
help::pkg.display.widgets.objs.guientry.m.file.a.hlp.def := 'Unset';
help::pkg.display.widgets.objs.guientry.m.file.a.hlp.a := 'String';
help::pkg.display.widgets.objs.guientry.m.file.s := 'file(parent, value, default, options, allowunset, editable, types, hlp)';
help::pkg.display.widgets.objs.guientry.m.measurecodes := [=];
help::pkg.display.widgets.objs.guientry.m.measurecodes.d := 'Make a widget for entry of measures codes';
help::pkg.display.widgets.objs.guientry.m.measurecodes.a.parent := [=];
help::pkg.display.widgets.objs.guientry.m.measurecodes.a.parent.d := 'Parent of the menu';
help::pkg.display.widgets.objs.guientry.m.measurecodes.a.parent.def := '';
help::pkg.display.widgets.objs.guientry.m.measurecodes.a.parent.a := 'Tk frame';
help::pkg.display.widgets.objs.guientry.m.measurecodes.a.value := [=];
help::pkg.display.widgets.objs.guientry.m.measurecodes.a.value.d := 'Value to insert on start';
help::pkg.display.widgets.objs.guientry.m.measurecodes.a.value.def := '';
help::pkg.display.widgets.objs.guientry.m.measurecodes.a.value.a := 'Variable or unset';
help::pkg.display.widgets.objs.guientry.m.measurecodes.a.default := [=];
help::pkg.display.widgets.objs.guientry.m.measurecodes.a.default.d := 'Default value';
help::pkg.display.widgets.objs.guientry.m.measurecodes.a.default.def := '';
help::pkg.display.widgets.objs.guientry.m.measurecodes.a.default.a := 'Variable';
help::pkg.display.widgets.objs.guientry.m.measurecodes.a.options := [=];
help::pkg.display.widgets.objs.guientry.m.measurecodes.a.options.d := 'type of measure: any valid measure';
help::pkg.display.widgets.objs.guientry.m.measurecodes.a.options.def := '\' \' ';
help::pkg.display.widgets.objs.guientry.m.measurecodes.a.options.a := 'string';
help::pkg.display.widgets.objs.guientry.m.measurecodes.a.type := [=];
help::pkg.display.widgets.objs.guientry.m.measurecodes.a.type.d := 'Type of argument: unset means to evaluate';
help::pkg.display.widgets.objs.guientry.m.measurecodes.a.type.def := 'unset';
help::pkg.display.widgets.objs.guientry.m.measurecodes.a.type.a := 'Variable';
help::pkg.display.widgets.objs.guientry.m.measurecodes.a.allowunset := [=];
help::pkg.display.widgets.objs.guientry.m.measurecodes.a.allowunset.d := 'Allow unset values';
help::pkg.display.widgets.objs.guientry.m.measurecodes.a.allowunset.def := 'T';
help::pkg.display.widgets.objs.guientry.m.measurecodes.a.allowunset.a := 'Boolean';
help::pkg.display.widgets.objs.guientry.m.measurecodes.a.editable := [=];
help::pkg.display.widgets.objs.guientry.m.measurecodes.a.editable.d := 'Is the entry editable by the user';
help::pkg.display.widgets.objs.guientry.m.measurecodes.a.editable.def := 'T';
help::pkg.display.widgets.objs.guientry.m.measurecodes.a.editable.a := 'Boolean';
help::pkg.display.widgets.objs.guientry.m.measurecodes.a.hlp := [=];
help::pkg.display.widgets.objs.guientry.m.measurecodes.a.hlp.d := 'Popup help string';
help::pkg.display.widgets.objs.guientry.m.measurecodes.a.hlp.def := 'Unset';
help::pkg.display.widgets.objs.guientry.m.measurecodes.a.hlp.a := 'String';
help::pkg.display.widgets.objs.guientry.m.measurecodes.s := 'measurecodes(parent, value, default, options, type, allowunset, editable, hlp)';
help::pkg.display.widgets.objs.guientry.m.scalarmeasure := [=];
help::pkg.display.widgets.objs.guientry.m.scalarmeasure.d := 'Make a widget for a scalar measure entry';
help::pkg.display.widgets.objs.guientry.m.scalarmeasure.a.parent := [=];
help::pkg.display.widgets.objs.guientry.m.scalarmeasure.a.parent.d := 'Parent of the menu';
help::pkg.display.widgets.objs.guientry.m.scalarmeasure.a.parent.def := '';
help::pkg.display.widgets.objs.guientry.m.scalarmeasure.a.parent.a := 'Tk frame';
help::pkg.display.widgets.objs.guientry.m.scalarmeasure.a.value := [=];
help::pkg.display.widgets.objs.guientry.m.scalarmeasure.a.value.d := 'Value to insert on start';
help::pkg.display.widgets.objs.guientry.m.scalarmeasure.a.value.def := '';
help::pkg.display.widgets.objs.guientry.m.scalarmeasure.a.value.a := 'Variable or unset';
help::pkg.display.widgets.objs.guientry.m.scalarmeasure.a.default := [=];
help::pkg.display.widgets.objs.guientry.m.scalarmeasure.a.default.d := 'Default value';
help::pkg.display.widgets.objs.guientry.m.scalarmeasure.a.default.def := '';
help::pkg.display.widgets.objs.guientry.m.scalarmeasure.a.default.a := 'Variable';
help::pkg.display.widgets.objs.guientry.m.scalarmeasure.a.options := [=];
help::pkg.display.widgets.objs.guientry.m.scalarmeasure.a.options.d := 'options';
help::pkg.display.widgets.objs.guientry.m.scalarmeasure.a.options.def := '\' \' ';
help::pkg.display.widgets.objs.guientry.m.scalarmeasure.a.options.a := 'string';
help::pkg.display.widgets.objs.guientry.m.scalarmeasure.a.allowunset := [=];
help::pkg.display.widgets.objs.guientry.m.scalarmeasure.a.allowunset.d := 'Allow unset values';
help::pkg.display.widgets.objs.guientry.m.scalarmeasure.a.allowunset.def := 'T';
help::pkg.display.widgets.objs.guientry.m.scalarmeasure.a.allowunset.a := 'Boolean';
help::pkg.display.widgets.objs.guientry.m.scalarmeasure.a.editable := [=];
help::pkg.display.widgets.objs.guientry.m.scalarmeasure.a.editable.d := 'Is the entry editable by the user';
help::pkg.display.widgets.objs.guientry.m.scalarmeasure.a.editable.def := 'T';
help::pkg.display.widgets.objs.guientry.m.scalarmeasure.a.editable.a := 'Boolean';
help::pkg.display.widgets.objs.guientry.m.scalarmeasure.a.type := [=];
help::pkg.display.widgets.objs.guientry.m.scalarmeasure.a.type.d := 'Type of argument: unset means to evaluate';
help::pkg.display.widgets.objs.guientry.m.scalarmeasure.a.type.def := 'unset';
help::pkg.display.widgets.objs.guientry.m.scalarmeasure.a.type.a := 'Variable';
help::pkg.display.widgets.objs.guientry.m.scalarmeasure.a.hlp := [=];
help::pkg.display.widgets.objs.guientry.m.scalarmeasure.a.hlp.d := 'Popup help string';
help::pkg.display.widgets.objs.guientry.m.scalarmeasure.a.hlp.def := 'Unset';
help::pkg.display.widgets.objs.guientry.m.scalarmeasure.a.hlp.a := 'String';
help::pkg.display.widgets.objs.guientry.m.scalarmeasure.s := 'scalarmeasure(parent, value, default, options, allowunset, editable, type, hlp)';
help::pkg.display.widgets.objs.guientry.m.frequency := [=];
help::pkg.display.widgets.objs.guientry.m.frequency.d := 'Make a widget for a frequency measure entry';
help::pkg.display.widgets.objs.guientry.m.frequency.a.parent := [=];
help::pkg.display.widgets.objs.guientry.m.frequency.a.parent.d := 'Parent of the menu';
help::pkg.display.widgets.objs.guientry.m.frequency.a.parent.def := '';
help::pkg.display.widgets.objs.guientry.m.frequency.a.parent.a := 'Tk frame';
help::pkg.display.widgets.objs.guientry.m.frequency.a.value := [=];
help::pkg.display.widgets.objs.guientry.m.frequency.a.value.d := 'Value to insert on start';
help::pkg.display.widgets.objs.guientry.m.frequency.a.value.def := '';
help::pkg.display.widgets.objs.guientry.m.frequency.a.value.a := 'Variable or unset';
help::pkg.display.widgets.objs.guientry.m.frequency.a.default := [=];
help::pkg.display.widgets.objs.guientry.m.frequency.a.default.d := 'Default value';
help::pkg.display.widgets.objs.guientry.m.frequency.a.default.def := '';
help::pkg.display.widgets.objs.guientry.m.frequency.a.default.a := 'Variable';
help::pkg.display.widgets.objs.guientry.m.frequency.a.options := [=];
help::pkg.display.widgets.objs.guientry.m.frequency.a.options.d := 'options';
help::pkg.display.widgets.objs.guientry.m.frequency.a.options.def := '\' \' ';
help::pkg.display.widgets.objs.guientry.m.frequency.a.options.a := 'string';
help::pkg.display.widgets.objs.guientry.m.frequency.a.allowunset := [=];
help::pkg.display.widgets.objs.guientry.m.frequency.a.allowunset.d := 'Allow unset values';
help::pkg.display.widgets.objs.guientry.m.frequency.a.allowunset.def := 'T';
help::pkg.display.widgets.objs.guientry.m.frequency.a.allowunset.a := 'Boolean';
help::pkg.display.widgets.objs.guientry.m.frequency.a.editable := [=];
help::pkg.display.widgets.objs.guientry.m.frequency.a.editable.d := 'Is the entry editable by the user';
help::pkg.display.widgets.objs.guientry.m.frequency.a.editable.def := 'T';
help::pkg.display.widgets.objs.guientry.m.frequency.a.editable.a := 'Boolean';
help::pkg.display.widgets.objs.guientry.m.frequency.a.hlp := [=];
help::pkg.display.widgets.objs.guientry.m.frequency.a.hlp.d := 'Popup help string';
help::pkg.display.widgets.objs.guientry.m.frequency.a.hlp.def := 'Unset';
help::pkg.display.widgets.objs.guientry.m.frequency.a.hlp.a := 'String';
help::pkg.display.widgets.objs.guientry.m.frequency.s := 'frequency(parent, value, default, options, allowunset, editable, hlp)';
help::pkg.display.widgets.objs.guientry.m.radialvelocity := [=];
help::pkg.display.widgets.objs.guientry.m.radialvelocity.d := 'Make a widget for a radialvelocity measure entry';
help::pkg.display.widgets.objs.guientry.m.radialvelocity.a.parent := [=];
help::pkg.display.widgets.objs.guientry.m.radialvelocity.a.parent.d := 'Parent of the menu';
help::pkg.display.widgets.objs.guientry.m.radialvelocity.a.parent.def := '';
help::pkg.display.widgets.objs.guientry.m.radialvelocity.a.parent.a := 'Tk frame';
help::pkg.display.widgets.objs.guientry.m.radialvelocity.a.value := [=];
help::pkg.display.widgets.objs.guientry.m.radialvelocity.a.value.d := 'Value to insert on start';
help::pkg.display.widgets.objs.guientry.m.radialvelocity.a.value.def := '';
help::pkg.display.widgets.objs.guientry.m.radialvelocity.a.value.a := 'Variable or unset';
help::pkg.display.widgets.objs.guientry.m.radialvelocity.a.default := [=];
help::pkg.display.widgets.objs.guientry.m.radialvelocity.a.default.d := 'Default value';
help::pkg.display.widgets.objs.guientry.m.radialvelocity.a.default.def := '';
help::pkg.display.widgets.objs.guientry.m.radialvelocity.a.default.a := 'Variable';
help::pkg.display.widgets.objs.guientry.m.radialvelocity.a.options := [=];
help::pkg.display.widgets.objs.guientry.m.radialvelocity.a.options.d := 'options';
help::pkg.display.widgets.objs.guientry.m.radialvelocity.a.options.def := '\' \' ';
help::pkg.display.widgets.objs.guientry.m.radialvelocity.a.options.a := 'string';
help::pkg.display.widgets.objs.guientry.m.radialvelocity.a.allowunset := [=];
help::pkg.display.widgets.objs.guientry.m.radialvelocity.a.allowunset.d := 'Allow unset values';
help::pkg.display.widgets.objs.guientry.m.radialvelocity.a.allowunset.def := 'T';
help::pkg.display.widgets.objs.guientry.m.radialvelocity.a.allowunset.a := 'Boolean';
help::pkg.display.widgets.objs.guientry.m.radialvelocity.a.editable := [=];
help::pkg.display.widgets.objs.guientry.m.radialvelocity.a.editable.d := 'Is the entry editable by the user';
help::pkg.display.widgets.objs.guientry.m.radialvelocity.a.editable.def := 'T';
help::pkg.display.widgets.objs.guientry.m.radialvelocity.a.editable.a := 'Boolean';
help::pkg.display.widgets.objs.guientry.m.radialvelocity.a.hlp := [=];
help::pkg.display.widgets.objs.guientry.m.radialvelocity.a.hlp.d := 'Popup help string';
help::pkg.display.widgets.objs.guientry.m.radialvelocity.a.hlp.def := 'Unset';
help::pkg.display.widgets.objs.guientry.m.radialvelocity.a.hlp.a := 'String';
help::pkg.display.widgets.objs.guientry.m.radialvelocity.s := 'radialvelocity(parent, value, default, options, allowunset, editable, hlp)';
help::pkg.display.widgets.objs.guientry.m.doppler := [=];
help::pkg.display.widgets.objs.guientry.m.doppler.d := 'Make a widget for a doppler measure entry';
help::pkg.display.widgets.objs.guientry.m.doppler.a.parent := [=];
help::pkg.display.widgets.objs.guientry.m.doppler.a.parent.d := 'Parent of the menu';
help::pkg.display.widgets.objs.guientry.m.doppler.a.parent.def := '';
help::pkg.display.widgets.objs.guientry.m.doppler.a.parent.a := 'Tk frame';
help::pkg.display.widgets.objs.guientry.m.doppler.a.value := [=];
help::pkg.display.widgets.objs.guientry.m.doppler.a.value.d := 'Value to insert on start';
help::pkg.display.widgets.objs.guientry.m.doppler.a.value.def := '';
help::pkg.display.widgets.objs.guientry.m.doppler.a.value.a := 'Variable or unset';
help::pkg.display.widgets.objs.guientry.m.doppler.a.default := [=];
help::pkg.display.widgets.objs.guientry.m.doppler.a.default.d := 'Default value';
help::pkg.display.widgets.objs.guientry.m.doppler.a.default.def := '';
help::pkg.display.widgets.objs.guientry.m.doppler.a.default.a := 'Variable';
help::pkg.display.widgets.objs.guientry.m.doppler.a.options := [=];
help::pkg.display.widgets.objs.guientry.m.doppler.a.options.d := 'options';
help::pkg.display.widgets.objs.guientry.m.doppler.a.options.def := '\' \' ';
help::pkg.display.widgets.objs.guientry.m.doppler.a.options.a := 'string';
help::pkg.display.widgets.objs.guientry.m.doppler.a.allowunset := [=];
help::pkg.display.widgets.objs.guientry.m.doppler.a.allowunset.d := 'Allow unset values';
help::pkg.display.widgets.objs.guientry.m.doppler.a.allowunset.def := 'T';
help::pkg.display.widgets.objs.guientry.m.doppler.a.allowunset.a := 'Boolean';
help::pkg.display.widgets.objs.guientry.m.doppler.a.editable := [=];
help::pkg.display.widgets.objs.guientry.m.doppler.a.editable.d := 'Is the entry editable by the user';
help::pkg.display.widgets.objs.guientry.m.doppler.a.editable.def := 'T';
help::pkg.display.widgets.objs.guientry.m.doppler.a.editable.a := 'Boolean';
help::pkg.display.widgets.objs.guientry.m.doppler.a.hlp := [=];
help::pkg.display.widgets.objs.guientry.m.doppler.a.hlp.d := 'Popup help string';
help::pkg.display.widgets.objs.guientry.m.doppler.a.hlp.def := 'Unset';
help::pkg.display.widgets.objs.guientry.m.doppler.a.hlp.a := 'String';
help::pkg.display.widgets.objs.guientry.m.doppler.s := 'doppler(parent, value, default, options, allowunset, editable, hlp)';
help::pkg.display.widgets.objs.guientry.m.position := [=];
help::pkg.display.widgets.objs.guientry.m.position.d := 'Make a widget for a position entry';
help::pkg.display.widgets.objs.guientry.m.position.a.parent := [=];
help::pkg.display.widgets.objs.guientry.m.position.a.parent.d := 'Parent of the menu';
help::pkg.display.widgets.objs.guientry.m.position.a.parent.def := '';
help::pkg.display.widgets.objs.guientry.m.position.a.parent.a := 'Tk frame';
help::pkg.display.widgets.objs.guientry.m.position.a.value := [=];
help::pkg.display.widgets.objs.guientry.m.position.a.value.d := 'Value to insert on start';
help::pkg.display.widgets.objs.guientry.m.position.a.value.def := '';
help::pkg.display.widgets.objs.guientry.m.position.a.value.a := 'Variable or unset';
help::pkg.display.widgets.objs.guientry.m.position.a.default := [=];
help::pkg.display.widgets.objs.guientry.m.position.a.default.d := 'Default value';
help::pkg.display.widgets.objs.guientry.m.position.a.default.def := '';
help::pkg.display.widgets.objs.guientry.m.position.a.default.a := 'Variable';
help::pkg.display.widgets.objs.guientry.m.position.a.options := [=];
help::pkg.display.widgets.objs.guientry.m.position.a.options.d := 'options \' vertical\' |\' \' ';
help::pkg.display.widgets.objs.guientry.m.position.a.options.def := '\' \' ';
help::pkg.display.widgets.objs.guientry.m.position.a.options.a := 'string';
help::pkg.display.widgets.objs.guientry.m.position.a.allowunset := [=];
help::pkg.display.widgets.objs.guientry.m.position.a.allowunset.d := 'Allow unset values';
help::pkg.display.widgets.objs.guientry.m.position.a.allowunset.def := 'T';
help::pkg.display.widgets.objs.guientry.m.position.a.allowunset.a := 'Boolean';
help::pkg.display.widgets.objs.guientry.m.position.a.editable := [=];
help::pkg.display.widgets.objs.guientry.m.position.a.editable.d := 'Is the entry editable by the user';
help::pkg.display.widgets.objs.guientry.m.position.a.editable.def := 'T';
help::pkg.display.widgets.objs.guientry.m.position.a.editable.a := 'Boolean';
help::pkg.display.widgets.objs.guientry.m.position.a.hlp := [=];
help::pkg.display.widgets.objs.guientry.m.position.a.hlp.d := 'Popup help string';
help::pkg.display.widgets.objs.guientry.m.position.a.hlp.def := 'Unset';
help::pkg.display.widgets.objs.guientry.m.position.a.hlp.a := 'String';
help::pkg.display.widgets.objs.guientry.m.position.s := 'position(parent, value, default, options, allowunset, editable, hlp)';
help::pkg.display.widgets.objs.guientry.m.epoch := [=];
help::pkg.display.widgets.objs.guientry.m.epoch.d := 'Make a widget for a epoch entry';
help::pkg.display.widgets.objs.guientry.m.epoch.a.parent := [=];
help::pkg.display.widgets.objs.guientry.m.epoch.a.parent.d := 'Parent of the menu';
help::pkg.display.widgets.objs.guientry.m.epoch.a.parent.def := '';
help::pkg.display.widgets.objs.guientry.m.epoch.a.parent.a := 'Tk frame';
help::pkg.display.widgets.objs.guientry.m.epoch.a.value := [=];
help::pkg.display.widgets.objs.guientry.m.epoch.a.value.d := 'Value to insert on start';
help::pkg.display.widgets.objs.guientry.m.epoch.a.value.def := '';
help::pkg.display.widgets.objs.guientry.m.epoch.a.value.a := 'Variable or unset';
help::pkg.display.widgets.objs.guientry.m.epoch.a.default := [=];
help::pkg.display.widgets.objs.guientry.m.epoch.a.default.d := 'Default value';
help::pkg.display.widgets.objs.guientry.m.epoch.a.default.def := '';
help::pkg.display.widgets.objs.guientry.m.epoch.a.default.a := 'Variable';
help::pkg.display.widgets.objs.guientry.m.epoch.a.options := [=];
help::pkg.display.widgets.objs.guientry.m.epoch.a.options.d := 'Initial reference code';
help::pkg.display.widgets.objs.guientry.m.epoch.a.options.def := '\' UTC\' ';
help::pkg.display.widgets.objs.guientry.m.epoch.a.options.a := 'string';
help::pkg.display.widgets.objs.guientry.m.epoch.a.allowunset := [=];
help::pkg.display.widgets.objs.guientry.m.epoch.a.allowunset.d := 'Allow unset values';
help::pkg.display.widgets.objs.guientry.m.epoch.a.allowunset.def := 'T';
help::pkg.display.widgets.objs.guientry.m.epoch.a.allowunset.a := 'Boolean';
help::pkg.display.widgets.objs.guientry.m.epoch.a.editable := [=];
help::pkg.display.widgets.objs.guientry.m.epoch.a.editable.d := 'Is the entry editable by the user';
help::pkg.display.widgets.objs.guientry.m.epoch.a.editable.def := 'T';
help::pkg.display.widgets.objs.guientry.m.epoch.a.editable.a := 'Boolean';
help::pkg.display.widgets.objs.guientry.m.epoch.a.hlp := [=];
help::pkg.display.widgets.objs.guientry.m.epoch.a.hlp.d := 'Popup help string';
help::pkg.display.widgets.objs.guientry.m.epoch.a.hlp.def := 'Unset';
help::pkg.display.widgets.objs.guientry.m.epoch.a.hlp.a := 'String';
help::pkg.display.widgets.objs.guientry.m.epoch.s := 'epoch(parent, value, default, options, allowunset, editable, hlp)';
help::pkg.display.widgets.objs.guientry.m.direction := [=];
help::pkg.display.widgets.objs.guientry.m.direction.d := 'Make a widget for a direction entry';
help::pkg.display.widgets.objs.guientry.m.direction.a.parent := [=];
help::pkg.display.widgets.objs.guientry.m.direction.a.parent.d := 'Parent of the menu';
help::pkg.display.widgets.objs.guientry.m.direction.a.parent.def := '';
help::pkg.display.widgets.objs.guientry.m.direction.a.parent.a := 'Tk frame';
help::pkg.display.widgets.objs.guientry.m.direction.a.value := [=];
help::pkg.display.widgets.objs.guientry.m.direction.a.value.d := 'Value to insert on start';
help::pkg.display.widgets.objs.guientry.m.direction.a.value.def := '';
help::pkg.display.widgets.objs.guientry.m.direction.a.value.a := 'Variable or unset';
help::pkg.display.widgets.objs.guientry.m.direction.a.default := [=];
help::pkg.display.widgets.objs.guientry.m.direction.a.default.d := 'Default value';
help::pkg.display.widgets.objs.guientry.m.direction.a.default.def := '';
help::pkg.display.widgets.objs.guientry.m.direction.a.default.a := 'Variable';
help::pkg.display.widgets.objs.guientry.m.direction.a.options := [=];
help::pkg.display.widgets.objs.guientry.m.direction.a.options.d := 'options: \' vertical\' |\' \' ';
help::pkg.display.widgets.objs.guientry.m.direction.a.options.def := '\' \' ';
help::pkg.display.widgets.objs.guientry.m.direction.a.options.a := 'string';
help::pkg.display.widgets.objs.guientry.m.direction.a.allowunset := [=];
help::pkg.display.widgets.objs.guientry.m.direction.a.allowunset.d := 'Allow unset values';
help::pkg.display.widgets.objs.guientry.m.direction.a.allowunset.def := 'T';
help::pkg.display.widgets.objs.guientry.m.direction.a.allowunset.a := 'Boolean';
help::pkg.display.widgets.objs.guientry.m.direction.a.editable := [=];
help::pkg.display.widgets.objs.guientry.m.direction.a.editable.d := 'Is the entry editable by the user';
help::pkg.display.widgets.objs.guientry.m.direction.a.editable.def := 'T';
help::pkg.display.widgets.objs.guientry.m.direction.a.editable.a := 'Boolean';
help::pkg.display.widgets.objs.guientry.m.direction.a.hlp := [=];
help::pkg.display.widgets.objs.guientry.m.direction.a.hlp.d := 'Popup help string';
help::pkg.display.widgets.objs.guientry.m.direction.a.hlp.def := 'Unset';
help::pkg.display.widgets.objs.guientry.m.direction.a.hlp.a := 'String';
help::pkg.display.widgets.objs.guientry.m.direction.s := 'direction(parent, value, default, options, allowunset, editable, hlp)';
help::pkg.display.widgets.objs.guientry.m.quantity := [=];
help::pkg.display.widgets.objs.guientry.m.quantity.d := 'Make a widget for a quantity entry';
help::pkg.display.widgets.objs.guientry.m.quantity.a.parent := [=];
help::pkg.display.widgets.objs.guientry.m.quantity.a.parent.d := 'Parent of the menu';
help::pkg.display.widgets.objs.guientry.m.quantity.a.parent.def := '';
help::pkg.display.widgets.objs.guientry.m.quantity.a.parent.a := 'Tk frame';
help::pkg.display.widgets.objs.guientry.m.quantity.a.value := [=];
help::pkg.display.widgets.objs.guientry.m.quantity.a.value.d := 'Value to insert on start';
help::pkg.display.widgets.objs.guientry.m.quantity.a.value.def := '';
help::pkg.display.widgets.objs.guientry.m.quantity.a.value.a := 'Variable or unset';
help::pkg.display.widgets.objs.guientry.m.quantity.a.default := [=];
help::pkg.display.widgets.objs.guientry.m.quantity.a.default.d := 'Default value';
help::pkg.display.widgets.objs.guientry.m.quantity.a.default.def := '';
help::pkg.display.widgets.objs.guientry.m.quantity.a.default.a := 'Variable';
help::pkg.display.widgets.objs.guientry.m.quantity.a.type := [=];
help::pkg.display.widgets.objs.guientry.m.quantity.a.type.d := 'Type of argument: unset means to evaluate';
help::pkg.display.widgets.objs.guientry.m.quantity.a.type.def := 'unset';
help::pkg.display.widgets.objs.guientry.m.quantity.a.type.a := 'Variable';
help::pkg.display.widgets.objs.guientry.m.quantity.a.options := [=];
help::pkg.display.widgets.objs.guientry.m.quantity.a.options.d := 'options';
help::pkg.display.widgets.objs.guientry.m.quantity.a.options.def := '\' \' ';
help::pkg.display.widgets.objs.guientry.m.quantity.a.options.a := 'string';
help::pkg.display.widgets.objs.guientry.m.quantity.a.allowunset := [=];
help::pkg.display.widgets.objs.guientry.m.quantity.a.allowunset.d := 'Allow unset values';
help::pkg.display.widgets.objs.guientry.m.quantity.a.allowunset.def := 'T';
help::pkg.display.widgets.objs.guientry.m.quantity.a.allowunset.a := 'Boolean';
help::pkg.display.widgets.objs.guientry.m.quantity.a.editable := [=];
help::pkg.display.widgets.objs.guientry.m.quantity.a.editable.d := 'Is the entry editable by the user';
help::pkg.display.widgets.objs.guientry.m.quantity.a.editable.def := 'T';
help::pkg.display.widgets.objs.guientry.m.quantity.a.editable.a := 'Boolean';
help::pkg.display.widgets.objs.guientry.m.quantity.a.hlp := [=];
help::pkg.display.widgets.objs.guientry.m.quantity.a.hlp.d := 'Popup help string';
help::pkg.display.widgets.objs.guientry.m.quantity.a.hlp.def := 'Unset';
help::pkg.display.widgets.objs.guientry.m.quantity.a.hlp.a := 'String';
help::pkg.display.widgets.objs.guientry.m.quantity.s := 'quantity(parent, value, default, type, options, allowunset, editable, hlp)';
help::pkg.display.widgets.objs.guientry.m.range := [=];
help::pkg.display.widgets.objs.guientry.m.range.d := 'Make a widget for a range entry';
help::pkg.display.widgets.objs.guientry.m.range.a.parent := [=];
help::pkg.display.widgets.objs.guientry.m.range.a.parent.d := 'Parent of the menu';
help::pkg.display.widgets.objs.guientry.m.range.a.parent.def := '';
help::pkg.display.widgets.objs.guientry.m.range.a.parent.a := 'Tk frame';
help::pkg.display.widgets.objs.guientry.m.range.a.value := [=];
help::pkg.display.widgets.objs.guientry.m.range.a.value.d := 'Value to insert on start';
help::pkg.display.widgets.objs.guientry.m.range.a.value.def := '0';
help::pkg.display.widgets.objs.guientry.m.range.a.value.a := 'Value or unset';
help::pkg.display.widgets.objs.guientry.m.range.a.default := [=];
help::pkg.display.widgets.objs.guientry.m.range.a.default.d := 'Default value';
help::pkg.display.widgets.objs.guientry.m.range.a.default.def := '0';
help::pkg.display.widgets.objs.guientry.m.range.a.default.a := 'Value';
help::pkg.display.widgets.objs.guientry.m.range.a.options := [=];
help::pkg.display.widgets.objs.guientry.m.range.a.options.d := 'options';
help::pkg.display.widgets.objs.guientry.m.range.a.options.def := '\' \' ';
help::pkg.display.widgets.objs.guientry.m.range.a.options.a := 'string';
help::pkg.display.widgets.objs.guientry.m.range.a.allowunset := [=];
help::pkg.display.widgets.objs.guientry.m.range.a.allowunset.d := 'Allow unset values';
help::pkg.display.widgets.objs.guientry.m.range.a.allowunset.def := 'T';
help::pkg.display.widgets.objs.guientry.m.range.a.allowunset.a := 'Boolean';
help::pkg.display.widgets.objs.guientry.m.range.a.editable := [=];
help::pkg.display.widgets.objs.guientry.m.range.a.editable.d := 'Is the entry editable by the user';
help::pkg.display.widgets.objs.guientry.m.range.a.editable.def := 'T';
help::pkg.display.widgets.objs.guientry.m.range.a.editable.a := 'Boolean';
help::pkg.display.widgets.objs.guientry.m.range.a.rmin := [=];
help::pkg.display.widgets.objs.guientry.m.range.a.rmin.d := 'Minimum value';
help::pkg.display.widgets.objs.guientry.m.range.a.rmin.def := '0.0';
help::pkg.display.widgets.objs.guientry.m.range.a.rmin.a := 'Number';
help::pkg.display.widgets.objs.guientry.m.range.a.rmax := [=];
help::pkg.display.widgets.objs.guientry.m.range.a.rmax.d := 'Maximum value';
help::pkg.display.widgets.objs.guientry.m.range.a.rmax.def := '1.0';
help::pkg.display.widgets.objs.guientry.m.range.a.rmax.a := 'Number';
help::pkg.display.widgets.objs.guientry.m.range.a.rresolution := [=];
help::pkg.display.widgets.objs.guientry.m.range.a.rresolution.d := 'Resolution of selection';
help::pkg.display.widgets.objs.guientry.m.range.a.rresolution.def := '0.1';
help::pkg.display.widgets.objs.guientry.m.range.a.rresolution.a := 'Number';
help::pkg.display.widgets.objs.guientry.m.range.a.provideentry := [=];
help::pkg.display.widgets.objs.guientry.m.range.a.provideentry.d := 'Include a type-in entry box as well';
help::pkg.display.widgets.objs.guientry.m.range.a.provideentry.def := 'F';
help::pkg.display.widgets.objs.guientry.m.range.a.provideentry.a := 'Bool';
help::pkg.display.widgets.objs.guientry.m.range.a.hlp := [=];
help::pkg.display.widgets.objs.guientry.m.range.a.hlp.d := 'Popup help string';
help::pkg.display.widgets.objs.guientry.m.range.a.hlp.def := 'Unset';
help::pkg.display.widgets.objs.guientry.m.range.a.hlp.a := 'String';
help::pkg.display.widgets.objs.guientry.m.range.s := 'range(parent, value, default, options, allowunset, editable, rmin, rmax, rresolution, provideentry, hlp)';
help::pkg.display.widgets.objs.guientry.m.record := [=];
help::pkg.display.widgets.objs.guientry.m.record.d := 'Make a widget for a Record entry';
help::pkg.display.widgets.objs.guientry.m.record.a.parent := [=];
help::pkg.display.widgets.objs.guientry.m.record.a.parent.d := 'Parent of the menu';
help::pkg.display.widgets.objs.guientry.m.record.a.parent.def := '';
help::pkg.display.widgets.objs.guientry.m.record.a.parent.a := 'Tk frame';
help::pkg.display.widgets.objs.guientry.m.record.a.value := [=];
help::pkg.display.widgets.objs.guientry.m.record.a.value.d := 'Value to insert on start';
help::pkg.display.widgets.objs.guientry.m.record.a.value.def := '';
help::pkg.display.widgets.objs.guientry.m.record.a.value.a := 'Variable or unset';
help::pkg.display.widgets.objs.guientry.m.record.a.default := [=];
help::pkg.display.widgets.objs.guientry.m.record.a.default.d := 'Default value';
help::pkg.display.widgets.objs.guientry.m.record.a.default.def := '';
help::pkg.display.widgets.objs.guientry.m.record.a.default.a := 'Variable';
help::pkg.display.widgets.objs.guientry.m.record.a.options := [=];
help::pkg.display.widgets.objs.guientry.m.record.a.options.d := 'options';
help::pkg.display.widgets.objs.guientry.m.record.a.options.def := '\' \' ';
help::pkg.display.widgets.objs.guientry.m.record.a.options.a := 'string';
help::pkg.display.widgets.objs.guientry.m.record.a.allowunset := [=];
help::pkg.display.widgets.objs.guientry.m.record.a.allowunset.d := 'Allow unset values';
help::pkg.display.widgets.objs.guientry.m.record.a.allowunset.def := 'T';
help::pkg.display.widgets.objs.guientry.m.record.a.allowunset.a := 'Boolean';
help::pkg.display.widgets.objs.guientry.m.record.a.editable := [=];
help::pkg.display.widgets.objs.guientry.m.record.a.editable.d := 'Is the entry editable by the user';
help::pkg.display.widgets.objs.guientry.m.record.a.editable.def := 'T';
help::pkg.display.widgets.objs.guientry.m.record.a.editable.a := 'Boolean';
help::pkg.display.widgets.objs.guientry.m.record.a.hlp := [=];
help::pkg.display.widgets.objs.guientry.m.record.a.hlp.d := 'Popup help string';
help::pkg.display.widgets.objs.guientry.m.record.a.hlp.def := 'Unset';
help::pkg.display.widgets.objs.guientry.m.record.a.hlp.a := 'String';
help::pkg.display.widgets.objs.guientry.m.record.s := 'record(parent, value, default, options, allowunset, editable, hlp)';
help::pkg.display.widgets.objs.guientry.m.region := [=];
help::pkg.display.widgets.objs.guientry.m.region.d := 'Make a widget for a region entry';
help::pkg.display.widgets.objs.guientry.m.region.a.parent := [=];
help::pkg.display.widgets.objs.guientry.m.region.a.parent.d := 'Parent of the menu';
help::pkg.display.widgets.objs.guientry.m.region.a.parent.def := '';
help::pkg.display.widgets.objs.guientry.m.region.a.parent.a := 'Tk frame';
help::pkg.display.widgets.objs.guientry.m.region.a.value := [=];
help::pkg.display.widgets.objs.guientry.m.region.a.value.d := 'Value to insert on start';
help::pkg.display.widgets.objs.guientry.m.region.a.value.def := '';
help::pkg.display.widgets.objs.guientry.m.region.a.value.a := 'Variable or unset';
help::pkg.display.widgets.objs.guientry.m.region.a.default := [=];
help::pkg.display.widgets.objs.guientry.m.region.a.default.d := 'Default value';
help::pkg.display.widgets.objs.guientry.m.region.a.default.def := '';
help::pkg.display.widgets.objs.guientry.m.region.a.default.a := 'Variable';
help::pkg.display.widgets.objs.guientry.m.region.a.options := [=];
help::pkg.display.widgets.objs.guientry.m.region.a.options.d := 'options';
help::pkg.display.widgets.objs.guientry.m.region.a.options.def := '\' \' ';
help::pkg.display.widgets.objs.guientry.m.region.a.options.a := 'string';
help::pkg.display.widgets.objs.guientry.m.region.a.allowunset := [=];
help::pkg.display.widgets.objs.guientry.m.region.a.allowunset.d := 'Allow unset values';
help::pkg.display.widgets.objs.guientry.m.region.a.allowunset.def := 'T';
help::pkg.display.widgets.objs.guientry.m.region.a.allowunset.a := 'Boolean';
help::pkg.display.widgets.objs.guientry.m.region.a.editable := [=];
help::pkg.display.widgets.objs.guientry.m.region.a.editable.d := 'Is the entry editable by the user';
help::pkg.display.widgets.objs.guientry.m.region.a.editable.def := 'T';
help::pkg.display.widgets.objs.guientry.m.region.a.editable.a := 'Boolean';
help::pkg.display.widgets.objs.guientry.m.region.a.hlp := [=];
help::pkg.display.widgets.objs.guientry.m.region.a.hlp.d := 'Popup help string';
help::pkg.display.widgets.objs.guientry.m.region.a.hlp.def := 'Unset';
help::pkg.display.widgets.objs.guientry.m.region.a.hlp.a := 'String';
help::pkg.display.widgets.objs.guientry.m.region.s := 'region(parent, value, default, options, allowunset, editable, hlp)';
help::pkg.display.widgets.objs.guientry.m.string := [=];
help::pkg.display.widgets.objs.guientry.m.string.d := 'Make a widget for a string entry';
help::pkg.display.widgets.objs.guientry.m.string.a.parent := [=];
help::pkg.display.widgets.objs.guientry.m.string.a.parent.d := 'Parent of the menu';
help::pkg.display.widgets.objs.guientry.m.string.a.parent.def := '';
help::pkg.display.widgets.objs.guientry.m.string.a.parent.a := 'Tk frame';
help::pkg.display.widgets.objs.guientry.m.string.a.value := [=];
help::pkg.display.widgets.objs.guientry.m.string.a.value.d := 'Value to insert on start';
help::pkg.display.widgets.objs.guientry.m.string.a.value.def := '';
help::pkg.display.widgets.objs.guientry.m.string.a.value.a := 'Variable or unset';
help::pkg.display.widgets.objs.guientry.m.string.a.default := [=];
help::pkg.display.widgets.objs.guientry.m.string.a.default.d := 'Default value';
help::pkg.display.widgets.objs.guientry.m.string.a.default.def := '';
help::pkg.display.widgets.objs.guientry.m.string.a.default.a := 'Variable';
help::pkg.display.widgets.objs.guientry.m.string.a.options := [=];
help::pkg.display.widgets.objs.guientry.m.string.a.options.d := 'options';
help::pkg.display.widgets.objs.guientry.m.string.a.options.def := '\' \' ';
help::pkg.display.widgets.objs.guientry.m.string.a.options.a := 'string';
help::pkg.display.widgets.objs.guientry.m.string.a.allowunset := [=];
help::pkg.display.widgets.objs.guientry.m.string.a.allowunset.d := 'Allow unset values';
help::pkg.display.widgets.objs.guientry.m.string.a.allowunset.def := 'T';
help::pkg.display.widgets.objs.guientry.m.string.a.allowunset.a := 'Boolean';
help::pkg.display.widgets.objs.guientry.m.string.a.editable := [=];
help::pkg.display.widgets.objs.guientry.m.string.a.editable.d := 'Is the entry editable by the user';
help::pkg.display.widgets.objs.guientry.m.string.a.editable.def := 'T';
help::pkg.display.widgets.objs.guientry.m.string.a.editable.a := 'Boolean';
help::pkg.display.widgets.objs.guientry.m.string.a.hlp := [=];
help::pkg.display.widgets.objs.guientry.m.string.a.hlp.d := 'Popup help string';
help::pkg.display.widgets.objs.guientry.m.string.a.hlp.def := 'Unset';
help::pkg.display.widgets.objs.guientry.m.string.a.hlp.a := 'String';
help::pkg.display.widgets.objs.guientry.m.string.s := 'string(parent, value, default, options, allowunset, editable, hlp)';
help::pkg.display.widgets.objs.guientry.m.untyped := [=];
help::pkg.display.widgets.objs.guientry.m.untyped.d := 'Make a widget for a untyped entry';
help::pkg.display.widgets.objs.guientry.m.untyped.a.parent := [=];
help::pkg.display.widgets.objs.guientry.m.untyped.a.parent.d := 'Parent of the menu';
help::pkg.display.widgets.objs.guientry.m.untyped.a.parent.def := '';
help::pkg.display.widgets.objs.guientry.m.untyped.a.parent.a := 'Tk frame';
help::pkg.display.widgets.objs.guientry.m.untyped.a.value := [=];
help::pkg.display.widgets.objs.guientry.m.untyped.a.value.d := 'Value to insert on start';
help::pkg.display.widgets.objs.guientry.m.untyped.a.value.def := '';
help::pkg.display.widgets.objs.guientry.m.untyped.a.value.a := 'Variable or unset';
help::pkg.display.widgets.objs.guientry.m.untyped.a.default := [=];
help::pkg.display.widgets.objs.guientry.m.untyped.a.default.d := 'Default value';
help::pkg.display.widgets.objs.guientry.m.untyped.a.default.def := '';
help::pkg.display.widgets.objs.guientry.m.untyped.a.default.a := 'Variable';
help::pkg.display.widgets.objs.guientry.m.untyped.a.options := [=];
help::pkg.display.widgets.objs.guientry.m.untyped.a.options.d := 'options';
help::pkg.display.widgets.objs.guientry.m.untyped.a.options.def := '\' \' ';
help::pkg.display.widgets.objs.guientry.m.untyped.a.options.a := 'string';
help::pkg.display.widgets.objs.guientry.m.untyped.a.allowunset := [=];
help::pkg.display.widgets.objs.guientry.m.untyped.a.allowunset.d := 'Allow unset values';
help::pkg.display.widgets.objs.guientry.m.untyped.a.allowunset.def := 'T';
help::pkg.display.widgets.objs.guientry.m.untyped.a.allowunset.a := 'Boolean';
help::pkg.display.widgets.objs.guientry.m.untyped.a.editable := [=];
help::pkg.display.widgets.objs.guientry.m.untyped.a.editable.d := 'Is the entry editable by the user';
help::pkg.display.widgets.objs.guientry.m.untyped.a.editable.def := 'T';
help::pkg.display.widgets.objs.guientry.m.untyped.a.editable.a := 'Boolean';
help::pkg.display.widgets.objs.guientry.m.untyped.a.hlp := [=];
help::pkg.display.widgets.objs.guientry.m.untyped.a.hlp.d := 'Popup help string';
help::pkg.display.widgets.objs.guientry.m.untyped.a.hlp.def := 'Unset';
help::pkg.display.widgets.objs.guientry.m.untyped.a.hlp.a := 'String';
help::pkg.display.widgets.objs.guientry.m.untyped.s := 'untyped(parent, value, default, options, allowunset, editable, hlp)';
help::pkg.display.widgets.objs.guientry.m.list := [=];
help::pkg.display.widgets.objs.guientry.m.list.d := 'Make a widget for an extensible list of entry  widget';
help::pkg.display.widgets.objs.guientry.m.list.a.parent := [=];
help::pkg.display.widgets.objs.guientry.m.list.a.parent.d := 'Parent of the menu';
help::pkg.display.widgets.objs.guientry.m.list.a.parent.def := '';
help::pkg.display.widgets.objs.guientry.m.list.a.parent.a := 'Tk frame';
help::pkg.display.widgets.objs.guientry.m.list.a.types := [=];
help::pkg.display.widgets.objs.guientry.m.list.a.types.d := 'Types of widgets';
help::pkg.display.widgets.objs.guientry.m.list.a.types.def := '';
help::pkg.display.widgets.objs.guientry.m.list.a.types.a := 'String of valid widget names';
help::pkg.display.widgets.objs.guientry.m.list.a.names := [=];
help::pkg.display.widgets.objs.guientry.m.list.a.names.d := 'Name to be attached to each widget';
help::pkg.display.widgets.objs.guientry.m.list.a.names.def := '';
help::pkg.display.widgets.objs.guientry.m.list.a.names.a := 'Vector String';
help::pkg.display.widgets.objs.guientry.m.list.a.values := [=];
help::pkg.display.widgets.objs.guientry.m.list.a.values.d := 'Values to insert on start';
help::pkg.display.widgets.objs.guientry.m.list.a.values.def := '';
help::pkg.display.widgets.objs.guientry.m.list.a.values.a := 'Record of variables or unset';
help::pkg.display.widgets.objs.guientry.m.list.a.values := [=];
help::pkg.display.widgets.objs.guientry.m.list.a.values.d := 'Values to insert on start';
help::pkg.display.widgets.objs.guientry.m.list.a.values.def := '';
help::pkg.display.widgets.objs.guientry.m.list.a.values.a := 'Record of variables or unset';
help::pkg.display.widgets.objs.guientry.m.list.a.defaults := [=];
help::pkg.display.widgets.objs.guientry.m.list.a.defaults.d := 'Default values';
help::pkg.display.widgets.objs.guientry.m.list.a.defaults.def := '';
help::pkg.display.widgets.objs.guientry.m.list.a.defaults.a := 'Record of Variables or unset';
help::pkg.display.widgets.objs.guientry.m.list.a.options := [=];
help::pkg.display.widgets.objs.guientry.m.list.a.options.d := 'options';
help::pkg.display.widgets.objs.guientry.m.list.a.options.def := '\' \' ';
help::pkg.display.widgets.objs.guientry.m.list.a.options.a := 'Record of vector strings';
help::pkg.display.widgets.objs.guientry.m.list.a.allowunset := [=];
help::pkg.display.widgets.objs.guientry.m.list.a.allowunset.d := 'Allow unset values';
help::pkg.display.widgets.objs.guientry.m.list.a.allowunset.def := 'T';
help::pkg.display.widgets.objs.guientry.m.list.a.allowunset.a := 'Boolean';
help::pkg.display.widgets.objs.guientry.m.list.a.editable := [=];
help::pkg.display.widgets.objs.guientry.m.list.a.editable.d := 'Is the entry editable by the user';
help::pkg.display.widgets.objs.guientry.m.list.a.editable.def := 'T';
help::pkg.display.widgets.objs.guientry.m.list.a.editable.a := 'Boolean';
help::pkg.display.widgets.objs.guientry.m.list.a.hlp := [=];
help::pkg.display.widgets.objs.guientry.m.list.a.hlp.d := 'Popup help string';
help::pkg.display.widgets.objs.guientry.m.list.a.hlp.def := 'Unset';
help::pkg.display.widgets.objs.guientry.m.list.a.hlp.a := 'String';
help::pkg.display.widgets.objs.guientry.m.list.s := 'list(parent, types, names, values, values, defaults, options, allowunset, editable, hlp)';
help::pkg.display.widgets.objs.guientry.m.done := [=];
help::pkg.display.widgets.objs.guientry.m.done.d := 'Destroy this tool';
help::pkg.display.widgets.objs.guientry.m.done.s := 'done()';
help::pkg.display.widgets.objs.guientry.m.type := [=];
help::pkg.display.widgets.objs.guientry.m.type.d := 'Return the type of this tool';
help::pkg.display.widgets.objs.guientry.m.type.s := 'type()';
help::pkg.display.widgets.objs.guientry.m.twoentry := [=];
help::pkg.display.widgets.objs.guientry.m.twoentry.d := 'Make a widget for a range entry, providing two entry boxes next to each other labelled  min  and  max . This is used by minmaxhist, and is not intended for independant use.';
help::pkg.display.widgets.objs.guientry.m.twoentry.a.parent := [=];
help::pkg.display.widgets.objs.guientry.m.twoentry.a.parent.d := 'Parent of the widget';
help::pkg.display.widgets.objs.guientry.m.twoentry.a.parent.def := '';
help::pkg.display.widgets.objs.guientry.m.twoentry.a.parent.a := 'Tk frame';
help::pkg.display.widgets.objs.guientry.m.twoentry.a.value := [=];
help::pkg.display.widgets.objs.guientry.m.twoentry.a.value.d := 'Value to insert on start';
help::pkg.display.widgets.objs.guientry.m.twoentry.a.value.def := 'unset';
help::pkg.display.widgets.objs.guientry.m.twoentry.a.value.a := 'Array';
help::pkg.display.widgets.objs.guientry.m.twoentry.a.default := [=];
help::pkg.display.widgets.objs.guientry.m.twoentry.a.default.d := 'Default value';
help::pkg.display.widgets.objs.guientry.m.twoentry.a.default.def := '0';
help::pkg.display.widgets.objs.guientry.m.twoentry.a.default.a := 'Array';
help::pkg.display.widgets.objs.guientry.m.twoentry.a.options := [=];
help::pkg.display.widgets.objs.guientry.m.twoentry.a.options.d := 'options';
help::pkg.display.widgets.objs.guientry.m.twoentry.a.options.def := '\' \' ';
help::pkg.display.widgets.objs.guientry.m.twoentry.a.options.a := 'string';
help::pkg.display.widgets.objs.guientry.m.twoentry.a.allowunset := [=];
help::pkg.display.widgets.objs.guientry.m.twoentry.a.allowunset.d := 'Allow unset values';
help::pkg.display.widgets.objs.guientry.m.twoentry.a.allowunset.def := 'T';
help::pkg.display.widgets.objs.guientry.m.twoentry.a.allowunset.a := 'Boolean';
help::pkg.display.widgets.objs.guientry.m.twoentry.a.editable := [=];
help::pkg.display.widgets.objs.guientry.m.twoentry.a.editable.d := 'Is the entry editable by the user';
help::pkg.display.widgets.objs.guientry.m.twoentry.a.editable.def := 'T';
help::pkg.display.widgets.objs.guientry.m.twoentry.a.editable.a := 'Boolean';
help::pkg.display.widgets.objs.guientry.m.twoentry.a.min := [=];
help::pkg.display.widgets.objs.guientry.m.twoentry.a.min.d := 'Minimum value';
help::pkg.display.widgets.objs.guientry.m.twoentry.a.min.def := '-1.0';
help::pkg.display.widgets.objs.guientry.m.twoentry.a.min.a := 'Number';
help::pkg.display.widgets.objs.guientry.m.twoentry.a.max := [=];
help::pkg.display.widgets.objs.guientry.m.twoentry.a.max.d := 'Maximum value';
help::pkg.display.widgets.objs.guientry.m.twoentry.a.max.def := '1.0';
help::pkg.display.widgets.objs.guientry.m.twoentry.a.max.a := 'Number';
help::pkg.display.widgets.objs.guientry.m.twoentry.a.widths := [=];
help::pkg.display.widgets.objs.guientry.m.twoentry.a.widths.d := 'Width of the two boxes';
help::pkg.display.widgets.objs.guientry.m.twoentry.a.widths.def := '0.1';
help::pkg.display.widgets.objs.guientry.m.twoentry.a.widths.a := 'Number';
help::pkg.display.widgets.objs.guientry.m.twoentry.a.hlp := [=];
help::pkg.display.widgets.objs.guientry.m.twoentry.a.hlp.d := 'Help message';
help::pkg.display.widgets.objs.guientry.m.twoentry.a.hlp.def := 'F';
help::pkg.display.widgets.objs.guientry.m.twoentry.a.hlp.a := 'string';
help::pkg.display.widgets.objs.guientry.m.twoentry.s := 'twoentry(parent, value, default, options, allowunset, editable, min, max, widths, hlp)';
help::pkg.display.widgets.objs.guientry.m.minmaxhist := [=];
help::pkg.display.widgets.objs.guientry.m.minmaxhist.d := 'Constructs a widget for the entry of a range.';
help::pkg.display.widgets.objs.guientry.m.minmaxhist.a.parent := [=];
help::pkg.display.widgets.objs.guientry.m.minmaxhist.a.parent.d := 'Parent of the widget';
help::pkg.display.widgets.objs.guientry.m.minmaxhist.a.parent.def := '';
help::pkg.display.widgets.objs.guientry.m.minmaxhist.a.parent.a := 'Tk frame';
help::pkg.display.widgets.objs.guientry.m.minmaxhist.a.value := [=];
help::pkg.display.widgets.objs.guientry.m.minmaxhist.a.value.d := 'Value to insert on start';
help::pkg.display.widgets.objs.guientry.m.minmaxhist.a.value.def := 'unset';
help::pkg.display.widgets.objs.guientry.m.minmaxhist.a.value.a := 'Array';
help::pkg.display.widgets.objs.guientry.m.minmaxhist.a.default := [=];
help::pkg.display.widgets.objs.guientry.m.minmaxhist.a.default.d := 'Default value';
help::pkg.display.widgets.objs.guientry.m.minmaxhist.a.default.def := '0';
help::pkg.display.widgets.objs.guientry.m.minmaxhist.a.default.a := 'Array';
help::pkg.display.widgets.objs.guientry.m.minmaxhist.a.allowunset := [=];
help::pkg.display.widgets.objs.guientry.m.minmaxhist.a.allowunset.d := 'Allow unset values';
help::pkg.display.widgets.objs.guientry.m.minmaxhist.a.allowunset.def := 'T';
help::pkg.display.widgets.objs.guientry.m.minmaxhist.a.allowunset.a := 'Boolean';
help::pkg.display.widgets.objs.guientry.m.minmaxhist.a.editable := [=];
help::pkg.display.widgets.objs.guientry.m.minmaxhist.a.editable.d := 'Is the entry editable by the user';
help::pkg.display.widgets.objs.guientry.m.minmaxhist.a.editable.def := 'T';
help::pkg.display.widgets.objs.guientry.m.minmaxhist.a.editable.a := 'Boolean';
help::pkg.display.widgets.objs.guientry.m.minmaxhist.a.minvalue := [=];
help::pkg.display.widgets.objs.guientry.m.minmaxhist.a.minvalue.d := 'Minimum value';
help::pkg.display.widgets.objs.guientry.m.minmaxhist.a.minvalue.def := '-1.0';
help::pkg.display.widgets.objs.guientry.m.minmaxhist.a.minvalue.a := 'Number';
help::pkg.display.widgets.objs.guientry.m.minmaxhist.a.maxvalue := [=];
help::pkg.display.widgets.objs.guientry.m.minmaxhist.a.maxvalue.d := 'Maximum value';
help::pkg.display.widgets.objs.guientry.m.minmaxhist.a.maxvalue.def := '1.0';
help::pkg.display.widgets.objs.guientry.m.minmaxhist.a.maxvalue.a := 'Number';
help::pkg.display.widgets.objs.guientry.m.minmaxhist.a.hlp := [=];
help::pkg.display.widgets.objs.guientry.m.minmaxhist.a.hlp.d := 'Help message';
help::pkg.display.widgets.objs.guientry.m.minmaxhist.a.hlp.def := '\' \' ';
help::pkg.display.widgets.objs.guientry.m.minmaxhist.a.hlp.a := 'string';
help::pkg.display.widgets.objs.guientry.m.minmaxhist.a.histarray := [=];
help::pkg.display.widgets.objs.guientry.m.minmaxhist.a.histarray.d := 'Record containing info to use for histogram (in   .values and .counts)';
help::pkg.display.widgets.objs.guientry.m.minmaxhist.a.histarray.def := 'unset';
help::pkg.display.widgets.objs.guientry.m.minmaxhist.a.histarray.a := 'Record';
help::pkg.display.widgets.objs.guientry.m.minmaxhist.a.imageunits := [=];
help::pkg.display.widgets.objs.guientry.m.minmaxhist.a.imageunits.d := 'Brightness units of image (for labels)';
help::pkg.display.widgets.objs.guientry.m.minmaxhist.a.imageunits.def := 'unset';
help::pkg.display.widgets.objs.guientry.m.minmaxhist.a.imageunits.a := 'string';
help::pkg.display.widgets.objs.guientry.m.minmaxhist.a.options := [=];
help::pkg.display.widgets.objs.guientry.m.minmaxhist.a.options.d := 'Options';
help::pkg.display.widgets.objs.guientry.m.minmaxhist.a.options.def := '\' \' ';
help::pkg.display.widgets.objs.guientry.m.minmaxhist.a.options.a := 'string';
help::pkg.display.widgets.objs.guientry.m.minmaxhist.s := 'minmaxhist(parent, value, default, allowunset, editable, minvalue, maxvalue, hlp, histarray, imageunits, options)';
help::pkg.display.widgets.funs.guientrytest := [=];
help::pkg.display.widgets.funs.guientrytest.a := [=];
help::pkg.display.widgets.funs.guientrytest.d := 'Test the construction of guientry widgets';
help::pkg.display.widgets.funs.guientrytest.a.autodestruct := [=];
help::pkg.display.widgets.funs.guientrytest.a.autodestruct.d := 'Destroy the frame immediately?';
help::pkg.display.widgets.funs.guientrytest.a.autodestruct.def := 'T';
help::pkg.display.widgets.funs.guientrytest.a.autodestruct.a := 'Boolean';
help::pkg.display.widgets.funs.guientrytest.a.editable := [=];
help::pkg.display.widgets.funs.guientrytest.a.editable.d := 'Make the entries editable?';
help::pkg.display.widgets.funs.guientrytest.a.editable.def := 'T';
help::pkg.display.widgets.funs.guientrytest.a.editable.a := 'Boolean';
help::pkg.display.widgets.funs.guientrytest.a.allowunset := [=];
help::pkg.display.widgets.funs.guientrytest.a.allowunset.d := 'Allow unset values?';
help::pkg.display.widgets.funs.guientrytest.a.allowunset.def := 'T';
help::pkg.display.widgets.funs.guientrytest.a.allowunset.a := 'Boolean';
help::pkg.display.widgets.funs.guientrytest.a.expand := [=];
help::pkg.display.widgets.funs.guientrytest.a.expand.d := 'Expand policy';
help::pkg.display.widgets.funs.guientrytest.a.expand.def := '\' none\' ';
help::pkg.display.widgets.funs.guientrytest.a.expand.a := '\' x\' |\' y\' |\' both\' |\' none\' ';
help::pkg.display.widgets.funs.guientrytest.s := 'guientrytest(autodestruct, editable, allowunset, expand)';
help::pkg.display.widgets.objs.helpmenu := [=];
help::pkg.display.widgets.objs.helpmenu.m := [=];
help::pkg.display.widgets.objs.helpmenu.c := [=];
help::pkg.display.widgets.objs.helpmenu.d := 'Tk widget for a Help menu with the standard AIPS++\ help items.';
help::pkg.display.widgets.objs.helpmenu.c.helpmenu := [=];
help::pkg.display.widgets.objs.helpmenu.c.helpmenu.d := 'Construct a ``Help   menu';
help::pkg.display.widgets.objs.helpmenu.c.helpmenu.a.parent := [=];
help::pkg.display.widgets.objs.helpmenu.c.helpmenu.a.parent.d := 'Parent of the menu';
help::pkg.display.widgets.objs.helpmenu.c.helpmenu.a.parent.def := '';
help::pkg.display.widgets.objs.helpmenu.c.helpmenu.a.parent.a := 'Tk frame';
help::pkg.display.widgets.objs.helpmenu.c.helpmenu.a.menuitems := [=];
help::pkg.display.widgets.objs.helpmenu.c.helpmenu.a.menuitems.d := 'User defined help items';
help::pkg.display.widgets.objs.helpmenu.c.helpmenu.a.menuitems.def := 'unset';
help::pkg.display.widgets.objs.helpmenu.c.helpmenu.a.menuitems.a := 'string vector';
help::pkg.display.widgets.objs.helpmenu.c.helpmenu.a.refmanitems := [=];
help::pkg.display.widgets.objs.helpmenu.c.helpmenu.a.refmanitems.d := 'Reference manual locations for each menuitems';
help::pkg.display.widgets.objs.helpmenu.c.helpmenu.a.refmanitems.def := 'unset';
help::pkg.display.widgets.objs.helpmenu.c.helpmenu.a.refmanitems.a := 'string vector';
help::pkg.display.widgets.objs.helpmenu.c.helpmenu.a.callback := [=];
help::pkg.display.widgets.objs.helpmenu.c.helpmenu.a.callback.d := 'Callback function for non-reference manual menuitems';
help::pkg.display.widgets.objs.helpmenu.c.helpmenu.a.callback.def := 'unset';
help::pkg.display.widgets.objs.helpmenu.c.helpmenu.a.callback.a := 'function';
help::pkg.display.widgets.objs.helpmenu.c.helpmenu.a.helpitems := [=];
help::pkg.display.widgets.objs.helpmenu.c.helpmenu.a.helpitems.d := 'Additional popup help items';
help::pkg.display.widgets.objs.helpmenu.c.helpmenu.a.helpitems.def := 'unset';
help::pkg.display.widgets.objs.helpmenu.c.helpmenu.a.helpitems.a := 'string vector';
help::pkg.display.widgets.objs.helpmenu.c.helpmenu.a.widgetset := [=];
help::pkg.display.widgets.objs.helpmenu.c.helpmenu.a.widgetset.d := 'Widget set to use';
help::pkg.display.widgets.objs.helpmenu.c.helpmenu.a.widgetset.def := 'dws';
help::pkg.display.widgets.objs.helpmenu.c.helpmenu.a.widgetset.a := 'A widgetserver closure tool';
help::pkg.display.widgets.objs.helpmenu.c.helpmenu.s := 'helpmenu(parent, menuitems, refmanitems, callback, helpitems, widgetset)';
help::pkg.display.widgets.objs.helpmenu.m.reset := [=];
help::pkg.display.widgets.objs.helpmenu.m.reset.d := 'Reset the Help menu';
help::pkg.display.widgets.objs.helpmenu.m.reset.a.parent := [=];
help::pkg.display.widgets.objs.helpmenu.m.reset.a.parent.d := 'Parent of the menu';
help::pkg.display.widgets.objs.helpmenu.m.reset.a.parent.def := '';
help::pkg.display.widgets.objs.helpmenu.m.reset.a.parent.a := 'Tk frame';
help::pkg.display.widgets.objs.helpmenu.m.reset.a.menuitems := [=];
help::pkg.display.widgets.objs.helpmenu.m.reset.a.menuitems.d := 'User defined help items';
help::pkg.display.widgets.objs.helpmenu.m.reset.a.menuitems.def := 'unset';
help::pkg.display.widgets.objs.helpmenu.m.reset.a.menuitems.a := 'string vector';
help::pkg.display.widgets.objs.helpmenu.m.reset.a.refmanitems := [=];
help::pkg.display.widgets.objs.helpmenu.m.reset.a.refmanitems.d := 'Reference manual locations for each menuitems';
help::pkg.display.widgets.objs.helpmenu.m.reset.a.refmanitems.def := 'unset';
help::pkg.display.widgets.objs.helpmenu.m.reset.a.refmanitems.a := 'string vector';
help::pkg.display.widgets.objs.helpmenu.m.reset.a.callback := [=];
help::pkg.display.widgets.objs.helpmenu.m.reset.a.callback.d := 'Callback function for non-reference manual menuitems';
help::pkg.display.widgets.objs.helpmenu.m.reset.a.callback.def := 'unset';
help::pkg.display.widgets.objs.helpmenu.m.reset.a.callback.a := 'function';
help::pkg.display.widgets.objs.helpmenu.m.reset.a.helpitems := [=];
help::pkg.display.widgets.objs.helpmenu.m.reset.a.helpitems.d := 'Additional popup help text';
help::pkg.display.widgets.objs.helpmenu.m.reset.a.helpitems.def := 'unset';
help::pkg.display.widgets.objs.helpmenu.m.reset.a.helpitems.a := 'string vector';
help::pkg.display.widgets.objs.helpmenu.m.reset.a.widgetset := [=];
help::pkg.display.widgets.objs.helpmenu.m.reset.a.widgetset.d := 'Widget set to use';
help::pkg.display.widgets.objs.helpmenu.m.reset.a.widgetset.def := 'dws';
help::pkg.display.widgets.objs.helpmenu.m.reset.a.widgetset.a := 'A widgetserver closure tool';
help::pkg.display.widgets.objs.helpmenu.m.reset.s := 'reset(parent, menuitems, refmanitems, callback, helpitems, widgetset)';
help::pkg.display.widgets.objs.helpmenu.m.done := [=];
help::pkg.display.widgets.objs.helpmenu.m.done.d := 'Destroy the Help menu';
help::pkg.display.widgets.objs.helpmenu.m.done.s := 'done()';
help::pkg.display.widgets.objs.histogramgui := [=];
help::pkg.display.widgets.objs.histogramgui.m := [=];
help::pkg.display.widgets.objs.histogramgui.c := [=];
help::pkg.display.widgets.objs.histogramgui.d := 'Window to display a histogram and allow selection of data min and max.';
help::pkg.display.widgets.objs.histogramgui.c.histogramgui := [=];
help::pkg.display.widgets.objs.histogramgui.c.histogramgui.d := 'Construct a histogramgui';
help::pkg.display.widgets.objs.histogramgui.c.histogramgui.a.xmin := [=];
help::pkg.display.widgets.objs.histogramgui.c.histogramgui.a.xmin.d := 'Start of selection to begin with';
help::pkg.display.widgets.objs.histogramgui.c.histogramgui.a.xmin.def := '0';
help::pkg.display.widgets.objs.histogramgui.c.histogramgui.a.xmin.a := 'Number';
help::pkg.display.widgets.objs.histogramgui.c.histogramgui.a.xmax := [=];
help::pkg.display.widgets.objs.histogramgui.c.histogramgui.a.xmax.d := 'End of selection to begin with';
help::pkg.display.widgets.objs.histogramgui.c.histogramgui.a.xmax.def := '1';
help::pkg.display.widgets.objs.histogramgui.c.histogramgui.a.xmax.a := 'Number';
help::pkg.display.widgets.objs.histogramgui.c.histogramgui.a.array := [=];
help::pkg.display.widgets.objs.histogramgui.c.histogramgui.a.array.d := 'Record containing array to plot';
help::pkg.display.widgets.objs.histogramgui.c.histogramgui.a.array.def := 'unset';
help::pkg.display.widgets.objs.histogramgui.c.histogramgui.a.array.a := 'Record  containing .values and .counts';
help::pkg.display.widgets.objs.histogramgui.c.histogramgui.a.units := [=];
help::pkg.display.widgets.objs.histogramgui.c.histogramgui.a.units.d := 'Units to use on labels';
help::pkg.display.widgets.objs.histogramgui.c.histogramgui.a.units.def := '\' unknown\' ';
help::pkg.display.widgets.objs.histogramgui.c.histogramgui.a.units.a := 'String';
help::pkg.display.widgets.objs.histogramgui.c.histogramgui.a.widgetset := [=];
help::pkg.display.widgets.objs.histogramgui.c.histogramgui.a.widgetset.d := 'Widgetset to use';
help::pkg.display.widgets.objs.histogramgui.c.histogramgui.a.widgetset.def := 'dws';
help::pkg.display.widgets.objs.histogramgui.c.histogramgui.a.widgetset.a := 'Widgetset';
help::pkg.display.widgets.objs.histogramgui.c.histogramgui.s := 'histogramgui(xmin, xmax, array, units, widgetset)';
help::pkg.display.widgets.objs.histogramgui.m.gui := [=];
help::pkg.display.widgets.objs.histogramgui.m.gui.d := 'Build the GUI';
help::pkg.display.widgets.objs.histogramgui.m.gui.s := 'gui()';
help::pkg.display.widgets.objs.histogramgui.m.newdata := [=];
help::pkg.display.widgets.objs.histogramgui.m.newdata.d := 'Supply the widget with new data to use to plot the histogram.';
help::pkg.display.widgets.objs.histogramgui.m.newdata.a.array := [=];
help::pkg.display.widgets.objs.histogramgui.m.newdata.a.array.d := 'Record containing histogram data ( .values and .counts )';
help::pkg.display.widgets.objs.histogramgui.m.newdata.a.array.def := 'unset';
help::pkg.display.widgets.objs.histogramgui.m.newdata.a.array.a := 'Record';
help::pkg.display.widgets.objs.histogramgui.m.newdata.a.xmin := [=];
help::pkg.display.widgets.objs.histogramgui.m.newdata.a.xmin.d := 'New start of selection (min)';
help::pkg.display.widgets.objs.histogramgui.m.newdata.a.xmin.def := '';
help::pkg.display.widgets.objs.histogramgui.m.newdata.a.xmin.a := 'Number';
help::pkg.display.widgets.objs.histogramgui.m.newdata.a.xmax := [=];
help::pkg.display.widgets.objs.histogramgui.m.newdata.a.xmax.d := 'New end of selection (max)';
help::pkg.display.widgets.objs.histogramgui.m.newdata.a.xmax.def := '';
help::pkg.display.widgets.objs.histogramgui.m.newdata.a.xmax.a := 'Number';
help::pkg.display.widgets.objs.histogramgui.m.newdata.s := 'newdata(array, xmin, xmax)';
help::pkg.display.widgets.objs.histogramgui.m.setstats := [=];
help::pkg.display.widgets.objs.histogramgui.m.setstats.d := 'Set new image statistics';
help::pkg.display.widgets.objs.histogramgui.m.setstats.a.mean := [=];
help::pkg.display.widgets.objs.histogramgui.m.setstats.a.mean.d := 'Mean data value';
help::pkg.display.widgets.objs.histogramgui.m.setstats.a.mean.def := 'F';
help::pkg.display.widgets.objs.histogramgui.m.setstats.a.mean.a := 'Number';
help::pkg.display.widgets.objs.histogramgui.m.setstats.a.median := [=];
help::pkg.display.widgets.objs.histogramgui.m.setstats.a.median.d := 'Median data value';
help::pkg.display.widgets.objs.histogramgui.m.setstats.a.median.def := 'F';
help::pkg.display.widgets.objs.histogramgui.m.setstats.a.median.a := 'Number';
help::pkg.display.widgets.objs.histogramgui.m.setstats.a.stddev := [=];
help::pkg.display.widgets.objs.histogramgui.m.setstats.a.stddev.d := 'Standard deviation of data';
help::pkg.display.widgets.objs.histogramgui.m.setstats.a.stddev.def := 'F';
help::pkg.display.widgets.objs.histogramgui.m.setstats.a.stddev.a := 'Number';
help::pkg.display.widgets.objs.histogramgui.m.setstats.s := 'setstats(mean, median, stddev)';
help::pkg.display.widgets.objs.histogramgui.m.setselection := [=];
help::pkg.display.widgets.objs.histogramgui.m.setselection.d := 'Set a new selection to be shown on the histogram.';
help::pkg.display.widgets.objs.histogramgui.m.setselection.a.sel := [=];
help::pkg.display.widgets.objs.histogramgui.m.setselection.a.sel.d := 'New selection';
help::pkg.display.widgets.objs.histogramgui.m.setselection.a.sel.def := '';
help::pkg.display.widgets.objs.histogramgui.m.setselection.a.sel.a := 'Array';
help::pkg.display.widgets.objs.histogramgui.m.setselection.a.forcenosel := [=];
help::pkg.display.widgets.objs.histogramgui.m.setselection.a.forcenosel.d := 'Force the gui not to create or draw a selection';
help::pkg.display.widgets.objs.histogramgui.m.setselection.a.forcenosel.def := 'F';
help::pkg.display.widgets.objs.histogramgui.m.setselection.a.forcenosel.a := 'Boolean';
help::pkg.display.widgets.objs.histogramgui.m.setselection.a.forceselection := [=];
help::pkg.display.widgets.objs.histogramgui.m.setselection.a.forceselection.d := 'Force the gui to draw a selection';
help::pkg.display.widgets.objs.histogramgui.m.setselection.a.forceselection.def := 'F';
help::pkg.display.widgets.objs.histogramgui.m.setselection.a.forceselection.a := 'Boolean';
help::pkg.display.widgets.objs.histogramgui.m.setselection.s := 'setselection(sel, forcenosel, forceselection)';
help::pkg.display.widgets.objs.histogramgui.m.dismiss := [=];
help::pkg.display.widgets.objs.histogramgui.m.dismiss.d := 'Removes the GUI from screen.';
help::pkg.display.widgets.objs.histogramgui.m.dismiss.s := 'dismiss()';
help::pkg.display.widgets.objs.histogramgui.m.done := [=];
help::pkg.display.widgets.objs.histogramgui.m.done.d := 'Destroys the widget and disables all whenevers.';
help::pkg.display.widgets.objs.histogramgui.m.done.s := 'done()';
help::pkg.display.widgets.objs.histogramgui.m.disable := [=];
help::pkg.display.widgets.objs.histogramgui.m.disable.d := 'Not yet implemented.';
help::pkg.display.widgets.objs.histogramgui.m.disable.s := 'disable()';
help::pkg.display.widgets.objs.histogramgui.m.enable := [=];
help::pkg.display.widgets.objs.histogramgui.m.enable.d := 'Not yet implemented.';
help::pkg.display.widgets.objs.histogramgui.m.enable.s := 'enable()';
help::pkg.display.widgets.objs.listboxcontainer := [=];
help::pkg.display.widgets.objs.listboxcontainer.m := [=];
help::pkg.display.widgets.objs.listboxcontainer.c := [=];
help::pkg.display.widgets.objs.listboxcontainer.d := 'A scrolllistbox with an underlying itemcontainer.';
help::pkg.display.widgets.objs.listboxcontainer.c.listboxcontainer := [=];
help::pkg.display.widgets.objs.listboxcontainer.c.listboxcontainer.d := 'Construct a listboxcontainer';
help::pkg.display.widgets.objs.listboxcontainer.c.listboxcontainer.a.parent := [=];
help::pkg.display.widgets.objs.listboxcontainer.c.listboxcontainer.a.parent.d := 'Parent of the listboxcontainer';
help::pkg.display.widgets.objs.listboxcontainer.c.listboxcontainer.a.parent.def := '';
help::pkg.display.widgets.objs.listboxcontainer.c.listboxcontainer.a.parent.a := 'Tk frame';
help::pkg.display.widgets.objs.listboxcontainer.c.listboxcontainer.a.container := [=];
help::pkg.display.widgets.objs.listboxcontainer.c.listboxcontainer.a.container.d := 'Create from an itemcontainer';
help::pkg.display.widgets.objs.listboxcontainer.c.listboxcontainer.a.container.def := 'unset';
help::pkg.display.widgets.objs.listboxcontainer.c.listboxcontainer.a.container.a := 'itemcontainer';
help::pkg.display.widgets.objs.listboxcontainer.c.listboxcontainer.a.hscrollbar := [=];
help::pkg.display.widgets.objs.listboxcontainer.c.listboxcontainer.a.hscrollbar.d := 'Show a horizontal scrollbar?';
help::pkg.display.widgets.objs.listboxcontainer.c.listboxcontainer.a.hscrollbar.def := 'T';
help::pkg.display.widgets.objs.listboxcontainer.c.listboxcontainer.a.hscrollbar.a := 'Boolean';
help::pkg.display.widgets.objs.listboxcontainer.c.listboxcontainer.a.vscrollbar := [=];
help::pkg.display.widgets.objs.listboxcontainer.c.listboxcontainer.a.vscrollbar.d := 'Show a vertical scrollbar?';
help::pkg.display.widgets.objs.listboxcontainer.c.listboxcontainer.a.vscrollbar.def := 'T';
help::pkg.display.widgets.objs.listboxcontainer.c.listboxcontainer.a.vscrollbar.a := 'Boolean';
help::pkg.display.widgets.objs.listboxcontainer.c.listboxcontainer.a.vscrollbarright := [=];
help::pkg.display.widgets.objs.listboxcontainer.c.listboxcontainer.a.vscrollbarright.d := 'Show vertical scrollbar on right? (F=left)';
help::pkg.display.widgets.objs.listboxcontainer.c.listboxcontainer.a.vscrollbarright.def := 'T';
help::pkg.display.widgets.objs.listboxcontainer.c.listboxcontainer.a.vscrollbarright.a := 'Boolean';
help::pkg.display.widgets.objs.listboxcontainer.c.listboxcontainer.a.seeoninsert := [=];
help::pkg.display.widgets.objs.listboxcontainer.c.listboxcontainer.a.seeoninsert.d := 'See the end after each insert?';
help::pkg.display.widgets.objs.listboxcontainer.c.listboxcontainer.a.seeoninsert.def := 'T';
help::pkg.display.widgets.objs.listboxcontainer.c.listboxcontainer.a.seeoninsert.a := 'Boolean';
help::pkg.display.widgets.objs.listboxcontainer.c.listboxcontainer.a.width := [=];
help::pkg.display.widgets.objs.listboxcontainer.c.listboxcontainer.a.width.d := 'Width in characters units';
help::pkg.display.widgets.objs.listboxcontainer.c.listboxcontainer.a.width.def := '20';
help::pkg.display.widgets.objs.listboxcontainer.c.listboxcontainer.a.width.a := 'Integer';
help::pkg.display.widgets.objs.listboxcontainer.c.listboxcontainer.a.height := [=];
help::pkg.display.widgets.objs.listboxcontainer.c.listboxcontainer.a.height.d := 'Height in characters units';
help::pkg.display.widgets.objs.listboxcontainer.c.listboxcontainer.a.height.def := '6';
help::pkg.display.widgets.objs.listboxcontainer.c.listboxcontainer.a.height.a := 'Integer';
help::pkg.display.widgets.objs.listboxcontainer.c.listboxcontainer.a.mode := [=];
help::pkg.display.widgets.objs.listboxcontainer.c.listboxcontainer.a.mode.d := 'Listbox mode';
help::pkg.display.widgets.objs.listboxcontainer.c.listboxcontainer.a.mode.def := '`browse\' ';
help::pkg.display.widgets.objs.listboxcontainer.c.listboxcontainer.a.mode.a := 'String from `browse\' , `single\' , 						`extended\' , `multiple\' ';
help::pkg.display.widgets.objs.listboxcontainer.c.listboxcontainer.a.font := [=];
help::pkg.display.widgets.objs.listboxcontainer.c.listboxcontainer.a.font.d := 'Font of text ';
help::pkg.display.widgets.objs.listboxcontainer.c.listboxcontainer.a.font.def := '`\' ';
help::pkg.display.widgets.objs.listboxcontainer.c.listboxcontainer.a.font.a := 'X font';
help::pkg.display.widgets.objs.listboxcontainer.c.listboxcontainer.a.relief := [=];
help::pkg.display.widgets.objs.listboxcontainer.c.listboxcontainer.a.relief.d := 'Edge relief';
help::pkg.display.widgets.objs.listboxcontainer.c.listboxcontainer.a.relief.def := '`sunken\' ';
help::pkg.display.widgets.objs.listboxcontainer.c.listboxcontainer.a.relief.a := 'String from `flat\' , `ridge\' ,                                             `raised\' , `sunken\' , `groove\' ';
help::pkg.display.widgets.objs.listboxcontainer.c.listboxcontainer.a.borderwidth := [=];
help::pkg.display.widgets.objs.listboxcontainer.c.listboxcontainer.a.borderwidth.d := 'Border width';
help::pkg.display.widgets.objs.listboxcontainer.c.listboxcontainer.a.borderwidth.def := '2';
help::pkg.display.widgets.objs.listboxcontainer.c.listboxcontainer.a.borderwidth.a := 'Integer';
help::pkg.display.widgets.objs.listboxcontainer.c.listboxcontainer.a.foreground := [=];
help::pkg.display.widgets.objs.listboxcontainer.c.listboxcontainer.a.foreground.d := 'Color of text';
help::pkg.display.widgets.objs.listboxcontainer.c.listboxcontainer.a.foreground.def := '`black\' ';
help::pkg.display.widgets.objs.listboxcontainer.c.listboxcontainer.a.foreground.a := 'X color';
help::pkg.display.widgets.objs.listboxcontainer.c.listboxcontainer.a.background := [=];
help::pkg.display.widgets.objs.listboxcontainer.c.listboxcontainer.a.background.d := 'Background color';
help::pkg.display.widgets.objs.listboxcontainer.c.listboxcontainer.a.background.def := '`lightgrey\' ';
help::pkg.display.widgets.objs.listboxcontainer.c.listboxcontainer.a.background.a := 'X color';
help::pkg.display.widgets.objs.listboxcontainer.c.listboxcontainer.a.exportselection := [=];
help::pkg.display.widgets.objs.listboxcontainer.c.listboxcontainer.a.exportselection.d := 'export to X clipboard?';
help::pkg.display.widgets.objs.listboxcontainer.c.listboxcontainer.a.exportselection.def := 'F';
help::pkg.display.widgets.objs.listboxcontainer.c.listboxcontainer.a.exportselection.a := 'Boolean';
help::pkg.display.widgets.objs.listboxcontainer.c.listboxcontainer.a.fill := [=];
help::pkg.display.widgets.objs.listboxcontainer.c.listboxcontainer.a.fill.d := 'how to expand when resized';
help::pkg.display.widgets.objs.listboxcontainer.c.listboxcontainer.a.fill.def := '`both\' ';
help::pkg.display.widgets.objs.listboxcontainer.c.listboxcontainer.a.fill.a := 'String from `x\' , `y\' , 							`both\' , `none\' ';
help::pkg.display.widgets.objs.listboxcontainer.c.listboxcontainer.a.widgetset := [=];
help::pkg.display.widgets.objs.listboxcontainer.c.listboxcontainer.a.widgetset.d := 'Widget set to use';
help::pkg.display.widgets.objs.listboxcontainer.c.listboxcontainer.a.widgetset.def := 'dws';
help::pkg.display.widgets.objs.listboxcontainer.c.listboxcontainer.a.widgetset.a := 'A widgetserver closure tool';
help::pkg.display.widgets.objs.listboxcontainer.c.listboxcontainer.s := 'listboxcontainer(parent, container, hscrollbar, vscrollbar, vscrollbarright, seeoninsert, width, height, mode, font, relief, borderwidth, foreground, background, exportselection, fill, widgetset)';
help::pkg.display.widgets.objs.listboxcontainer.m.done := [=];
help::pkg.display.widgets.objs.listboxcontainer.m.done.d := 'Destroy ourselves';
help::pkg.display.widgets.objs.listboxcontainer.m.done.s := 'done()';
help::pkg.display.widgets.objs.listboxcontainer.m.hscrollbar := [=];
help::pkg.display.widgets.objs.listboxcontainer.m.hscrollbar.d := '(EVENT) Turn on or off the horizontal scrollbar';
help::pkg.display.widgets.objs.listboxcontainer.m.hscrollbar.a.torf := [=];
help::pkg.display.widgets.objs.listboxcontainer.m.hscrollbar.a.torf.d := 'Show a horizontal scrollbar?';
help::pkg.display.widgets.objs.listboxcontainer.m.hscrollbar.a.torf.def := '';
help::pkg.display.widgets.objs.listboxcontainer.m.hscrollbar.a.torf.a := 'Boolean';
help::pkg.display.widgets.objs.listboxcontainer.m.hscrollbar.s := 'hscrollbar(torf)';
help::pkg.display.widgets.objs.listboxcontainer.m.vscrollbar := [=];
help::pkg.display.widgets.objs.listboxcontainer.m.vscrollbar.d := '(EVENT) Turn on or off the vertical scrollbar';
help::pkg.display.widgets.objs.listboxcontainer.m.vscrollbar.a.torf := [=];
help::pkg.display.widgets.objs.listboxcontainer.m.vscrollbar.a.torf.d := 'Show a vertical scrollbar?';
help::pkg.display.widgets.objs.listboxcontainer.m.vscrollbar.a.torf.def := '';
help::pkg.display.widgets.objs.listboxcontainer.m.vscrollbar.a.torf.a := 'Boolean';
help::pkg.display.widgets.objs.listboxcontainer.m.vscrollbar.s := 'vscrollbar(torf)';
help::pkg.display.widgets.objs.listboxcontainer.m.seeoninsert := [=];
help::pkg.display.widgets.objs.listboxcontainer.m.seeoninsert.d := '(EVENT) See the end after each insert?';
help::pkg.display.widgets.objs.listboxcontainer.m.seeoninsert.a.torf := [=];
help::pkg.display.widgets.objs.listboxcontainer.m.seeoninsert.a.torf.d := 'See the end after each insert?';
help::pkg.display.widgets.objs.listboxcontainer.m.seeoninsert.a.torf.def := '';
help::pkg.display.widgets.objs.listboxcontainer.m.seeoninsert.a.torf.a := 'Boolean';
help::pkg.display.widgets.objs.listboxcontainer.m.seeoninsert.s := 'seeoninsert(torf)';
help::pkg.display.widgets.objs.listboxcontainer.m.fromforeign := [=];
help::pkg.display.widgets.objs.listboxcontainer.m.fromforeign.d := 'insert items from container or record';
help::pkg.display.widgets.objs.listboxcontainer.m.fromforeign.a.container := [=];
help::pkg.display.widgets.objs.listboxcontainer.m.fromforeign.a.container.d := 'Itemcontainer or record to put into listboxcontainer';
help::pkg.display.widgets.objs.listboxcontainer.m.fromforeign.a.container.def := '';
help::pkg.display.widgets.objs.listboxcontainer.m.fromforeign.a.container.a := 'itemcontainer or record';
help::pkg.display.widgets.objs.listboxcontainer.m.fromforeign.s := 'fromforeign(container)';
help::pkg.display.widgets.objs.listboxcontainer.m.hasitem := [=];
help::pkg.display.widgets.objs.listboxcontainer.m.hasitem.d := 'check if item is present in listboxcontainer';
help::pkg.display.widgets.objs.listboxcontainer.m.hasitem.a.item := [=];
help::pkg.display.widgets.objs.listboxcontainer.m.hasitem.a.item.d := 'Item to be checked if present';
help::pkg.display.widgets.objs.listboxcontainer.m.hasitem.a.item.def := '';
help::pkg.display.widgets.objs.listboxcontainer.m.hasitem.a.item.a := 'string';
help::pkg.display.widgets.objs.listboxcontainer.m.hasitem.s := 'hasitem(item)';
help::pkg.display.widgets.objs.listboxcontainer.m.itemnames := [=];
help::pkg.display.widgets.objs.listboxcontainer.m.itemnames.d := 'Get the names of all items.';
help::pkg.display.widgets.objs.listboxcontainer.m.itemnames.s := 'itemnames()';
help::pkg.display.widgets.objs.listboxcontainer.m.clear := [=];
help::pkg.display.widgets.objs.listboxcontainer.m.clear.d := '(EVENT) clear selections';
help::pkg.display.widgets.objs.listboxcontainer.m.clear.a.namesorindices := [=];
help::pkg.display.widgets.objs.listboxcontainer.m.clear.a.namesorindices.d := 'names or indices or ``all\' \' ';
help::pkg.display.widgets.objs.listboxcontainer.m.clear.a.namesorindices.def := '';
help::pkg.display.widgets.objs.listboxcontainer.m.clear.a.namesorindices.a := 'vector of strings or integers';
help::pkg.display.widgets.objs.listboxcontainer.m.clear.s := 'clear(namesorindices)';
help::pkg.display.widgets.objs.listboxcontainer.m.delete := [=];
help::pkg.display.widgets.objs.listboxcontainer.m.delete.d := '(EVENT) delete a name-value pair';
help::pkg.display.widgets.objs.listboxcontainer.m.delete.a.namesorindices := [=];
help::pkg.display.widgets.objs.listboxcontainer.m.delete.a.namesorindices.d := 'names or indices';
help::pkg.display.widgets.objs.listboxcontainer.m.delete.a.namesorindices.def := '';
help::pkg.display.widgets.objs.listboxcontainer.m.delete.a.namesorindices.a := 'vector of strings or integers';
help::pkg.display.widgets.objs.listboxcontainer.m.delete.s := 'delete(namesorindices)';
help::pkg.display.widgets.objs.listboxcontainer.m.get := [=];
help::pkg.display.widgets.objs.listboxcontainer.m.get.d := '(EVENT) return the value of the item specified';
help::pkg.display.widgets.objs.listboxcontainer.m.get.a.nameorindex := [=];
help::pkg.display.widgets.objs.listboxcontainer.m.get.a.nameorindex.d := 'name or index';
help::pkg.display.widgets.objs.listboxcontainer.m.get.a.nameorindex.def := '';
help::pkg.display.widgets.objs.listboxcontainer.m.get.a.nameorindex.a := 'string or integer';
help::pkg.display.widgets.objs.listboxcontainer.m.get.s := 'get(nameorindex)';
help::pkg.display.widgets.objs.listboxcontainer.m.insert := [=];
help::pkg.display.widgets.objs.listboxcontainer.m.insert.d := '(EVENT) Insert a name-value pair or record elements, or overwrite values of existing pairs';
help::pkg.display.widgets.objs.listboxcontainer.m.insert.a.stringorrecord := [=];
help::pkg.display.widgets.objs.listboxcontainer.m.insert.a.stringorrecord.d := '';
help::pkg.display.widgets.objs.listboxcontainer.m.insert.a.stringorrecord.def := '';
help::pkg.display.widgets.objs.listboxcontainer.m.insert.a.stringorrecord.a := 'string or record';
help::pkg.display.widgets.objs.listboxcontainer.m.insert.a.noname := [=];
help::pkg.display.widgets.objs.listboxcontainer.m.insert.a.noname.d := 'only if first argument is string';
help::pkg.display.widgets.objs.listboxcontainer.m.insert.a.noname.def := '';
help::pkg.display.widgets.objs.listboxcontainer.m.insert.a.noname.a := 'any';
help::pkg.display.widgets.objs.listboxcontainer.m.insert.s := 'insert(stringorrecord, )';
help::pkg.display.widgets.objs.listboxcontainer.m.see := [=];
help::pkg.display.widgets.objs.listboxcontainer.m.see.d := '(EVENT) scroll to the specified item';
help::pkg.display.widgets.objs.listboxcontainer.m.see.a.nameorindex := [=];
help::pkg.display.widgets.objs.listboxcontainer.m.see.a.nameorindex.d := 'name or index';
help::pkg.display.widgets.objs.listboxcontainer.m.see.a.nameorindex.def := '';
help::pkg.display.widgets.objs.listboxcontainer.m.see.a.nameorindex.a := 'string or integer';
help::pkg.display.widgets.objs.listboxcontainer.m.see.s := 'see(nameorindex)';
help::pkg.display.widgets.objs.listboxcontainer.m.select := [=];
help::pkg.display.widgets.objs.listboxcontainer.m.select.d := '(EVENT) make selection';
help::pkg.display.widgets.objs.listboxcontainer.m.select.a.namesorindices := [=];
help::pkg.display.widgets.objs.listboxcontainer.m.select.a.namesorindices.d := 'names or indices';
help::pkg.display.widgets.objs.listboxcontainer.m.select.a.namesorindices.def := '';
help::pkg.display.widgets.objs.listboxcontainer.m.select.a.namesorindices.a := 'vector of strings or integers';
help::pkg.display.widgets.objs.listboxcontainer.m.select.s := 'select(namesorindices)';
help::pkg.display.widgets.objs.listboxcontainer.m.selection := [=];
help::pkg.display.widgets.objs.listboxcontainer.m.selection.d := '(EVENT) return a record of items selected';
help::pkg.display.widgets.objs.listboxcontainer.m.selection.s := 'selection()';
help::pkg.display.widgets.objs.multiautogui := [=];
help::pkg.display.widgets.objs.multiautogui.m := [=];
help::pkg.display.widgets.objs.multiautogui.c := [=];
help::pkg.display.widgets.objs.multiautogui.d := 'Tool to manage a number of autoguis';
help::pkg.display.widgets.objs.multiautogui.c.multiautogui := [=];
help::pkg.display.widgets.objs.multiautogui.c.multiautogui.d := 'Create a multiautogui \tool';
help::pkg.display.widgets.objs.multiautogui.c.multiautogui.a.params := [=];
help::pkg.display.widgets.objs.multiautogui.c.multiautogui.a.params.d := 'Record to define multiple autoguis';
help::pkg.display.widgets.objs.multiautogui.c.multiautogui.a.params.def := '';
help::pkg.display.widgets.objs.multiautogui.c.multiautogui.a.params.a := 'Record';
help::pkg.display.widgets.objs.multiautogui.c.multiautogui.a.title := [=];
help::pkg.display.widgets.objs.multiautogui.c.multiautogui.a.title.d := 'title string if top-level frame constructed internally';
help::pkg.display.widgets.objs.multiautogui.c.multiautogui.a.title.def := '\' autogui\' ';
help::pkg.display.widgets.objs.multiautogui.c.multiautogui.a.title.a := 'String';
help::pkg.display.widgets.objs.multiautogui.c.multiautogui.a.toplevel := [=];
help::pkg.display.widgets.objs.multiautogui.c.multiautogui.a.toplevel.d := 'top-level parent frame';
help::pkg.display.widgets.objs.multiautogui.c.multiautogui.a.toplevel.def := 'F';
help::pkg.display.widgets.objs.multiautogui.c.multiautogui.a.toplevel.a := 'frame or boolean';
help::pkg.display.widgets.objs.multiautogui.c.multiautogui.a.actionlabel := [=];
help::pkg.display.widgets.objs.multiautogui.c.multiautogui.a.actionlabel.d := 'label for action button (passed to each   autogui) TODO: It would be nice to have a common ``action\' \'  button';
help::pkg.display.widgets.objs.multiautogui.c.multiautogui.a.actionlabel.def := 'F';
help::pkg.display.widgets.objs.multiautogui.c.multiautogui.a.actionlabel.a := 'string or boolean';
help::pkg.display.widgets.objs.multiautogui.c.multiautogui.a.autoapply := [=];
help::pkg.display.widgets.objs.multiautogui.c.multiautogui.a.autoapply.d := 'Show auto-apply buttons';
help::pkg.display.widgets.objs.multiautogui.c.multiautogui.a.autoapply.def := 'T';
help::pkg.display.widgets.objs.multiautogui.c.multiautogui.a.autoapply.a := 'boolean';
help::pkg.display.widgets.objs.multiautogui.c.multiautogui.a.expand := [=];
help::pkg.display.widgets.objs.multiautogui.c.multiautogui.a.expand.d := 'Expand policy';
help::pkg.display.widgets.objs.multiautogui.c.multiautogui.a.expand.def := '\' none\' ';
help::pkg.display.widgets.objs.multiautogui.c.multiautogui.a.expand.a := '\' x\' |\' y\' |\' both\' |\' none\' ';
help::pkg.display.widgets.objs.multiautogui.c.multiautogui.a.widgetset := [=];
help::pkg.display.widgets.objs.multiautogui.c.multiautogui.a.widgetset.d := 'widgetserver \tool\ to use to build the GUI';
help::pkg.display.widgets.objs.multiautogui.c.multiautogui.a.widgetset.def := 'dws';
help::pkg.display.widgets.objs.multiautogui.c.multiautogui.a.widgetset.a := 'widgetserver \tool';
help::pkg.display.widgets.objs.multiautogui.c.multiautogui.s := 'multiautogui(params, title, toplevel, actionlabel, autoapply, expand, widgetset)';
help::pkg.display.widgets.objs.multiautogui.m.shownone := [=];
help::pkg.display.widgets.objs.multiautogui.m.shownone.d := 'Show no autoguis in the frame (unmap all)';
help::pkg.display.widgets.objs.multiautogui.m.shownone.s := 'shownone()';
help::pkg.display.widgets.objs.multiautogui.m.show := [=];
help::pkg.display.widgets.objs.multiautogui.m.show.d := 'Read the GUI and return the current settings';
help::pkg.display.widgets.objs.multiautogui.m.show.a.which := [=];
help::pkg.display.widgets.objs.multiautogui.m.show.a.which.d := 'which autogui to show';
help::pkg.display.widgets.objs.multiautogui.m.show.a.which.def := '';
help::pkg.display.widgets.objs.multiautogui.m.show.a.which.a := 'String - name of a created autogui';
help::pkg.display.widgets.objs.multiautogui.m.show.s := 'show(which)';
help::pkg.display.widgets.objs.multiautogui.m.fillgui := [=];
help::pkg.display.widgets.objs.multiautogui.m.fillgui.d := 'Fill one or all of the autoguis';
help::pkg.display.widgets.objs.multiautogui.m.fillgui.a.options := [=];
help::pkg.display.widgets.objs.multiautogui.m.fillgui.a.options.d := 'options to fill autgui(s)';
help::pkg.display.widgets.objs.multiautogui.m.fillgui.a.options.def := '';
help::pkg.display.widgets.objs.multiautogui.m.fillgui.a.options.a := 'Record to use to fill autogui(s)';
help::pkg.display.widgets.objs.multiautogui.m.fillgui.s := 'fillgui(options)';
help::pkg.display.widgets.objs.multiautogui.m.addautogui := [=];
help::pkg.display.widgets.objs.multiautogui.m.addautogui.d := 'Add another autogui to the widget';
help::pkg.display.widgets.objs.multiautogui.m.addautogui.a.name := [=];
help::pkg.display.widgets.objs.multiautogui.m.addautogui.a.name.d := 'name of the new autogui';
help::pkg.display.widgets.objs.multiautogui.m.addautogui.a.name.def := '';
help::pkg.display.widgets.objs.multiautogui.m.addautogui.a.name.a := 'String';
help::pkg.display.widgets.objs.multiautogui.m.addautogui.a.params := [=];
help::pkg.display.widgets.objs.multiautogui.m.addautogui.a.params.d := 'parameter to fill autogui';
help::pkg.display.widgets.objs.multiautogui.m.addautogui.a.params.def := '';
help::pkg.display.widgets.objs.multiautogui.m.addautogui.a.params.a := 'Record with autogui information';
help::pkg.display.widgets.objs.multiautogui.m.addautogui.s := 'addautogui(name, params)';
help::pkg.display.widgets.objs.multiautogui.m.multiautoguitest := [=];
help::pkg.display.widgets.objs.multiautogui.m.multiautoguitest.d := 'Test the multiautogui';
help::pkg.display.widgets.objs.multiautogui.m.multiautoguitest.s := 'multiautoguitest()';
help::pkg.display.widgets.objs.multiscale := [=];
help::pkg.display.widgets.objs.multiscale.m := [=];
help::pkg.display.widgets.objs.multiscale.c := [=];
help::pkg.display.widgets.objs.multiscale.d := 'Glish/Tk widget to specify multiple values in a single domain';
help::pkg.display.widgets.objs.multiscale.c.multiscale := [=];
help::pkg.display.widgets.objs.multiscale.c.multiscale.d := 'Construct a multiscale';
help::pkg.display.widgets.objs.multiscale.c.multiscale.a.parent := [=];
help::pkg.display.widgets.objs.multiscale.c.multiscale.a.parent.d := 'Parent of the label';
help::pkg.display.widgets.objs.multiscale.c.multiscale.a.parent.def := '';
help::pkg.display.widgets.objs.multiscale.c.multiscale.a.parent.a := 'Tk frame';
help::pkg.display.widgets.objs.multiscale.c.multiscale.a.start := [=];
help::pkg.display.widgets.objs.multiscale.c.multiscale.a.start.d := 'Lower limit of range';
help::pkg.display.widgets.objs.multiscale.c.multiscale.a.start.def := '0.0';
help::pkg.display.widgets.objs.multiscale.c.multiscale.a.start.a := 'float';
help::pkg.display.widgets.objs.multiscale.c.multiscale.a.end := [=];
help::pkg.display.widgets.objs.multiscale.c.multiscale.a.end.d := 'Upper limit of range';
help::pkg.display.widgets.objs.multiscale.c.multiscale.a.end.def := '100.0';
help::pkg.display.widgets.objs.multiscale.c.multiscale.a.end.a := 'float';
help::pkg.display.widgets.objs.multiscale.c.multiscale.a.values := [=];
help::pkg.display.widgets.objs.multiscale.c.multiscale.a.values.d := 'initial values';
help::pkg.display.widgets.objs.multiscale.c.multiscale.a.values.def := '[0.0, 100.0]';
help::pkg.display.widgets.objs.multiscale.c.multiscale.a.values.a := 'vector of floats';
help::pkg.display.widgets.objs.multiscale.c.multiscale.a.names := [=];
help::pkg.display.widgets.objs.multiscale.c.multiscale.a.names.d := 'text labels for each scale';
help::pkg.display.widgets.objs.multiscale.c.multiscale.a.names.def := '[\' Minimum\' , \' Maximum\' ]';
help::pkg.display.widgets.objs.multiscale.c.multiscale.a.names.a := 'vector of strings';
help::pkg.display.widgets.objs.multiscale.c.multiscale.a.helps := [=];
help::pkg.display.widgets.objs.multiscale.c.multiscale.a.helps.d := 'popup help text for each label';
help::pkg.display.widgets.objs.multiscale.c.multiscale.a.helps.def := '""';
help::pkg.display.widgets.objs.multiscale.c.multiscale.a.helps.a := 'vector of strings';
help::pkg.display.widgets.objs.multiscale.c.multiscale.a.constrain := [=];
help::pkg.display.widgets.objs.multiscale.c.multiscale.a.constrain.d := 'whether to enforce ordering of numbers';
help::pkg.display.widgets.objs.multiscale.c.multiscale.a.constrain.def := 'T';
help::pkg.display.widgets.objs.multiscale.c.multiscale.a.constrain.a := 'T F';
help::pkg.display.widgets.objs.multiscale.c.multiscale.a.entry := [=];
help::pkg.display.widgets.objs.multiscale.c.multiscale.a.entry.d := 'provide an entry box as well';
help::pkg.display.widgets.objs.multiscale.c.multiscale.a.entry.def := 'F';
help::pkg.display.widgets.objs.multiscale.c.multiscale.a.entry.a := 'T F';
help::pkg.display.widgets.objs.multiscale.c.multiscale.a.extend := [=];
help::pkg.display.widgets.objs.multiscale.c.multiscale.a.extend.d := 'extend the scale if entered value beyond current extrema';
help::pkg.display.widgets.objs.multiscale.c.multiscale.a.extend.def := 'F';
help::pkg.display.widgets.objs.multiscale.c.multiscale.a.extend.a := 'T F';
help::pkg.display.widgets.objs.multiscale.c.multiscale.a.length := [=];
help::pkg.display.widgets.objs.multiscale.c.multiscale.a.length.d := 'length of the scale widgets';
help::pkg.display.widgets.objs.multiscale.c.multiscale.a.length.def := '110';
help::pkg.display.widgets.objs.multiscale.c.multiscale.a.length.a := 'dimension';
help::pkg.display.widgets.objs.multiscale.c.multiscale.a.resolution := [=];
help::pkg.display.widgets.objs.multiscale.c.multiscale.a.resolution.d := 'step value along scales';
help::pkg.display.widgets.objs.multiscale.c.multiscale.a.resolution.def := '1.0';
help::pkg.display.widgets.objs.multiscale.c.multiscale.a.resolution.a := 'float';
help::pkg.display.widgets.objs.multiscale.c.multiscale.a.orient := [=];
help::pkg.display.widgets.objs.multiscale.c.multiscale.a.orient.d := 'orientation of scale';
help::pkg.display.widgets.objs.multiscale.c.multiscale.a.orient.def := '\' horizontal\' ';
help::pkg.display.widgets.objs.multiscale.c.multiscale.a.orient.a := '\' horizontal\'  	\' vertical\' ';
help::pkg.display.widgets.objs.multiscale.c.multiscale.a.width := [=];
help::pkg.display.widgets.objs.multiscale.c.multiscale.a.width.d := 'transverse width of the scales';
help::pkg.display.widgets.objs.multiscale.c.multiscale.a.width.def := '15';
help::pkg.display.widgets.objs.multiscale.c.multiscale.a.width.a := 'dimension';
help::pkg.display.widgets.objs.multiscale.c.multiscale.a.font := [=];
help::pkg.display.widgets.objs.multiscale.c.multiscale.a.font.d := 'text font';
help::pkg.display.widgets.objs.multiscale.c.multiscale.a.font.def := '\' \' ';
help::pkg.display.widgets.objs.multiscale.c.multiscale.a.font.a := 'X font';
help::pkg.display.widgets.objs.multiscale.c.multiscale.a.relief := [=];
help::pkg.display.widgets.objs.multiscale.c.multiscale.a.relief.d := 'border relief';
help::pkg.display.widgets.objs.multiscale.c.multiscale.a.relief.def := '\' flat\' ';
help::pkg.display.widgets.objs.multiscale.c.multiscale.a.relief.a := '`flat\'  `ridge\' ,                                             `raised\'  `sunken\'  `groove\' ';
help::pkg.display.widgets.objs.multiscale.c.multiscale.a.borderwidth := [=];
help::pkg.display.widgets.objs.multiscale.c.multiscale.a.borderwidth.d := 'border width';
help::pkg.display.widgets.objs.multiscale.c.multiscale.a.borderwidth.def := '2';
help::pkg.display.widgets.objs.multiscale.c.multiscale.a.borderwidth.a := 'dimension';
help::pkg.display.widgets.objs.multiscale.c.multiscale.a.foreground := [=];
help::pkg.display.widgets.objs.multiscale.c.multiscale.a.foreground.d := 'color of text';
help::pkg.display.widgets.objs.multiscale.c.multiscale.a.foreground.def := '`black\' ';
help::pkg.display.widgets.objs.multiscale.c.multiscale.a.foreground.a := 'X color';
help::pkg.display.widgets.objs.multiscale.c.multiscale.a.background := [=];
help::pkg.display.widgets.objs.multiscale.c.multiscale.a.background.d := 'background color';
help::pkg.display.widgets.objs.multiscale.c.multiscale.a.background.def := '`lightgrey\' ';
help::pkg.display.widgets.objs.multiscale.c.multiscale.a.background.a := 'X color';
help::pkg.display.widgets.objs.multiscale.c.multiscale.a.fill := [=];
help::pkg.display.widgets.objs.multiscale.c.multiscale.a.fill.d := 'how to expand when resized';
help::pkg.display.widgets.objs.multiscale.c.multiscale.a.fill.def := '\' none\' ';
help::pkg.display.widgets.objs.multiscale.c.multiscale.a.fill.a := '\' x\'  \' y\'  \' both\'  \' none';
help::pkg.display.widgets.objs.multiscale.c.multiscale.a.widgetset := [=];
help::pkg.display.widgets.objs.multiscale.c.multiscale.a.widgetset.d := 'widgetserver to use to make label';
help::pkg.display.widgets.objs.multiscale.c.multiscale.a.widgetset.def := 'dws';
help::pkg.display.widgets.objs.multiscale.c.multiscale.a.widgetset.a := 'widgetserver toolXS';
help::pkg.display.widgets.objs.multiscale.c.multiscale.s := 'multiscale(parent, start, end, values, names, helps, constrain, entry, extend, length, resolution, orient, width, font, relief, borderwidth, foreground, background, fill, widgetset)';
help::pkg.display.widgets.objs.multiscale.m.disable := [=];
help::pkg.display.widgets.objs.multiscale.m.disable.d := 'Disable widget';
help::pkg.display.widgets.objs.multiscale.m.disable.s := 'disable()';
help::pkg.display.widgets.objs.multiscale.m.enable := [=];
help::pkg.display.widgets.objs.multiscale.m.enable.d := 'Enable widget';
help::pkg.display.widgets.objs.multiscale.m.enable.s := 'enable()';
help::pkg.display.widgets.objs.multiscale.m.getvalues := [=];
help::pkg.display.widgets.objs.multiscale.m.getvalues.d := 'Retrieve the current scale value/s';
help::pkg.display.widgets.objs.multiscale.m.getvalues.s := 'getvalues()';
help::pkg.display.widgets.objs.multiscale.m.setrange := [=];
help::pkg.display.widgets.objs.multiscale.m.setrange.d := 'Change the lower and upper limits of the scales';
help::pkg.display.widgets.objs.multiscale.m.setrange.a.start := [=];
help::pkg.display.widgets.objs.multiscale.m.setrange.a.start.d := 'lower limit for scale/s';
help::pkg.display.widgets.objs.multiscale.m.setrange.a.start.def := 'Current value';
help::pkg.display.widgets.objs.multiscale.m.setrange.a.start.a := 'float';
help::pkg.display.widgets.objs.multiscale.m.setrange.a.end := [=];
help::pkg.display.widgets.objs.multiscale.m.setrange.a.end.d := 'upper limit for scale/s';
help::pkg.display.widgets.objs.multiscale.m.setrange.a.end.def := 'Current value';
help::pkg.display.widgets.objs.multiscale.m.setrange.a.end.a := 'float';
help::pkg.display.widgets.objs.multiscale.m.setrange.s := 'setrange(start, end)';
help::pkg.display.widgets.objs.multiscale.m.setresolution := [=];
help::pkg.display.widgets.objs.multiscale.m.setresolution.d := 'Set the step value for the scales';
help::pkg.display.widgets.objs.multiscale.m.setresolution.a.resolution := [=];
help::pkg.display.widgets.objs.multiscale.m.setresolution.a.resolution.d := 'step size for scales';
help::pkg.display.widgets.objs.multiscale.m.setresolution.a.resolution.def := '1.0';
help::pkg.display.widgets.objs.multiscale.m.setresolution.a.resolution.a := 'float';
help::pkg.display.widgets.objs.multiscale.m.setresolution.s := 'setresolution(resolution)';
help::pkg.display.widgets.objs.multiscale.m.setvalues := [=];
help::pkg.display.widgets.objs.multiscale.m.setvalues.d := 'Set the scale value/s';
help::pkg.display.widgets.objs.multiscale.m.setvalues.a.values := [=];
help::pkg.display.widgets.objs.multiscale.m.setvalues.a.values.d := 'values for the scales';
help::pkg.display.widgets.objs.multiscale.m.setvalues.a.values.def := '';
help::pkg.display.widgets.objs.multiscale.m.setvalues.a.values.a := 'vector of floats';
help::pkg.display.widgets.objs.multiscale.m.setvalues.s := 'setvalues(values)';
help::pkg.display.widgets.objs.multiscale.m.dismiss := [=];
help::pkg.display.widgets.objs.multiscale.m.dismiss.d := 'Disable and dismiss the multiscale';
help::pkg.display.widgets.objs.multiscale.m.dismiss.s := 'dismiss()';
help::pkg.display.widgets.objs.menuframes := [=];
help::pkg.display.widgets.objs.menuframes.m := [=];
help::pkg.display.widgets.objs.menuframes.c := [=];
help::pkg.display.widgets.objs.menuframes.d := 'Tk widget to hide and expose a number of embedded frames on demand';
help::pkg.display.widgets.objs.menuframes.c.menuframes := [=];
help::pkg.display.widgets.objs.menuframes.c.menuframes.d := 'Construct a menuframes';
help::pkg.display.widgets.objs.menuframes.c.menuframes.a.parent := [=];
help::pkg.display.widgets.objs.menuframes.c.menuframes.a.parent.d := 'Parent of the menu';
help::pkg.display.widgets.objs.menuframes.c.menuframes.a.parent.def := '';
help::pkg.display.widgets.objs.menuframes.c.menuframes.a.parent.a := 'Tk frame';
help::pkg.display.widgets.objs.menuframes.c.menuframes.a.menubutton := [=];
help::pkg.display.widgets.objs.menuframes.c.menuframes.a.menubutton.d := 'Menu button';
help::pkg.display.widgets.objs.menuframes.c.menuframes.a.menubutton.def := '';
help::pkg.display.widgets.objs.menuframes.c.menuframes.a.menubutton.a := 'Tk button';
help::pkg.display.widgets.objs.menuframes.c.menuframes.a.exclusive := [=];
help::pkg.display.widgets.objs.menuframes.c.menuframes.a.exclusive.d := 'Show only one frame at once?';
help::pkg.display.widgets.objs.menuframes.c.menuframes.a.exclusive.def := 'T';
help::pkg.display.widgets.objs.menuframes.c.menuframes.a.exclusive.a := 'Boolean';
help::pkg.display.widgets.objs.menuframes.c.menuframes.a.widgetset := [=];
help::pkg.display.widgets.objs.menuframes.c.menuframes.a.widgetset.d := 'Widget set to use';
help::pkg.display.widgets.objs.menuframes.c.menuframes.a.widgetset.def := 'dws';
help::pkg.display.widgets.objs.menuframes.c.menuframes.a.widgetset.a := 'A widgetserver closure tool';
help::pkg.display.widgets.objs.menuframes.c.menuframes.s := 'menuframes(parent, menubutton, exclusive, widgetset)';
help::pkg.display.widgets.objs.menuframes.m.add := [=];
help::pkg.display.widgets.objs.menuframes.m.add.d := 'Add a named frame and return the frame';
help::pkg.display.widgets.objs.menuframes.m.add.a.title := [=];
help::pkg.display.widgets.objs.menuframes.m.add.a.title.d := 'Title of the frame to be added';
help::pkg.display.widgets.objs.menuframes.m.add.a.title.def := '';
help::pkg.display.widgets.objs.menuframes.m.add.a.title.a := 'String';
help::pkg.display.widgets.objs.menuframes.m.add.s := 'add(title)';
help::pkg.display.widgets.objs.menuframes.m.Delete := [=];
help::pkg.display.widgets.objs.menuframes.m.Delete.d := 'Delete a named frame';
help::pkg.display.widgets.objs.menuframes.m.Delete.a.title := [=];
help::pkg.display.widgets.objs.menuframes.m.Delete.a.title.d := 'Title of the frame to be deleted';
help::pkg.display.widgets.objs.menuframes.m.Delete.a.title.def := '';
help::pkg.display.widgets.objs.menuframes.m.Delete.a.title.a := 'String';
help::pkg.display.widgets.objs.menuframes.m.Delete.s := 'Delete(title)';
help::pkg.display.widgets.objs.menuframes.m.switch := [=];
help::pkg.display.widgets.objs.menuframes.m.switch.d := 'Switch the visible state of the menuframes';
help::pkg.display.widgets.objs.menuframes.m.switch.a.title := [=];
help::pkg.display.widgets.objs.menuframes.m.switch.a.title.d := 'Title of the frame to be flipped';
help::pkg.display.widgets.objs.menuframes.m.switch.a.title.def := '';
help::pkg.display.widgets.objs.menuframes.m.switch.a.title.a := 'String';
help::pkg.display.widgets.objs.menuframes.m.switch.a.on := [=];
help::pkg.display.widgets.objs.menuframes.m.switch.a.on.d := 'Should the state be on?';
help::pkg.display.widgets.objs.menuframes.m.switch.a.on.def := 'T';
help::pkg.display.widgets.objs.menuframes.m.switch.a.on.a := 'Boolean';
help::pkg.display.widgets.objs.menuframes.m.switch.s := 'switch(title, on)';
help::pkg.display.widgets.objs.menuframes.m.disable := [=];
help::pkg.display.widgets.objs.menuframes.m.disable.d := 'Disable the menuframes';
help::pkg.display.widgets.objs.menuframes.m.disable.s := 'disable()';
help::pkg.display.widgets.objs.menuframes.m.enable := [=];
help::pkg.display.widgets.objs.menuframes.m.enable.d := 'Enable the menuframes';
help::pkg.display.widgets.objs.menuframes.m.enable.s := 'enable()';
help::pkg.display.widgets.objs.menuframes.m.done := [=];
help::pkg.display.widgets.objs.menuframes.m.done.d := 'Destroy ourselves';
help::pkg.display.widgets.objs.menuframes.m.done.s := 'done()';
help::pkg.display.widgets.objs.menuframes.m.state := [=];
help::pkg.display.widgets.objs.menuframes.m.state.d := 'Return the state of the frames in a record';
help::pkg.display.widgets.objs.menuframes.m.state.s := 'state()';
help::pkg.display.widgets.objs.messageline := [=];
help::pkg.display.widgets.objs.messageline.m := [=];
help::pkg.display.widgets.objs.messageline.c := [=];
help::pkg.display.widgets.objs.messageline.d := 'Tk widget to display and log one-line messages.';
help::pkg.display.widgets.objs.messageline.c.messageline := [=];
help::pkg.display.widgets.objs.messageline.c.messageline.d := 'Construct a messageline';
help::pkg.display.widgets.objs.messageline.c.messageline.a.parent := [=];
help::pkg.display.widgets.objs.messageline.c.messageline.a.parent.d := 'Parent of the messageline';
help::pkg.display.widgets.objs.messageline.c.messageline.a.parent.def := '';
help::pkg.display.widgets.objs.messageline.c.messageline.a.parent.a := 'Tk frame';
help::pkg.display.widgets.objs.messageline.c.messageline.a.width := [=];
help::pkg.display.widgets.objs.messageline.c.messageline.a.width.d := 'Width in characters units';
help::pkg.display.widgets.objs.messageline.c.messageline.a.width.def := '30';
help::pkg.display.widgets.objs.messageline.c.messageline.a.width.a := 'Integer';
help::pkg.display.widgets.objs.messageline.c.messageline.a.justify := [=];
help::pkg.display.widgets.objs.messageline.c.messageline.a.justify.d := 'Justification of text';
help::pkg.display.widgets.objs.messageline.c.messageline.a.justify.def := '\' left\' ';
help::pkg.display.widgets.objs.messageline.c.messageline.a.justify.a := 'String from \' center\' , \' left\' , \' right\' ';
help::pkg.display.widgets.objs.messageline.c.messageline.a.font := [=];
help::pkg.display.widgets.objs.messageline.c.messageline.a.font.d := 'Font of text ';
help::pkg.display.widgets.objs.messageline.c.messageline.a.font.def := '\' \' ';
help::pkg.display.widgets.objs.messageline.c.messageline.a.font.a := 'X font';
help::pkg.display.widgets.objs.messageline.c.messageline.a.relief := [=];
help::pkg.display.widgets.objs.messageline.c.messageline.a.relief.d := 'Edge relief';
help::pkg.display.widgets.objs.messageline.c.messageline.a.relief.def := '\' sunken\' ';
help::pkg.display.widgets.objs.messageline.c.messageline.a.relief.a := 'String from `flat\' , `ridge\' ,                                             `raised\' , `sunken\' , `groove\' ';
help::pkg.display.widgets.objs.messageline.c.messageline.a.borderwidth := [=];
help::pkg.display.widgets.objs.messageline.c.messageline.a.borderwidth.d := 'Border width';
help::pkg.display.widgets.objs.messageline.c.messageline.a.borderwidth.def := '2';
help::pkg.display.widgets.objs.messageline.c.messageline.a.borderwidth.a := 'Integer';
help::pkg.display.widgets.objs.messageline.c.messageline.a.foreground := [=];
help::pkg.display.widgets.objs.messageline.c.messageline.a.foreground.d := 'Color of text';
help::pkg.display.widgets.objs.messageline.c.messageline.a.foreground.def := '`black\' ';
help::pkg.display.widgets.objs.messageline.c.messageline.a.foreground.a := 'X color';
help::pkg.display.widgets.objs.messageline.c.messageline.a.background := [=];
help::pkg.display.widgets.objs.messageline.c.messageline.a.background.d := 'Background color';
help::pkg.display.widgets.objs.messageline.c.messageline.a.background.def := '`lightgrey\' ';
help::pkg.display.widgets.objs.messageline.c.messageline.a.background.a := 'X color';
help::pkg.display.widgets.objs.messageline.c.messageline.a.exportselection := [=];
help::pkg.display.widgets.objs.messageline.c.messageline.a.exportselection.d := 'export to X clipboard?';
help::pkg.display.widgets.objs.messageline.c.messageline.a.exportselection.def := 'T';
help::pkg.display.widgets.objs.messageline.c.messageline.a.exportselection.a := 'Boolean';
help::pkg.display.widgets.objs.messageline.c.messageline.a.hlp := [=];
help::pkg.display.widgets.objs.messageline.c.messageline.a.hlp.d := 'Short popuphelp text';
help::pkg.display.widgets.objs.messageline.c.messageline.a.hlp.def := 'No help';
help::pkg.display.widgets.objs.messageline.c.messageline.a.hlp.a := 'String';
help::pkg.display.widgets.objs.messageline.c.messageline.a.messagenote := [=];
help::pkg.display.widgets.objs.messageline.c.messageline.a.messagenote.d := 'The note function to use';
help::pkg.display.widgets.objs.messageline.c.messageline.a.messagenote.def := 'note';
help::pkg.display.widgets.objs.messageline.c.messageline.a.messagenote.a := 'A note function';
help::pkg.display.widgets.objs.messageline.c.messageline.a.widgetset := [=];
help::pkg.display.widgets.objs.messageline.c.messageline.a.widgetset.d := 'Widget set to use';
help::pkg.display.widgets.objs.messageline.c.messageline.a.widgetset.def := 'dws';
help::pkg.display.widgets.objs.messageline.c.messageline.a.widgetset.a := 'A widgetserver closure tool';
help::pkg.display.widgets.objs.messageline.c.messageline.s := 'messageline(parent, width, justify, font, relief, borderwidth, foreground, background, exportselection, hlp, messagenote, widgetset)';
help::pkg.display.widgets.objs.messageline.m.clear := [=];
help::pkg.display.widgets.objs.messageline.m.clear.d := 'Clear the contents of the widget';
help::pkg.display.widgets.objs.messageline.m.clear.s := 'clear()';
help::pkg.display.widgets.objs.messageline.m.done := [=];
help::pkg.display.widgets.objs.messageline.m.done.d := 'Destroy the widget';
help::pkg.display.widgets.objs.messageline.m.done.s := 'done()';
help::pkg.display.widgets.objs.messageline.m.post := [=];
help::pkg.display.widgets.objs.messageline.m.post.d := 'Post a message to the widget and the logger';
help::pkg.display.widgets.objs.messageline.m.post.s := 'post()';
help::pkg.display.widgets.objs.messageline.m.postnoforward := [=];
help::pkg.display.widgets.objs.messageline.m.postnoforward.d := 'Post a message to the widget';
help::pkg.display.widgets.objs.messageline.m.postnoforward.s := 'postnoforward()';
help::pkg.display.widgets.objs.optionmenu := [=];
help::pkg.display.widgets.objs.optionmenu.m := [=];
help::pkg.display.widgets.objs.optionmenu.c := [=];
help::pkg.display.widgets.objs.optionmenu.d := 'Tk widget where the menu label changes with selection';
help::pkg.display.widgets.objs.optionmenu.c.optionmenu := [=];
help::pkg.display.widgets.objs.optionmenu.c.optionmenu.d := 'Construct an optionmenu';
help::pkg.display.widgets.objs.optionmenu.c.optionmenu.a.parent := [=];
help::pkg.display.widgets.objs.optionmenu.c.optionmenu.a.parent.d := 'Parent of the menu';
help::pkg.display.widgets.objs.optionmenu.c.optionmenu.a.parent.def := '';
help::pkg.display.widgets.objs.optionmenu.c.optionmenu.a.parent.a := 'Widget';
help::pkg.display.widgets.objs.optionmenu.c.optionmenu.a.labels := [=];
help::pkg.display.widgets.objs.optionmenu.c.optionmenu.a.labels.d := 'The menu item labels';
help::pkg.display.widgets.objs.optionmenu.c.optionmenu.a.labels.def := 'Empty menu';
help::pkg.display.widgets.objs.optionmenu.c.optionmenu.a.labels.a := 'Vector of strings';
help::pkg.display.widgets.objs.optionmenu.c.optionmenu.a.names := [=];
help::pkg.display.widgets.objs.optionmenu.c.optionmenu.a.names.d := 'The menu item names';
help::pkg.display.widgets.objs.optionmenu.c.optionmenu.a.names.def := 'Empty menu';
help::pkg.display.widgets.objs.optionmenu.c.optionmenu.a.names.a := 'Vector of strings';
help::pkg.display.widgets.objs.optionmenu.c.optionmenu.a.values := [=];
help::pkg.display.widgets.objs.optionmenu.c.optionmenu.a.values.d := 'The menu item values';
help::pkg.display.widgets.objs.optionmenu.c.optionmenu.a.values.def := 'Empty menu';
help::pkg.display.widgets.objs.optionmenu.c.optionmenu.a.values.a := 'Vector of anything';
help::pkg.display.widgets.objs.optionmenu.c.optionmenu.a.hlp := [=];
help::pkg.display.widgets.objs.optionmenu.c.optionmenu.a.hlp.d := 'Short popuphelp text';
help::pkg.display.widgets.objs.optionmenu.c.optionmenu.a.hlp.def := 'No help';
help::pkg.display.widgets.objs.optionmenu.c.optionmenu.a.hlp.a := 'String';
help::pkg.display.widgets.objs.optionmenu.c.optionmenu.a.hlp2 := [=];
help::pkg.display.widgets.objs.optionmenu.c.optionmenu.a.hlp2.d := 'Long popuphelp text';
help::pkg.display.widgets.objs.optionmenu.c.optionmenu.a.hlp2.def := 'No help';
help::pkg.display.widgets.objs.optionmenu.c.optionmenu.a.hlp2.a := 'String';
help::pkg.display.widgets.objs.optionmenu.c.optionmenu.a.nbreak := [=];
help::pkg.display.widgets.objs.optionmenu.c.optionmenu.a.nbreak.d := 'The break point for menu or listbox usage';
help::pkg.display.widgets.objs.optionmenu.c.optionmenu.a.nbreak.def := '20';
help::pkg.display.widgets.objs.optionmenu.c.optionmenu.a.nbreak.a := 'Integer';
help::pkg.display.widgets.objs.optionmenu.c.optionmenu.a.padx := [=];
help::pkg.display.widgets.objs.optionmenu.c.optionmenu.a.padx.d := 'Horizontal padding around text';
help::pkg.display.widgets.objs.optionmenu.c.optionmenu.a.padx.def := '7';
help::pkg.display.widgets.objs.optionmenu.c.optionmenu.a.padx.a := 'Integer';
help::pkg.display.widgets.objs.optionmenu.c.optionmenu.a.pady := [=];
help::pkg.display.widgets.objs.optionmenu.c.optionmenu.a.pady.d := 'Vertical padding around text';
help::pkg.display.widgets.objs.optionmenu.c.optionmenu.a.pady.def := '3';
help::pkg.display.widgets.objs.optionmenu.c.optionmenu.a.pady.a := 'Integer';
help::pkg.display.widgets.objs.optionmenu.c.optionmenu.a.width := [=];
help::pkg.display.widgets.objs.optionmenu.c.optionmenu.a.width.d := 'Width in character units';
help::pkg.display.widgets.objs.optionmenu.c.optionmenu.a.width.def := 'Auto-scale';
help::pkg.display.widgets.objs.optionmenu.c.optionmenu.a.width.a := 'Integer';
help::pkg.display.widgets.objs.optionmenu.c.optionmenu.a.updatelabel := [=];
help::pkg.display.widgets.objs.optionmenu.c.optionmenu.a.updatelabel.d := 'Update menu label with selected item';
help::pkg.display.widgets.objs.optionmenu.c.optionmenu.a.updatelabel.def := 'T';
help::pkg.display.widgets.objs.optionmenu.c.optionmenu.a.updatelabel.a := 'T or F';
help::pkg.display.widgets.objs.optionmenu.c.optionmenu.a.height := [=];
help::pkg.display.widgets.objs.optionmenu.c.optionmenu.a.height.d := 'Height in character units';
help::pkg.display.widgets.objs.optionmenu.c.optionmenu.a.height.def := '1';
help::pkg.display.widgets.objs.optionmenu.c.optionmenu.a.height.a := 'Integer';
help::pkg.display.widgets.objs.optionmenu.c.optionmenu.a.justify := [=];
help::pkg.display.widgets.objs.optionmenu.c.optionmenu.a.justify.d := 'Justification of text';
help::pkg.display.widgets.objs.optionmenu.c.optionmenu.a.justify.def := '`center\' ';
help::pkg.display.widgets.objs.optionmenu.c.optionmenu.a.justify.a := 'String from `center\' , \' left\' , \' right\' ';
help::pkg.display.widgets.objs.optionmenu.c.optionmenu.a.font := [=];
help::pkg.display.widgets.objs.optionmenu.c.optionmenu.a.font.d := 'Font of text ';
help::pkg.display.widgets.objs.optionmenu.c.optionmenu.a.font.def := '';
help::pkg.display.widgets.objs.optionmenu.c.optionmenu.a.font.a := 'X font';
help::pkg.display.widgets.objs.optionmenu.c.optionmenu.a.relief := [=];
help::pkg.display.widgets.objs.optionmenu.c.optionmenu.a.relief.d := 'Edge relief';
help::pkg.display.widgets.objs.optionmenu.c.optionmenu.a.relief.def := '`groove\' ';
help::pkg.display.widgets.objs.optionmenu.c.optionmenu.a.relief.a := 'String from `flat\' , `ridge\' ,                                             `raised\' , `sunken\' , `groove\' ';
help::pkg.display.widgets.objs.optionmenu.c.optionmenu.a.borderwidth := [=];
help::pkg.display.widgets.objs.optionmenu.c.optionmenu.a.borderwidth.d := 'Border width';
help::pkg.display.widgets.objs.optionmenu.c.optionmenu.a.borderwidth.def := '2';
help::pkg.display.widgets.objs.optionmenu.c.optionmenu.a.borderwidth.a := 'Integer';
help::pkg.display.widgets.objs.optionmenu.c.optionmenu.a.foreground := [=];
help::pkg.display.widgets.objs.optionmenu.c.optionmenu.a.foreground.d := 'Color of text';
help::pkg.display.widgets.objs.optionmenu.c.optionmenu.a.foreground.def := '`black\' ';
help::pkg.display.widgets.objs.optionmenu.c.optionmenu.a.foreground.a := 'X color';
help::pkg.display.widgets.objs.optionmenu.c.optionmenu.a.background := [=];
help::pkg.display.widgets.objs.optionmenu.c.optionmenu.a.background.d := 'Background color';
help::pkg.display.widgets.objs.optionmenu.c.optionmenu.a.background.def := '`lightgrey\' ';
help::pkg.display.widgets.objs.optionmenu.c.optionmenu.a.background.a := 'X color';
help::pkg.display.widgets.objs.optionmenu.c.optionmenu.a.disabled := [=];
help::pkg.display.widgets.objs.optionmenu.c.optionmenu.a.disabled.d := 'Is inactivated ?';
help::pkg.display.widgets.objs.optionmenu.c.optionmenu.a.disabled.def := 'F';
help::pkg.display.widgets.objs.optionmenu.c.optionmenu.a.disabled.a := 'Boolean';
help::pkg.display.widgets.objs.optionmenu.c.optionmenu.a.anchor := [=];
help::pkg.display.widgets.objs.optionmenu.c.optionmenu.a.anchor.d := 'Location of text';
help::pkg.display.widgets.objs.optionmenu.c.optionmenu.a.anchor.def := '`c\' ';
help::pkg.display.widgets.objs.optionmenu.c.optionmenu.a.anchor.a := 'String  from \' c\' , \' n\' , \' s\' , \' e\' , \' w\' , \' ne\' ,                                            \' nw\' , \' se\' , \' sw\' ';
help::pkg.display.widgets.objs.optionmenu.c.optionmenu.a.fill := [=];
help::pkg.display.widgets.objs.optionmenu.c.optionmenu.a.fill.d := 'How to expand when resized';
help::pkg.display.widgets.objs.optionmenu.c.optionmenu.a.fill.def := '\' none\' ';
help::pkg.display.widgets.objs.optionmenu.c.optionmenu.a.fill.a := 'String from `x\' , `y\' , `both\' , `none\' ';
help::pkg.display.widgets.objs.optionmenu.c.optionmenu.a.widgetset := [=];
help::pkg.display.widgets.objs.optionmenu.c.optionmenu.a.widgetset.d := 'The widget server to use';
help::pkg.display.widgets.objs.optionmenu.c.optionmenu.a.widgetset.def := 'dws';
help::pkg.display.widgets.objs.optionmenu.c.optionmenu.a.widgetset.a := 'widgetserver tool';
help::pkg.display.widgets.objs.optionmenu.c.optionmenu.s := 'optionmenu(parent, labels, names, values, hlp, hlp2, nbreak, padx, pady, width, updatelabel, height, justify, font, relief, borderwidth, foreground, background, disabled, anchor, fill, widgetset)';
help::pkg.display.widgets.objs.optionmenu.m.extend := [=];
help::pkg.display.widgets.objs.optionmenu.m.extend.d := 'Extend the menu with more items';
help::pkg.display.widgets.objs.optionmenu.m.extend.a.labels := [=];
help::pkg.display.widgets.objs.optionmenu.m.extend.a.labels.d := 'The menu item labels';
help::pkg.display.widgets.objs.optionmenu.m.extend.a.labels.def := 'Empty menu';
help::pkg.display.widgets.objs.optionmenu.m.extend.a.labels.a := 'Vector of strings';
help::pkg.display.widgets.objs.optionmenu.m.extend.a.names := [=];
help::pkg.display.widgets.objs.optionmenu.m.extend.a.names.d := 'The menu item names';
help::pkg.display.widgets.objs.optionmenu.m.extend.a.names.def := 'Empty menu';
help::pkg.display.widgets.objs.optionmenu.m.extend.a.names.a := 'Vector of strings';
help::pkg.display.widgets.objs.optionmenu.m.extend.a.values := [=];
help::pkg.display.widgets.objs.optionmenu.m.extend.a.values.d := 'The menu item values';
help::pkg.display.widgets.objs.optionmenu.m.extend.a.values.def := 'Empty menu';
help::pkg.display.widgets.objs.optionmenu.m.extend.a.values.a := 'Vector of anything';
help::pkg.display.widgets.objs.optionmenu.m.extend.a.width := [=];
help::pkg.display.widgets.objs.optionmenu.m.extend.a.width.d := 'Width in character units';
help::pkg.display.widgets.objs.optionmenu.m.extend.a.width.def := 'Auto-scale';
help::pkg.display.widgets.objs.optionmenu.m.extend.a.width.a := 'Integer';
help::pkg.display.widgets.objs.optionmenu.m.extend.s := 'extend(labels, names, values, width)';
help::pkg.display.widgets.objs.optionmenu.m.replace := [=];
help::pkg.display.widgets.objs.optionmenu.m.replace.d := 'Replace the menu with the provided items';
help::pkg.display.widgets.objs.optionmenu.m.replace.a.labels := [=];
help::pkg.display.widgets.objs.optionmenu.m.replace.a.labels.d := 'The menu item labels';
help::pkg.display.widgets.objs.optionmenu.m.replace.a.labels.def := 'Empty menu';
help::pkg.display.widgets.objs.optionmenu.m.replace.a.labels.a := 'Vector of strings';
help::pkg.display.widgets.objs.optionmenu.m.replace.a.names := [=];
help::pkg.display.widgets.objs.optionmenu.m.replace.a.names.d := 'The menu item names';
help::pkg.display.widgets.objs.optionmenu.m.replace.a.names.def := 'Empty menu';
help::pkg.display.widgets.objs.optionmenu.m.replace.a.names.a := 'Vector of strings';
help::pkg.display.widgets.objs.optionmenu.m.replace.a.values := [=];
help::pkg.display.widgets.objs.optionmenu.m.replace.a.values.d := 'The menu item values';
help::pkg.display.widgets.objs.optionmenu.m.replace.a.values.def := 'Empty menu';
help::pkg.display.widgets.objs.optionmenu.m.replace.a.values.a := 'Vector of anything';
help::pkg.display.widgets.objs.optionmenu.m.replace.a.width := [=];
help::pkg.display.widgets.objs.optionmenu.m.replace.a.width.d := 'Width in character units';
help::pkg.display.widgets.objs.optionmenu.m.replace.a.width.def := 'Auto-scale';
help::pkg.display.widgets.objs.optionmenu.m.replace.a.width.a := 'Integer';
help::pkg.display.widgets.objs.optionmenu.m.replace.s := 'replace(labels, names, values, width)';
help::pkg.display.widgets.objs.optionmenu.m.selectindex := [=];
help::pkg.display.widgets.objs.optionmenu.m.selectindex.d := 'Select an item in the menu by index';
help::pkg.display.widgets.objs.optionmenu.m.selectindex.a.idx := [=];
help::pkg.display.widgets.objs.optionmenu.m.selectindex.a.idx.d := 'The menu item index';
help::pkg.display.widgets.objs.optionmenu.m.selectindex.a.idx.def := '';
help::pkg.display.widgets.objs.optionmenu.m.selectindex.a.idx.a := 'Integer';
help::pkg.display.widgets.objs.optionmenu.m.selectindex.s := 'selectindex(idx)';
help::pkg.display.widgets.objs.optionmenu.m.selectlabel := [=];
help::pkg.display.widgets.objs.optionmenu.m.selectlabel.d := 'Select an item in the menu by label';
help::pkg.display.widgets.objs.optionmenu.m.selectlabel.a.label := [=];
help::pkg.display.widgets.objs.optionmenu.m.selectlabel.a.label.d := 'The menu item label';
help::pkg.display.widgets.objs.optionmenu.m.selectlabel.a.label.def := '';
help::pkg.display.widgets.objs.optionmenu.m.selectlabel.a.label.a := 'Same type as the array ``labels\' \'  used in construction';
help::pkg.display.widgets.objs.optionmenu.m.selectlabel.s := 'selectlabel(label)';
help::pkg.display.widgets.objs.optionmenu.m.selectname := [=];
help::pkg.display.widgets.objs.optionmenu.m.selectname.d := 'Select an item in the menu by name';
help::pkg.display.widgets.objs.optionmenu.m.selectname.a.name := [=];
help::pkg.display.widgets.objs.optionmenu.m.selectname.a.name.d := 'The menu item name';
help::pkg.display.widgets.objs.optionmenu.m.selectname.a.name.def := '';
help::pkg.display.widgets.objs.optionmenu.m.selectname.a.name.a := 'Same type as the array ``names\' \'  used in construction';
help::pkg.display.widgets.objs.optionmenu.m.selectname.s := 'selectname(name)';
help::pkg.display.widgets.objs.optionmenu.m.selectvalue := [=];
help::pkg.display.widgets.objs.optionmenu.m.selectvalue.d := 'Select an item in the menu by value';
help::pkg.display.widgets.objs.optionmenu.m.selectvalue.a.value := [=];
help::pkg.display.widgets.objs.optionmenu.m.selectvalue.a.value.d := 'The menu item value';
help::pkg.display.widgets.objs.optionmenu.m.selectvalue.a.value.def := '';
help::pkg.display.widgets.objs.optionmenu.m.selectvalue.a.value.a := 'Same type as the array ``values\' \'  used in construction';
help::pkg.display.widgets.objs.optionmenu.m.selectvalue.s := 'selectvalue(value)';
help::pkg.display.widgets.objs.optionmenu.m.getindex := [=];
help::pkg.display.widgets.objs.optionmenu.m.getindex.d := 'Get the index of the current selection';
help::pkg.display.widgets.objs.optionmenu.m.getindex.s := 'getindex()';
help::pkg.display.widgets.objs.optionmenu.m.getpreviousindex := [=];
help::pkg.display.widgets.objs.optionmenu.m.getpreviousindex.d := 'Get the index previous to the current selection';
help::pkg.display.widgets.objs.optionmenu.m.getpreviousindex.s := 'getpreviousindex()';
help::pkg.display.widgets.objs.optionmenu.m.getlabel := [=];
help::pkg.display.widgets.objs.optionmenu.m.getlabel.d := 'Get the label of the current selection';
help::pkg.display.widgets.objs.optionmenu.m.getlabel.s := 'getlabel()';
help::pkg.display.widgets.objs.optionmenu.m.getlabels := [=];
help::pkg.display.widgets.objs.optionmenu.m.getlabels.d := 'Gets all of the labels associated with the menu';
help::pkg.display.widgets.objs.optionmenu.m.getlabels.s := 'getlabels()';
help::pkg.display.widgets.objs.optionmenu.m.getname := [=];
help::pkg.display.widgets.objs.optionmenu.m.getname.d := 'Get the name of the current selection';
help::pkg.display.widgets.objs.optionmenu.m.getname.s := 'getname()';
help::pkg.display.widgets.objs.optionmenu.m.getnames := [=];
help::pkg.display.widgets.objs.optionmenu.m.getnames.d := 'Gets all of the names associated with the menu';
help::pkg.display.widgets.objs.optionmenu.m.getnames.s := 'getnames()';
help::pkg.display.widgets.objs.optionmenu.m.getvalue := [=];
help::pkg.display.widgets.objs.optionmenu.m.getvalue.d := 'Get the value of the current selection';
help::pkg.display.widgets.objs.optionmenu.m.getvalue.s := 'getvalue()';
help::pkg.display.widgets.objs.optionmenu.m.getvalues := [=];
help::pkg.display.widgets.objs.optionmenu.m.getvalues.d := 'Gets all of the values associated with the menu';
help::pkg.display.widgets.objs.optionmenu.m.getvalues.s := 'getvalues()';
help::pkg.display.widgets.objs.optionmenu.m.findlabel := [=];
help::pkg.display.widgets.objs.optionmenu.m.findlabel.d := 'Find the index of the item with the given label';
help::pkg.display.widgets.objs.optionmenu.m.findlabel.a.label := [=];
help::pkg.display.widgets.objs.optionmenu.m.findlabel.a.label.d := 'The menu item label';
help::pkg.display.widgets.objs.optionmenu.m.findlabel.a.label.def := '';
help::pkg.display.widgets.objs.optionmenu.m.findlabel.a.label.a := 'Same type as the array ``labels\' \'  used in construction';
help::pkg.display.widgets.objs.optionmenu.m.findlabel.s := 'findlabel(label)';
help::pkg.display.widgets.objs.optionmenu.m.findname := [=];
help::pkg.display.widgets.objs.optionmenu.m.findname.d := 'Find the index of the item with the given name';
help::pkg.display.widgets.objs.optionmenu.m.findname.a.name := [=];
help::pkg.display.widgets.objs.optionmenu.m.findname.a.name.d := 'The menu item name';
help::pkg.display.widgets.objs.optionmenu.m.findname.a.name.def := '';
help::pkg.display.widgets.objs.optionmenu.m.findname.a.name.a := 'Same type as the array ``names\' \'  used in construction';
help::pkg.display.widgets.objs.optionmenu.m.findname.s := 'findname(name)';
help::pkg.display.widgets.objs.optionmenu.m.findvalue := [=];
help::pkg.display.widgets.objs.optionmenu.m.findvalue.d := 'Find the index of the item with the given value';
help::pkg.display.widgets.objs.optionmenu.m.findvalue.a.value := [=];
help::pkg.display.widgets.objs.optionmenu.m.findvalue.a.value.d := 'The menu item value';
help::pkg.display.widgets.objs.optionmenu.m.findvalue.a.value.def := '';
help::pkg.display.widgets.objs.optionmenu.m.findvalue.a.value.a := 'Same type as the array ``value\' \'  used in  construction';
help::pkg.display.widgets.objs.optionmenu.m.findvalue.s := 'findvalue(value)';
help::pkg.display.widgets.objs.optionmenu.m.geteventmask := [=];
help::pkg.display.widgets.objs.optionmenu.m.geteventmask.d := 'Get the event mask';
help::pkg.display.widgets.objs.optionmenu.m.geteventmask.s := 'geteventmask()';
help::pkg.display.widgets.objs.optionmenu.m.seteventmask := [=];
help::pkg.display.widgets.objs.optionmenu.m.seteventmask.d := 'Set the event mask';
help::pkg.display.widgets.objs.optionmenu.m.seteventmask.a.mask := [=];
help::pkg.display.widgets.objs.optionmenu.m.seteventmask.a.mask.d := 'The event mask';
help::pkg.display.widgets.objs.optionmenu.m.seteventmask.a.mask.def := '';
help::pkg.display.widgets.objs.optionmenu.m.seteventmask.a.mask.a := 'Vector of Bool';
help::pkg.display.widgets.objs.optionmenu.m.seteventmask.s := 'seteventmask(mask)';
help::pkg.display.widgets.objs.optionmenu.m.setlabel := [=];
help::pkg.display.widgets.objs.optionmenu.m.setlabel.d := 'Set the label of the optionmenu';
help::pkg.display.widgets.objs.optionmenu.m.setlabel.a.label := [=];
help::pkg.display.widgets.objs.optionmenu.m.setlabel.a.label.d := 'The label';
help::pkg.display.widgets.objs.optionmenu.m.setlabel.a.label.def := '';
help::pkg.display.widgets.objs.optionmenu.m.setlabel.a.label.a := 'String';
help::pkg.display.widgets.objs.optionmenu.m.setlabel.s := 'setlabel(label)';
help::pkg.display.widgets.objs.optionmenu.m.setforeground := [=];
help::pkg.display.widgets.objs.optionmenu.m.setforeground.d := 'Set the color of the foreground of the optionmenu button';
help::pkg.display.widgets.objs.optionmenu.m.setforeground.a.color := [=];
help::pkg.display.widgets.objs.optionmenu.m.setforeground.a.color.d := 'The color';
help::pkg.display.widgets.objs.optionmenu.m.setforeground.a.color.def := '';
help::pkg.display.widgets.objs.optionmenu.m.setforeground.a.color.a := 'Any X color encoded as a String';
help::pkg.display.widgets.objs.optionmenu.m.setforeground.s := 'setforeground(color)';
help::pkg.display.widgets.objs.optionmenu.m.setbackground := [=];
help::pkg.display.widgets.objs.optionmenu.m.setbackground.d := 'Set the color of the background of the optionmenu button';
help::pkg.display.widgets.objs.optionmenu.m.setbackground.a.color := [=];
help::pkg.display.widgets.objs.optionmenu.m.setbackground.a.color.d := 'The color';
help::pkg.display.widgets.objs.optionmenu.m.setbackground.a.color.def := '';
help::pkg.display.widgets.objs.optionmenu.m.setbackground.a.color.a := 'Any X color encoded as a String';
help::pkg.display.widgets.objs.optionmenu.m.setbackground.s := 'setbackground(color)';
help::pkg.display.widgets.objs.optionmenu.m.setwidth := [=];
help::pkg.display.widgets.objs.optionmenu.m.setwidth.d := 'Set the width of the optionmenu button';
help::pkg.display.widgets.objs.optionmenu.m.setwidth.a.width := [=];
help::pkg.display.widgets.objs.optionmenu.m.setwidth.a.width.d := 'The width in character units';
help::pkg.display.widgets.objs.optionmenu.m.setwidth.a.width.def := '';
help::pkg.display.widgets.objs.optionmenu.m.setwidth.a.width.a := 'Integer';
help::pkg.display.widgets.objs.optionmenu.m.setwidth.s := 'setwidth(width)';
help::pkg.display.widgets.objs.optionmenu.m.disabled := [=];
help::pkg.display.widgets.objs.optionmenu.m.disabled.d := 'Disable or enable the optionmenu widget';
help::pkg.display.widgets.objs.optionmenu.m.disabled.a.disable := [=];
help::pkg.display.widgets.objs.optionmenu.m.disabled.a.disable.d := 'disable the widget';
help::pkg.display.widgets.objs.optionmenu.m.disabled.a.disable.def := 'T';
help::pkg.display.widgets.objs.optionmenu.m.disabled.a.disable.a := 'T or F';
help::pkg.display.widgets.objs.optionmenu.m.disabled.s := 'disabled(disable)';
help::pkg.display.widgets.objs.optionmenu.m.isenabled := [=];
help::pkg.display.widgets.objs.optionmenu.m.isenabled.d := 'Is the optionmenu widget enabled ?';
help::pkg.display.widgets.objs.optionmenu.m.isenabled.s := 'isenabled()';
help::pkg.display.widgets.objs.optionmenu.m.done := [=];
help::pkg.display.widgets.objs.optionmenu.m.done.d := 'Destroy ourselves';
help::pkg.display.widgets.objs.optionmenu.m.done.s := 'done()';
help::pkg.display.widgets.objs.pixelrange := [=];
help::pkg.display.widgets.objs.pixelrange.m := [=];
help::pkg.display.widgets.objs.pixelrange.c := [=];
help::pkg.display.widgets.objs.pixelrange.d := 'Widget to handle a pixel range specification';
help::pkg.display.widgets.objs.pixelrange.c.pixelrange := [=];
help::pkg.display.widgets.objs.pixelrange.c.pixelrange.d := 'Construct a pixelrange widget';
help::pkg.display.widgets.objs.pixelrange.c.pixelrange.a.parent := [=];
help::pkg.display.widgets.objs.pixelrange.c.pixelrange.a.parent.d := 'Parent of the menu';
help::pkg.display.widgets.objs.pixelrange.c.pixelrange.a.parent.def := 'F';
help::pkg.display.widgets.objs.pixelrange.c.pixelrange.a.parent.a := 'Tk frame';
help::pkg.display.widgets.objs.pixelrange.c.pixelrange.a.min := [=];
help::pkg.display.widgets.objs.pixelrange.c.pixelrange.a.min.d := 'The minimum value for the sliders';
help::pkg.display.widgets.objs.pixelrange.c.pixelrange.a.min.def := '0';
help::pkg.display.widgets.objs.pixelrange.c.pixelrange.a.min.a := 'Float';
help::pkg.display.widgets.objs.pixelrange.c.pixelrange.a.max := [=];
help::pkg.display.widgets.objs.pixelrange.c.pixelrange.a.max.d := 'The maximum value for the sliders';
help::pkg.display.widgets.objs.pixelrange.c.pixelrange.a.max.def := '1';
help::pkg.display.widgets.objs.pixelrange.c.pixelrange.a.max.a := 'Float';
help::pkg.display.widgets.objs.pixelrange.c.pixelrange.a.labels := [=];
help::pkg.display.widgets.objs.pixelrange.c.pixelrange.a.labels.d := 'The slider labels';
help::pkg.display.widgets.objs.pixelrange.c.pixelrange.a.labels.def := '"include exclude all"';
help::pkg.display.widgets.objs.pixelrange.c.pixelrange.a.labels.a := 'String';
help::pkg.display.widgets.objs.pixelrange.c.pixelrange.a.widgetset := [=];
help::pkg.display.widgets.objs.pixelrange.c.pixelrange.a.widgetset.d := 'The widget server to use';
help::pkg.display.widgets.objs.pixelrange.c.pixelrange.a.widgetset.def := 'dws';
help::pkg.display.widgets.objs.pixelrange.c.pixelrange.a.widgetset.a := 'widgetserver tool';
help::pkg.display.widgets.objs.pixelrange.c.pixelrange.s := 'pixelrange(parent, min, max, labels, widgetset)';
help::pkg.display.widgets.objs.pixelrange.m.disabled := [=];
help::pkg.display.widgets.objs.pixelrange.m.disabled.d := 'Disable or enable the widget';
help::pkg.display.widgets.objs.pixelrange.m.disabled.a.which := [=];
help::pkg.display.widgets.objs.pixelrange.m.disabled.a.which.d := 'disable the radio buttons';
help::pkg.display.widgets.objs.pixelrange.m.disabled.a.which.def := 'unset';
help::pkg.display.widgets.objs.pixelrange.m.disabled.a.which.a := 'T, F, or unset';
help::pkg.display.widgets.objs.pixelrange.m.disabled.a.sliders := [=];
help::pkg.display.widgets.objs.pixelrange.m.disabled.a.sliders.d := 'disable the sliders';
help::pkg.display.widgets.objs.pixelrange.m.disabled.a.sliders.def := 'unset';
help::pkg.display.widgets.objs.pixelrange.m.disabled.a.sliders.a := 'T, F, or unset';
help::pkg.display.widgets.objs.pixelrange.m.disabled.s := 'disabled(which, sliders)';
help::pkg.display.widgets.objs.pixelrange.m.disableallbutton := [=];
help::pkg.display.widgets.objs.pixelrange.m.disableallbutton.d := 'Disable the `all  radio button';
help::pkg.display.widgets.objs.pixelrange.m.disableallbutton.s := 'disableallbutton()';
help::pkg.display.widgets.objs.pixelrange.m.done := [=];
help::pkg.display.widgets.objs.pixelrange.m.done.d := 'Destroy ourselves';
help::pkg.display.widgets.objs.pixelrange.m.done.s := 'done()';
help::pkg.display.widgets.objs.pixelrange.m.enableallbutton := [=];
help::pkg.display.widgets.objs.pixelrange.m.enableallbutton.d := 'Enable the `all  radio button';
help::pkg.display.widgets.objs.pixelrange.m.enableallbutton.s := 'enableallbutton()';
help::pkg.display.widgets.objs.pixelrange.m.getslidervalues := [=];
help::pkg.display.widgets.objs.pixelrange.m.getslidervalues.d := 'Get the values of the sliders';
help::pkg.display.widgets.objs.pixelrange.m.getslidervalues.s := 'getslidervalues()';
help::pkg.display.widgets.objs.pixelrange.m.getradiovalue := [=];
help::pkg.display.widgets.objs.pixelrange.m.getradiovalue.d := 'Get the value of the radio buttons';
help::pkg.display.widgets.objs.pixelrange.m.getradiovalue.s := 'getradiovalue()';
help::pkg.display.widgets.objs.pixelrange.m.setrange := [=];
help::pkg.display.widgets.objs.pixelrange.m.setrange.d := 'Set new values for the sliders';
help::pkg.display.widgets.objs.pixelrange.m.setrange.a.min := [=];
help::pkg.display.widgets.objs.pixelrange.m.setrange.a.min.d := 'The minimum value for the sliders';
help::pkg.display.widgets.objs.pixelrange.m.setrange.a.min.def := '';
help::pkg.display.widgets.objs.pixelrange.m.setrange.a.min.a := 'Float';
help::pkg.display.widgets.objs.pixelrange.m.setrange.a.max := [=];
help::pkg.display.widgets.objs.pixelrange.m.setrange.a.max.d := 'The maximum value for the sliders';
help::pkg.display.widgets.objs.pixelrange.m.setrange.a.max.def := '';
help::pkg.display.widgets.objs.pixelrange.m.setrange.a.max.a := 'Float';
help::pkg.display.widgets.objs.pixelrange.m.setrange.s := 'setrange(min, max)';
help::pkg.display.widgets.objs.pixelrange.m.setradiovalue := [=];
help::pkg.display.widgets.objs.pixelrange.m.setradiovalue.d := 'Set the state of a specific radio button';
help::pkg.display.widgets.objs.pixelrange.m.setradiovalue.a.idx := [=];
help::pkg.display.widgets.objs.pixelrange.m.setradiovalue.a.idx.d := 'Button index or name';
help::pkg.display.widgets.objs.pixelrange.m.setradiovalue.a.idx.def := '';
help::pkg.display.widgets.objs.pixelrange.m.setradiovalue.a.idx.a := 'Integer or string';
help::pkg.display.widgets.objs.pixelrange.m.setradiovalue.a.state := [=];
help::pkg.display.widgets.objs.pixelrange.m.setradiovalue.a.state.d := 'State of button';
help::pkg.display.widgets.objs.pixelrange.m.setradiovalue.a.state.def := '';
help::pkg.display.widgets.objs.pixelrange.m.setradiovalue.a.state.a := 'T or F';
help::pkg.display.widgets.objs.pixelrange.m.setradiovalue.s := 'setradiovalue(idx, state)';
help::pkg.display.widgets.objs.popupselectmenu := [=];
help::pkg.display.widgets.objs.popupselectmenu.m := [=];
help::pkg.display.widgets.objs.popupselectmenu.c := [=];
help::pkg.display.widgets.objs.popupselectmenu.d := 'Tk widget to add a popup select menu  to another widget';
help::pkg.display.widgets.objs.popupselectmenu.c.popupselectmenu := [=];
help::pkg.display.widgets.objs.popupselectmenu.c.popupselectmenu.d := 'Construct a popup select menu';
help::pkg.display.widgets.objs.popupselectmenu.c.popupselectmenu.a.fr := [=];
help::pkg.display.widgets.objs.popupselectmenu.c.popupselectmenu.a.fr.d := 'Frame to attach to';
help::pkg.display.widgets.objs.popupselectmenu.c.popupselectmenu.a.fr.def := '';
help::pkg.display.widgets.objs.popupselectmenu.c.popupselectmenu.a.fr.a := 'Tk frame';
help::pkg.display.widgets.objs.popupselectmenu.c.popupselectmenu.a.labels := [=];
help::pkg.display.widgets.objs.popupselectmenu.c.popupselectmenu.a.labels.d := 'Choices';
help::pkg.display.widgets.objs.popupselectmenu.c.popupselectmenu.a.labels.def := '\' \' ';
help::pkg.display.widgets.objs.popupselectmenu.c.popupselectmenu.a.labels.a := 'String';
help::pkg.display.widgets.objs.popupselectmenu.c.popupselectmenu.a.font := [=];
help::pkg.display.widgets.objs.popupselectmenu.c.popupselectmenu.a.font.d := 'Font of text ';
help::pkg.display.widgets.objs.popupselectmenu.c.popupselectmenu.a.font.def := '\' \' ';
help::pkg.display.widgets.objs.popupselectmenu.c.popupselectmenu.a.font.a := 'X font';
help::pkg.display.widgets.objs.popupselectmenu.c.popupselectmenu.a.relief := [=];
help::pkg.display.widgets.objs.popupselectmenu.c.popupselectmenu.a.relief.d := 'Edge relief';
help::pkg.display.widgets.objs.popupselectmenu.c.popupselectmenu.a.relief.def := '\' flat\' ';
help::pkg.display.widgets.objs.popupselectmenu.c.popupselectmenu.a.relief.a := 'String from `flat\' , `ridge\' ,                                             `raised\' , `sunken\' , `groove\' ';
help::pkg.display.widgets.objs.popupselectmenu.c.popupselectmenu.a.foreground := [=];
help::pkg.display.widgets.objs.popupselectmenu.c.popupselectmenu.a.foreground.d := 'Color of text';
help::pkg.display.widgets.objs.popupselectmenu.c.popupselectmenu.a.foreground.def := '`black\' ';
help::pkg.display.widgets.objs.popupselectmenu.c.popupselectmenu.a.foreground.a := 'X color';
help::pkg.display.widgets.objs.popupselectmenu.c.popupselectmenu.a.background := [=];
help::pkg.display.widgets.objs.popupselectmenu.c.popupselectmenu.a.background.d := 'Background color';
help::pkg.display.widgets.objs.popupselectmenu.c.popupselectmenu.a.background.def := '`lightgrey\' ';
help::pkg.display.widgets.objs.popupselectmenu.c.popupselectmenu.a.background.a := 'X color';
help::pkg.display.widgets.objs.popupselectmenu.c.popupselectmenu.a.widgetset := [=];
help::pkg.display.widgets.objs.popupselectmenu.c.popupselectmenu.a.widgetset.d := 'Widget set to use';
help::pkg.display.widgets.objs.popupselectmenu.c.popupselectmenu.a.widgetset.def := 'dws';
help::pkg.display.widgets.objs.popupselectmenu.c.popupselectmenu.a.widgetset.a := 'A widgetserver closure tool';
help::pkg.display.widgets.objs.popupselectmenu.c.popupselectmenu.s := 'popupselectmenu(fr, labels, font, relief, foreground, background, widgetset)';
help::pkg.display.widgets.objs.popupselectmenu.m.disable := [=];
help::pkg.display.widgets.objs.popupselectmenu.m.disable.d := 'Disable the popupselectmenu';
help::pkg.display.widgets.objs.popupselectmenu.m.disable.s := 'disable()';
help::pkg.display.widgets.objs.popupselectmenu.m.enable := [=];
help::pkg.display.widgets.objs.popupselectmenu.m.enable.d := 'Enable the popupselectmenu';
help::pkg.display.widgets.objs.popupselectmenu.m.enable.s := 'enable()';
help::pkg.display.widgets.objs.popupselectmenu.m.kill := [=];
help::pkg.display.widgets.objs.popupselectmenu.m.kill.d := 'Destroy ourselves';
help::pkg.display.widgets.objs.popupselectmenu.m.kill.s := 'kill()';
help::pkg.display.widgets.objs.profilewidthentry := [=];
help::pkg.display.widgets.objs.profilewidthentry.m := [=];
help::pkg.display.widgets.objs.profilewidthentry.c := [=];
help::pkg.display.widgets.objs.profilewidthentry.d := 'Widget to handle a 1-D profile width specification';
help::pkg.display.widgets.objs.profilewidthentry.c.profilewidthentry := [=];
help::pkg.display.widgets.objs.profilewidthentry.c.profilewidthentry.d := 'Construct a profilewidthentry widget';
help::pkg.display.widgets.objs.profilewidthentry.c.profilewidthentry.a.parent := [=];
help::pkg.display.widgets.objs.profilewidthentry.c.profilewidthentry.a.parent.d := 'Parent of the menu';
help::pkg.display.widgets.objs.profilewidthentry.c.profilewidthentry.a.parent.def := 'F';
help::pkg.display.widgets.objs.profilewidthentry.c.profilewidthentry.a.parent.a := 'Tk frame';
help::pkg.display.widgets.objs.profilewidthentry.c.profilewidthentry.a.relief := [=];
help::pkg.display.widgets.objs.profilewidthentry.c.profilewidthentry.a.relief.d := 'Relief for holder frame';
help::pkg.display.widgets.objs.profilewidthentry.c.profilewidthentry.a.relief.def := '\' raised\' ';
help::pkg.display.widgets.objs.profilewidthentry.c.profilewidthentry.a.relief.a := 'Standard Tk relief string';
help::pkg.display.widgets.objs.profilewidthentry.c.profilewidthentry.a.width := [=];
help::pkg.display.widgets.objs.profilewidthentry.c.profilewidthentry.a.width.d := 'Width for entry box';
help::pkg.display.widgets.objs.profilewidthentry.c.profilewidthentry.a.width.def := '10';
help::pkg.display.widgets.objs.profilewidthentry.c.profilewidthentry.a.width.a := 'Integer';
help::pkg.display.widgets.objs.profilewidthentry.c.profilewidthentry.a.widgetset := [=];
help::pkg.display.widgets.objs.profilewidthentry.c.profilewidthentry.a.widgetset.d := 'The widget server to use';
help::pkg.display.widgets.objs.profilewidthentry.c.profilewidthentry.a.widgetset.def := 'dws';
help::pkg.display.widgets.objs.profilewidthentry.c.profilewidthentry.a.widgetset.a := 'widgetserver tool';
help::pkg.display.widgets.objs.profilewidthentry.c.profilewidthentry.s := 'profilewidthentry(parent, relief, width, widgetset)';
help::pkg.display.widgets.objs.profilewidthentry.m.disable := [=];
help::pkg.display.widgets.objs.profilewidthentry.m.disable.d := 'Disable the widget';
help::pkg.display.widgets.objs.profilewidthentry.m.disable.s := 'disable()';
help::pkg.display.widgets.objs.profilewidthentry.m.enable := [=];
help::pkg.display.widgets.objs.profilewidthentry.m.enable.d := 'Enable the widget';
help::pkg.display.widgets.objs.profilewidthentry.m.enable.s := 'enable()';
help::pkg.display.widgets.objs.profilewidthentry.m.done := [=];
help::pkg.display.widgets.objs.profilewidthentry.m.done.d := 'Destroy ourselves';
help::pkg.display.widgets.objs.profilewidthentry.m.done.s := 'done()';
help::pkg.display.widgets.objs.profilewidthentry.m.getvalue := [=];
help::pkg.display.widgets.objs.profilewidthentry.m.getvalue.d := 'Get the value of the widget';
help::pkg.display.widgets.objs.profilewidthentry.m.getvalue.s := 'getvalue()';
help::pkg.display.widgets.objs.radiobuttons := [=];
help::pkg.display.widgets.objs.radiobuttons.m := [=];
help::pkg.display.widgets.objs.radiobuttons.c := [=];
help::pkg.display.widgets.objs.radiobuttons.d := 'Widget handling multiple selectable radio buttons';
help::pkg.display.widgets.objs.radiobuttons.c.radiobuttons := [=];
help::pkg.display.widgets.objs.radiobuttons.c.radiobuttons.d := 'Construct a radiobuttons widget';
help::pkg.display.widgets.objs.radiobuttons.c.radiobuttons.a.parent := [=];
help::pkg.display.widgets.objs.radiobuttons.c.radiobuttons.a.parent.d := 'Parent of the menu';
help::pkg.display.widgets.objs.radiobuttons.c.radiobuttons.a.parent.def := 'Standalone';
help::pkg.display.widgets.objs.radiobuttons.c.radiobuttons.a.parent.a := 'Widget';
help::pkg.display.widgets.objs.radiobuttons.c.radiobuttons.a.names := [=];
help::pkg.display.widgets.objs.radiobuttons.c.radiobuttons.a.names.d := 'The names of the buttons';
help::pkg.display.widgets.objs.radiobuttons.c.radiobuttons.a.names.def := 'None';
help::pkg.display.widgets.objs.radiobuttons.c.radiobuttons.a.names.a := 'Vector of strings';
help::pkg.display.widgets.objs.radiobuttons.c.radiobuttons.a.default := [=];
help::pkg.display.widgets.objs.radiobuttons.c.radiobuttons.a.default.d := 'Index of names for button that is initially selected';
help::pkg.display.widgets.objs.radiobuttons.c.radiobuttons.a.default.def := 'None';
help::pkg.display.widgets.objs.radiobuttons.c.radiobuttons.a.default.a := 'Integer';
help::pkg.display.widgets.objs.radiobuttons.c.radiobuttons.a.side := [=];
help::pkg.display.widgets.objs.radiobuttons.c.radiobuttons.a.side.d := 'Side to pack buttons in';
help::pkg.display.widgets.objs.radiobuttons.c.radiobuttons.a.side.def := '\' left\' ';
help::pkg.display.widgets.objs.radiobuttons.c.radiobuttons.a.side.a := 'String from \' left\' , \' right\' , \' top\' , \' bottom\' ';
help::pkg.display.widgets.objs.radiobuttons.c.radiobuttons.a.widgetset := [=];
help::pkg.display.widgets.objs.radiobuttons.c.radiobuttons.a.widgetset.d := 'The widget server to use';
help::pkg.display.widgets.objs.radiobuttons.c.radiobuttons.a.widgetset.def := 'dws';
help::pkg.display.widgets.objs.radiobuttons.c.radiobuttons.a.widgetset.a := 'widgetserver tool';
help::pkg.display.widgets.objs.radiobuttons.c.radiobuttons.s := 'radiobuttons(parent, names, default, side, widgetset)';
help::pkg.display.widgets.objs.radiobuttons.m.disabled := [=];
help::pkg.display.widgets.objs.radiobuttons.m.disabled.d := 'Disable or enable the widget';
help::pkg.display.widgets.objs.radiobuttons.m.disabled.a.disable := [=];
help::pkg.display.widgets.objs.radiobuttons.m.disabled.a.disable.d := 'disable widget';
help::pkg.display.widgets.objs.radiobuttons.m.disabled.a.disable.def := 'T';
help::pkg.display.widgets.objs.radiobuttons.m.disabled.a.disable.a := 'T or F';
help::pkg.display.widgets.objs.radiobuttons.m.disabled.a.allbuttons := [=];
help::pkg.display.widgets.objs.radiobuttons.m.disabled.a.allbuttons.d := 'apply to all buttons';
help::pkg.display.widgets.objs.radiobuttons.m.disabled.a.allbuttons.def := 'F';
help::pkg.display.widgets.objs.radiobuttons.m.disabled.a.allbuttons.a := 'T or F';
help::pkg.display.widgets.objs.radiobuttons.m.disabled.s := 'disabled(disable, allbuttons)';
help::pkg.display.widgets.objs.radiobuttons.m.disablebutton := [=];
help::pkg.display.widgets.objs.radiobuttons.m.disablebutton.d := 'Disable specific button';
help::pkg.display.widgets.objs.radiobuttons.m.disablebutton.a.idx := [=];
help::pkg.display.widgets.objs.radiobuttons.m.disablebutton.a.idx.d := 'Button number';
help::pkg.display.widgets.objs.radiobuttons.m.disablebutton.a.idx.def := '';
help::pkg.display.widgets.objs.radiobuttons.m.disablebutton.a.idx.a := 'Integer';
help::pkg.display.widgets.objs.radiobuttons.m.disablebutton.s := 'disablebutton(idx)';
help::pkg.display.widgets.objs.radiobuttons.m.done := [=];
help::pkg.display.widgets.objs.radiobuttons.m.done.d := 'Destroy ourselves';
help::pkg.display.widgets.objs.radiobuttons.m.done.s := 'done()';
help::pkg.display.widgets.objs.radiobuttons.m.enablebutton := [=];
help::pkg.display.widgets.objs.radiobuttons.m.enablebutton.d := 'Enable a specific button';
help::pkg.display.widgets.objs.radiobuttons.m.enablebutton.a.idx := [=];
help::pkg.display.widgets.objs.radiobuttons.m.enablebutton.a.idx.d := 'Button number';
help::pkg.display.widgets.objs.radiobuttons.m.enablebutton.a.idx.def := '';
help::pkg.display.widgets.objs.radiobuttons.m.enablebutton.a.idx.a := 'Integer';
help::pkg.display.widgets.objs.radiobuttons.m.enablebutton.s := 'enablebutton(idx)';
help::pkg.display.widgets.objs.radiobuttons.m.getvalue := [=];
help::pkg.display.widgets.objs.radiobuttons.m.getvalue.d := 'Get the value of the widget';
help::pkg.display.widgets.objs.radiobuttons.m.getvalue.s := 'getvalue()';
help::pkg.display.widgets.objs.radiobuttons.m.reset := [=];
help::pkg.display.widgets.objs.radiobuttons.m.reset.d := 'Reset the widget';
help::pkg.display.widgets.objs.radiobuttons.m.reset.a.idx := [=];
help::pkg.display.widgets.objs.radiobuttons.m.reset.a.idx.d := 'Set this button to T';
help::pkg.display.widgets.objs.radiobuttons.m.reset.a.idx.def := '-1';
help::pkg.display.widgets.objs.radiobuttons.m.reset.a.idx.a := 'Integer';
help::pkg.display.widgets.objs.radiobuttons.m.reset.s := 'reset(idx)';
help::pkg.display.widgets.objs.radiobuttons.m.setstate := [=];
help::pkg.display.widgets.objs.radiobuttons.m.setstate.d := 'Set the state of a specific button';
help::pkg.display.widgets.objs.radiobuttons.m.setstate.a.idx := [=];
help::pkg.display.widgets.objs.radiobuttons.m.setstate.a.idx.d := 'Button number';
help::pkg.display.widgets.objs.radiobuttons.m.setstate.a.idx.def := '';
help::pkg.display.widgets.objs.radiobuttons.m.setstate.a.idx.a := 'Integer';
help::pkg.display.widgets.objs.radiobuttons.m.setstate.a.state := [=];
help::pkg.display.widgets.objs.radiobuttons.m.setstate.a.state.d := 'State of button';
help::pkg.display.widgets.objs.radiobuttons.m.setstate.a.state.def := '';
help::pkg.display.widgets.objs.radiobuttons.m.setstate.a.state.a := 'T or F';
help::pkg.display.widgets.objs.radiobuttons.m.setstate.s := 'setstate(idx, state)';
help::pkg.display.widgets.objs.recordbrowserwidget := [=];
help::pkg.display.widgets.objs.recordbrowserwidget.m := [=];
help::pkg.display.widgets.objs.recordbrowserwidget.c := [=];
help::pkg.display.widgets.objs.recordbrowserwidget.d := 'AIPS++\ widget to view Glish records';
help::pkg.display.widgets.objs.recordbrowserwidget.c.recordbrowserwidget := [=];
help::pkg.display.widgets.objs.recordbrowserwidget.c.recordbrowserwidget.d := 'Construct a recordbrowserwidget';
help::pkg.display.widgets.objs.recordbrowserwidget.c.recordbrowserwidget.a.parent := [=];
help::pkg.display.widgets.objs.recordbrowserwidget.c.recordbrowserwidget.a.parent.d := 'Parent of the widget';
help::pkg.display.widgets.objs.recordbrowserwidget.c.recordbrowserwidget.a.parent.def := 'F';
help::pkg.display.widgets.objs.recordbrowserwidget.c.recordbrowserwidget.a.parent.a := 'Tk frame';
help::pkg.display.widgets.objs.recordbrowserwidget.c.recordbrowserwidget.a.therecord := [=];
help::pkg.display.widgets.objs.recordbrowserwidget.c.recordbrowserwidget.a.therecord.d := 'A valid Glish record (required)';
help::pkg.display.widgets.objs.recordbrowserwidget.c.recordbrowserwidget.a.therecord.def := '';
help::pkg.display.widgets.objs.recordbrowserwidget.c.recordbrowserwidget.a.therecord.a := 'a Glish record';
help::pkg.display.widgets.objs.recordbrowserwidget.c.recordbrowserwidget.a.readonly := [=];
help::pkg.display.widgets.objs.recordbrowserwidget.c.recordbrowserwidget.a.readonly.d := 'Flag to disallow editing';
help::pkg.display.widgets.objs.recordbrowserwidget.c.recordbrowserwidget.a.readonly.def := 'T';
help::pkg.display.widgets.objs.recordbrowserwidget.c.recordbrowserwidget.a.readonly.a := 'boolean';
help::pkg.display.widgets.objs.recordbrowserwidget.c.recordbrowserwidget.a.show := [=];
help::pkg.display.widgets.objs.recordbrowserwidget.c.recordbrowserwidget.a.show.d := 'Flag to display widget after contruction';
help::pkg.display.widgets.objs.recordbrowserwidget.c.recordbrowserwidget.a.show.def := 'T';
help::pkg.display.widgets.objs.recordbrowserwidget.c.recordbrowserwidget.a.show.a := 'boolean';
help::pkg.display.widgets.objs.recordbrowserwidget.c.recordbrowserwidget.a.width := [=];
help::pkg.display.widgets.objs.recordbrowserwidget.c.recordbrowserwidget.a.width.d := 'Initial width of the canvas';
help::pkg.display.widgets.objs.recordbrowserwidget.c.recordbrowserwidget.a.width.def := '400';
help::pkg.display.widgets.objs.recordbrowserwidget.c.recordbrowserwidget.a.width.a := 'Integer';
help::pkg.display.widgets.objs.recordbrowserwidget.c.recordbrowserwidget.a.font := [=];
help::pkg.display.widgets.objs.recordbrowserwidget.c.recordbrowserwidget.a.font.d := 'Font of text ';
help::pkg.display.widgets.objs.recordbrowserwidget.c.recordbrowserwidget.a.font.def := '\' \' ';
help::pkg.display.widgets.objs.recordbrowserwidget.c.recordbrowserwidget.a.font.a := 'X font';
help::pkg.display.widgets.objs.recordbrowserwidget.c.recordbrowserwidget.a.widgetset := [=];
help::pkg.display.widgets.objs.recordbrowserwidget.c.recordbrowserwidget.a.widgetset.d := 'Widget set to use';
help::pkg.display.widgets.objs.recordbrowserwidget.c.recordbrowserwidget.a.widgetset.def := 'dws';
help::pkg.display.widgets.objs.recordbrowserwidget.c.recordbrowserwidget.a.widgetset.a := 'A widgetserver closure tool';
help::pkg.display.widgets.objs.recordbrowserwidget.c.recordbrowserwidget.a.displaytable := [=];
help::pkg.display.widgets.objs.recordbrowserwidget.c.recordbrowserwidget.a.displaytable.d := 'Flag indicating table awareness';
help::pkg.display.widgets.objs.recordbrowserwidget.c.recordbrowserwidget.a.displaytable.def := 'T';
help::pkg.display.widgets.objs.recordbrowserwidget.c.recordbrowserwidget.a.displaytable.a := 'boolean';
help::pkg.display.widgets.objs.recordbrowserwidget.c.recordbrowserwidget.s := 'recordbrowserwidget(parent, therecord, readonly, show, width, font, widgetset, displaytable)';
help::pkg.display.widgets.objs.restoreregions := [=];
help::pkg.display.widgets.objs.restoreregions.m := [=];
help::pkg.display.widgets.objs.restoreregions.c := [=];
help::pkg.display.widgets.objs.restoreregions.d := 'Tk widget to restore image regions of interest from a table';
help::pkg.display.widgets.objs.restoreregions.c.restoreregions := [=];
help::pkg.display.widgets.objs.restoreregions.c.restoreregions.d := 'Construct a restoreregions widget';
help::pkg.display.widgets.objs.restoreregions.c.restoreregions.a.parent := [=];
help::pkg.display.widgets.objs.restoreregions.c.restoreregions.a.parent.d := 'Parent of the widget';
help::pkg.display.widgets.objs.restoreregions.c.restoreregions.a.parent.def := 'F';
help::pkg.display.widgets.objs.restoreregions.c.restoreregions.a.parent.a := 'Widget';
help::pkg.display.widgets.objs.restoreregions.c.restoreregions.a.table := [=];
help::pkg.display.widgets.objs.restoreregions.c.restoreregions.a.table.d := 'The table of interest';
help::pkg.display.widgets.objs.restoreregions.c.restoreregions.a.table.def := '\' \' ';
help::pkg.display.widgets.objs.restoreregions.c.restoreregions.a.table.a := 'Table tool, image tool or string';
help::pkg.display.widgets.objs.restoreregions.c.restoreregions.a.changenames := [=];
help::pkg.display.widgets.objs.restoreregions.c.restoreregions.a.changenames.d := 'Entry boxes to enable region name changes are provided';
help::pkg.display.widgets.objs.restoreregions.c.restoreregions.a.changenames.def := 'T';
help::pkg.display.widgets.objs.restoreregions.c.restoreregions.a.changenames.a := 'T or F';
help::pkg.display.widgets.objs.restoreregions.c.restoreregions.a.globalrestore := [=];
help::pkg.display.widgets.objs.restoreregions.c.restoreregions.a.globalrestore.d := 'Restore to global name space or a record';
help::pkg.display.widgets.objs.restoreregions.c.restoreregions.a.globalrestore.def := 'F';
help::pkg.display.widgets.objs.restoreregions.c.restoreregions.a.globalrestore.a := 'T or F';
help::pkg.display.widgets.objs.restoreregions.c.restoreregions.a.widgetset := [=];
help::pkg.display.widgets.objs.restoreregions.c.restoreregions.a.widgetset.d := 'The widget server to use';
help::pkg.display.widgets.objs.restoreregions.c.restoreregions.a.widgetset.def := 'dws';
help::pkg.display.widgets.objs.restoreregions.c.restoreregions.a.widgetset.a := 'widgetserver tool';
help::pkg.display.widgets.objs.restoreregions.c.restoreregions.s := 'restoreregions(parent, table, changenames, globalrestore, widgetset)';
help::pkg.display.widgets.objs.restoreregions.m.done := [=];
help::pkg.display.widgets.objs.restoreregions.m.done.d := 'Destroy ourselves';
help::pkg.display.widgets.objs.restoreregions.m.done.s := 'done()';
help::pkg.display.widgets.objs.restoreregions.m.gui := [=];
help::pkg.display.widgets.objs.restoreregions.m.gui.d := 'Restart the GUI';
help::pkg.display.widgets.objs.restoreregions.m.gui.s := 'gui()';
help::pkg.display.widgets.objs.restoreregions.m.refresh := [=];
help::pkg.display.widgets.objs.restoreregions.m.refresh.d := 'Refresh the display';
help::pkg.display.widgets.objs.restoreregions.m.refresh.s := 'refresh()';
help::pkg.display.widgets.objs.restoreregions.m.regions := [=];
help::pkg.display.widgets.objs.restoreregions.m.regions.d := 'Recover the selected regions from the Table into a record';
help::pkg.display.widgets.objs.restoreregions.m.regions.s := 'regions()';
help::pkg.display.widgets.objs.restoreregions.m.settable := [=];
help::pkg.display.widgets.objs.restoreregions.m.settable.d := 'Set a (new) table';
help::pkg.display.widgets.objs.restoreregions.m.settable.a.table := [=];
help::pkg.display.widgets.objs.restoreregions.m.settable.a.table.d := 'The table of interest';
help::pkg.display.widgets.objs.restoreregions.m.settable.a.table.def := '\' \' ';
help::pkg.display.widgets.objs.restoreregions.m.settable.a.table.a := 'Table tool, image tool or string';
help::pkg.display.widgets.objs.restoreregions.m.settable.s := 'settable(table)';
help::pkg.display.widgets.objs.rollup := [=];
help::pkg.display.widgets.objs.rollup.m := [=];
help::pkg.display.widgets.objs.rollup.c := [=];
help::pkg.display.widgets.objs.rollup.d := 'Tk widget to hide and expose an embedded frame on demand';
help::pkg.display.widgets.objs.rollup.c.rollup := [=];
help::pkg.display.widgets.objs.rollup.c.rollup.d := 'Construct a rollup';
help::pkg.display.widgets.objs.rollup.c.rollup.a.parent := [=];
help::pkg.display.widgets.objs.rollup.c.rollup.a.parent.d := 'Parent of the menu';
help::pkg.display.widgets.objs.rollup.c.rollup.a.parent.def := '';
help::pkg.display.widgets.objs.rollup.c.rollup.a.parent.a := 'Tk frame';
help::pkg.display.widgets.objs.rollup.c.rollup.a.font := [=];
help::pkg.display.widgets.objs.rollup.c.rollup.a.font.d := 'Font of text ';
help::pkg.display.widgets.objs.rollup.c.rollup.a.font.def := '\' \' ';
help::pkg.display.widgets.objs.rollup.c.rollup.a.font.a := 'X font';
help::pkg.display.widgets.objs.rollup.c.rollup.a.relief := [=];
help::pkg.display.widgets.objs.rollup.c.rollup.a.relief.d := 'Edge relief';
help::pkg.display.widgets.objs.rollup.c.rollup.a.relief.def := '\' flat\' ';
help::pkg.display.widgets.objs.rollup.c.rollup.a.relief.a := 'String from `flat\' , `ridge\' ,                                             `raised\' , `sunken\' , `groove\' ';
help::pkg.display.widgets.objs.rollup.c.rollup.a.borderwidth := [=];
help::pkg.display.widgets.objs.rollup.c.rollup.a.borderwidth.d := 'Border width';
help::pkg.display.widgets.objs.rollup.c.rollup.a.borderwidth.def := '2';
help::pkg.display.widgets.objs.rollup.c.rollup.a.borderwidth.a := 'Integer';
help::pkg.display.widgets.objs.rollup.c.rollup.a.side := [=];
help::pkg.display.widgets.objs.rollup.c.rollup.a.side.d := 'Direction for child placement';
help::pkg.display.widgets.objs.rollup.c.rollup.a.side.def := '\' top\' ';
help::pkg.display.widgets.objs.rollup.c.rollup.a.side.a := 'String from 	\' top\' , \' left\' , \' right\' , \' bottom\' ';
help::pkg.display.widgets.objs.rollup.c.rollup.a.padx := [=];
help::pkg.display.widgets.objs.rollup.c.rollup.a.padx.d := 'Horizontal padding around text';
help::pkg.display.widgets.objs.rollup.c.rollup.a.padx.def := '0';
help::pkg.display.widgets.objs.rollup.c.rollup.a.padx.a := 'Integer';
help::pkg.display.widgets.objs.rollup.c.rollup.a.pady := [=];
help::pkg.display.widgets.objs.rollup.c.rollup.a.pady.d := 'Vertical padding around text';
help::pkg.display.widgets.objs.rollup.c.rollup.a.pady.def := '0';
help::pkg.display.widgets.objs.rollup.c.rollup.a.pady.a := 'Integer';
help::pkg.display.widgets.objs.rollup.c.rollup.a.expand := [=];
help::pkg.display.widgets.objs.rollup.c.rollup.a.expand.d := 'How to expand when resized';
help::pkg.display.widgets.objs.rollup.c.rollup.a.expand.def := '\' both\' ';
help::pkg.display.widgets.objs.rollup.c.rollup.a.expand.a := 'String from `x\' , `y\' , `both\' , `none\' ';
help::pkg.display.widgets.objs.rollup.c.rollup.a.foreground := [=];
help::pkg.display.widgets.objs.rollup.c.rollup.a.foreground.d := 'Color of text';
help::pkg.display.widgets.objs.rollup.c.rollup.a.foreground.def := '`black\' ';
help::pkg.display.widgets.objs.rollup.c.rollup.a.foreground.a := 'X color';
help::pkg.display.widgets.objs.rollup.c.rollup.a.background := [=];
help::pkg.display.widgets.objs.rollup.c.rollup.a.background.d := 'Background color';
help::pkg.display.widgets.objs.rollup.c.rollup.a.background.def := '`lightgrey\' ';
help::pkg.display.widgets.objs.rollup.c.rollup.a.background.a := 'X color';
help::pkg.display.widgets.objs.rollup.c.rollup.a.title := [=];
help::pkg.display.widgets.objs.rollup.c.rollup.a.title.d := 'String displayed at top of widget';
help::pkg.display.widgets.objs.rollup.c.rollup.a.title.def := '\' \' ';
help::pkg.display.widgets.objs.rollup.c.rollup.a.title.a := 'String';
help::pkg.display.widgets.objs.rollup.c.rollup.a.titleforeground := [=];
help::pkg.display.widgets.objs.rollup.c.rollup.a.titleforeground.d := 'Color of title text';
help::pkg.display.widgets.objs.rollup.c.rollup.a.titleforeground.def := '`black\' ';
help::pkg.display.widgets.objs.rollup.c.rollup.a.titleforeground.a := 'X color';
help::pkg.display.widgets.objs.rollup.c.rollup.a.titlebackground := [=];
help::pkg.display.widgets.objs.rollup.c.rollup.a.titlebackground.d := 'Background title color';
help::pkg.display.widgets.objs.rollup.c.rollup.a.titlebackground.def := '`lightgrey\' ';
help::pkg.display.widgets.objs.rollup.c.rollup.a.titlebackground.a := 'X color';
help::pkg.display.widgets.objs.rollup.c.rollup.a.show := [=];
help::pkg.display.widgets.objs.rollup.c.rollup.a.show.d := 'Whether to expose frame immediately';
help::pkg.display.widgets.objs.rollup.c.rollup.a.show.def := 'T';
help::pkg.display.widgets.objs.rollup.c.rollup.a.show.a := 'Boolean';
help::pkg.display.widgets.objs.rollup.c.rollup.a.widgetset := [=];
help::pkg.display.widgets.objs.rollup.c.rollup.a.widgetset.d := 'Widget set to use';
help::pkg.display.widgets.objs.rollup.c.rollup.a.widgetset.def := 'dws';
help::pkg.display.widgets.objs.rollup.c.rollup.a.widgetset.a := 'A widgetserver closure tool';
help::pkg.display.widgets.objs.rollup.c.rollup.s := 'rollup(parent, font, relief, borderwidth, side, padx, pady, expand, foreground, background, title, titleforeground, titlebackground, show, widgetset)';
help::pkg.display.widgets.objs.rollup.m.frame := [=];
help::pkg.display.widgets.objs.rollup.m.frame.d := 'Return the embedded frame for use';
help::pkg.display.widgets.objs.rollup.m.frame.s := 'frame()';
help::pkg.display.widgets.objs.rollup.m.switch := [=];
help::pkg.display.widgets.objs.rollup.m.switch.d := 'Flip the visible state of the rollup';
help::pkg.display.widgets.objs.rollup.m.switch.s := 'switch()';
help::pkg.display.widgets.objs.rollup.m.down := [=];
help::pkg.display.widgets.objs.rollup.m.down.d := 'Show the rollup contents';
help::pkg.display.widgets.objs.rollup.m.down.s := 'down()';
help::pkg.display.widgets.objs.rollup.m.up := [=];
help::pkg.display.widgets.objs.rollup.m.up.d := 'Hide the rollup contents';
help::pkg.display.widgets.objs.rollup.m.up.s := 'up()';
help::pkg.display.widgets.objs.rollup.m.disable := [=];
help::pkg.display.widgets.objs.rollup.m.disable.d := 'Disable the rollup';
help::pkg.display.widgets.objs.rollup.m.disable.s := 'disable()';
help::pkg.display.widgets.objs.rollup.m.enable := [=];
help::pkg.display.widgets.objs.rollup.m.enable.d := 'Enable the rollup';
help::pkg.display.widgets.objs.rollup.m.enable.s := 'enable()';
help::pkg.display.widgets.objs.rollup.m.hidden := [=];
help::pkg.display.widgets.objs.rollup.m.hidden.d := 'Is the rollup hidden ?';
help::pkg.display.widgets.objs.rollup.m.hidden.s := 'hidden()';
help::pkg.display.widgets.objs.rollup.m.done := [=];
help::pkg.display.widgets.objs.rollup.m.done.d := 'Destroy ourselves';
help::pkg.display.widgets.objs.rollup.m.done.s := 'done()';
help::pkg.display.widgets.objs.rollup.m.setpopuphelp := [=];
help::pkg.display.widgets.objs.rollup.m.setpopuphelp.d := 'Set new popuphelp';
help::pkg.display.widgets.objs.rollup.m.setpopuphelp.a.short := [=];
help::pkg.display.widgets.objs.rollup.m.setpopuphelp.a.short.d := 'Short help';
help::pkg.display.widgets.objs.rollup.m.setpopuphelp.a.short.def := '';
help::pkg.display.widgets.objs.rollup.m.setpopuphelp.a.short.a := 'String';
help::pkg.display.widgets.objs.rollup.m.setpopuphelp.a.long := [=];
help::pkg.display.widgets.objs.rollup.m.setpopuphelp.a.long.d := 'Long help';
help::pkg.display.widgets.objs.rollup.m.setpopuphelp.a.long.def := 'Unset';
help::pkg.display.widgets.objs.rollup.m.setpopuphelp.a.long.a := 'String';
help::pkg.display.widgets.objs.rollup.m.setpopuphelp.a.width := [=];
help::pkg.display.widgets.objs.rollup.m.setpopuphelp.a.width.d := 'Width of short help';
help::pkg.display.widgets.objs.rollup.m.setpopuphelp.a.width.def := '60';
help::pkg.display.widgets.objs.rollup.m.setpopuphelp.a.width.a := 'Integer';
help::pkg.display.widgets.objs.rollup.m.setpopuphelp.s := 'setpopuphelp(short, long, width)';
help::pkg.display.widgets.objs.saveregions := [=];
help::pkg.display.widgets.objs.saveregions.m := [=];
help::pkg.display.widgets.objs.saveregions.c := [=];
help::pkg.display.widgets.objs.saveregions.d := 'Tk widget to save image regions to a Table';
help::pkg.display.widgets.objs.saveregions.c.saveregions := [=];
help::pkg.display.widgets.objs.saveregions.c.saveregions.d := 'Construct a saveregions widget';
help::pkg.display.widgets.objs.saveregions.c.saveregions.a.parent := [=];
help::pkg.display.widgets.objs.saveregions.c.saveregions.a.parent.d := 'Parent of the widget';
help::pkg.display.widgets.objs.saveregions.c.saveregions.a.parent.def := 'F';
help::pkg.display.widgets.objs.saveregions.c.saveregions.a.parent.a := 'Widget';
help::pkg.display.widgets.objs.saveregions.c.saveregions.a.table := [=];
help::pkg.display.widgets.objs.saveregions.c.saveregions.a.table.d := 'The table of interest';
help::pkg.display.widgets.objs.saveregions.c.saveregions.a.table.def := '\' \' ';
help::pkg.display.widgets.objs.saveregions.c.saveregions.a.table.a := 'Table tool, image tool or string';
help::pkg.display.widgets.objs.saveregions.c.saveregions.a.regions := [=];
help::pkg.display.widgets.objs.saveregions.c.saveregions.a.regions.d := 'The regions to save, or the region names';
help::pkg.display.widgets.objs.saveregions.c.saveregions.a.regions.def := '';
help::pkg.display.widgets.objs.saveregions.c.saveregions.a.regions.a := 'Record of regions or vector of strings';
help::pkg.display.widgets.objs.saveregions.c.saveregions.a.changenames := [=];
help::pkg.display.widgets.objs.saveregions.c.saveregions.a.changenames.d := 'Entry boxes to enable region name changes are provided';
help::pkg.display.widgets.objs.saveregions.c.saveregions.a.changenames.def := 'T';
help::pkg.display.widgets.objs.saveregions.c.saveregions.a.changenames.a := 'T or F';
help::pkg.display.widgets.objs.saveregions.c.saveregions.a.globalsave := [=];
help::pkg.display.widgets.objs.saveregions.c.saveregions.a.globalsave.d := 'The regions are saved from global name space or a record';
help::pkg.display.widgets.objs.saveregions.c.saveregions.a.globalsave.def := 'F';
help::pkg.display.widgets.objs.saveregions.c.saveregions.a.globalsave.a := 'T or F';
help::pkg.display.widgets.objs.saveregions.c.saveregions.a.widgetset := [=];
help::pkg.display.widgets.objs.saveregions.c.saveregions.a.widgetset.d := 'The widget server to use';
help::pkg.display.widgets.objs.saveregions.c.saveregions.a.widgetset.def := 'dws';
help::pkg.display.widgets.objs.saveregions.c.saveregions.a.widgetset.a := 'widgetserver tool';
help::pkg.display.widgets.objs.saveregions.c.saveregions.s := 'saveregions(parent, table, regions, changenames, globalsave, widgetset)';
help::pkg.display.widgets.objs.saveregions.m.done := [=];
help::pkg.display.widgets.objs.saveregions.m.done.d := 'Destroy ourselves';
help::pkg.display.widgets.objs.saveregions.m.done.s := 'done()';
help::pkg.display.widgets.objs.saveregions.m.gui := [=];
help::pkg.display.widgets.objs.saveregions.m.gui.d := 'Restart the GUI';
help::pkg.display.widgets.objs.saveregions.m.gui.s := 'gui()';
help::pkg.display.widgets.objs.saveregions.m.setregions := [=];
help::pkg.display.widgets.objs.saveregions.m.setregions.d := 'Set new regions to save';
help::pkg.display.widgets.objs.saveregions.m.setregions.a.regions := [=];
help::pkg.display.widgets.objs.saveregions.m.setregions.a.regions.d := 'Regions or region names';
help::pkg.display.widgets.objs.saveregions.m.setregions.a.regions.def := '';
help::pkg.display.widgets.objs.saveregions.m.setregions.a.regions.a := 'Record of regions or vector of strings';
help::pkg.display.widgets.objs.saveregions.m.setregions.s := 'setregions(regions)';
help::pkg.display.widgets.objs.saveregions.m.settable := [=];
help::pkg.display.widgets.objs.saveregions.m.settable.d := 'Set a (new) table';
help::pkg.display.widgets.objs.saveregions.m.settable.a.table := [=];
help::pkg.display.widgets.objs.saveregions.m.settable.a.table.d := 'The table of interest';
help::pkg.display.widgets.objs.saveregions.m.settable.a.table.def := '\' \' ';
help::pkg.display.widgets.objs.saveregions.m.settable.a.table.a := 'Table tool, image tool or string';
help::pkg.display.widgets.objs.saveregions.m.settable.s := 'settable(table)';
help::pkg.display.widgets.objs.scrolllistbox := [=];
help::pkg.display.widgets.objs.scrolllistbox.m := [=];
help::pkg.display.widgets.objs.scrolllistbox.c := [=];
help::pkg.display.widgets.objs.scrolllistbox.d := 'A Tk listbox with optional scrollbars.';
help::pkg.display.widgets.objs.scrolllistbox.c.scrolllistbox := [=];
help::pkg.display.widgets.objs.scrolllistbox.c.scrolllistbox.d := 'Construct a scrolllistbox';
help::pkg.display.widgets.objs.scrolllistbox.c.scrolllistbox.a.parent := [=];
help::pkg.display.widgets.objs.scrolllistbox.c.scrolllistbox.a.parent.d := 'Parent of the scrolllistbox';
help::pkg.display.widgets.objs.scrolllistbox.c.scrolllistbox.a.parent.def := '';
help::pkg.display.widgets.objs.scrolllistbox.c.scrolllistbox.a.parent.a := 'Tk frame';
help::pkg.display.widgets.objs.scrolllistbox.c.scrolllistbox.a.hscrollbar := [=];
help::pkg.display.widgets.objs.scrolllistbox.c.scrolllistbox.a.hscrollbar.d := 'Show a horizontal scrollbar?';
help::pkg.display.widgets.objs.scrolllistbox.c.scrolllistbox.a.hscrollbar.def := 'T';
help::pkg.display.widgets.objs.scrolllistbox.c.scrolllistbox.a.hscrollbar.a := 'Boolean';
help::pkg.display.widgets.objs.scrolllistbox.c.scrolllistbox.a.vscrollbar := [=];
help::pkg.display.widgets.objs.scrolllistbox.c.scrolllistbox.a.vscrollbar.d := 'Show a vertical scrollbar?';
help::pkg.display.widgets.objs.scrolllistbox.c.scrolllistbox.a.vscrollbar.def := 'T';
help::pkg.display.widgets.objs.scrolllistbox.c.scrolllistbox.a.vscrollbar.a := 'Boolean';
help::pkg.display.widgets.objs.scrolllistbox.c.scrolllistbox.a.vscrollbarright := [=];
help::pkg.display.widgets.objs.scrolllistbox.c.scrolllistbox.a.vscrollbarright.d := 'Show vertical scrollbar on right? (F=left)';
help::pkg.display.widgets.objs.scrolllistbox.c.scrolllistbox.a.vscrollbarright.def := 'T';
help::pkg.display.widgets.objs.scrolllistbox.c.scrolllistbox.a.vscrollbarright.a := 'Boolean';
help::pkg.display.widgets.objs.scrolllistbox.c.scrolllistbox.a.seeoninsert := [=];
help::pkg.display.widgets.objs.scrolllistbox.c.scrolllistbox.a.seeoninsert.d := 'See the end after each insert?';
help::pkg.display.widgets.objs.scrolllistbox.c.scrolllistbox.a.seeoninsert.def := 'T';
help::pkg.display.widgets.objs.scrolllistbox.c.scrolllistbox.a.seeoninsert.a := 'Boolean';
help::pkg.display.widgets.objs.scrolllistbox.c.scrolllistbox.a.width := [=];
help::pkg.display.widgets.objs.scrolllistbox.c.scrolllistbox.a.width.d := 'Width in characters units';
help::pkg.display.widgets.objs.scrolllistbox.c.scrolllistbox.a.width.def := '20';
help::pkg.display.widgets.objs.scrolllistbox.c.scrolllistbox.a.width.a := 'Integer';
help::pkg.display.widgets.objs.scrolllistbox.c.scrolllistbox.a.height := [=];
help::pkg.display.widgets.objs.scrolllistbox.c.scrolllistbox.a.height.d := 'Height in characters units';
help::pkg.display.widgets.objs.scrolllistbox.c.scrolllistbox.a.height.def := '6';
help::pkg.display.widgets.objs.scrolllistbox.c.scrolllistbox.a.height.a := 'Integer';
help::pkg.display.widgets.objs.scrolllistbox.c.scrolllistbox.a.mode := [=];
help::pkg.display.widgets.objs.scrolllistbox.c.scrolllistbox.a.mode.d := 'Listbox mode';
help::pkg.display.widgets.objs.scrolllistbox.c.scrolllistbox.a.mode.def := '`browse\' ';
help::pkg.display.widgets.objs.scrolllistbox.c.scrolllistbox.a.mode.a := 'String from `browse\' , `single\' , 						`extended\' , `multiple\' ';
help::pkg.display.widgets.objs.scrolllistbox.c.scrolllistbox.a.font := [=];
help::pkg.display.widgets.objs.scrolllistbox.c.scrolllistbox.a.font.d := 'Font of text ';
help::pkg.display.widgets.objs.scrolllistbox.c.scrolllistbox.a.font.def := '`\' ';
help::pkg.display.widgets.objs.scrolllistbox.c.scrolllistbox.a.font.a := 'X font';
help::pkg.display.widgets.objs.scrolllistbox.c.scrolllistbox.a.relief := [=];
help::pkg.display.widgets.objs.scrolllistbox.c.scrolllistbox.a.relief.d := 'Edge relief';
help::pkg.display.widgets.objs.scrolllistbox.c.scrolllistbox.a.relief.def := '`sunken\' ';
help::pkg.display.widgets.objs.scrolllistbox.c.scrolllistbox.a.relief.a := 'String from `flat\' , `ridge\' ,                                             `raised\' , `sunken\' , `groove\' ';
help::pkg.display.widgets.objs.scrolllistbox.c.scrolllistbox.a.borderwidth := [=];
help::pkg.display.widgets.objs.scrolllistbox.c.scrolllistbox.a.borderwidth.d := 'Border width';
help::pkg.display.widgets.objs.scrolllistbox.c.scrolllistbox.a.borderwidth.def := '2';
help::pkg.display.widgets.objs.scrolllistbox.c.scrolllistbox.a.borderwidth.a := 'Integer';
help::pkg.display.widgets.objs.scrolllistbox.c.scrolllistbox.a.foreground := [=];
help::pkg.display.widgets.objs.scrolllistbox.c.scrolllistbox.a.foreground.d := 'Color of text';
help::pkg.display.widgets.objs.scrolllistbox.c.scrolllistbox.a.foreground.def := '`black\' ';
help::pkg.display.widgets.objs.scrolllistbox.c.scrolllistbox.a.foreground.a := 'X color';
help::pkg.display.widgets.objs.scrolllistbox.c.scrolllistbox.a.background := [=];
help::pkg.display.widgets.objs.scrolllistbox.c.scrolllistbox.a.background.d := 'Background color';
help::pkg.display.widgets.objs.scrolllistbox.c.scrolllistbox.a.background.def := '`lightgrey\' ';
help::pkg.display.widgets.objs.scrolllistbox.c.scrolllistbox.a.background.a := 'X color';
help::pkg.display.widgets.objs.scrolllistbox.c.scrolllistbox.a.exportselection := [=];
help::pkg.display.widgets.objs.scrolllistbox.c.scrolllistbox.a.exportselection.d := 'export to X clipboard?';
help::pkg.display.widgets.objs.scrolllistbox.c.scrolllistbox.a.exportselection.def := 'F';
help::pkg.display.widgets.objs.scrolllistbox.c.scrolllistbox.a.exportselection.a := 'Boolean';
help::pkg.display.widgets.objs.scrolllistbox.c.scrolllistbox.a.fill := [=];
help::pkg.display.widgets.objs.scrolllistbox.c.scrolllistbox.a.fill.d := 'how to expand when resized';
help::pkg.display.widgets.objs.scrolllistbox.c.scrolllistbox.a.fill.def := '`both\' ';
help::pkg.display.widgets.objs.scrolllistbox.c.scrolllistbox.a.fill.a := 'String from `x\' , `y\' , 							`both\' , `none\' ';
help::pkg.display.widgets.objs.scrolllistbox.c.scrolllistbox.a.widgetset := [=];
help::pkg.display.widgets.objs.scrolllistbox.c.scrolllistbox.a.widgetset.d := 'Widget set to use';
help::pkg.display.widgets.objs.scrolllistbox.c.scrolllistbox.a.widgetset.def := 'dws';
help::pkg.display.widgets.objs.scrolllistbox.c.scrolllistbox.a.widgetset.a := 'A widgetserver closure tool';
help::pkg.display.widgets.objs.scrolllistbox.c.scrolllistbox.s := 'scrolllistbox(parent, hscrollbar, vscrollbar, vscrollbarright, seeoninsert, width, height, mode, font, relief, borderwidth, foreground, background, exportselection, fill, widgetset)';
help::pkg.display.widgets.objs.scrolllistbox.m.listbox := [=];
help::pkg.display.widgets.objs.scrolllistbox.m.listbox.d := 'Return the underlying listbox agent';
help::pkg.display.widgets.objs.scrolllistbox.m.listbox.s := 'listbox()';
help::pkg.display.widgets.objs.scrolllistbox.m.done := [=];
help::pkg.display.widgets.objs.scrolllistbox.m.done.d := 'Destroy ourselves';
help::pkg.display.widgets.objs.scrolllistbox.m.done.s := 'done()';
help::pkg.display.widgets.objs.scrolllistbox.m.hscrollbar := [=];
help::pkg.display.widgets.objs.scrolllistbox.m.hscrollbar.d := 'Turn on or off the horizontal scrollbar';
help::pkg.display.widgets.objs.scrolllistbox.m.hscrollbar.a.torf := [=];
help::pkg.display.widgets.objs.scrolllistbox.m.hscrollbar.a.torf.d := 'Show a horizontal scrollbar?';
help::pkg.display.widgets.objs.scrolllistbox.m.hscrollbar.a.torf.def := '';
help::pkg.display.widgets.objs.scrolllistbox.m.hscrollbar.a.torf.a := 'Boolean';
help::pkg.display.widgets.objs.scrolllistbox.m.hscrollbar.s := 'hscrollbar(torf)';
help::pkg.display.widgets.objs.scrolllistbox.m.vscrollbar := [=];
help::pkg.display.widgets.objs.scrolllistbox.m.vscrollbar.d := 'Turn on or off the vertical scrollbar';
help::pkg.display.widgets.objs.scrolllistbox.m.vscrollbar.a.torf := [=];
help::pkg.display.widgets.objs.scrolllistbox.m.vscrollbar.a.torf.d := 'Show a vertical scrollbar?';
help::pkg.display.widgets.objs.scrolllistbox.m.vscrollbar.a.torf.def := '';
help::pkg.display.widgets.objs.scrolllistbox.m.vscrollbar.a.torf.a := 'Boolean';
help::pkg.display.widgets.objs.scrolllistbox.m.vscrollbar.s := 'vscrollbar(torf)';
help::pkg.display.widgets.objs.scrolllistbox.m.seeoninsert := [=];
help::pkg.display.widgets.objs.scrolllistbox.m.seeoninsert.d := 'See the end after each insert?';
help::pkg.display.widgets.objs.scrolllistbox.m.seeoninsert.a.torf := [=];
help::pkg.display.widgets.objs.scrolllistbox.m.seeoninsert.a.torf.d := 'See the end after each insert?';
help::pkg.display.widgets.objs.scrolllistbox.m.seeoninsert.a.torf.def := '';
help::pkg.display.widgets.objs.scrolllistbox.m.seeoninsert.a.torf.a := 'Boolean';
help::pkg.display.widgets.objs.scrolllistbox.m.seeoninsert.s := 'seeoninsert(torf)';
help::pkg.display.widgets.objs.scrolltext := [=];
help::pkg.display.widgets.objs.scrolltext.m := [=];
help::pkg.display.widgets.objs.scrolltext.c := [=];
help::pkg.display.widgets.objs.scrolltext.d := 'A Tk text widget with optional scrollbars.';
help::pkg.display.widgets.objs.scrolltext.c.scrolltext := [=];
help::pkg.display.widgets.objs.scrolltext.c.scrolltext.d := 'Construct a scrolltext';
help::pkg.display.widgets.objs.scrolltext.c.scrolltext.a.parent := [=];
help::pkg.display.widgets.objs.scrolltext.c.scrolltext.a.parent.d := 'Parent of the scrolltext';
help::pkg.display.widgets.objs.scrolltext.c.scrolltext.a.parent.def := '';
help::pkg.display.widgets.objs.scrolltext.c.scrolltext.a.parent.a := 'Tk frame';
help::pkg.display.widgets.objs.scrolltext.c.scrolltext.a.hscrollbar := [=];
help::pkg.display.widgets.objs.scrolltext.c.scrolltext.a.hscrollbar.d := 'Show a horizontal scrollbar?';
help::pkg.display.widgets.objs.scrolltext.c.scrolltext.a.hscrollbar.def := 'T';
help::pkg.display.widgets.objs.scrolltext.c.scrolltext.a.hscrollbar.a := 'Boolean';
help::pkg.display.widgets.objs.scrolltext.c.scrolltext.a.vscrollbar := [=];
help::pkg.display.widgets.objs.scrolltext.c.scrolltext.a.vscrollbar.d := 'Show a vertical scrollbar?';
help::pkg.display.widgets.objs.scrolltext.c.scrolltext.a.vscrollbar.def := 'T';
help::pkg.display.widgets.objs.scrolltext.c.scrolltext.a.vscrollbar.a := 'Boolean';
help::pkg.display.widgets.objs.scrolltext.c.scrolltext.a.width := [=];
help::pkg.display.widgets.objs.scrolltext.c.scrolltext.a.width.d := 'Width in characters units';
help::pkg.display.widgets.objs.scrolltext.c.scrolltext.a.width.def := '30';
help::pkg.display.widgets.objs.scrolltext.c.scrolltext.a.width.a := 'Integer';
help::pkg.display.widgets.objs.scrolltext.c.scrolltext.a.height := [=];
help::pkg.display.widgets.objs.scrolltext.c.scrolltext.a.height.d := 'Height in characters units';
help::pkg.display.widgets.objs.scrolltext.c.scrolltext.a.height.def := '8';
help::pkg.display.widgets.objs.scrolltext.c.scrolltext.a.height.a := 'Integer';
help::pkg.display.widgets.objs.scrolltext.c.scrolltext.a.wrap := [=];
help::pkg.display.widgets.objs.scrolltext.c.scrolltext.a.wrap.d := 'Wrap line behaviour';
help::pkg.display.widgets.objs.scrolltext.c.scrolltext.a.wrap.def := '\' none\' ';
help::pkg.display.widgets.objs.scrolltext.c.scrolltext.a.wrap.a := 'String from \' none\' , \' word\' , \' char\' ';
help::pkg.display.widgets.objs.scrolltext.c.scrolltext.a.font := [=];
help::pkg.display.widgets.objs.scrolltext.c.scrolltext.a.font.d := 'Font of text ';
help::pkg.display.widgets.objs.scrolltext.c.scrolltext.a.font.def := '`\' ';
help::pkg.display.widgets.objs.scrolltext.c.scrolltext.a.font.a := 'X font';
help::pkg.display.widgets.objs.scrolltext.c.scrolltext.a.disabled := [=];
help::pkg.display.widgets.objs.scrolltext.c.scrolltext.a.disabled.d := 'Is widget disabled ?';
help::pkg.display.widgets.objs.scrolltext.c.scrolltext.a.disabled.def := 'F';
help::pkg.display.widgets.objs.scrolltext.c.scrolltext.a.disabled.a := 'T or F';
help::pkg.display.widgets.objs.scrolltext.c.scrolltext.a.text := [=];
help::pkg.display.widgets.objs.scrolltext.c.scrolltext.a.text.d := 'Initial text';
help::pkg.display.widgets.objs.scrolltext.c.scrolltext.a.text.def := 'None';
help::pkg.display.widgets.objs.scrolltext.c.scrolltext.a.text.a := 'String';
help::pkg.display.widgets.objs.scrolltext.c.scrolltext.a.relief := [=];
help::pkg.display.widgets.objs.scrolltext.c.scrolltext.a.relief.d := 'Edge relief';
help::pkg.display.widgets.objs.scrolltext.c.scrolltext.a.relief.def := '`flat\' ';
help::pkg.display.widgets.objs.scrolltext.c.scrolltext.a.relief.a := 'String from `flat\' , `ridge\' ,                                           `raised\' , `sunken\' , `groove\' ';
help::pkg.display.widgets.objs.scrolltext.c.scrolltext.a.borderwidth := [=];
help::pkg.display.widgets.objs.scrolltext.c.scrolltext.a.borderwidth.d := 'Border width';
help::pkg.display.widgets.objs.scrolltext.c.scrolltext.a.borderwidth.def := '2';
help::pkg.display.widgets.objs.scrolltext.c.scrolltext.a.borderwidth.a := 'Integer';
help::pkg.display.widgets.objs.scrolltext.c.scrolltext.a.foreground := [=];
help::pkg.display.widgets.objs.scrolltext.c.scrolltext.a.foreground.d := 'Color of text';
help::pkg.display.widgets.objs.scrolltext.c.scrolltext.a.foreground.def := '`black\' ';
help::pkg.display.widgets.objs.scrolltext.c.scrolltext.a.foreground.a := 'X color';
help::pkg.display.widgets.objs.scrolltext.c.scrolltext.a.background := [=];
help::pkg.display.widgets.objs.scrolltext.c.scrolltext.a.background.d := 'Background color';
help::pkg.display.widgets.objs.scrolltext.c.scrolltext.a.background.def := '`lightgrey\' ';
help::pkg.display.widgets.objs.scrolltext.c.scrolltext.a.background.a := 'X color';
help::pkg.display.widgets.objs.scrolltext.c.scrolltext.a.fill := [=];
help::pkg.display.widgets.objs.scrolltext.c.scrolltext.a.fill.d := 'how to expand when resized';
help::pkg.display.widgets.objs.scrolltext.c.scrolltext.a.fill.def := '`both\' ';
help::pkg.display.widgets.objs.scrolltext.c.scrolltext.a.fill.a := 'String from `x\' , `y\' , 							`both\' , `none\' ';
help::pkg.display.widgets.objs.scrolltext.c.scrolltext.a.widgetset := [=];
help::pkg.display.widgets.objs.scrolltext.c.scrolltext.a.widgetset.d := 'Widget set to use';
help::pkg.display.widgets.objs.scrolltext.c.scrolltext.a.widgetset.def := 'dws';
help::pkg.display.widgets.objs.scrolltext.c.scrolltext.a.widgetset.a := 'A widgetserver tool';
help::pkg.display.widgets.objs.scrolltext.c.scrolltext.s := 'scrolltext(parent, hscrollbar, vscrollbar, width, height, wrap, font, disabled, text, relief, borderwidth, foreground, background, fill, widgetset)';
help::pkg.display.widgets.objs.scrolltext.m.text := [=];
help::pkg.display.widgets.objs.scrolltext.m.text.d := 'Return the underlying text widget agent';
help::pkg.display.widgets.objs.scrolltext.m.text.s := 'text()';
help::pkg.display.widgets.objs.scrolltext.m.done := [=];
help::pkg.display.widgets.objs.scrolltext.m.done.d := 'Destroy ourselves';
help::pkg.display.widgets.objs.scrolltext.m.done.s := 'done()';
help::pkg.display.widgets.objs.scrolltext.m.hscrollbar := [=];
help::pkg.display.widgets.objs.scrolltext.m.hscrollbar.d := 'Turn on or off the horizontal scrollbar';
help::pkg.display.widgets.objs.scrolltext.m.hscrollbar.a.torf := [=];
help::pkg.display.widgets.objs.scrolltext.m.hscrollbar.a.torf.d := 'Show a horizontal scrollbar?';
help::pkg.display.widgets.objs.scrolltext.m.hscrollbar.a.torf.def := '';
help::pkg.display.widgets.objs.scrolltext.m.hscrollbar.a.torf.a := 'Boolean';
help::pkg.display.widgets.objs.scrolltext.m.hscrollbar.s := 'hscrollbar(torf)';
help::pkg.display.widgets.objs.scrolltext.m.vscrollbar := [=];
help::pkg.display.widgets.objs.scrolltext.m.vscrollbar.d := 'Turn on or off the vertical scrollbar';
help::pkg.display.widgets.objs.scrolltext.m.vscrollbar.a.torf := [=];
help::pkg.display.widgets.objs.scrolltext.m.vscrollbar.a.torf.d := 'Show a vertical scrollbar?';
help::pkg.display.widgets.objs.scrolltext.m.vscrollbar.a.torf.def := '';
help::pkg.display.widgets.objs.scrolltext.m.vscrollbar.a.torf.a := 'Boolean';
help::pkg.display.widgets.objs.scrolltext.m.vscrollbar.s := 'vscrollbar(torf)';
help::pkg.display.widgets.objs.selectablelist := [=];
help::pkg.display.widgets.objs.selectablelist.m := [=];
help::pkg.display.widgets.objs.selectablelist.c := [=];
help::pkg.display.widgets.objs.selectablelist.d := 'Tk widget for selection from a menu or a listbox depending on list length';
help::pkg.display.widgets.objs.selectablelist.c.selectablelist := [=];
help::pkg.display.widgets.objs.selectablelist.c.selectablelist.d := 'Construct a selectablelist';
help::pkg.display.widgets.objs.selectablelist.c.selectablelist.a.parent := [=];
help::pkg.display.widgets.objs.selectablelist.c.selectablelist.a.parent.d := 'Parent of the menu for the menu/action button';
help::pkg.display.widgets.objs.selectablelist.c.selectablelist.a.parent.def := '';
help::pkg.display.widgets.objs.selectablelist.c.selectablelist.a.parent.a := 'Widget';
help::pkg.display.widgets.objs.selectablelist.c.selectablelist.a.lead := [=];
help::pkg.display.widgets.objs.selectablelist.c.selectablelist.a.lead.d := 'Listbox will appear to the sw of this agent';
help::pkg.display.widgets.objs.selectablelist.c.selectablelist.a.lead.def := '';
help::pkg.display.widgets.objs.selectablelist.c.selectablelist.a.lead.a := 'Agent';
help::pkg.display.widgets.objs.selectablelist.c.selectablelist.a.list := [=];
help::pkg.display.widgets.objs.selectablelist.c.selectablelist.a.list.d := 'The list of items';
help::pkg.display.widgets.objs.selectablelist.c.selectablelist.a.list.def := '';
help::pkg.display.widgets.objs.selectablelist.c.selectablelist.a.list.a := 'Vector of strings';
help::pkg.display.widgets.objs.selectablelist.c.selectablelist.a.nbreak := [=];
help::pkg.display.widgets.objs.selectablelist.c.selectablelist.a.nbreak.d := 'The break point for menu or listbox usage';
help::pkg.display.widgets.objs.selectablelist.c.selectablelist.a.nbreak.def := '20';
help::pkg.display.widgets.objs.selectablelist.c.selectablelist.a.nbreak.a := 'Integer';
help::pkg.display.widgets.objs.selectablelist.c.selectablelist.a.label := [=];
help::pkg.display.widgets.objs.selectablelist.c.selectablelist.a.label.d := 'The label for the button';
help::pkg.display.widgets.objs.selectablelist.c.selectablelist.a.label.def := 'Label';
help::pkg.display.widgets.objs.selectablelist.c.selectablelist.a.label.a := 'Strings';
help::pkg.display.widgets.objs.selectablelist.c.selectablelist.a.updatelabel := [=];
help::pkg.display.widgets.objs.selectablelist.c.selectablelist.a.updatelabel.d := 'Update the text on the button with the selection';
help::pkg.display.widgets.objs.selectablelist.c.selectablelist.a.updatelabel.def := 'F';
help::pkg.display.widgets.objs.selectablelist.c.selectablelist.a.updatelabel.a := 'T or F';
help::pkg.display.widgets.objs.selectablelist.c.selectablelist.a.casesensitive := [=];
help::pkg.display.widgets.objs.selectablelist.c.selectablelist.a.casesensitive.d := 'Is the text searching case sensitive';
help::pkg.display.widgets.objs.selectablelist.c.selectablelist.a.casesensitive.def := 'F';
help::pkg.display.widgets.objs.selectablelist.c.selectablelist.a.casesensitive.a := 'T or F';
help::pkg.display.widgets.objs.selectablelist.c.selectablelist.a.hlp := [=];
help::pkg.display.widgets.objs.selectablelist.c.selectablelist.a.hlp.d := 'Short popuphelp text';
help::pkg.display.widgets.objs.selectablelist.c.selectablelist.a.hlp.def := 'No help';
help::pkg.display.widgets.objs.selectablelist.c.selectablelist.a.hlp.a := 'String';
help::pkg.display.widgets.objs.selectablelist.c.selectablelist.a.padx := [=];
help::pkg.display.widgets.objs.selectablelist.c.selectablelist.a.padx.d := 'Horizontal padding around text';
help::pkg.display.widgets.objs.selectablelist.c.selectablelist.a.padx.def := '7';
help::pkg.display.widgets.objs.selectablelist.c.selectablelist.a.padx.a := 'Integer';
help::pkg.display.widgets.objs.selectablelist.c.selectablelist.a.pady := [=];
help::pkg.display.widgets.objs.selectablelist.c.selectablelist.a.pady.d := 'Vertical padding around text';
help::pkg.display.widgets.objs.selectablelist.c.selectablelist.a.pady.def := '3';
help::pkg.display.widgets.objs.selectablelist.c.selectablelist.a.pady.a := 'Integer';
help::pkg.display.widgets.objs.selectablelist.c.selectablelist.a.width := [=];
help::pkg.display.widgets.objs.selectablelist.c.selectablelist.a.width.d := 'Width in character units';
help::pkg.display.widgets.objs.selectablelist.c.selectablelist.a.width.def := 'Auto-scale';
help::pkg.display.widgets.objs.selectablelist.c.selectablelist.a.width.a := 'Integer';
help::pkg.display.widgets.objs.selectablelist.c.selectablelist.a.height := [=];
help::pkg.display.widgets.objs.selectablelist.c.selectablelist.a.height.d := 'Height in character units';
help::pkg.display.widgets.objs.selectablelist.c.selectablelist.a.height.def := '1';
help::pkg.display.widgets.objs.selectablelist.c.selectablelist.a.height.a := 'Integer';
help::pkg.display.widgets.objs.selectablelist.c.selectablelist.a.justify := [=];
help::pkg.display.widgets.objs.selectablelist.c.selectablelist.a.justify.d := 'Justification of text';
help::pkg.display.widgets.objs.selectablelist.c.selectablelist.a.justify.def := '`center\' ';
help::pkg.display.widgets.objs.selectablelist.c.selectablelist.a.justify.a := 'String from `center\' , \' left\' , \' right\' ';
help::pkg.display.widgets.objs.selectablelist.c.selectablelist.a.font := [=];
help::pkg.display.widgets.objs.selectablelist.c.selectablelist.a.font.d := 'Font of text ';
help::pkg.display.widgets.objs.selectablelist.c.selectablelist.a.font.def := '';
help::pkg.display.widgets.objs.selectablelist.c.selectablelist.a.font.a := 'X font';
help::pkg.display.widgets.objs.selectablelist.c.selectablelist.a.relief := [=];
help::pkg.display.widgets.objs.selectablelist.c.selectablelist.a.relief.d := 'Edge relief';
help::pkg.display.widgets.objs.selectablelist.c.selectablelist.a.relief.def := '`groove\' ';
help::pkg.display.widgets.objs.selectablelist.c.selectablelist.a.relief.a := 'String from `flat\' , `ridge\' ,                                             `raised\' , `sunken\' , `groove\' ';
help::pkg.display.widgets.objs.selectablelist.c.selectablelist.a.borderwidth := [=];
help::pkg.display.widgets.objs.selectablelist.c.selectablelist.a.borderwidth.d := 'Border width';
help::pkg.display.widgets.objs.selectablelist.c.selectablelist.a.borderwidth.def := '2';
help::pkg.display.widgets.objs.selectablelist.c.selectablelist.a.borderwidth.a := 'Integer';
help::pkg.display.widgets.objs.selectablelist.c.selectablelist.a.foreground := [=];
help::pkg.display.widgets.objs.selectablelist.c.selectablelist.a.foreground.d := 'Color of text';
help::pkg.display.widgets.objs.selectablelist.c.selectablelist.a.foreground.def := '`black\' ';
help::pkg.display.widgets.objs.selectablelist.c.selectablelist.a.foreground.a := 'X color';
help::pkg.display.widgets.objs.selectablelist.c.selectablelist.a.background := [=];
help::pkg.display.widgets.objs.selectablelist.c.selectablelist.a.background.d := 'Background color';
help::pkg.display.widgets.objs.selectablelist.c.selectablelist.a.background.def := '`lightgrey\' ';
help::pkg.display.widgets.objs.selectablelist.c.selectablelist.a.background.a := 'X color';
help::pkg.display.widgets.objs.selectablelist.c.selectablelist.a.disabled := [=];
help::pkg.display.widgets.objs.selectablelist.c.selectablelist.a.disabled.d := 'Is inactivated ?';
help::pkg.display.widgets.objs.selectablelist.c.selectablelist.a.disabled.def := 'F';
help::pkg.display.widgets.objs.selectablelist.c.selectablelist.a.disabled.a := 'Boolean';
help::pkg.display.widgets.objs.selectablelist.c.selectablelist.a.anchor := [=];
help::pkg.display.widgets.objs.selectablelist.c.selectablelist.a.anchor.d := 'Location of text';
help::pkg.display.widgets.objs.selectablelist.c.selectablelist.a.anchor.def := '`c\' ';
help::pkg.display.widgets.objs.selectablelist.c.selectablelist.a.anchor.a := 'String  from \' c\' , \' n\' , \' s\' , \' e\' , \' w\' , \' ne\' ,                                            \' nw\' , \' se\' , \' sw\' ';
help::pkg.display.widgets.objs.selectablelist.c.selectablelist.a.fill := [=];
help::pkg.display.widgets.objs.selectablelist.c.selectablelist.a.fill.d := 'How to expand when resized';
help::pkg.display.widgets.objs.selectablelist.c.selectablelist.a.fill.def := '\' none\' ';
help::pkg.display.widgets.objs.selectablelist.c.selectablelist.a.fill.a := 'String from `x\' , `y\' , `both\' , `none\' ';
help::pkg.display.widgets.objs.selectablelist.c.selectablelist.a.widgetset := [=];
help::pkg.display.widgets.objs.selectablelist.c.selectablelist.a.widgetset.d := 'The widget server to use';
help::pkg.display.widgets.objs.selectablelist.c.selectablelist.a.widgetset.def := 'dws';
help::pkg.display.widgets.objs.selectablelist.c.selectablelist.a.widgetset.a := 'widgetserver tool';
help::pkg.display.widgets.objs.selectablelist.c.selectablelist.s := 'selectablelist(parent, lead, list, nbreak, label, updatelabel, casesensitive, hlp, padx, pady, width, height, justify, font, relief, borderwidth, foreground, background, disabled, anchor, fill, widgetset)';
help::pkg.display.widgets.objs.selectablelist.m.disabled := [=];
help::pkg.display.widgets.objs.selectablelist.m.disabled.d := 'Disable or enable the widget';
help::pkg.display.widgets.objs.selectablelist.m.disabled.a.disable := [=];
help::pkg.display.widgets.objs.selectablelist.m.disabled.a.disable.d := 'disable the widget';
help::pkg.display.widgets.objs.selectablelist.m.disabled.a.disable.def := 'T';
help::pkg.display.widgets.objs.selectablelist.m.disabled.a.disable.a := 'T or F';
help::pkg.display.widgets.objs.selectablelist.m.disabled.s := 'disabled(disable)';
help::pkg.display.widgets.objs.selectablelist.m.done := [=];
help::pkg.display.widgets.objs.selectablelist.m.done.d := 'Destroy ourselves';
help::pkg.display.widgets.objs.selectablelist.m.done.s := 'done()';
help::pkg.display.widgets.objs.selectablelist.m.replace := [=];
help::pkg.display.widgets.objs.selectablelist.m.replace.d := 'Replace the menu with the provided items';
help::pkg.display.widgets.objs.selectablelist.m.replace.a.lead := [=];
help::pkg.display.widgets.objs.selectablelist.m.replace.a.lead.d := 'Listbox will appear to the sw of this agent';
help::pkg.display.widgets.objs.selectablelist.m.replace.a.lead.def := '';
help::pkg.display.widgets.objs.selectablelist.m.replace.a.lead.a := 'Agent';
help::pkg.display.widgets.objs.selectablelist.m.replace.a.list := [=];
help::pkg.display.widgets.objs.selectablelist.m.replace.a.list.d := 'The list of items';
help::pkg.display.widgets.objs.selectablelist.m.replace.a.list.def := '';
help::pkg.display.widgets.objs.selectablelist.m.replace.a.list.a := 'Vector of strings';
help::pkg.display.widgets.objs.selectablelist.m.replace.a.label := [=];
help::pkg.display.widgets.objs.selectablelist.m.replace.a.label.d := 'The label for the button';
help::pkg.display.widgets.objs.selectablelist.m.replace.a.label.def := 'Label';
help::pkg.display.widgets.objs.selectablelist.m.replace.a.label.a := 'Strings';
help::pkg.display.widgets.objs.selectablelist.m.replace.a.updatelabel := [=];
help::pkg.display.widgets.objs.selectablelist.m.replace.a.updatelabel.d := 'Update the text on the button with the selection';
help::pkg.display.widgets.objs.selectablelist.m.replace.a.updatelabel.def := 'F';
help::pkg.display.widgets.objs.selectablelist.m.replace.a.updatelabel.a := 'T or F';
help::pkg.display.widgets.objs.selectablelist.m.replace.a.casesensitive := [=];
help::pkg.display.widgets.objs.selectablelist.m.replace.a.casesensitive.d := 'Is the text searching case sensitive';
help::pkg.display.widgets.objs.selectablelist.m.replace.a.casesensitive.def := 'F';
help::pkg.display.widgets.objs.selectablelist.m.replace.a.casesensitive.a := 'T or F';
help::pkg.display.widgets.objs.selectablelist.m.replace.a.width := [=];
help::pkg.display.widgets.objs.selectablelist.m.replace.a.width.d := 'Width in character units';
help::pkg.display.widgets.objs.selectablelist.m.replace.a.width.def := 'Auto-scale';
help::pkg.display.widgets.objs.selectablelist.m.replace.a.width.a := 'Integer';
help::pkg.display.widgets.objs.selectablelist.m.replace.s := 'replace(lead, list, label, updatelabel, casesensitive, width)';
help::pkg.display.widgets.objs.selectablelist.m.setbackground := [=];
help::pkg.display.widgets.objs.selectablelist.m.setbackground.d := 'Set the color of the background of the button';
help::pkg.display.widgets.objs.selectablelist.m.setbackground.a.color := [=];
help::pkg.display.widgets.objs.selectablelist.m.setbackground.a.color.d := 'The color';
help::pkg.display.widgets.objs.selectablelist.m.setbackground.a.color.def := '';
help::pkg.display.widgets.objs.selectablelist.m.setbackground.a.color.a := 'Any X color encoded as a String';
help::pkg.display.widgets.objs.selectablelist.m.setbackground.s := 'setbackground(color)';
help::pkg.display.widgets.objs.selectablelist.m.setforeground := [=];
help::pkg.display.widgets.objs.selectablelist.m.setforeground.d := 'Set the color of the foreground of the button';
help::pkg.display.widgets.objs.selectablelist.m.setforeground.a.color := [=];
help::pkg.display.widgets.objs.selectablelist.m.setforeground.a.color.d := 'The color';
help::pkg.display.widgets.objs.selectablelist.m.setforeground.a.color.def := '';
help::pkg.display.widgets.objs.selectablelist.m.setforeground.a.color.a := 'Any X color encoded as a String';
help::pkg.display.widgets.objs.selectablelist.m.setforeground.s := 'setforeground(color)';
help::pkg.display.widgets.objs.selectablelist.m.setlabel := [=];
help::pkg.display.widgets.objs.selectablelist.m.setlabel.d := 'Set the label of the button';
help::pkg.display.widgets.objs.selectablelist.m.setlabel.a.text := [=];
help::pkg.display.widgets.objs.selectablelist.m.setlabel.a.text.d := 'The label text';
help::pkg.display.widgets.objs.selectablelist.m.setlabel.a.text.def := '';
help::pkg.display.widgets.objs.selectablelist.m.setlabel.a.text.a := 'String';
help::pkg.display.widgets.objs.selectablelist.m.setlabel.s := 'setlabel(text)';
help::pkg.display.widgets.objs.selectablelist.m.setwidth := [=];
help::pkg.display.widgets.objs.selectablelist.m.setwidth.d := 'Set the width of the selection button';
help::pkg.display.widgets.objs.selectablelist.m.setwidth.a.width := [=];
help::pkg.display.widgets.objs.selectablelist.m.setwidth.a.width.d := 'The width in character units';
help::pkg.display.widgets.objs.selectablelist.m.setwidth.a.width.def := '';
help::pkg.display.widgets.objs.selectablelist.m.setwidth.a.width.a := 'Integer';
help::pkg.display.widgets.objs.selectablelist.m.setwidth.s := 'setwidth(width)';
help::pkg.display.widgets.objs.synclistboxes := [=];
help::pkg.display.widgets.objs.synclistboxes.m := [=];
help::pkg.display.widgets.objs.synclistboxes.c := [=];
help::pkg.display.widgets.objs.synclistboxes.d := 'A collection of synchronized scrolllistboxes.';
help::pkg.display.widgets.objs.synclistboxes.c.synclistboxes := [=];
help::pkg.display.widgets.objs.synclistboxes.c.synclistboxes.d := 'Construct a synclistboxes';
help::pkg.display.widgets.objs.synclistboxes.c.synclistboxes.a.parent := [=];
help::pkg.display.widgets.objs.synclistboxes.c.synclistboxes.a.parent.d := 'Parent of the synclistboxes';
help::pkg.display.widgets.objs.synclistboxes.c.synclistboxes.a.parent.def := '';
help::pkg.display.widgets.objs.synclistboxes.c.synclistboxes.a.parent.a := 'Tk frame';
help::pkg.display.widgets.objs.synclistboxes.c.synclistboxes.a.nboxes := [=];
help::pkg.display.widgets.objs.synclistboxes.c.synclistboxes.a.nboxes.d := 'The number of listboxes this widget will contain';
help::pkg.display.widgets.objs.synclistboxes.c.synclistboxes.a.nboxes.def := '1';
help::pkg.display.widgets.objs.synclistboxes.c.synclistboxes.a.nboxes.a := 'Integer';
help::pkg.display.widgets.objs.synclistboxes.c.synclistboxes.a.labels := [=];
help::pkg.display.widgets.objs.synclistboxes.c.synclistboxes.a.labels.d := 'The label(s)';
help::pkg.display.widgets.objs.synclistboxes.c.synclistboxes.a.labels.def := '`\' ';
help::pkg.display.widgets.objs.synclistboxes.c.synclistboxes.a.labels.a := 'String';
help::pkg.display.widgets.objs.synclistboxes.c.synclistboxes.a.leadbox := [=];
help::pkg.display.widgets.objs.synclistboxes.c.synclistboxes.a.leadbox.d := 'The default box returned by the listbox function';
help::pkg.display.widgets.objs.synclistboxes.c.synclistboxes.a.leadbox.def := '1';
help::pkg.display.widgets.objs.synclistboxes.c.synclistboxes.a.leadbox.a := 'Integer';
help::pkg.display.widgets.objs.synclistboxes.c.synclistboxes.a.side := [=];
help::pkg.display.widgets.objs.synclistboxes.c.synclistboxes.a.side.d := 'The packing order';
help::pkg.display.widgets.objs.synclistboxes.c.synclistboxes.a.side.def := '`left\' ';
help::pkg.display.widgets.objs.synclistboxes.c.synclistboxes.a.side.a := 'String from `left\' , `right\' , `top\' , `bottom\' ';
help::pkg.display.widgets.objs.synclistboxes.c.synclistboxes.a.hscrollbar := [=];
help::pkg.display.widgets.objs.synclistboxes.c.synclistboxes.a.hscrollbar.d := 'Show a horizontal scrollbar in all listboxes?';
help::pkg.display.widgets.objs.synclistboxes.c.synclistboxes.a.hscrollbar.def := 'T';
help::pkg.display.widgets.objs.synclistboxes.c.synclistboxes.a.hscrollbar.a := 'Boolean';
help::pkg.display.widgets.objs.synclistboxes.c.synclistboxes.a.vscrollbar := [=];
help::pkg.display.widgets.objs.synclistboxes.c.synclistboxes.a.vscrollbar.d := 'Show a vertical scrollbar?';
help::pkg.display.widgets.objs.synclistboxes.c.synclistboxes.a.vscrollbar.def := 'T';
help::pkg.display.widgets.objs.synclistboxes.c.synclistboxes.a.vscrollbar.a := 'Boolean';
help::pkg.display.widgets.objs.synclistboxes.c.synclistboxes.a.seeoninsert := [=];
help::pkg.display.widgets.objs.synclistboxes.c.synclistboxes.a.seeoninsert.d := 'See the end after each insert?';
help::pkg.display.widgets.objs.synclistboxes.c.synclistboxes.a.seeoninsert.def := 'T';
help::pkg.display.widgets.objs.synclistboxes.c.synclistboxes.a.seeoninsert.a := 'Boolean';
help::pkg.display.widgets.objs.synclistboxes.c.synclistboxes.a.width := [=];
help::pkg.display.widgets.objs.synclistboxes.c.synclistboxes.a.width.d := 'Width(s) in characters units';
help::pkg.display.widgets.objs.synclistboxes.c.synclistboxes.a.width.def := '20';
help::pkg.display.widgets.objs.synclistboxes.c.synclistboxes.a.width.a := 'Integer';
help::pkg.display.widgets.objs.synclistboxes.c.synclistboxes.a.height := [=];
help::pkg.display.widgets.objs.synclistboxes.c.synclistboxes.a.height.d := 'Height in characters units';
help::pkg.display.widgets.objs.synclistboxes.c.synclistboxes.a.height.def := '6';
help::pkg.display.widgets.objs.synclistboxes.c.synclistboxes.a.height.a := 'Integer';
help::pkg.display.widgets.objs.synclistboxes.c.synclistboxes.a.mode := [=];
help::pkg.display.widgets.objs.synclistboxes.c.synclistboxes.a.mode.d := 'Listbox mode';
help::pkg.display.widgets.objs.synclistboxes.c.synclistboxes.a.mode.def := '`browse\' ';
help::pkg.display.widgets.objs.synclistboxes.c.synclistboxes.a.mode.a := 'String from `browse\' , `single\' , 						`extended\' , `multiple\' ';
help::pkg.display.widgets.objs.synclistboxes.c.synclistboxes.a.font := [=];
help::pkg.display.widgets.objs.synclistboxes.c.synclistboxes.a.font.d := 'Font(s) of text ';
help::pkg.display.widgets.objs.synclistboxes.c.synclistboxes.a.font.def := '`\' ';
help::pkg.display.widgets.objs.synclistboxes.c.synclistboxes.a.font.a := 'X font';
help::pkg.display.widgets.objs.synclistboxes.c.synclistboxes.a.relief := [=];
help::pkg.display.widgets.objs.synclistboxes.c.synclistboxes.a.relief.d := 'Edge relief(s)';
help::pkg.display.widgets.objs.synclistboxes.c.synclistboxes.a.relief.def := '`sunken\' ';
help::pkg.display.widgets.objs.synclistboxes.c.synclistboxes.a.relief.a := 'String from `flat\' , `ridge\' ,                                             `raised\' , `sunken\' , `groove\' ';
help::pkg.display.widgets.objs.synclistboxes.c.synclistboxes.a.borderwidth := [=];
help::pkg.display.widgets.objs.synclistboxes.c.synclistboxes.a.borderwidth.d := 'Border width';
help::pkg.display.widgets.objs.synclistboxes.c.synclistboxes.a.borderwidth.def := '2';
help::pkg.display.widgets.objs.synclistboxes.c.synclistboxes.a.borderwidth.a := 'Integer';
help::pkg.display.widgets.objs.synclistboxes.c.synclistboxes.a.foreground := [=];
help::pkg.display.widgets.objs.synclistboxes.c.synclistboxes.a.foreground.d := 'Color(s) of text';
help::pkg.display.widgets.objs.synclistboxes.c.synclistboxes.a.foreground.def := '`black\' ';
help::pkg.display.widgets.objs.synclistboxes.c.synclistboxes.a.foreground.a := 'X color';
help::pkg.display.widgets.objs.synclistboxes.c.synclistboxes.a.background := [=];
help::pkg.display.widgets.objs.synclistboxes.c.synclistboxes.a.background.d := 'Background color(s)';
help::pkg.display.widgets.objs.synclistboxes.c.synclistboxes.a.background.def := '`lightgrey\' ';
help::pkg.display.widgets.objs.synclistboxes.c.synclistboxes.a.background.a := 'X color';
help::pkg.display.widgets.objs.synclistboxes.c.synclistboxes.a.exportselection := [=];
help::pkg.display.widgets.objs.synclistboxes.c.synclistboxes.a.exportselection.d := 'export to X clipboard?';
help::pkg.display.widgets.objs.synclistboxes.c.synclistboxes.a.exportselection.def := 'F';
help::pkg.display.widgets.objs.synclistboxes.c.synclistboxes.a.exportselection.a := 'Boolean';
help::pkg.display.widgets.objs.synclistboxes.c.synclistboxes.a.fill := [=];
help::pkg.display.widgets.objs.synclistboxes.c.synclistboxes.a.fill.d := 'how to expand when resized';
help::pkg.display.widgets.objs.synclistboxes.c.synclistboxes.a.fill.def := '`both\' ';
help::pkg.display.widgets.objs.synclistboxes.c.synclistboxes.a.fill.a := 'String from `x\' , `y\' , 							`both\' , `none\' ';
help::pkg.display.widgets.objs.synclistboxes.c.synclistboxes.a.widgetset := [=];
help::pkg.display.widgets.objs.synclistboxes.c.synclistboxes.a.widgetset.d := 'Widget set to use';
help::pkg.display.widgets.objs.synclistboxes.c.synclistboxes.a.widgetset.def := 'dws';
help::pkg.display.widgets.objs.synclistboxes.c.synclistboxes.a.widgetset.a := 'A widgetserver closure tool';
help::pkg.display.widgets.objs.synclistboxes.c.synclistboxes.s := 'synclistboxes(parent, nboxes, labels, leadbox, side, hscrollbar, vscrollbar, seeoninsert, width, height, mode, font, relief, borderwidth, foreground, background, exportselection, fill, widgetset)';
help::pkg.display.widgets.objs.synclistboxes.m.done := [=];
help::pkg.display.widgets.objs.synclistboxes.m.done.d := 'Destroy ourselves';
help::pkg.display.widgets.objs.synclistboxes.m.done.s := 'done()';
help::pkg.display.widgets.objs.synclistboxes.m.listbox := [=];
help::pkg.display.widgets.objs.synclistboxes.m.listbox.d := 'Return an underlying listbox agent';
help::pkg.display.widgets.objs.synclistboxes.m.listbox.a.whichbox := [=];
help::pkg.display.widgets.objs.synclistboxes.m.listbox.a.whichbox.d := 'Which listbox to return';
help::pkg.display.widgets.objs.synclistboxes.m.listbox.a.whichbox.def := 'current leadbox';
help::pkg.display.widgets.objs.synclistboxes.m.listbox.a.whichbox.a := 'Integer or unset';
help::pkg.display.widgets.objs.synclistboxes.m.listbox.s := 'listbox(whichbox)';
help::pkg.display.widgets.objs.synclistboxes.m.background := [=];
help::pkg.display.widgets.objs.synclistboxes.m.background.d := 'Set the background color.';
help::pkg.display.widgets.objs.synclistboxes.m.background.a.background := [=];
help::pkg.display.widgets.objs.synclistboxes.m.background.a.background.d := 'the new background color';
help::pkg.display.widgets.objs.synclistboxes.m.background.a.background.def := '';
help::pkg.display.widgets.objs.synclistboxes.m.background.a.background.a := 'X color';
help::pkg.display.widgets.objs.synclistboxes.m.background.a.whichbox := [=];
help::pkg.display.widgets.objs.synclistboxes.m.background.a.whichbox.d := 'which listbox gets the new color';
help::pkg.display.widgets.objs.synclistboxes.m.background.a.whichbox.def := '';
help::pkg.display.widgets.objs.synclistboxes.m.background.a.whichbox.a := 'An optional integer';
help::pkg.display.widgets.objs.synclistboxes.m.background.s := 'background(background, whichbox)';
help::pkg.display.widgets.objs.synclistboxes.m.bind := [=];
help::pkg.display.widgets.objs.synclistboxes.m.bind.d := 'bind an event to a glish event';
help::pkg.display.widgets.objs.synclistboxes.m.bind.a.xevent := [=];
help::pkg.display.widgets.objs.synclistboxes.m.bind.a.xevent.d := 'the x event to be bound';
help::pkg.display.widgets.objs.synclistboxes.m.bind.a.xevent.def := '';
help::pkg.display.widgets.objs.synclistboxes.m.bind.a.xevent.a := 'X event';
help::pkg.display.widgets.objs.synclistboxes.m.bind.a.gevent := [=];
help::pkg.display.widgets.objs.synclistboxes.m.bind.a.gevent.d := 'the glish event to be generated';
help::pkg.display.widgets.objs.synclistboxes.m.bind.a.gevent.def := '';
help::pkg.display.widgets.objs.synclistboxes.m.bind.a.gevent.a := 'String';
help::pkg.display.widgets.objs.synclistboxes.m.bind.a.whichbox := [=];
help::pkg.display.widgets.objs.synclistboxes.m.bind.a.whichbox.d := 'which listbox should this be bound to';
help::pkg.display.widgets.objs.synclistboxes.m.bind.a.whichbox.def := '';
help::pkg.display.widgets.objs.synclistboxes.m.bind.a.whichbox.a := 'An optional integer';
help::pkg.display.widgets.objs.synclistboxes.m.bind.s := 'bind(xevent, gevent, whichbox)';
help::pkg.display.widgets.objs.synclistboxes.m.borderwidth := [=];
help::pkg.display.widgets.objs.synclistboxes.m.borderwidth.d := 'change the borderwidth(s)';
help::pkg.display.widgets.objs.synclistboxes.m.borderwidth.a.borderwidth := [=];
help::pkg.display.widgets.objs.synclistboxes.m.borderwidth.a.borderwidth.d := 'the new borderwidth';
help::pkg.display.widgets.objs.synclistboxes.m.borderwidth.a.borderwidth.def := '';
help::pkg.display.widgets.objs.synclistboxes.m.borderwidth.a.borderwidth.a := 'Integer';
help::pkg.display.widgets.objs.synclistboxes.m.borderwidth.a.whichbox := [=];
help::pkg.display.widgets.objs.synclistboxes.m.borderwidth.a.whichbox.d := 'which listbox gets the new borderwidth';
help::pkg.display.widgets.objs.synclistboxes.m.borderwidth.a.whichbox.def := '';
help::pkg.display.widgets.objs.synclistboxes.m.borderwidth.a.whichbox.a := 'An optional integer';
help::pkg.display.widgets.objs.synclistboxes.m.borderwidth.s := 'borderwidth(borderwidth, whichbox)';
help::pkg.display.widgets.objs.synclistboxes.m.clear := [=];
help::pkg.display.widgets.objs.synclistboxes.m.clear.d := 'clear the selection at the indicated items';
help::pkg.display.widgets.objs.synclistboxes.m.clear.a.start := [=];
help::pkg.display.widgets.objs.synclistboxes.m.clear.a.start.d := 'the start of the range to clear';
help::pkg.display.widgets.objs.synclistboxes.m.clear.a.start.def := '';
help::pkg.display.widgets.objs.synclistboxes.m.clear.a.start.a := 'string';
help::pkg.display.widgets.objs.synclistboxes.m.clear.a.end := [=];
help::pkg.display.widgets.objs.synclistboxes.m.clear.a.end.d := 'optional end of the range to clear';
help::pkg.display.widgets.objs.synclistboxes.m.clear.a.end.def := '';
help::pkg.display.widgets.objs.synclistboxes.m.clear.a.end.a := 'string';
help::pkg.display.widgets.objs.synclistboxes.m.clear.s := 'clear(start, end)';
help::pkg.display.widgets.objs.synclistboxes.m.delete := [=];
help::pkg.display.widgets.objs.synclistboxes.m.delete.d := 'delete the indicated items';
help::pkg.display.widgets.objs.synclistboxes.m.delete.a.start := [=];
help::pkg.display.widgets.objs.synclistboxes.m.delete.a.start.d := 'the start of the range to delete';
help::pkg.display.widgets.objs.synclistboxes.m.delete.a.start.def := '';
help::pkg.display.widgets.objs.synclistboxes.m.delete.a.start.a := 'string';
help::pkg.display.widgets.objs.synclistboxes.m.delete.a.end := [=];
help::pkg.display.widgets.objs.synclistboxes.m.delete.a.end.d := 'optional end of the range to delete';
help::pkg.display.widgets.objs.synclistboxes.m.delete.a.end.def := '';
help::pkg.display.widgets.objs.synclistboxes.m.delete.a.end.a := 'string';
help::pkg.display.widgets.objs.synclistboxes.m.delete.s := 'delete(start, end)';
help::pkg.display.widgets.objs.synclistboxes.m.exportselection := [=];
help::pkg.display.widgets.objs.synclistboxes.m.exportselection.d := 'export the selection to the X clipboard?';
help::pkg.display.widgets.objs.synclistboxes.m.exportselection.a.torf := [=];
help::pkg.display.widgets.objs.synclistboxes.m.exportselection.a.torf.d := 'export the selection to the X clipboard?';
help::pkg.display.widgets.objs.synclistboxes.m.exportselection.a.torf.def := '';
help::pkg.display.widgets.objs.synclistboxes.m.exportselection.a.torf.a := 'Boolean';
help::pkg.display.widgets.objs.synclistboxes.m.exportselection.s := 'exportselection(torf)';
help::pkg.display.widgets.objs.synclistboxes.m.foreground := [=];
help::pkg.display.widgets.objs.synclistboxes.m.foreground.d := 'Set the foreground color.';
help::pkg.display.widgets.objs.synclistboxes.m.foreground.a.foreground := [=];
help::pkg.display.widgets.objs.synclistboxes.m.foreground.a.foreground.d := 'the new foreground color';
help::pkg.display.widgets.objs.synclistboxes.m.foreground.a.foreground.def := '';
help::pkg.display.widgets.objs.synclistboxes.m.foreground.a.foreground.a := 'X color';
help::pkg.display.widgets.objs.synclistboxes.m.foreground.a.whichbox := [=];
help::pkg.display.widgets.objs.synclistboxes.m.foreground.a.whichbox.d := 'which listbox gets the new color';
help::pkg.display.widgets.objs.synclistboxes.m.foreground.a.whichbox.def := '';
help::pkg.display.widgets.objs.synclistboxes.m.foreground.a.whichbox.a := 'An optional integer';
help::pkg.display.widgets.objs.synclistboxes.m.foreground.s := 'foreground(foreground, whichbox)';
help::pkg.display.widgets.objs.synclistboxes.m.font := [=];
help::pkg.display.widgets.objs.synclistboxes.m.font.d := 'change the text font';
help::pkg.display.widgets.objs.synclistboxes.m.font.a.font := [=];
help::pkg.display.widgets.objs.synclistboxes.m.font.a.font.d := 'The new text font';
help::pkg.display.widgets.objs.synclistboxes.m.font.a.font.def := '';
help::pkg.display.widgets.objs.synclistboxes.m.font.a.font.a := 'X font';
help::pkg.display.widgets.objs.synclistboxes.m.font.a.whichbox := [=];
help::pkg.display.widgets.objs.synclistboxes.m.font.a.whichbox.d := 'which listbox gets the new font';
help::pkg.display.widgets.objs.synclistboxes.m.font.a.whichbox.def := '';
help::pkg.display.widgets.objs.synclistboxes.m.font.a.whichbox.a := 'An optional integer';
help::pkg.display.widgets.objs.synclistboxes.m.font.s := 'font(font, whichbox)';
help::pkg.display.widgets.objs.synclistboxes.m.get := [=];
help::pkg.display.widgets.objs.synclistboxes.m.get.d := 'request items, i.e. map indexes to items';
help::pkg.display.widgets.objs.synclistboxes.m.get.a.indexes := [=];
help::pkg.display.widgets.objs.synclistboxes.m.get.a.indexes.d := 'the requested indexes';
help::pkg.display.widgets.objs.synclistboxes.m.get.a.indexes.def := '';
help::pkg.display.widgets.objs.synclistboxes.m.get.a.indexes.a := 'Integer(s)';
help::pkg.display.widgets.objs.synclistboxes.m.get.s := 'get(indexes)';
help::pkg.display.widgets.objs.synclistboxes.m.height := [=];
help::pkg.display.widgets.objs.synclistboxes.m.height.d := 'Set the height';
help::pkg.display.widgets.objs.synclistboxes.m.height.a.height := [=];
help::pkg.display.widgets.objs.synclistboxes.m.height.a.height.d := 'the new height';
help::pkg.display.widgets.objs.synclistboxes.m.height.a.height.def := '';
help::pkg.display.widgets.objs.synclistboxes.m.height.a.height.a := 'Integer';
help::pkg.display.widgets.objs.synclistboxes.m.height.s := 'height(height)';
help::pkg.display.widgets.objs.synclistboxes.m.hscrollbar := [=];
help::pkg.display.widgets.objs.synclistboxes.m.hscrollbar.d := 'Turn on or off the horizontal scrollbars';
help::pkg.display.widgets.objs.synclistboxes.m.hscrollbar.a.torf := [=];
help::pkg.display.widgets.objs.synclistboxes.m.hscrollbar.a.torf.d := 'Show a horizontal scrollbar?';
help::pkg.display.widgets.objs.synclistboxes.m.hscrollbar.a.torf.def := '';
help::pkg.display.widgets.objs.synclistboxes.m.hscrollbar.a.torf.a := 'Boolean';
help::pkg.display.widgets.objs.synclistboxes.m.hscrollbar.s := 'hscrollbar(torf)';
help::pkg.display.widgets.objs.synclistboxes.m.insert := [=];
help::pkg.display.widgets.objs.synclistboxes.m.insert.d := 'insert values into the listboxes';
help::pkg.display.widgets.objs.synclistboxes.m.insert.a.values := [=];
help::pkg.display.widgets.objs.synclistboxes.m.insert.a.values.d := 'insert these values';
help::pkg.display.widgets.objs.synclistboxes.m.insert.a.values.def := '';
help::pkg.display.widgets.objs.synclistboxes.m.insert.a.values.a := 'A vector or matrix of strings';
help::pkg.display.widgets.objs.synclistboxes.m.insert.s := 'insert(values)';
help::pkg.display.widgets.objs.synclistboxes.m.leadbox := [=];
help::pkg.display.widgets.objs.synclistboxes.m.leadbox.d := 'which listbox is the default returned by the listbox function';
help::pkg.display.widgets.objs.synclistboxes.m.leadbox.a.leadbox := [=];
help::pkg.display.widgets.objs.synclistboxes.m.leadbox.a.leadbox.d := 'which listbox takes the lead';
help::pkg.display.widgets.objs.synclistboxes.m.leadbox.a.leadbox.def := '';
help::pkg.display.widgets.objs.synclistboxes.m.leadbox.a.leadbox.a := 'Integer';
help::pkg.display.widgets.objs.synclistboxes.m.leadbox.s := 'leadbox(leadbox)';
help::pkg.display.widgets.objs.synclistboxes.m.mode := [=];
help::pkg.display.widgets.objs.synclistboxes.m.mode.d := 'change listbox mode';
help::pkg.display.widgets.objs.synclistboxes.m.mode.a.mode := [=];
help::pkg.display.widgets.objs.synclistboxes.m.mode.a.mode.d := 'change listbox mode';
help::pkg.display.widgets.objs.synclistboxes.m.mode.a.mode.def := '';
help::pkg.display.widgets.objs.synclistboxes.m.mode.a.mode.a := 'String from `browse\' , `single\' , `multiple\' , or `extended\' ';
help::pkg.display.widgets.objs.synclistboxes.m.mode.s := 'mode(mode)';
help::pkg.display.widgets.objs.synclistboxes.m.nearest := [=];
help::pkg.display.widgets.objs.synclistboxes.m.nearest.d := 'return item nearest the y offset param';
help::pkg.display.widgets.objs.synclistboxes.m.nearest.a.nearest := [=];
help::pkg.display.widgets.objs.synclistboxes.m.nearest.a.nearest.d := 'y offset param';
help::pkg.display.widgets.objs.synclistboxes.m.nearest.a.nearest.def := '';
help::pkg.display.widgets.objs.synclistboxes.m.nearest.a.nearest.a := 'Integer';
help::pkg.display.widgets.objs.synclistboxes.m.nearest.s := 'nearest(nearest)';
help::pkg.display.widgets.objs.synclistboxes.m.relief := [=];
help::pkg.display.widgets.objs.synclistboxes.m.relief.d := 'change the border relief';
help::pkg.display.widgets.objs.synclistboxes.m.relief.a.relief := [=];
help::pkg.display.widgets.objs.synclistboxes.m.relief.a.relief.d := 'The new border relief';
help::pkg.display.widgets.objs.synclistboxes.m.relief.a.relief.def := '';
help::pkg.display.widgets.objs.synclistboxes.m.relief.a.relief.a := 'Standard relief string';
help::pkg.display.widgets.objs.synclistboxes.m.relief.a.whichbox := [=];
help::pkg.display.widgets.objs.synclistboxes.m.relief.a.whichbox.d := 'which listbox gets the new relief';
help::pkg.display.widgets.objs.synclistboxes.m.relief.a.whichbox.def := '';
help::pkg.display.widgets.objs.synclistboxes.m.relief.a.whichbox.a := 'An optional integer';
help::pkg.display.widgets.objs.synclistboxes.m.relief.s := 'relief(relief, whichbox)';
help::pkg.display.widgets.objs.synclistboxes.m.see := [=];
help::pkg.display.widgets.objs.synclistboxes.m.see.d := 'scroll listboxes to specified index is visible';
help::pkg.display.widgets.objs.synclistboxes.m.see.a.index := [=];
help::pkg.display.widgets.objs.synclistboxes.m.see.a.index.d := 'the index to scroll to';
help::pkg.display.widgets.objs.synclistboxes.m.see.a.index.def := '';
help::pkg.display.widgets.objs.synclistboxes.m.see.a.index.a := 'String';
help::pkg.display.widgets.objs.synclistboxes.m.see.s := 'see(index)';
help::pkg.display.widgets.objs.synclistboxes.m.seeoninsert := [=];
help::pkg.display.widgets.objs.synclistboxes.m.seeoninsert.d := 'See the end after each insert?';
help::pkg.display.widgets.objs.synclistboxes.m.seeoninsert.a.torf := [=];
help::pkg.display.widgets.objs.synclistboxes.m.seeoninsert.a.torf.d := 'See the end after each insert?';
help::pkg.display.widgets.objs.synclistboxes.m.seeoninsert.a.torf.def := '';
help::pkg.display.widgets.objs.synclistboxes.m.seeoninsert.a.torf.a := 'Boolean';
help::pkg.display.widgets.objs.synclistboxes.m.seeoninsert.s := 'seeoninsert(torf)';
help::pkg.display.widgets.objs.synclistboxes.m.select := [=];
help::pkg.display.widgets.objs.synclistboxes.m.select.d := 'select the indicate items';
help::pkg.display.widgets.objs.synclistboxes.m.select.a.indexex := [=];
help::pkg.display.widgets.objs.synclistboxes.m.select.a.indexex.d := 'the indexes to select';
help::pkg.display.widgets.objs.synclistboxes.m.select.a.indexex.def := '';
help::pkg.display.widgets.objs.synclistboxes.m.select.a.indexex.a := 'String';
help::pkg.display.widgets.objs.synclistboxes.m.select.s := 'select(indexex)';
help::pkg.display.widgets.objs.synclistboxes.m.selection := [=];
help::pkg.display.widgets.objs.synclistboxes.m.selection.d := 'get indexes of the current selection';
help::pkg.display.widgets.objs.synclistboxes.m.selection.s := 'selection()';
help::pkg.display.widgets.objs.synclistboxes.m.vscrollbar := [=];
help::pkg.display.widgets.objs.synclistboxes.m.vscrollbar.d := 'Turn on or off the vertical scrollbar';
help::pkg.display.widgets.objs.synclistboxes.m.vscrollbar.a.torf := [=];
help::pkg.display.widgets.objs.synclistboxes.m.vscrollbar.a.torf.d := 'Show a vertical scrollbar?';
help::pkg.display.widgets.objs.synclistboxes.m.vscrollbar.a.torf.def := '';
help::pkg.display.widgets.objs.synclistboxes.m.vscrollbar.a.torf.a := 'Boolean';
help::pkg.display.widgets.objs.synclistboxes.m.vscrollbar.s := 'vscrollbar(torf)';
help::pkg.display.widgets.objs.synclistboxes.m.width := [=];
help::pkg.display.widgets.objs.synclistboxes.m.width.d := 'Set the width';
help::pkg.display.widgets.objs.synclistboxes.m.width.a.width := [=];
help::pkg.display.widgets.objs.synclistboxes.m.width.a.width.d := 'The new width';
help::pkg.display.widgets.objs.synclistboxes.m.width.a.width.def := '';
help::pkg.display.widgets.objs.synclistboxes.m.width.a.width.a := 'Integer';
help::pkg.display.widgets.objs.synclistboxes.m.width.a.whichbox := [=];
help::pkg.display.widgets.objs.synclistboxes.m.width.a.whichbox.d := 'which listbox gets the new width';
help::pkg.display.widgets.objs.synclistboxes.m.width.a.whichbox.def := '';
help::pkg.display.widgets.objs.synclistboxes.m.width.a.whichbox.a := 'An optional integer';
help::pkg.display.widgets.objs.synclistboxes.m.width.s := 'width(width, whichbox)';
help::pkg.display.widgets.objs.tabdialog := [=];
help::pkg.display.widgets.objs.tabdialog.m := [=];
help::pkg.display.widgets.objs.tabdialog.c := [=];
help::pkg.display.widgets.objs.tabdialog.d := 'Tk widget where the menu label changes with selection';
help::pkg.display.widgets.objs.tabdialog.c.tabdialog := [=];
help::pkg.display.widgets.objs.tabdialog.c.tabdialog.d := 'Construct an tabdialog';
help::pkg.display.widgets.objs.tabdialog.c.tabdialog.a.parent := [=];
help::pkg.display.widgets.objs.tabdialog.c.tabdialog.a.parent.d := 'Parent of the tabdialog';
help::pkg.display.widgets.objs.tabdialog.c.tabdialog.a.parent.def := '';
help::pkg.display.widgets.objs.tabdialog.c.tabdialog.a.parent.a := 'Agent';
help::pkg.display.widgets.objs.tabdialog.c.tabdialog.a.colmax := [=];
help::pkg.display.widgets.objs.tabdialog.c.tabdialog.a.colmax.d := 'Maximum number of Tab buttons per row';
help::pkg.display.widgets.objs.tabdialog.c.tabdialog.a.colmax.def := '5';
help::pkg.display.widgets.objs.tabdialog.c.tabdialog.a.colmax.a := 'Integer';
help::pkg.display.widgets.objs.tabdialog.c.tabdialog.a.title := [=];
help::pkg.display.widgets.objs.tabdialog.c.tabdialog.a.title.d := 'Title place above button row';
help::pkg.display.widgets.objs.tabdialog.c.tabdialog.a.title.def := '\' Select\' ';
help::pkg.display.widgets.objs.tabdialog.c.tabdialog.a.title.a := 'String';
help::pkg.display.widgets.objs.tabdialog.c.tabdialog.a.hlthickness := [=];
help::pkg.display.widgets.objs.tabdialog.c.tabdialog.a.hlthickness.d := 'Thickness of tab border';
help::pkg.display.widgets.objs.tabdialog.c.tabdialog.a.hlthickness.def := '5';
help::pkg.display.widgets.objs.tabdialog.c.tabdialog.a.hlthickness.a := 'Integer';
help::pkg.display.widgets.objs.tabdialog.c.tabdialog.a.widgetset := [=];
help::pkg.display.widgets.objs.tabdialog.c.tabdialog.a.widgetset.d := 'The widget server to use';
help::pkg.display.widgets.objs.tabdialog.c.tabdialog.a.widgetset.def := 'dws';
help::pkg.display.widgets.objs.tabdialog.c.tabdialog.a.widgetset.a := 'widgetserver tool';
help::pkg.display.widgets.objs.tabdialog.c.tabdialog.s := 'tabdialog(parent, colmax, title, hlthickness, widgetset)';
help::pkg.display.widgets.objs.tabdialog.m.add := [=];
help::pkg.display.widgets.objs.tabdialog.m.add.d := 'Add a new Tab';
help::pkg.display.widgets.objs.tabdialog.m.add.a.tab := [=];
help::pkg.display.widgets.objs.tabdialog.m.add.a.tab.d := 'The Tab';
help::pkg.display.widgets.objs.tabdialog.m.add.a.tab.def := '';
help::pkg.display.widgets.objs.tabdialog.m.add.a.tab.a := 'Agent';
help::pkg.display.widgets.objs.tabdialog.m.add.a.tabname := [=];
help::pkg.display.widgets.objs.tabdialog.m.add.a.tabname.d := 'Name of the tab for the tab button';
help::pkg.display.widgets.objs.tabdialog.m.add.a.tabname.def := '';
help::pkg.display.widgets.objs.tabdialog.m.add.a.tabname.a := 'String';
help::pkg.display.widgets.objs.tabdialog.m.add.a.hlp := [=];
help::pkg.display.widgets.objs.tabdialog.m.add.a.hlp.d := 'Popup help text for tab button';
help::pkg.display.widgets.objs.tabdialog.m.add.a.hlp.def := '';
help::pkg.display.widgets.objs.tabdialog.m.add.a.hlp.a := 'String';
help::pkg.display.widgets.objs.tabdialog.m.add.s := 'add(tab, tabname, hlp)';
help::pkg.display.widgets.objs.tabdialog.m.available := [=];
help::pkg.display.widgets.objs.tabdialog.m.available.d := 'Is this Tab available';
help::pkg.display.widgets.objs.tabdialog.m.available.a.tabname := [=];
help::pkg.display.widgets.objs.tabdialog.m.available.a.tabname.d := 'Name of the tab for the tab button';
help::pkg.display.widgets.objs.tabdialog.m.available.a.tabname.def := '';
help::pkg.display.widgets.objs.tabdialog.m.available.a.tabname.a := 'String';
help::pkg.display.widgets.objs.tabdialog.m.available.s := 'available(tabname)';
help::pkg.display.widgets.objs.tabdialog.m.delete := [=];
help::pkg.display.widgets.objs.tabdialog.m.delete.d := 'Delete an existing Tab';
help::pkg.display.widgets.objs.tabdialog.m.delete.a.tabname := [=];
help::pkg.display.widgets.objs.tabdialog.m.delete.a.tabname.d := 'Name of the tab for the tab button';
help::pkg.display.widgets.objs.tabdialog.m.delete.a.tabname.def := '';
help::pkg.display.widgets.objs.tabdialog.m.delete.a.tabname.a := 'String';
help::pkg.display.widgets.objs.tabdialog.m.delete.s := 'delete(tabname)';
help::pkg.display.widgets.objs.tabdialog.m.deleteall := [=];
help::pkg.display.widgets.objs.tabdialog.m.deleteall.d := 'Delete all of the Tabs';
help::pkg.display.widgets.objs.tabdialog.m.deleteall.s := 'deleteall()';
help::pkg.display.widgets.objs.tabdialog.m.dialogframe := [=];
help::pkg.display.widgets.objs.tabdialog.m.dialogframe.d := 'Get the internal dialog frame';
help::pkg.display.widgets.objs.tabdialog.m.dialogframe.s := 'dialogframe()';
help::pkg.display.widgets.objs.tabdialog.m.done := [=];
help::pkg.display.widgets.objs.tabdialog.m.done.d := 'Destroy ourselves';
help::pkg.display.widgets.objs.tabdialog.m.done.s := 'done()';
help::pkg.display.widgets.objs.tabdialog.m.front := [=];
help::pkg.display.widgets.objs.tabdialog.m.front.d := 'Bring this Tab to the front';
help::pkg.display.widgets.objs.tabdialog.m.front.a.tabname := [=];
help::pkg.display.widgets.objs.tabdialog.m.front.a.tabname.d := 'Name of the tab';
help::pkg.display.widgets.objs.tabdialog.m.front.a.tabname.def := '';
help::pkg.display.widgets.objs.tabdialog.m.front.a.tabname.a := 'String';
help::pkg.display.widgets.objs.tabdialog.m.front.s := 'front(tabname)';
help::pkg.display.widgets.objs.tabdialog.m.list := [=];
help::pkg.display.widgets.objs.tabdialog.m.list.d := 'List Tabs';
help::pkg.display.widgets.objs.tabdialog.m.list.s := 'list()';
help::pkg.display.widgets.objs.tabdialog.m.replace := [=];
help::pkg.display.widgets.objs.tabdialog.m.replace.d := 'Replace a new Tab';
help::pkg.display.widgets.objs.tabdialog.m.replace.a.tab := [=];
help::pkg.display.widgets.objs.tabdialog.m.replace.a.tab.d := 'The Tab';
help::pkg.display.widgets.objs.tabdialog.m.replace.a.tab.def := '';
help::pkg.display.widgets.objs.tabdialog.m.replace.a.tab.a := 'Agent';
help::pkg.display.widgets.objs.tabdialog.m.replace.a.tabname := [=];
help::pkg.display.widgets.objs.tabdialog.m.replace.a.tabname.d := 'Name of the tab for the tab button';
help::pkg.display.widgets.objs.tabdialog.m.replace.a.tabname.def := '';
help::pkg.display.widgets.objs.tabdialog.m.replace.a.tabname.a := 'String';
help::pkg.display.widgets.objs.tabdialog.m.replace.s := 'replace(tab, tabname)';
help::pkg.display.widgets.objs.tabdialog.m.which := [=];
help::pkg.display.widgets.objs.tabdialog.m.which.d := 'Which Tab is visible';
help::pkg.display.widgets.objs.tabdialog.m.which.s := 'which()';
help::pkg.display.widgets.funs.tabdialogtest := [=];
help::pkg.display.widgets.funs.tabdialogtest.a := [=];
help::pkg.display.widgets.funs.tabdialogtest.d := 'Test tabdialog widget';
help::pkg.display.widgets.funs.tabdialogtest.s := 'tabdialogtest()';
help::pkg.display.widgets.objs.tapedeck := [=];
help::pkg.display.widgets.objs.tapedeck.m := [=];
help::pkg.display.widgets.objs.tapedeck.c := [=];
help::pkg.display.widgets.objs.tapedeck.d := 'Glish/Tk widget providing tapedeck-like control buttons';
help::pkg.display.widgets.objs.tapedeck.c.tapedeck := [=];
help::pkg.display.widgets.objs.tapedeck.c.tapedeck.d := 'Construct a tapedeck';
help::pkg.display.widgets.objs.tapedeck.c.tapedeck.a.parent := [=];
help::pkg.display.widgets.objs.tapedeck.c.tapedeck.a.parent.d := 'Parent of the menu';
help::pkg.display.widgets.objs.tapedeck.c.tapedeck.a.parent.def := '';
help::pkg.display.widgets.objs.tapedeck.c.tapedeck.a.parent.a := 'Tk frame';
help::pkg.display.widgets.objs.tapedeck.c.tapedeck.a.background := [=];
help::pkg.display.widgets.objs.tapedeck.c.tapedeck.a.background.d := 'Background color';
help::pkg.display.widgets.objs.tapedeck.c.tapedeck.a.background.def := '`lightgrey\' ';
help::pkg.display.widgets.objs.tapedeck.c.tapedeck.a.background.a := 'X color';
help::pkg.display.widgets.objs.tapedeck.c.tapedeck.a.hasstop := [=];
help::pkg.display.widgets.objs.tapedeck.c.tapedeck.a.hasstop.d := 'Whether to provide \' stop\'  button';
help::pkg.display.widgets.objs.tapedeck.c.tapedeck.a.hasstop.def := 'T';
help::pkg.display.widgets.objs.tapedeck.c.tapedeck.a.hasstop.a := 'Boolean';
help::pkg.display.widgets.objs.tapedeck.c.tapedeck.a.hasplay := [=];
help::pkg.display.widgets.objs.tapedeck.c.tapedeck.a.hasplay.d := 'Whether to provide \' play\'  button/s';
help::pkg.display.widgets.objs.tapedeck.c.tapedeck.a.hasplay.def := 'T';
help::pkg.display.widgets.objs.tapedeck.c.tapedeck.a.hasplay.a := 'Boolean';
help::pkg.display.widgets.objs.tapedeck.c.tapedeck.a.hasstep := [=];
help::pkg.display.widgets.objs.tapedeck.c.tapedeck.a.hasstep.d := 'Whether to provide \' step\'  button/s';
help::pkg.display.widgets.objs.tapedeck.c.tapedeck.a.hasstep.def := 'T';
help::pkg.display.widgets.objs.tapedeck.c.tapedeck.a.hasstep.a := 'Boolean';
help::pkg.display.widgets.objs.tapedeck.c.tapedeck.a.hasto := [=];
help::pkg.display.widgets.objs.tapedeck.c.tapedeck.a.hasto.d := 'Whether to provide \' to\'  button/s (ie. to end, to start)';
help::pkg.display.widgets.objs.tapedeck.c.tapedeck.a.hasto.def := 'T';
help::pkg.display.widgets.objs.tapedeck.c.tapedeck.a.hasto.a := 'Boolean';
help::pkg.display.widgets.objs.tapedeck.c.tapedeck.a.hasforward := [=];
help::pkg.display.widgets.objs.tapedeck.c.tapedeck.a.hasforward.d := 'Whether to provide forward-direction buttons';
help::pkg.display.widgets.objs.tapedeck.c.tapedeck.a.hasforward.def := 'T';
help::pkg.display.widgets.objs.tapedeck.c.tapedeck.a.hasforward.a := 'Boolean';
help::pkg.display.widgets.objs.tapedeck.c.tapedeck.a.hasreverse := [=];
help::pkg.display.widgets.objs.tapedeck.c.tapedeck.a.hasreverse.d := 'Whether to provide reverse-direction buttons';
help::pkg.display.widgets.objs.tapedeck.c.tapedeck.a.hasreverse.def := 'T';
help::pkg.display.widgets.objs.tapedeck.c.tapedeck.a.hasreverse.a := 'Boolean';
help::pkg.display.widgets.objs.tapedeck.c.tapedeck.a.stopcolor := [=];
help::pkg.display.widgets.objs.tapedeck.c.tapedeck.a.stopcolor.d := 'Color of the \' stop\'  button';
help::pkg.display.widgets.objs.tapedeck.c.tapedeck.a.stopcolor.def := '\' black\' ';
help::pkg.display.widgets.objs.tapedeck.c.tapedeck.a.stopcolor.a := 'X color';
help::pkg.display.widgets.objs.tapedeck.c.tapedeck.a.playcolor := [=];
help::pkg.display.widgets.objs.tapedeck.c.tapedeck.a.playcolor.d := 'Color of the \' play\'  button/s';
help::pkg.display.widgets.objs.tapedeck.c.tapedeck.a.playcolor.def := '\' black\' ';
help::pkg.display.widgets.objs.tapedeck.c.tapedeck.a.playcolor.a := 'X color';
help::pkg.display.widgets.objs.tapedeck.c.tapedeck.a.stepcolor := [=];
help::pkg.display.widgets.objs.tapedeck.c.tapedeck.a.stepcolor.d := 'Color of the \' step\'  button/s';
help::pkg.display.widgets.objs.tapedeck.c.tapedeck.a.stepcolor.def := '\' black\' ';
help::pkg.display.widgets.objs.tapedeck.c.tapedeck.a.stepcolor.a := 'X color';
help::pkg.display.widgets.objs.tapedeck.c.tapedeck.a.tocolor := [=];
help::pkg.display.widgets.objs.tapedeck.c.tapedeck.a.tocolor.d := 'Color of the \' to\'  (cue) button/s';
help::pkg.display.widgets.objs.tapedeck.c.tapedeck.a.tocolor.def := '\' black\' ';
help::pkg.display.widgets.objs.tapedeck.c.tapedeck.a.tocolor.a := 'X color';
help::pkg.display.widgets.objs.tapedeck.c.tapedeck.a.orient := [=];
help::pkg.display.widgets.objs.tapedeck.c.tapedeck.a.orient.d := 'Orientation of the tapedeck';
help::pkg.display.widgets.objs.tapedeck.c.tapedeck.a.orient.def := '\' horizontal\' ';
help::pkg.display.widgets.objs.tapedeck.c.tapedeck.a.orient.a := '\' horizontal\'  \' vertical\' ';
help::pkg.display.widgets.objs.tapedeck.c.tapedeck.a.widgetset := [=];
help::pkg.display.widgets.objs.tapedeck.c.tapedeck.a.widgetset.d := 'Widget set to use';
help::pkg.display.widgets.objs.tapedeck.c.tapedeck.a.widgetset.def := 'dws';
help::pkg.display.widgets.objs.tapedeck.c.tapedeck.a.widgetset.a := 'A widgetserver closure tool';
help::pkg.display.widgets.objs.tapedeck.c.tapedeck.s := 'tapedeck(parent, background, hasstop, hasplay, hasstep, hasto, hasforward, hasreverse, stopcolor, playcolor, stepcolor, tocolor, orient, widgetset)';
help::pkg.display.widgets.objs.tapedeck.m.dismiss := [=];
help::pkg.display.widgets.objs.tapedeck.m.dismiss.d := 'Disable and dismiss the tapedeck';
help::pkg.display.widgets.objs.tapedeck.m.dismiss.s := 'dismiss()';
help::pkg.display.widgets.objs.tapedeck.m.done := [=];
help::pkg.display.widgets.objs.tapedeck.m.done.d := 'Disable and dismiss the tapedeck';
help::pkg.display.widgets.objs.tapedeck.m.done.s := 'done()';
help::pkg.display.widgets.objs.tapedeck.m.enable := [=];
help::pkg.display.widgets.objs.tapedeck.m.enable.d := 'Enable the tapedeck controls';
help::pkg.display.widgets.objs.tapedeck.m.enable.s := 'enable()';
help::pkg.display.widgets.objs.tapedeck.m.disable := [=];
help::pkg.display.widgets.objs.tapedeck.m.disable.d := 'Disable the tapedeck controls';
help::pkg.display.widgets.objs.tapedeck.m.disable.s := 'disable()';
help::pkg.display.widgets.objs.taqlwidget := [=];
help::pkg.display.widgets.objs.taqlwidget.m := [=];
help::pkg.display.widgets.objs.taqlwidget.c := [=];
help::pkg.display.widgets.objs.taqlwidget.d := 'Widget to form a TaQL command';
help::pkg.display.widgets.objs.taqlwidget.c.taqlwidget := [=];
help::pkg.display.widgets.objs.taqlwidget.c.taqlwidget.d := 'Construct TaQL widget';
help::pkg.display.widgets.objs.taqlwidget.c.taqlwidget.a.cdesc := [=];
help::pkg.display.widgets.objs.taqlwidget.c.taqlwidget.a.cdesc.d := 'The column descriptions';
help::pkg.display.widgets.objs.taqlwidget.c.taqlwidget.a.cdesc.def := '';
help::pkg.display.widgets.objs.taqlwidget.c.taqlwidget.a.cdesc.a := 'Record';
help::pkg.display.widgets.objs.taqlwidget.c.taqlwidget.a.title := [=];
help::pkg.display.widgets.objs.taqlwidget.c.taqlwidget.a.title.d := 'Title string';
help::pkg.display.widgets.objs.taqlwidget.c.taqlwidget.a.title.def := 'Query Dialogue';
help::pkg.display.widgets.objs.taqlwidget.c.taqlwidget.a.title.a := 'String';
help::pkg.display.widgets.objs.taqlwidget.c.taqlwidget.a.canselect := [=];
help::pkg.display.widgets.objs.taqlwidget.c.taqlwidget.a.canselect.d := 'Possible to build select string?';
help::pkg.display.widgets.objs.taqlwidget.c.taqlwidget.a.canselect.def := 'F';
help::pkg.display.widgets.objs.taqlwidget.c.taqlwidget.a.canselect.a := 'Bool';
help::pkg.display.widgets.objs.taqlwidget.c.taqlwidget.a.cansort := [=];
help::pkg.display.widgets.objs.taqlwidget.c.taqlwidget.a.cansort.d := 'Possible to build sort string?';
help::pkg.display.widgets.objs.taqlwidget.c.taqlwidget.a.cansort.def := 'F';
help::pkg.display.widgets.objs.taqlwidget.c.taqlwidget.a.cansort.a := 'Bool';
help::pkg.display.widgets.objs.taqlwidget.c.taqlwidget.a.cangiving := [=];
help::pkg.display.widgets.objs.taqlwidget.c.taqlwidget.a.cangiving.d := 'Possible to build giving string?';
help::pkg.display.widgets.objs.taqlwidget.c.taqlwidget.a.cangiving.def := 'F';
help::pkg.display.widgets.objs.taqlwidget.c.taqlwidget.a.cangiving.a := 'Bool';
help::pkg.display.widgets.objs.taqlwidget.c.taqlwidget.a.heigth := [=];
help::pkg.display.widgets.objs.taqlwidget.c.taqlwidget.a.heigth.d := 'Height of the field list';
help::pkg.display.widgets.objs.taqlwidget.c.taqlwidget.a.heigth.def := '12';
help::pkg.display.widgets.objs.taqlwidget.c.taqlwidget.a.heigth.a := 'integer';
help::pkg.display.widgets.objs.taqlwidget.c.taqlwidget.a.giving := [=];
help::pkg.display.widgets.objs.taqlwidget.c.taqlwidget.a.giving.d := 'default giving string';
help::pkg.display.widgets.objs.taqlwidget.c.taqlwidget.a.giving.def := '\' \' ';
help::pkg.display.widgets.objs.taqlwidget.c.taqlwidget.a.giving.a := 'string';
help::pkg.display.widgets.objs.taqlwidget.c.taqlwidget.a.widgetset := [=];
help::pkg.display.widgets.objs.taqlwidget.c.taqlwidget.a.widgetset.d := 'widgetset to be used';
help::pkg.display.widgets.objs.taqlwidget.c.taqlwidget.a.widgetset.def := 'dws';
help::pkg.display.widgets.objs.taqlwidget.c.taqlwidget.a.widgetset.a := 'widgetset tool';
help::pkg.display.widgets.objs.taqlwidget.c.taqlwidget.s := 'taqlwidget(cdesc, title, canselect, cansort, cangiving, heigth, giving, widgetset)';
help::pkg.display.widgets.objs.twodactionoptionmenu := [=];
help::pkg.display.widgets.objs.twodactionoptionmenu.m := [=];
help::pkg.display.widgets.objs.twodactionoptionmenu.c := [=];
help::pkg.display.widgets.objs.twodactionoptionmenu.d := 'Pop-up,  two-dimensional  menu';
help::pkg.display.widgets.objs.twodactionoptionmenu.c.twodactionoptionmenu := [=];
help::pkg.display.widgets.objs.twodactionoptionmenu.c.twodactionoptionmenu.d := 'Construct an optionmenu';
help::pkg.display.widgets.objs.twodactionoptionmenu.c.twodactionoptionmenu.a.parent := [=];
help::pkg.display.widgets.objs.twodactionoptionmenu.c.twodactionoptionmenu.a.parent.d := 'Parent of the menu';
help::pkg.display.widgets.objs.twodactionoptionmenu.c.twodactionoptionmenu.a.parent.def := '';
help::pkg.display.widgets.objs.twodactionoptionmenu.c.twodactionoptionmenu.a.parent.a := 'Widget';
help::pkg.display.widgets.objs.twodactionoptionmenu.c.twodactionoptionmenu.a.images := [=];
help::pkg.display.widgets.objs.twodactionoptionmenu.c.twodactionoptionmenu.a.images.d := 'Filenames of bitmaps to use';
help::pkg.display.widgets.objs.twodactionoptionmenu.c.twodactionoptionmenu.a.images.def := 'Empty menu';
help::pkg.display.widgets.objs.twodactionoptionmenu.c.twodactionoptionmenu.a.images.a := 'Vector of strings';
help::pkg.display.widgets.objs.twodactionoptionmenu.c.twodactionoptionmenu.a.names := [=];
help::pkg.display.widgets.objs.twodactionoptionmenu.c.twodactionoptionmenu.a.names.d := 'The menu item names';
help::pkg.display.widgets.objs.twodactionoptionmenu.c.twodactionoptionmenu.a.names.def := 'Empty menu';
help::pkg.display.widgets.objs.twodactionoptionmenu.c.twodactionoptionmenu.a.names.a := 'Vector of strings';
help::pkg.display.widgets.objs.twodactionoptionmenu.c.twodactionoptionmenu.a.values := [=];
help::pkg.display.widgets.objs.twodactionoptionmenu.c.twodactionoptionmenu.a.values.d := 'The menu item values';
help::pkg.display.widgets.objs.twodactionoptionmenu.c.twodactionoptionmenu.a.values.def := 'Empty menu';
help::pkg.display.widgets.objs.twodactionoptionmenu.c.twodactionoptionmenu.a.values.a := 'Vector of anything';
help::pkg.display.widgets.objs.twodactionoptionmenu.c.twodactionoptionmenu.a.ncolumn := [=];
help::pkg.display.widgets.objs.twodactionoptionmenu.c.twodactionoptionmenu.a.ncolumn.d := 'Number of columns of buttons';
help::pkg.display.widgets.objs.twodactionoptionmenu.c.twodactionoptionmenu.a.ncolumn.def := '3';
help::pkg.display.widgets.objs.twodactionoptionmenu.c.twodactionoptionmenu.a.ncolumn.a := 'Integer';
help::pkg.display.widgets.objs.twodactionoptionmenu.c.twodactionoptionmenu.a.hlp := [=];
help::pkg.display.widgets.objs.twodactionoptionmenu.c.twodactionoptionmenu.a.hlp.d := 'Short popuphelp text';
help::pkg.display.widgets.objs.twodactionoptionmenu.c.twodactionoptionmenu.a.hlp.def := 'No help';
help::pkg.display.widgets.objs.twodactionoptionmenu.c.twodactionoptionmenu.a.hlp.a := 'String';
help::pkg.display.widgets.objs.twodactionoptionmenu.c.twodactionoptionmenu.a.hlp2 := [=];
help::pkg.display.widgets.objs.twodactionoptionmenu.c.twodactionoptionmenu.a.hlp2.d := 'Long popuphelp text';
help::pkg.display.widgets.objs.twodactionoptionmenu.c.twodactionoptionmenu.a.hlp2.def := 'No help';
help::pkg.display.widgets.objs.twodactionoptionmenu.c.twodactionoptionmenu.a.hlp2.a := 'String';
help::pkg.display.widgets.objs.twodactionoptionmenu.c.twodactionoptionmenu.a.padx := [=];
help::pkg.display.widgets.objs.twodactionoptionmenu.c.twodactionoptionmenu.a.padx.d := 'Horizontal padding around text';
help::pkg.display.widgets.objs.twodactionoptionmenu.c.twodactionoptionmenu.a.padx.def := '2';
help::pkg.display.widgets.objs.twodactionoptionmenu.c.twodactionoptionmenu.a.padx.a := 'Integer';
help::pkg.display.widgets.objs.twodactionoptionmenu.c.twodactionoptionmenu.a.pady := [=];
help::pkg.display.widgets.objs.twodactionoptionmenu.c.twodactionoptionmenu.a.pady.d := 'Vertical padding around text';
help::pkg.display.widgets.objs.twodactionoptionmenu.c.twodactionoptionmenu.a.pady.def := '2';
help::pkg.display.widgets.objs.twodactionoptionmenu.c.twodactionoptionmenu.a.pady.a := 'Integer';
help::pkg.display.widgets.objs.twodactionoptionmenu.c.twodactionoptionmenu.a.borderwidth := [=];
help::pkg.display.widgets.objs.twodactionoptionmenu.c.twodactionoptionmenu.a.borderwidth.d := 'Border width';
help::pkg.display.widgets.objs.twodactionoptionmenu.c.twodactionoptionmenu.a.borderwidth.def := '2';
help::pkg.display.widgets.objs.twodactionoptionmenu.c.twodactionoptionmenu.a.borderwidth.a := 'Integer';
help::pkg.display.widgets.objs.twodactionoptionmenu.c.twodactionoptionmenu.a.widgetset := [=];
help::pkg.display.widgets.objs.twodactionoptionmenu.c.twodactionoptionmenu.a.widgetset.d := 'The widget server to use';
help::pkg.display.widgets.objs.twodactionoptionmenu.c.twodactionoptionmenu.a.widgetset.def := 'dws';
help::pkg.display.widgets.objs.twodactionoptionmenu.c.twodactionoptionmenu.a.widgetset.a := 'widgetserver tool';
help::pkg.display.widgets.objs.twodactionoptionmenu.c.twodactionoptionmenu.s := 'twodactionoptionmenu(parent, images, names, values, ncolumn, hlp, hlp2, padx, pady, borderwidth, widgetset)';
help::pkg.display.widgets.objs.twodactionoptionmenu.m.currentvalue := [=];
help::pkg.display.widgets.objs.twodactionoptionmenu.m.currentvalue.d := 'Return the currently selected value';
help::pkg.display.widgets.objs.twodactionoptionmenu.m.currentvalue.s := 'currentvalue()';
help::pkg.display.widgets.objs.twodactionoptionmenu.m.newselection := [=];
help::pkg.display.widgets.objs.twodactionoptionmenu.m.newselection.d := 'Select a new option based on index';
help::pkg.display.widgets.objs.twodactionoptionmenu.m.newselection.a.index := [=];
help::pkg.display.widgets.objs.twodactionoptionmenu.m.newselection.a.index.d := 'The index of the new option';
help::pkg.display.widgets.objs.twodactionoptionmenu.m.newselection.a.index.def := '';
help::pkg.display.widgets.objs.twodactionoptionmenu.m.newselection.a.index.a := 'Integer';
help::pkg.display.widgets.objs.twodactionoptionmenu.m.newselection.s := 'newselection(index)';
help::pkg.display.widgets.objs.widgetserver := [=];
help::pkg.display.widgets.objs.widgetserver.m := [=];
help::pkg.display.widgets.objs.widgetserver.c := [=];
help::pkg.display.widgets.objs.widgetserver.d := 'Tool to provide Tk widgets and AIPS++\ megawidgets';
help::pkg.display.widgets.objs.widgetserver.c.widgetserver := [=];
help::pkg.display.widgets.objs.widgetserver.c.widgetserver.d := 'Construct a widgetserver';
help::pkg.display.widgets.objs.widgetserver.c.widgetserver.a.whichgtk := [=];
help::pkg.display.widgets.objs.widgetserver.c.widgetserver.a.whichgtk.d := 'Record holding interface to Glish/Tk client';
help::pkg.display.widgets.objs.widgetserver.c.widgetserver.a.whichgtk.def := 'dgtk';
help::pkg.display.widgets.objs.widgetserver.c.widgetserver.a.whichgtk.a := 'Record of functions';
help::pkg.display.widgets.objs.widgetserver.c.widgetserver.s := 'widgetserver(whichgtk)';
help::pkg.display.widgets.objs.widgetserver.m.frame := [=];
help::pkg.display.widgets.objs.widgetserver.m.frame.d := 'Make a frame widget';
help::pkg.display.widgets.objs.widgetserver.m.frame.a.frame_arguments := [=];
help::pkg.display.widgets.objs.widgetserver.m.frame.a.frame_arguments.d := 'standard Glish/Tk frame arguments';
help::pkg.display.widgets.objs.widgetserver.m.frame.a.frame_arguments.def := '';
help::pkg.display.widgets.objs.widgetserver.m.frame.a.frame_arguments.a := '';
help::pkg.display.widgets.objs.widgetserver.m.frame.s := 'frame(frame arguments)';
help::pkg.display.widgets.objs.widgetserver.m.button := [=];
help::pkg.display.widgets.objs.widgetserver.m.button.d := 'Make a button widget';
help::pkg.display.widgets.objs.widgetserver.m.button.a.button_arguments := [=];
help::pkg.display.widgets.objs.widgetserver.m.button.a.button_arguments.d := 'standard Glish/Tk button arguments';
help::pkg.display.widgets.objs.widgetserver.m.button.a.button_arguments.def := '';
help::pkg.display.widgets.objs.widgetserver.m.button.a.button_arguments.a := '';
help::pkg.display.widgets.objs.widgetserver.m.button.s := 'button(button arguments)';
help::pkg.display.widgets.objs.widgetserver.m.scale := [=];
help::pkg.display.widgets.objs.widgetserver.m.scale.d := 'Make a scale widget';
help::pkg.display.widgets.objs.widgetserver.m.scale.a.scale_arguments := [=];
help::pkg.display.widgets.objs.widgetserver.m.scale.a.scale_arguments.d := 'standard Glish/Tk scale arguments';
help::pkg.display.widgets.objs.widgetserver.m.scale.a.scale_arguments.def := '';
help::pkg.display.widgets.objs.widgetserver.m.scale.a.scale_arguments.a := '';
help::pkg.display.widgets.objs.widgetserver.m.scale.s := 'scale(scale arguments)';
help::pkg.display.widgets.objs.widgetserver.m.text := [=];
help::pkg.display.widgets.objs.widgetserver.m.text.d := 'Make a text widget';
help::pkg.display.widgets.objs.widgetserver.m.text.a.text_arguments := [=];
help::pkg.display.widgets.objs.widgetserver.m.text.a.text_arguments.d := 'standard Glish/Tk text arguments';
help::pkg.display.widgets.objs.widgetserver.m.text.a.text_arguments.def := '';
help::pkg.display.widgets.objs.widgetserver.m.text.a.text_arguments.a := '';
help::pkg.display.widgets.objs.widgetserver.m.text.s := 'text(text arguments)';
help::pkg.display.widgets.objs.widgetserver.m.scrollbar := [=];
help::pkg.display.widgets.objs.widgetserver.m.scrollbar.d := 'Make a scrollbar widget';
help::pkg.display.widgets.objs.widgetserver.m.scrollbar.a.scrollbar_arguments := [=];
help::pkg.display.widgets.objs.widgetserver.m.scrollbar.a.scrollbar_arguments.d := 'standard Glish/Tk scrollbar arguments';
help::pkg.display.widgets.objs.widgetserver.m.scrollbar.a.scrollbar_arguments.def := '';
help::pkg.display.widgets.objs.widgetserver.m.scrollbar.a.scrollbar_arguments.a := '';
help::pkg.display.widgets.objs.widgetserver.m.scrollbar.s := 'scrollbar(scrollbar arguments)';
help::pkg.display.widgets.objs.widgetserver.m.label := [=];
help::pkg.display.widgets.objs.widgetserver.m.label.d := 'Make a label widget';
help::pkg.display.widgets.objs.widgetserver.m.label.a.label_arguments := [=];
help::pkg.display.widgets.objs.widgetserver.m.label.a.label_arguments.d := 'standard Glish/Tk label arguments';
help::pkg.display.widgets.objs.widgetserver.m.label.a.label_arguments.def := '';
help::pkg.display.widgets.objs.widgetserver.m.label.a.label_arguments.a := '';
help::pkg.display.widgets.objs.widgetserver.m.label.s := 'label(label arguments)';
help::pkg.display.widgets.objs.widgetserver.m.entry := [=];
help::pkg.display.widgets.objs.widgetserver.m.entry.d := 'Make a entry widget';
help::pkg.display.widgets.objs.widgetserver.m.entry.a.entry_arguments := [=];
help::pkg.display.widgets.objs.widgetserver.m.entry.a.entry_arguments.d := 'standard Glish/Tk entry arguments';
help::pkg.display.widgets.objs.widgetserver.m.entry.a.entry_arguments.def := '';
help::pkg.display.widgets.objs.widgetserver.m.entry.a.entry_arguments.a := '';
help::pkg.display.widgets.objs.widgetserver.m.entry.s := 'entry(entry arguments)';
help::pkg.display.widgets.objs.widgetserver.m.message := [=];
help::pkg.display.widgets.objs.widgetserver.m.message.d := 'Make a message widget';
help::pkg.display.widgets.objs.widgetserver.m.message.a.message_arguments := [=];
help::pkg.display.widgets.objs.widgetserver.m.message.a.message_arguments.d := 'standard Glish/Tk message arguments';
help::pkg.display.widgets.objs.widgetserver.m.message.a.message_arguments.def := '';
help::pkg.display.widgets.objs.widgetserver.m.message.a.message_arguments.a := '';
help::pkg.display.widgets.objs.widgetserver.m.message.s := 'message(message arguments)';
help::pkg.display.widgets.objs.widgetserver.m.listbox := [=];
help::pkg.display.widgets.objs.widgetserver.m.listbox.d := 'Make a listbox widget';
help::pkg.display.widgets.objs.widgetserver.m.listbox.a.listbox_arguments := [=];
help::pkg.display.widgets.objs.widgetserver.m.listbox.a.listbox_arguments.d := 'standard Glish/Tk listbox arguments';
help::pkg.display.widgets.objs.widgetserver.m.listbox.a.listbox_arguments.def := '';
help::pkg.display.widgets.objs.widgetserver.m.listbox.a.listbox_arguments.a := '';
help::pkg.display.widgets.objs.widgetserver.m.listbox.s := 'listbox(listbox arguments)';
help::pkg.display.widgets.objs.widgetserver.m.canvas := [=];
help::pkg.display.widgets.objs.widgetserver.m.canvas.d := 'Make a canvas widget';
help::pkg.display.widgets.objs.widgetserver.m.canvas.a.canvas_arguments := [=];
help::pkg.display.widgets.objs.widgetserver.m.canvas.a.canvas_arguments.d := 'standard Glish/Tk canvas arguments';
help::pkg.display.widgets.objs.widgetserver.m.canvas.a.canvas_arguments.def := '';
help::pkg.display.widgets.objs.widgetserver.m.canvas.a.canvas_arguments.a := '';
help::pkg.display.widgets.objs.widgetserver.m.canvas.s := 'canvas(canvas arguments)';
help::pkg.display.widgets.objs.widgetserver.m.pgplot := [=];
help::pkg.display.widgets.objs.widgetserver.m.pgplot.d := 'Make a pgplot widget';
help::pkg.display.widgets.objs.widgetserver.m.pgplot.a.pgplot_arguments := [=];
help::pkg.display.widgets.objs.widgetserver.m.pgplot.a.pgplot_arguments.d := 'standard Glish/Tk pgplot arguments';
help::pkg.display.widgets.objs.widgetserver.m.pgplot.a.pgplot_arguments.def := '';
help::pkg.display.widgets.objs.widgetserver.m.pgplot.a.pgplot_arguments.a := '';
help::pkg.display.widgets.objs.widgetserver.m.pgplot.s := 'pgplot(pgplot arguments)';
help::pkg.display.widgets.objs.widgetserver.m.have_gui := [=];
help::pkg.display.widgets.objs.widgetserver.m.have_gui.d := 'Query whether GUIs can be built';
help::pkg.display.widgets.objs.widgetserver.m.have_gui.s := 'have_gui()';
help::pkg.display.widgets.objs.widgetserver.m.tk_hold := [=];
help::pkg.display.widgets.objs.widgetserver.m.tk_hold.d := 'Hold Glish/Tk widget events';
help::pkg.display.widgets.objs.widgetserver.m.tk_hold.s := 'tk_hold()';
help::pkg.display.widgets.objs.widgetserver.m.tk_release := [=];
help::pkg.display.widgets.objs.widgetserver.m.tk_release.d := 'Release Glish/Tk widget events';
help::pkg.display.widgets.objs.widgetserver.m.tk_release.s := 'tk_release()';
help::pkg.display.widgets.objs.widgetserver.m.tk_iconpath := [=];
help::pkg.display.widgets.objs.widgetserver.m.tk_iconpath.d := '???';
help::pkg.display.widgets.objs.widgetserver.m.tk_iconpath.s := 'tk_iconpath()';
help::pkg.display.widgets.objs.widgetserver.m.rollup := [=];
help::pkg.display.widgets.objs.widgetserver.m.rollup.d := 'Make a rollup megawidget';
help::pkg.display.widgets.objs.widgetserver.m.rollup.a.rollup_megawidget_arguments := [=];
help::pkg.display.widgets.objs.widgetserver.m.rollup.a.rollup_megawidget_arguments.d := 'standard AIPS++\ rollup megawidget arguments';
help::pkg.display.widgets.objs.widgetserver.m.rollup.a.rollup_megawidget_arguments.def := '';
help::pkg.display.widgets.objs.widgetserver.m.rollup.a.rollup_megawidget_arguments.a := '';
help::pkg.display.widgets.objs.widgetserver.m.rollup.s := 'rollup(rollup megawidget arguments)';
help::pkg.display.widgets.objs.widgetserver.m.optionmenu := [=];
help::pkg.display.widgets.objs.widgetserver.m.optionmenu.d := 'Make an optionmenu megawidget';
help::pkg.display.widgets.objs.widgetserver.m.optionmenu.a.optionmenu_megawidget_arguments := [=];
help::pkg.display.widgets.objs.widgetserver.m.optionmenu.a.optionmenu_megawidget_arguments.d := 'standard AIPS++\ optionmenu megawidget arguments';
help::pkg.display.widgets.objs.widgetserver.m.optionmenu.a.optionmenu_megawidget_arguments.def := '';
help::pkg.display.widgets.objs.widgetserver.m.optionmenu.a.optionmenu_megawidget_arguments.a := '';
help::pkg.display.widgets.objs.widgetserver.m.optionmenu.s := 'optionmenu(optionmenu megawidget arguments)';
help::pkg.display.widgets.objs.widgetserver.m.extendoptionmenu := [=];
help::pkg.display.widgets.objs.widgetserver.m.extendoptionmenu.d := 'Make an extendoptionmenu megawidget';
help::pkg.display.widgets.objs.widgetserver.m.extendoptionmenu.a.extendoptionmenu_megawidget_arguments := [=];
help::pkg.display.widgets.objs.widgetserver.m.extendoptionmenu.a.extendoptionmenu_megawidget_arguments.d := 'standard AIPS++\ extendoptionmenu megawidget arguments';
help::pkg.display.widgets.objs.widgetserver.m.extendoptionmenu.a.extendoptionmenu_megawidget_arguments.def := '';
help::pkg.display.widgets.objs.widgetserver.m.extendoptionmenu.a.extendoptionmenu_megawidget_arguments.a := '';
help::pkg.display.widgets.objs.widgetserver.m.extendoptionmenu.s := 'extendoptionmenu(extendoptionmenu megawidget arguments)';
help::pkg.display.widgets.objs.widgetserver.m.actionoptionmenu := [=];
help::pkg.display.widgets.objs.widgetserver.m.actionoptionmenu.d := 'Make an action optionmenu megawidget';
help::pkg.display.widgets.objs.widgetserver.m.actionoptionmenu.a.actionoptionmenu_megawidget_arguments := [=];
help::pkg.display.widgets.objs.widgetserver.m.actionoptionmenu.a.actionoptionmenu_megawidget_arguments.d := 'standard AIPS++\ actionoptionmenu megawidget arguments';
help::pkg.display.widgets.objs.widgetserver.m.actionoptionmenu.a.actionoptionmenu_megawidget_arguments.def := '';
help::pkg.display.widgets.objs.widgetserver.m.actionoptionmenu.a.actionoptionmenu_megawidget_arguments.a := '';
help::pkg.display.widgets.objs.widgetserver.m.actionoptionmenu.s := 'actionoptionmenu(actionoptionmenu megawidget arguments)';
help::pkg.display.widgets.objs.widgetserver.m.checkmenu := [=];
help::pkg.display.widgets.objs.widgetserver.m.checkmenu.d := 'Make a checkmenu megawidget';
help::pkg.display.widgets.objs.widgetserver.m.checkmenu.a.checkmenu_megawidget_arguments := [=];
help::pkg.display.widgets.objs.widgetserver.m.checkmenu.a.checkmenu_megawidget_arguments.d := 'standard AIPS++\ checkmenu megawidget arguments';
help::pkg.display.widgets.objs.widgetserver.m.checkmenu.a.checkmenu_megawidget_arguments.def := '';
help::pkg.display.widgets.objs.widgetserver.m.checkmenu.a.checkmenu_megawidget_arguments.a := '';
help::pkg.display.widgets.objs.widgetserver.m.checkmenu.s := 'checkmenu(checkmenu megawidget arguments)';
help::pkg.display.widgets.objs.widgetserver.m.dialogbox := [=];
help::pkg.display.widgets.objs.widgetserver.m.dialogbox.d := 'Make a dialogbox megawidget';
help::pkg.display.widgets.objs.widgetserver.m.dialogbox.a.megawidget_arguments := [=];
help::pkg.display.widgets.objs.widgetserver.m.dialogbox.a.megawidget_arguments.d := 'standard AIPS++\ dialogbox megawidget arguments';
help::pkg.display.widgets.objs.widgetserver.m.dialogbox.a.megawidget_arguments.def := '';
help::pkg.display.widgets.objs.widgetserver.m.dialogbox.a.megawidget_arguments.a := '';
help::pkg.display.widgets.objs.widgetserver.m.dialogbox.s := 'dialogbox(megawidget arguments)';
help::pkg.display.widgets.objs.widgetserver.m.guientry := [=];
help::pkg.display.widgets.objs.widgetserver.m.guientry.d := 'Make a guientry megawidget';
help::pkg.display.widgets.objs.widgetserver.m.guientry.a.guientry_megawidget_arguments := [=];
help::pkg.display.widgets.objs.widgetserver.m.guientry.a.guientry_megawidget_arguments.d := 'standard AIPS++\ guientry megawidget arguments';
help::pkg.display.widgets.objs.widgetserver.m.guientry.a.guientry_megawidget_arguments.def := '';
help::pkg.display.widgets.objs.widgetserver.m.guientry.a.guientry_megawidget_arguments.a := '';
help::pkg.display.widgets.objs.widgetserver.m.guientry.s := 'guientry(guientry megawidget arguments)';
help::pkg.display.widgets.objs.widgetserver.m.messageline := [=];
help::pkg.display.widgets.objs.widgetserver.m.messageline.d := 'Make a messageline megawidget';
help::pkg.display.widgets.objs.widgetserver.m.messageline.a.messageline_megawidget_arguments := [=];
help::pkg.display.widgets.objs.widgetserver.m.messageline.a.messageline_megawidget_arguments.d := 'standard AIPS++\ messageline megawidget arguments';
help::pkg.display.widgets.objs.widgetserver.m.messageline.a.messageline_megawidget_arguments.def := '';
help::pkg.display.widgets.objs.widgetserver.m.messageline.a.messageline_megawidget_arguments.a := '';
help::pkg.display.widgets.objs.widgetserver.m.messageline.s := 'messageline(messageline megawidget arguments)';
help::pkg.display.widgets.objs.widgetserver.m.scrolllistbox := [=];
help::pkg.display.widgets.objs.widgetserver.m.scrolllistbox.d := 'Make a scrolllistbox megawidget';
help::pkg.display.widgets.objs.widgetserver.m.scrolllistbox.a.scrolllistbox_megawidget_arguments := [=];
help::pkg.display.widgets.objs.widgetserver.m.scrolllistbox.a.scrolllistbox_megawidget_arguments.d := 'standard AIPS++\ scrolllistbox megawidget arguments';
help::pkg.display.widgets.objs.widgetserver.m.scrolllistbox.a.scrolllistbox_megawidget_arguments.def := '';
help::pkg.display.widgets.objs.widgetserver.m.scrolllistbox.a.scrolllistbox_megawidget_arguments.a := '';
help::pkg.display.widgets.objs.widgetserver.m.scrolllistbox.s := 'scrolllistbox(scrolllistbox megawidget arguments)';
help::pkg.display.widgets.objs.widgetserver.m.synclistboxes := [=];
help::pkg.display.widgets.objs.widgetserver.m.synclistboxes.d := 'Make a synclistboxes megawidget';
help::pkg.display.widgets.objs.widgetserver.m.synclistboxes.a.synclistboxes_megawidget_arguments := [=];
help::pkg.display.widgets.objs.widgetserver.m.synclistboxes.a.synclistboxes_megawidget_arguments.d := 'standard AIPS++\ synclistboxes megawidget arguments';
help::pkg.display.widgets.objs.widgetserver.m.synclistboxes.a.synclistboxes_megawidget_arguments.def := '';
help::pkg.display.widgets.objs.widgetserver.m.synclistboxes.a.synclistboxes_megawidget_arguments.a := '';
help::pkg.display.widgets.objs.widgetserver.m.synclistboxes.s := 'synclistboxes(synclistboxes megawidget arguments)';
help::pkg.display.widgets.objs.widgetserver.m.combobox := [=];
help::pkg.display.widgets.objs.widgetserver.m.combobox.d := 'Make a combobox megawidget';
help::pkg.display.widgets.objs.widgetserver.m.combobox.a.combobox_megawidget_arguments := [=];
help::pkg.display.widgets.objs.widgetserver.m.combobox.a.combobox_megawidget_arguments.d := 'standard AIPS++\  combobox megawidget arguments';
help::pkg.display.widgets.objs.widgetserver.m.combobox.a.combobox_megawidget_arguments.def := '';
help::pkg.display.widgets.objs.widgetserver.m.combobox.a.combobox_megawidget_arguments.a := '';
help::pkg.display.widgets.objs.widgetserver.m.combobox.s := 'combobox(combobox megawidget arguments)';
help::pkg.display.widgets.objs.widgetserver.m.blinklabel := [=];
help::pkg.display.widgets.objs.widgetserver.m.blinklabel.d := 'Make a blinklabel megawidget';
help::pkg.display.widgets.objs.widgetserver.m.blinklabel.a.blinklabel_megawidget_arguments := [=];
help::pkg.display.widgets.objs.widgetserver.m.blinklabel.a.blinklabel_megawidget_arguments.d := 'standard AIPS++\ blinklabel    megawidget arguments';
help::pkg.display.widgets.objs.widgetserver.m.blinklabel.a.blinklabel_megawidget_arguments.def := '';
help::pkg.display.widgets.objs.widgetserver.m.blinklabel.a.blinklabel_megawidget_arguments.a := '';
help::pkg.display.widgets.objs.widgetserver.m.blinklabel.s := 'blinklabel(blinklabel megawidget arguments)';
help::pkg.display.widgets.objs.widgetserver.m.fontchooser := [=];
help::pkg.display.widgets.objs.widgetserver.m.fontchooser.d := 'Make a fontchooser megawidget';
help::pkg.display.widgets.objs.widgetserver.m.fontchooser.a.fontchooser_megawidget_arguments := [=];
help::pkg.display.widgets.objs.widgetserver.m.fontchooser.a.fontchooser_megawidget_arguments.d := 'standard AIPS++\ fontchooser megawidget arguments';
help::pkg.display.widgets.objs.widgetserver.m.fontchooser.a.fontchooser_megawidget_arguments.def := '';
help::pkg.display.widgets.objs.widgetserver.m.fontchooser.a.fontchooser_megawidget_arguments.a := '';
help::pkg.display.widgets.objs.widgetserver.m.fontchooser.s := 'fontchooser(fontchooser megawidget arguments)';
help::pkg.display.widgets.objs.widgetserver.m.multiscale := [=];
help::pkg.display.widgets.objs.widgetserver.m.multiscale.d := 'Make a multiscale megawidget';
help::pkg.display.widgets.objs.widgetserver.m.multiscale.a.multiscale_megawidget_arguments := [=];
help::pkg.display.widgets.objs.widgetserver.m.multiscale.a.multiscale_megawidget_arguments.d := 'standard AIPS++\ multiscale megawidget arguments';
help::pkg.display.widgets.objs.widgetserver.m.multiscale.a.multiscale_megawidget_arguments.def := '';
help::pkg.display.widgets.objs.widgetserver.m.multiscale.a.multiscale_megawidget_arguments.a := '';
help::pkg.display.widgets.objs.widgetserver.m.multiscale.s := 'multiscale(multiscale megawidget arguments)';
help::pkg.display.widgets.objs.widgetserver.m.popupselectmenu := [=];
help::pkg.display.widgets.objs.widgetserver.m.popupselectmenu.d := 'Make a popupselectmenu megawidget';
help::pkg.display.widgets.objs.widgetserver.m.popupselectmenu.a.popupselectmenu_megawidget_arguments := [=];
help::pkg.display.widgets.objs.widgetserver.m.popupselectmenu.a.popupselectmenu_megawidget_arguments.d := 'standard AIPS++\ popupselectmenu megawidget arguments';
help::pkg.display.widgets.objs.widgetserver.m.popupselectmenu.a.popupselectmenu_megawidget_arguments.def := '';
help::pkg.display.widgets.objs.widgetserver.m.popupselectmenu.a.popupselectmenu_megawidget_arguments.a := '';
help::pkg.display.widgets.objs.widgetserver.m.popupselectmenu.s := 'popupselectmenu(popupselectmenu megawidget arguments)';
help::pkg.display.widgets.objs.widgetserver.m.recordbrowser := [=];
help::pkg.display.widgets.objs.widgetserver.m.recordbrowser.d := 'Make a recordbrowser megawidget';
help::pkg.display.widgets.objs.widgetserver.m.recordbrowser.a.recordbrowser_megawidget_arguments := [=];
help::pkg.display.widgets.objs.widgetserver.m.recordbrowser.a.recordbrowser_megawidget_arguments.d := 'standard AIPS++\ recordbrowser megawidget arguments';
help::pkg.display.widgets.objs.widgetserver.m.recordbrowser.a.recordbrowser_megawidget_arguments.def := '';
help::pkg.display.widgets.objs.widgetserver.m.recordbrowser.a.recordbrowser_megawidget_arguments.a := '';
help::pkg.display.widgets.objs.widgetserver.m.recordbrowser.s := 'recordbrowser(recordbrowser megawidget arguments)';
help::pkg.display.widgets.objs.widgetserver.m.restoreregions := [=];
help::pkg.display.widgets.objs.widgetserver.m.restoreregions.d := 'Make a restoreregions megawidget';
help::pkg.display.widgets.objs.widgetserver.m.restoreregions.a.restoreregions_megawidget_arguments := [=];
help::pkg.display.widgets.objs.widgetserver.m.restoreregions.a.restoreregions_megawidget_arguments.d := 'standard AIPS++\ restoreregions megawidget arguments';
help::pkg.display.widgets.objs.widgetserver.m.restoreregions.a.restoreregions_megawidget_arguments.def := '';
help::pkg.display.widgets.objs.widgetserver.m.restoreregions.a.restoreregions_megawidget_arguments.a := '';
help::pkg.display.widgets.objs.widgetserver.m.restoreregions.s := 'restoreregions(restoreregions megawidget arguments)';
help::pkg.display.widgets.objs.widgetserver.m.deleteregions := [=];
help::pkg.display.widgets.objs.widgetserver.m.deleteregions.d := 'Make a deleteregions megawidget';
help::pkg.display.widgets.objs.widgetserver.m.deleteregions.a.deleteregions_megawidget_arguments := [=];
help::pkg.display.widgets.objs.widgetserver.m.deleteregions.a.deleteregions_megawidget_arguments.d := 'standard AIPS++\ deleteregions megawidget arguments';
help::pkg.display.widgets.objs.widgetserver.m.deleteregions.a.deleteregions_megawidget_arguments.def := '';
help::pkg.display.widgets.objs.widgetserver.m.deleteregions.a.deleteregions_megawidget_arguments.a := '';
help::pkg.display.widgets.objs.widgetserver.m.deleteregions.s := 'deleteregions(deleteregions megawidget arguments)';
help::pkg.display.widgets.objs.widgetserver.m.saveregions := [=];
help::pkg.display.widgets.objs.widgetserver.m.saveregions.d := 'Make a saveregions megawidget';
help::pkg.display.widgets.objs.widgetserver.m.saveregions.a.saveregions_megawidget_arguments := [=];
help::pkg.display.widgets.objs.widgetserver.m.saveregions.a.saveregions_megawidget_arguments.d := 'standard AIPS++\ saveregions megawidget arguments';
help::pkg.display.widgets.objs.widgetserver.m.saveregions.a.saveregions_megawidget_arguments.def := '';
help::pkg.display.widgets.objs.widgetserver.m.saveregions.a.saveregions_megawidget_arguments.a := '';
help::pkg.display.widgets.objs.widgetserver.m.saveregions.s := 'saveregions(saveregions megawidget arguments)';
help::pkg.display.widgets.objs.widgetserver.m.selectablelist := [=];
help::pkg.display.widgets.objs.widgetserver.m.selectablelist.d := 'Make a selectablelist megawidget';
help::pkg.display.widgets.objs.widgetserver.m.selectablelist.a.selectablelist_megawidget_arguments := [=];
help::pkg.display.widgets.objs.widgetserver.m.selectablelist.a.selectablelist_megawidget_arguments.d := 'standard AIPS++\ selectablelist megawidget arguments';
help::pkg.display.widgets.objs.widgetserver.m.selectablelist.a.selectablelist_megawidget_arguments.def := '';
help::pkg.display.widgets.objs.widgetserver.m.selectablelist.a.selectablelist_megawidget_arguments.a := '';
help::pkg.display.widgets.objs.widgetserver.m.selectablelist.s := 'selectablelist(selectablelist megawidget arguments)';
help::pkg.display.widgets.objs.widgetserver.m.tapedeck := [=];
help::pkg.display.widgets.objs.widgetserver.m.tapedeck.d := 'Make a tapedeck megawidget';
help::pkg.display.widgets.objs.widgetserver.m.tapedeck.a.tapedeck_megawidget_arguments := [=];
help::pkg.display.widgets.objs.widgetserver.m.tapedeck.a.tapedeck_megawidget_arguments.d := 'standard AIPS++\ tapedeck megawidget arguments';
help::pkg.display.widgets.objs.widgetserver.m.tapedeck.a.tapedeck_megawidget_arguments.def := '';
help::pkg.display.widgets.objs.widgetserver.m.tapedeck.a.tapedeck_megawidget_arguments.a := '';
help::pkg.display.widgets.objs.widgetserver.m.tapedeck.s := 'tapedeck(tapedeck megawidget arguments)';
help::pkg.display.widgets.objs.widgetserver.m.tabdialog := [=];
help::pkg.display.widgets.objs.widgetserver.m.tabdialog.d := 'Make a tabdialog megawidget';
help::pkg.display.widgets.objs.widgetserver.m.tabdialog.a.tabdialog_megawidget_arguments := [=];
help::pkg.display.widgets.objs.widgetserver.m.tabdialog.a.tabdialog_megawidget_arguments.d := 'standard AIPS++\ tabdialog megawidget arguments';
help::pkg.display.widgets.objs.widgetserver.m.tabdialog.a.tabdialog_megawidget_arguments.def := '';
help::pkg.display.widgets.objs.widgetserver.m.tabdialog.a.tabdialog_megawidget_arguments.a := '';
help::pkg.display.widgets.objs.widgetserver.m.tabdialog.s := 'tabdialog(tabdialog megawidget arguments)';
help::pkg.display.widgets.objs.widgetserver.m.guientry := [=];
help::pkg.display.widgets.objs.widgetserver.m.guientry.d := 'Make a guientry megawidget';
help::pkg.display.widgets.objs.widgetserver.m.guientry.a.guientry_megawidget_arguments := [=];
help::pkg.display.widgets.objs.widgetserver.m.guientry.a.guientry_megawidget_arguments.d := 'standard AIPS++\ guientry megawidget arguments';
help::pkg.display.widgets.objs.widgetserver.m.guientry.a.guientry_megawidget_arguments.def := '';
help::pkg.display.widgets.objs.widgetserver.m.guientry.a.guientry_megawidget_arguments.a := '';
help::pkg.display.widgets.objs.widgetserver.m.guientry.s := 'guientry(guientry megawidget arguments)';
help::pkg.display.widgets.objs.widgetserver.m.setmode := [=];
help::pkg.display.widgets.objs.widgetserver.m.setmode.d := 'Set the context/mode';
help::pkg.display.widgets.objs.widgetserver.m.setmode.a.mode := [=];
help::pkg.display.widgets.objs.widgetserver.m.setmode.a.mode.d := 'Which mode to use';
help::pkg.display.widgets.objs.widgetserver.m.setmode.a.mode.def := '';
help::pkg.display.widgets.objs.widgetserver.m.setmode.a.mode.a := 'String from \' app\' , \' glish\' ';
help::pkg.display.widgets.objs.widgetserver.m.setmode.s := 'setmode(mode)';
help::pkg.display.widgets.objs.widgetserver.m.unsetmode := [=];
help::pkg.display.widgets.objs.widgetserver.m.unsetmode.d := 'Unset (pop) the context/mode';
help::pkg.display.widgets.objs.widgetserver.m.unsetmode.s := 'unsetmode()';
help::pkg.display.widgets.objs.widgetserver.m.resources := [=];
help::pkg.display.widgets.objs.widgetserver.m.resources.d := 'Query what resources are used by various widgets';
help::pkg.display.widgets.objs.widgetserver.m.resources.a.widget := [=];
help::pkg.display.widgets.objs.widgetserver.m.resources.a.widget.d := 'Which widget to query';
help::pkg.display.widgets.objs.widgetserver.m.resources.a.widget.def := '';
help::pkg.display.widgets.objs.widgetserver.m.resources.a.widget.a := 'String from \' button\' , \' optionmenu\' , etc';
help::pkg.display.widgets.objs.widgetserver.m.resources.a.type := [=];
help::pkg.display.widgets.objs.widgetserver.m.resources.a.type.d := 'Subtype of button widgets';
help::pkg.display.widgets.objs.widgetserver.m.resources.a.type.def := 'F';
help::pkg.display.widgets.objs.widgetserver.m.resources.a.type.a := 'String from \' plain\' , \' check\' , 	\' radio\' , \' menu\' , \' action\' , \' halt\' , \' dismiss\' ';
help::pkg.display.widgets.objs.widgetserver.m.resources.s := 'resources(widget, type)';
help::pkg.display.widgets.objs.widgetserver.m.helpmenu := [=];
help::pkg.display.widgets.objs.widgetserver.m.helpmenu.d := 'Add a Help menu which contains the standard AIPS++ Help menu items';
help::pkg.display.widgets.objs.widgetserver.m.helpmenu.a.helpmenu_megawidget_arguments := [=];
help::pkg.display.widgets.objs.widgetserver.m.helpmenu.a.helpmenu_megawidget_arguments.d := 'standard AIPS++\ helpmenu megawidget arguments';
help::pkg.display.widgets.objs.widgetserver.m.helpmenu.a.helpmenu_megawidget_arguments.def := '';
help::pkg.display.widgets.objs.widgetserver.m.helpmenu.a.helpmenu_megawidget_arguments.a := '';
help::pkg.display.widgets.objs.widgetserver.m.helpmenu.s := 'helpmenu(helpmenu megawidget arguments)';
help::pkg.display.widgets.objs.widgetserver.m.menuframes := [=];
help::pkg.display.widgets.objs.widgetserver.m.menuframes.d := 'Add a widget to hold named embedded frames';
help::pkg.display.widgets.objs.widgetserver.m.menuframes.a.menuframes_megawidget_arguments := [=];
help::pkg.display.widgets.objs.widgetserver.m.menuframes.a.menuframes_megawidget_arguments.d := 'standard AIPS++\ menuframes megawidget arguments';
help::pkg.display.widgets.objs.widgetserver.m.menuframes.a.menuframes_megawidget_arguments.def := '';
help::pkg.display.widgets.objs.widgetserver.m.menuframes.a.menuframes_megawidget_arguments.a := '';
help::pkg.display.widgets.objs.widgetserver.m.menuframes.s := 'menuframes(menuframes megawidget arguments)';
help::pkg.display.widgets.objs.widgetserver.m.busy := [=];
help::pkg.display.widgets.objs.widgetserver.m.busy.d := 'Set the busy cursor and optionally disable a frame';
help::pkg.display.widgets.objs.widgetserver.m.busy.a.busyframe := [=];
help::pkg.display.widgets.objs.widgetserver.m.busy.a.busyframe.d := 'The frame which will appear busy';
help::pkg.display.widgets.objs.widgetserver.m.busy.a.busyframe.def := '';
help::pkg.display.widgets.objs.widgetserver.m.busy.a.busyframe.a := 'Frame';
help::pkg.display.widgets.objs.widgetserver.m.busy.a.disable := [=];
help::pkg.display.widgets.objs.widgetserver.m.busy.a.disable.d := 'Should a disable event be sent to this frame?';
help::pkg.display.widgets.objs.widgetserver.m.busy.a.disable.def := 'T';
help::pkg.display.widgets.objs.widgetserver.m.busy.a.disable.a := 'T or F';
help::pkg.display.widgets.objs.widgetserver.m.busy.a.busycursor := [=];
help::pkg.display.widgets.objs.widgetserver.m.busy.a.busycursor.d := 'The new cursor';
help::pkg.display.widgets.objs.widgetserver.m.busy.a.busycursor.def := '`watch\' ';
help::pkg.display.widgets.objs.widgetserver.m.busy.a.busycursor.a := 'String';
help::pkg.display.widgets.objs.widgetserver.m.busy.s := 'busy(busyframe, disable, busycursor)';
help::pkg.display.widgets.objs.widgetserver.m.notbusy := [=];
help::pkg.display.widgets.objs.widgetserver.m.notbusy.d := 'Set the normal cursor and optionally enable a frame';
help::pkg.display.widgets.objs.widgetserver.m.notbusy.a.busyframe := [=];
help::pkg.display.widgets.objs.widgetserver.m.notbusy.a.busyframe.d := 'The frame which will appear to not be busy';
help::pkg.display.widgets.objs.widgetserver.m.notbusy.a.busyframe.def := '';
help::pkg.display.widgets.objs.widgetserver.m.notbusy.a.busyframe.a := 'Frame';
help::pkg.display.widgets.objs.widgetserver.m.notbusy.a.enable := [=];
help::pkg.display.widgets.objs.widgetserver.m.notbusy.a.enable.d := 'Should an enable event be sent to this frame?';
help::pkg.display.widgets.objs.widgetserver.m.notbusy.a.enable.def := 'T';
help::pkg.display.widgets.objs.widgetserver.m.notbusy.a.enable.a := 'T or F';
help::pkg.display.widgets.objs.widgetserver.m.notbusy.a.normalcursor := [=];
help::pkg.display.widgets.objs.widgetserver.m.notbusy.a.normalcursor.d := 'The new cursor';
help::pkg.display.widgets.objs.widgetserver.m.notbusy.a.normalcursor.def := '`\' ';
help::pkg.display.widgets.objs.widgetserver.m.notbusy.a.normalcursor.a := 'String';
help::pkg.display.widgets.objs.widgetserver.m.notbusy.s := 'notbusy(busyframe, enable, normalcursor)';
help::pkg.display.widgets.objs.widgetserver.m.popuphelp := [=];
help::pkg.display.widgets.objs.widgetserver.m.popuphelp.d := 'add popup help to a GUI';
help::pkg.display.widgets.objs.widgetserver.m.popuphelp.s := 'popuphelp()';
help::pkg.display.widgets.objs.widgetserver.m.addpopuphelp := [=];
help::pkg.display.widgets.objs.widgetserver.m.addpopuphelp.d := 'add popup help to a GUI';
help::pkg.display.widgets.objs.widgetserver.m.addpopuphelp.s := 'addpopuphelp()';
help::pkg.display.widgets.objs.widgetserver.m.popupmenu := [=];
help::pkg.display.widgets.objs.widgetserver.m.popupmenu.d := 'add a popup type selection help menu to a GUI';
help::pkg.display.widgets.objs.widgetserver.m.popupmenu.s := 'popupmenu()';
help::pkg.display.widgets.objs.widgetserver.m.popupremove := [=];
help::pkg.display.widgets.objs.widgetserver.m.popupremove.d := 'remove popup help from a GUI';
help::pkg.display.widgets.objs.widgetserver.m.popupremove.s := 'popupremove()';
help::pkg.display.widgets.objs.widgetserver.m.type := [=];
help::pkg.display.widgets.objs.widgetserver.m.type.d := 'Return the type of this tool';
help::pkg.display.widgets.objs.widgetserver.m.type.s := 'type()';
help::pkg.display.widgets.funs.is_widgetserver := [=];
help::pkg.display.widgets.funs.is_widgetserver.a := [=];
help::pkg.display.widgets.funs.is_widgetserver.d := 'Is the argument a widgetserver tool?';
help::pkg.display.widgets.funs.is_widgetserver.a.tool := [=];
help::pkg.display.widgets.funs.is_widgetserver.a.tool.d := 'The variable that you wish to test';
help::pkg.display.widgets.funs.is_widgetserver.a.tool.def := 'no default';
help::pkg.display.widgets.funs.is_widgetserver.a.tool.a := 'Any glish variable';
help::pkg.display.widgets.funs.is_widgetserver.s := 'is_widgetserver(tool)';

