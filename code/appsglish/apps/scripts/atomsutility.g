# atomsutility.g: help atoms for the utility package. 
# Copyright (C) 1999
# Associated Universities, Inc. Washington DC, USA.
#
# This library is free software; you can redistribute it and/or modify it
# under the terms of the GNU Library General Public License as published by
# the Free Software Foundation; either version 2 of the License, or (at your
# option) any later version.
#
# This library is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Library General Public
# License for more details.
#
# You should have received a copy of the GNU Library General Public License
# along with this library; if not, write to the Free Software Foundation,
# Inc., 675 Massachusetts Ave, Cambridge, MA 02139, USA.
#
# Correspondence concerning AIPS++ should be addressed as follows:
#        Internet email: aips2-request@nrao.edu.
#        Postal address: AIPS++ Project Office
#                        National Radio Astronomy Observatory
#                        520 Edgemont Road
#                        Charlottesville, VA 22903-2475 USA
#
# $Id: atomsutility.g,v 19.948 2006/09/29 01:49:20 wyoung Exp $

pragma include once
val help::pkg.utility := [=];
help::pkg.utility::d := 'general use utilities not astronomy specific';

help::pkg.utility.aipsrcdata := [=];
help::pkg.utility.aipsrcdata.objs := [=];
help::pkg.utility.aipsrcdata.funs := [=];
help::pkg.utility.aipsrcdata.d := 'Aipsrc resource file layout';
help::pkg.utility.aipsrcdata.objs.initialization := [=];
help::pkg.utility.aipsrcdata.objs.initialization.m := [=];
help::pkg.utility.aipsrcdata.objs.initialization.c := [=];
help::pkg.utility.aipsrcdata.objs.initialization.d := 'Startup customization - user/site';
help::pkg.utility.aipsrcdata.objs.initialization.c.a.systemdotpackages := [=];
help::pkg.utility.aipsrcdata.objs.initialization.c.a.systemdotpackages.d := 'List of packages';
help::pkg.utility.aipsrcdata.objs.initialization.c.a.systemdotpackages.def := 'aips';
help::pkg.utility.aipsrcdata.objs.initialization.c.a.systemdotpackages.a := 'any valid packages';
help::pkg.utility.aipsrcdata.objs.initialization.c.a.userdotinitfiles := [=];
help::pkg.utility.aipsrcdata.objs.initialization.c.a.userdotinitfiles.d := 'List of which .g files to load on startup for the user';
help::pkg.utility.aipsrcdata.objs.initialization.c.a.userdotinitfiles.def := 'none';
help::pkg.utility.aipsrcdata.objs.initialization.c.a.userdotinitfiles.a := 'any .g files';
help::pkg.utility.aipsrcdata.objs.aipsview := [=];
help::pkg.utility.aipsrcdata.objs.aipsview.m := [=];
help::pkg.utility.aipsrcdata.objs.aipsview.c := [=];
help::pkg.utility.aipsrcdata.objs.aipsview.d := 'aipsview resources setup -- user';
help::pkg.utility.aipsrcdata.objs.aipsview.c.a.aipsviewdotexe := [=];
help::pkg.utility.aipsrcdata.objs.aipsview.c.a.aipsviewdotexe.d := 'aipsview executable';
help::pkg.utility.aipsrcdata.objs.aipsview.c.a.aipsviewdotexe.def := 'aipsview';
help::pkg.utility.aipsrcdata.objs.aipsview.c.a.aipsviewdotexe.a := 'any path pointing to an aipsview executable';
help::pkg.utility.aipsrcdata.objs.aipsview.c.a.aipsviewdotnumcolors := [=];
help::pkg.utility.aipsrcdata.objs.aipsview.c.a.aipsviewdotnumcolors.d := 'available number of colours';
help::pkg.utility.aipsrcdata.objs.aipsview.c.a.aipsviewdotnumcolors.def := 'BW';
help::pkg.utility.aipsrcdata.objs.aipsview.c.a.aipsviewdotnumcolors.a := 'BW ALL number';
help::pkg.utility.aipsrcdata.objs.aipsview.c.a.aipsviewdotbackground := [=];
help::pkg.utility.aipsrcdata.objs.aipsview.c.a.aipsviewdotbackground.d := 'background colour';
help::pkg.utility.aipsrcdata.objs.aipsview.c.a.aipsviewdotbackground.def := 'white';
help::pkg.utility.aipsrcdata.objs.aipsview.c.a.aipsviewdotbackground.a := 'any valid colour string';
help::pkg.utility.aipsrcdata.objs.aipsview.c.a.aipsviewdotforeground := [=];
help::pkg.utility.aipsrcdata.objs.aipsview.c.a.aipsviewdotforeground.d := 'foreground colour';
help::pkg.utility.aipsrcdata.objs.aipsview.c.a.aipsviewdotforeground.def := 'black';
help::pkg.utility.aipsrcdata.objs.aipsview.c.a.aipsviewdotforeground.a := 'any valid colour string';
help::pkg.utility.aipsrcdata.objs.catalog := [=];
help::pkg.utility.aipsrcdata.objs.catalog.m := [=];
help::pkg.utility.aipsrcdata.objs.catalog.c := [=];
help::pkg.utility.aipsrcdata.objs.catalog.d := 'catalog program details -- user';
help::pkg.utility.aipsrcdata.objs.catalog.c.a.catalogdotdefault := [=];
help::pkg.utility.aipsrcdata.objs.catalog.c.a.catalogdotdefault.d := 'output medium to use';
help::pkg.utility.aipsrcdata.objs.catalog.c.a.catalogdotdefault.def := '\' \' ';
help::pkg.utility.aipsrcdata.objs.catalog.c.a.catalogdotdefault.a := 'gui or screen';
help::pkg.utility.aipsrcdata.objs.catalog.c.a.catalogdotconfirm := [=];
help::pkg.utility.aipsrcdata.objs.catalog.c.a.catalogdotconfirm.d := 'Confirm operations (always, only for directories, never)?';
help::pkg.utility.aipsrcdata.objs.catalog.c.a.catalogdotconfirm.def := 'yes';
help::pkg.utility.aipsrcdata.objs.catalog.c.a.catalogdotconfirm.a := 'yes, directory or no';
help::pkg.utility.aipsrcdata.objs.catalog.c.a.catalogdottablesizeoption := [=];
help::pkg.utility.aipsrcdata.objs.catalog.c.a.catalogdottablesizeoption.d := 'How to show image/table sizes';
help::pkg.utility.aipsrcdata.objs.catalog.c.a.catalogdottablesizeoption.def := 'no';
help::pkg.utility.aipsrcdata.objs.catalog.c.a.catalogdottablesizeoption.a := 'no, bytes, or  shape';
help::pkg.utility.aipsrcdata.objs.catalog.c.a.catalogdotalwaysshowdir := [=];
help::pkg.utility.aipsrcdata.objs.catalog.c.a.catalogdotalwaysshowdir.d := 'Always show directories when selecting specific type?';
help::pkg.utility.aipsrcdata.objs.catalog.c.a.catalogdotalwaysshowdir.def := 'T';
help::pkg.utility.aipsrcdata.objs.catalog.c.a.catalogdotalwaysshowdir.a := 'T or F';
help::pkg.utility.aipsrcdata.objs.catalog.c.a.catalogdotsortbytype := [=];
help::pkg.utility.aipsrcdata.objs.catalog.c.a.catalogdotsortbytype.d := 'Show in order of type instead of name';
help::pkg.utility.aipsrcdata.objs.catalog.c.a.catalogdotsortbytype.def := 'F';
help::pkg.utility.aipsrcdata.objs.catalog.c.a.catalogdotsortbytype.a := 'T or F';
help::pkg.utility.aipsrcdata.objs.catalog.c.a.catalogdotvscrollbar := [=];
help::pkg.utility.aipsrcdata.objs.catalog.c.a.catalogdotvscrollbar.d := 'Where to put the vertical scrollbar';
help::pkg.utility.aipsrcdata.objs.catalog.c.a.catalogdotvscrollbar.def := 'right';
help::pkg.utility.aipsrcdata.objs.catalog.c.a.catalogdotvscrollbar.a := 'right or left';
help::pkg.utility.aipsrcdata.objs.catalog.c.a.catalogdotviewdotPostScript := [=];
help::pkg.utility.aipsrcdata.objs.catalog.c.a.catalogdotviewdotPostScript.d := 'Viewer for PostScript files';
help::pkg.utility.aipsrcdata.objs.catalog.c.a.catalogdotviewdotPostScript.def := 'ghostview';
help::pkg.utility.aipsrcdata.objs.catalog.c.a.catalogdotviewdotPostScript.a := 'Suitable program e.g. ghostview, pageview';
help::pkg.utility.aipsrcdata.objs.catalog.c.a.catalogdotviewdotGraphics := [=];
help::pkg.utility.aipsrcdata.objs.catalog.c.a.catalogdotviewdotGraphics.d := 'Viewer for graphics files';
help::pkg.utility.aipsrcdata.objs.catalog.c.a.catalogdotviewdotGraphics.def := 'xv';
help::pkg.utility.aipsrcdata.objs.catalog.c.a.catalogdotviewdotGraphics.a := 'Suitable program e.g. xv';
help::pkg.utility.aipsrcdata.objs.catalog.c.a.catalogdotviewdotimage := [=];
help::pkg.utility.aipsrcdata.objs.catalog.c.a.catalogdotviewdotimage.d := 'Viewer for AIPS++\ images';
help::pkg.utility.aipsrcdata.objs.catalog.c.a.catalogdotviewdotimage.def := 'viewer';
help::pkg.utility.aipsrcdata.objs.catalog.c.a.catalogdotviewdotimage.a := 'Suitable program';
help::pkg.utility.aipsrcdata.objs.catalog.c.a.catalogdoteditdotascii := [=];
help::pkg.utility.aipsrcdata.objs.catalog.c.a.catalogdoteditdotascii.d := 'Editor for ascii files';
help::pkg.utility.aipsrcdata.objs.catalog.c.a.catalogdoteditdotascii.def := '\$EDITOR';
help::pkg.utility.aipsrcdata.objs.catalog.c.a.catalogdoteditdotascii.a := 'Editor not needing a tty e.g. emacs or xterm -e vi';
help::pkg.utility.aipsrcdata.objs.catalog.c.a.catalogdoteditdotGlish := [=];
help::pkg.utility.aipsrcdata.objs.catalog.c.a.catalogdoteditdotGlish.d := 'Editor for \glish\ files';
help::pkg.utility.aipsrcdata.objs.catalog.c.a.catalogdoteditdotGlish.def := 'catalog.edit.ascii';
help::pkg.utility.aipsrcdata.objs.catalog.c.a.catalogdoteditdotGlish.a := 'Editor not needing a tty e.g. emacs or xterm -e vi';
help::pkg.utility.aipsrcdata.objs.catalog.c.a.catalogdotviewdotascii := [=];
help::pkg.utility.aipsrcdata.objs.catalog.c.a.catalogdotviewdotascii.d := 'Viewer for ascii files';
help::pkg.utility.aipsrcdata.objs.catalog.c.a.catalogdotviewdotascii.def := 'catalog.edit.ascii';
help::pkg.utility.aipsrcdata.objs.catalog.c.a.catalogdotviewdotascii.a := 'Program not needing a tty e.g. emacs or xterm -e vi';
help::pkg.utility.aipsrcdata.objs.catalog.c.a.catalogdotviewdotGlish := [=];
help::pkg.utility.aipsrcdata.objs.catalog.c.a.catalogdotviewdotGlish.d := 'Viewer for \glish\ files';
help::pkg.utility.aipsrcdata.objs.catalog.c.a.catalogdotviewdotGlish.def := 'catalog.edit.Glish';
help::pkg.utility.aipsrcdata.objs.catalog.c.a.catalogdotviewdotGlish.a := 'Program not needing a tty e.g. emacs or xterm -e vi';
help::pkg.utility.aipsrcdata.objs.toolmanager := [=];
help::pkg.utility.aipsrcdata.objs.toolmanager.m := [=];
help::pkg.utility.aipsrcdata.objs.toolmanager.c := [=];
help::pkg.utility.aipsrcdata.objs.toolmanager.d := 'toolmanager program details -- user';
help::pkg.utility.aipsrcdata.objs.toolmanager.c.a.toolmanagerdotdefault := [=];
help::pkg.utility.aipsrcdata.objs.toolmanager.c.a.toolmanagerdotdefault.d := 'Output medium to use';
help::pkg.utility.aipsrcdata.objs.toolmanager.c.a.toolmanagerdotdefault.def := 'gui';
help::pkg.utility.aipsrcdata.objs.toolmanager.c.a.toolmanagerdotdefault.a := 'gui or cli';
help::pkg.utility.aipsrcdata.objs.toolmanager.c.a.toolmanagerdotrefresh := [=];
help::pkg.utility.aipsrcdata.objs.toolmanager.c.a.toolmanagerdotrefresh.d := 'Default refresh interval (s)';
help::pkg.utility.aipsrcdata.objs.toolmanager.c.a.toolmanagerdotrefresh.def := 'none';
help::pkg.utility.aipsrcdata.objs.toolmanager.c.a.toolmanagerdotrefresh.a := 'Integer';
help::pkg.utility.aipsrcdata.objs.progress := [=];
help::pkg.utility.aipsrcdata.objs.progress.m := [=];
help::pkg.utility.aipsrcdata.objs.progress.c := [=];
help::pkg.utility.aipsrcdata.objs.progress.d := 'progress meter details -- user';
help::pkg.utility.aipsrcdata.objs.progress.c.a.progressdotshow := [=];
help::pkg.utility.aipsrcdata.objs.progress.c.a.progressdotshow.d := 'Show progress meters?';
help::pkg.utility.aipsrcdata.objs.progress.c.a.progressdotshow.def := 'T';
help::pkg.utility.aipsrcdata.objs.progress.c.a.progressdotshow.a := 'T or F';
help::pkg.utility.aipsrcdata.objs.logger := [=];
help::pkg.utility.aipsrcdata.objs.logger.m := [=];
help::pkg.utility.aipsrcdata.objs.logger.c := [=];
help::pkg.utility.aipsrcdata.objs.logger.d := 'logger detailing values -- user';
help::pkg.utility.aipsrcdata.objs.logger.c.a.loggerdotfile := [=];
help::pkg.utility.aipsrcdata.objs.logger.c.a.loggerdotfile.d := 'Log file name';
help::pkg.utility.aipsrcdata.objs.logger.c.a.loggerdotfile.def := 'aips++.log';
help::pkg.utility.aipsrcdata.objs.logger.c.a.loggerdotfile.a := 'any valid file name without a path, which will be written in \' user.aipsdir\'  (\' none\'  means no logging)';
help::pkg.utility.aipsrcdata.objs.logger.c.a.loggerdotdefault := [=];
help::pkg.utility.aipsrcdata.objs.logger.c.a.loggerdotdefault.d := 'Where to write log messages';
help::pkg.utility.aipsrcdata.objs.logger.c.a.loggerdotdefault.def := 'screen';
help::pkg.utility.aipsrcdata.objs.logger.c.a.loggerdotdefault.a := 'gui or screen';
help::pkg.utility.aipsrcdata.objs.logger.c.a.loggerdotglish := [=];
help::pkg.utility.aipsrcdata.objs.logger.c.a.loggerdotglish.d := 'What to log from \glish';
help::pkg.utility.aipsrcdata.objs.logger.c.a.loggerdotglish.def := 'input';
help::pkg.utility.aipsrcdata.objs.logger.c.a.loggerdotglish.a := 'input, output, both  or none';
help::pkg.utility.aipsrcdata.objs.logger.c.a.loggerdotheight := [=];
help::pkg.utility.aipsrcdata.objs.logger.c.a.loggerdotheight.d := 'Initial number of lines in logger gui';
help::pkg.utility.aipsrcdata.objs.logger.c.a.loggerdotheight.def := '8';
help::pkg.utility.aipsrcdata.objs.logger.c.a.loggerdotheight.a := 'A number';
help::pkg.utility.aipsrcdata.objs.logger.c.a.loggerdottimewidth := [=];
help::pkg.utility.aipsrcdata.objs.logger.c.a.loggerdottimewidth.d := 'Initial width of TIME column in logger gui';
help::pkg.utility.aipsrcdata.objs.logger.c.a.loggerdottimewidth.def := '20';
help::pkg.utility.aipsrcdata.objs.logger.c.a.loggerdottimewidth.a := 'A number';
help::pkg.utility.aipsrcdata.objs.logger.c.a.loggerdotprioritywidth := [=];
help::pkg.utility.aipsrcdata.objs.logger.c.a.loggerdotprioritywidth.d := 'Initial width of PRIORITY column in logger gui';
help::pkg.utility.aipsrcdata.objs.logger.c.a.loggerdotprioritywidth.def := '6';
help::pkg.utility.aipsrcdata.objs.logger.c.a.loggerdotprioritywidth.a := 'A number';
help::pkg.utility.aipsrcdata.objs.logger.c.a.loggerdotmessagewidth := [=];
help::pkg.utility.aipsrcdata.objs.logger.c.a.loggerdotmessagewidth.d := 'Initial width of MESSAGE column in logger gui';
help::pkg.utility.aipsrcdata.objs.logger.c.a.loggerdotmessagewidth.def := '75';
help::pkg.utility.aipsrcdata.objs.logger.c.a.loggerdotmessagewidth.a := 'A number';
help::pkg.utility.aipsrcdata.objs.logger.c.a.loggerdotoriginwidth := [=];
help::pkg.utility.aipsrcdata.objs.logger.c.a.loggerdotoriginwidth.d := 'Initial width of ORIGIN column in logger gui';
help::pkg.utility.aipsrcdata.objs.logger.c.a.loggerdotoriginwidth.def := '25';
help::pkg.utility.aipsrcdata.objs.logger.c.a.loggerdotoriginwidth.a := 'A number';
help::pkg.utility.aipsrcdata.objs.logger.c.a.loggerdotguishow := [=];
help::pkg.utility.aipsrcdata.objs.logger.c.a.loggerdotguishow.d := 'Which columns to show in gui';
help::pkg.utility.aipsrcdata.objs.logger.c.a.loggerdotguishow.def := 'time,priority,message';
help::pkg.utility.aipsrcdata.objs.logger.c.a.loggerdotguishow.a := 'time, priority, message and/or origin';
help::pkg.utility.aipsrcdata.objs.logger.c.a.loggerdotshowbuttons := [=];
help::pkg.utility.aipsrcdata.objs.logger.c.a.loggerdotshowbuttons.d := 'Show buttons in logger gui (F makes it smaller)';
help::pkg.utility.aipsrcdata.objs.logger.c.a.loggerdotshowbuttons.def := 'T';
help::pkg.utility.aipsrcdata.objs.logger.c.a.loggerdotshowbuttons.a := 'T or F';
help::pkg.utility.aipsrcdata.objs.logger.c.a.loggerdotautoscroll := [=];
help::pkg.utility.aipsrcdata.objs.logger.c.a.loggerdotautoscroll.d := 'Always scroll to the end when a message gets added?';
help::pkg.utility.aipsrcdata.objs.logger.c.a.loggerdotautoscroll.def := 'T';
help::pkg.utility.aipsrcdata.objs.logger.c.a.loggerdotautoscroll.a := 'T or F';
help::pkg.utility.aipsrcdata.objs.logger.c.a.loggerdotbackground := [=];
help::pkg.utility.aipsrcdata.objs.logger.c.a.loggerdotbackground.d := 'Background color of logger gui';
help::pkg.utility.aipsrcdata.objs.logger.c.a.loggerdotbackground.def := 'xing';
help::pkg.utility.aipsrcdata.objs.logger.c.a.loggerdotbackground.a := 'String';
help::pkg.utility.aipsrcdata.objs.measures := [=];
help::pkg.utility.aipsrcdata.objs.measures.m := [=];
help::pkg.utility.aipsrcdata.objs.measures.c := [=];
help::pkg.utility.aipsrcdata.objs.measures.d := 'details for the measures operations -- user';
help::pkg.utility.aipsrcdata.objs.measures.c.a.measuresdotdefault := [=];
help::pkg.utility.aipsrcdata.objs.measures.c.a.measuresdotdefault.d := 'specify user interface medium';
help::pkg.utility.aipsrcdata.objs.measures.c.a.measuresdotdefault.def := 'screen';
help::pkg.utility.aipsrcdata.objs.measures.c.a.measuresdotdefault.a := 'gui or screen';
help::pkg.utility.aipsrcdata.objs.measures.c.a.measuresdotiau2000dotb_use := [=];
help::pkg.utility.aipsrcdata.objs.measures.c.a.measuresdotiau2000dotb_use.d := 'use the IAU2000 precession/nutation model';
help::pkg.utility.aipsrcdata.objs.measures.c.a.measuresdotiau2000dotb_use.def := 'true';
help::pkg.utility.aipsrcdata.objs.measures.c.a.measuresdotiau2000dotb_use.a := 'true or false';
help::pkg.utility.aipsrcdata.objs.measures.c.a.measuresdotiau2000dotb_use2000a := [=];
help::pkg.utility.aipsrcdata.objs.measures.c.a.measuresdotiau2000dotb_use2000a.d := 'if the IAU2000 precession/nutation model is used, use the high precision nutation';
help::pkg.utility.aipsrcdata.objs.measures.c.a.measuresdotiau2000dotb_use2000a.def := 'false';
help::pkg.utility.aipsrcdata.objs.measures.c.a.measuresdotiau2000dotb_use2000a.a := 'true or false';
help::pkg.utility.aipsrcdata.objs.measures.c.a.measuresdotprecessiondotd_interval := [=];
help::pkg.utility.aipsrcdata.objs.measures.c.a.measuresdotprecessiondotd_interval.d := 'interval in days over which linear interpolation of precession calculation is appropiate';
help::pkg.utility.aipsrcdata.objs.measures.c.a.measuresdotprecessiondotd_interval.def := '0.1';
help::pkg.utility.aipsrcdata.objs.measures.c.a.measuresdotprecessiondotd_interval.a := 'number of days';
help::pkg.utility.aipsrcdata.objs.measures.c.a.measuresdotnutationdotd_interval := [=];
help::pkg.utility.aipsrcdata.objs.measures.c.a.measuresdotnutationdotd_interval.d := 'interval in days over which linear interpolation of nutation calculation is appropiate';
help::pkg.utility.aipsrcdata.objs.measures.c.a.measuresdotnutationdotd_interval.def := '0.04';
help::pkg.utility.aipsrcdata.objs.measures.c.a.measuresdotnutationdotd_interval.a := 'number of days';
help::pkg.utility.aipsrcdata.objs.measures.c.a.measuresdotnutationdotb_useiers := [=];
help::pkg.utility.aipsrcdata.objs.measures.c.a.measuresdotnutationdotb_useiers.d := 'use the IERS Earth orientation parameters tables to calculate nutation';
help::pkg.utility.aipsrcdata.objs.measures.c.a.measuresdotnutationdotb_useiers.def := 'false';
help::pkg.utility.aipsrcdata.objs.measures.c.a.measuresdotnutationdotb_useiers.a := 'true or false';
help::pkg.utility.aipsrcdata.objs.measures.c.a.measuresdotnutationdotb_usejpl := [=];
help::pkg.utility.aipsrcdata.objs.measures.c.a.measuresdotnutationdotb_usejpl.d := 'use the JPL DE database (use measures.jpl.ephemeris to specify which one) to calculate nutation';
help::pkg.utility.aipsrcdata.objs.measures.c.a.measuresdotnutationdotb_usejpl.def := 'false';
help::pkg.utility.aipsrcdata.objs.measures.c.a.measuresdotnutationdotb_usejpl.a := 'true or false';
help::pkg.utility.aipsrcdata.objs.measures.c.a.measuresdotaberrationdotd_interval := [=];
help::pkg.utility.aipsrcdata.objs.measures.c.a.measuresdotaberrationdotd_interval.d := 'interval in days over which linear interpolation of aberration calculation is appropiate';
help::pkg.utility.aipsrcdata.objs.measures.c.a.measuresdotaberrationdotd_interval.def := '0.04';
help::pkg.utility.aipsrcdata.objs.measures.c.a.measuresdotaberrationdotd_interval.a := 'number of days';
help::pkg.utility.aipsrcdata.objs.measures.c.a.measuresdotaberrationdotb_usejpl := [=];
help::pkg.utility.aipsrcdata.objs.measures.c.a.measuresdotaberrationdotb_usejpl.d := 'use the JPL DE database (use measures.jpl.ephemeris to specify which one) to calculate aberration';
help::pkg.utility.aipsrcdata.objs.measures.c.a.measuresdotaberrationdotb_usejpl.def := 'false';
help::pkg.utility.aipsrcdata.objs.measures.c.a.measuresdotaberrationdotb_usejpl.a := 'true or false';
help::pkg.utility.aipsrcdata.objs.measures.c.a.measuresdotsolarposdotd_interval := [=];
help::pkg.utility.aipsrcdata.objs.measures.c.a.measuresdotsolarposdotd_interval.d := 'interval in days over which linear interpolation of solar position calculation is appropiate';
help::pkg.utility.aipsrcdata.objs.measures.c.a.measuresdotsolarposdotd_interval.def := '0.04';
help::pkg.utility.aipsrcdata.objs.measures.c.a.measuresdotsolarposdotd_interval.a := 'number of days';
help::pkg.utility.aipsrcdata.objs.measures.c.a.measuresdotsolarposdotb_usejpl := [=];
help::pkg.utility.aipsrcdata.objs.measures.c.a.measuresdotsolarposdotb_usejpl.d := 'use the JPL DE database (use measures.jpl.ephemeris to specify which one) to calculate solar position';
help::pkg.utility.aipsrcdata.objs.measures.c.a.measuresdotsolarposdotb_usejpl.def := 'false';
help::pkg.utility.aipsrcdata.objs.measures.c.a.measuresdotsolarposdotb_usejpl.a := 'true or false';
help::pkg.utility.aipsrcdata.objs.measures.directory := [=];
help::pkg.utility.aipsrcdata.objs.measures.directory.m := [=];
help::pkg.utility.aipsrcdata.objs.measures.directory.c := [=];
help::pkg.utility.aipsrcdata.objs.measures.directory.d := 'details for the measures data  handling -- user';
help::pkg.utility.aipsrcdata.objs.measures.directory.c.a.measuresdotlinedotdirectory := [=];
help::pkg.utility.aipsrcdata.objs.measures.directory.c.a.measuresdotlinedotdirectory.d := 'directory for the Lines spectral line  table';
help::pkg.utility.aipsrcdata.objs.measures.directory.c.a.measuresdotlinedotdirectory.def := 'see description';
help::pkg.utility.aipsrcdata.objs.measures.directory.c.a.measuresdotlinedotdirectory.a := 'valid directory';
help::pkg.utility.aipsrcdata.objs.measures.directory.c.a.measuresdotobservatorydotdirectory := [=];
help::pkg.utility.aipsrcdata.objs.measures.directory.c.a.measuresdotobservatorydotdirectory.d := 'directory for the Observatories  table';
help::pkg.utility.aipsrcdata.objs.measures.directory.c.a.measuresdotobservatorydotdirectory.def := 'see description';
help::pkg.utility.aipsrcdata.objs.measures.directory.c.a.measuresdotobservatorydotdirectory.a := 'valid directory';
help::pkg.utility.aipsrcdata.objs.measures.directory.c.a.measuresdotsourcedotdirectory := [=];
help::pkg.utility.aipsrcdata.objs.measures.directory.c.a.measuresdotsourcedotdirectory.d := 'directory for the Sources   table';
help::pkg.utility.aipsrcdata.objs.measures.directory.c.a.measuresdotsourcedotdirectory.def := 'see description';
help::pkg.utility.aipsrcdata.objs.measures.directory.c.a.measuresdotsourcedotdirectory.a := 'valid directory';
help::pkg.utility.aipsrcdata.objs.measures.directory.c.a.measuresdotigrfdotdirectory := [=];
help::pkg.utility.aipsrcdata.objs.measures.directory.c.a.measuresdotigrfdotdirectory.d := 'directory for the IGRF Earth magnetic field model table';
help::pkg.utility.aipsrcdata.objs.measures.directory.c.a.measuresdotigrfdotdirectory.def := 'see description';
help::pkg.utility.aipsrcdata.objs.measures.directory.c.a.measuresdotigrfdotdirectory.a := 'valid directory';
help::pkg.utility.aipsrcdata.objs.measures.comet := [=];
help::pkg.utility.aipsrcdata.objs.measures.comet.m := [=];
help::pkg.utility.aipsrcdata.objs.measures.comet.c := [=];
help::pkg.utility.aipsrcdata.objs.measures.comet.d := 'details for the comet data  handling -- user';
help::pkg.utility.aipsrcdata.objs.measures.comet.c.a.measuresdotcometdotdirectory := [=];
help::pkg.utility.aipsrcdata.objs.measures.comet.c.a.measuresdotcometdotdirectory.d := 'directory for the comet direction  table';
help::pkg.utility.aipsrcdata.objs.measures.comet.c.a.measuresdotcometdotdirectory.def := 'see description';
help::pkg.utility.aipsrcdata.objs.measures.comet.c.a.measuresdotcometdotdirectory.a := 'valid directory';
help::pkg.utility.aipsrcdata.objs.measures.comet.c.a.measuresdotcometdotfile := [=];
help::pkg.utility.aipsrcdata.objs.measures.comet.c.a.measuresdotcometdotfile.d := 'table name for the comet table to be used in the default constructor';
help::pkg.utility.aipsrcdata.objs.measures.comet.c.a.measuresdotcometdotfile.def := '';
help::pkg.utility.aipsrcdata.objs.measures.comet.c.a.measuresdotcometdotfile.a := 'valid relative or absolute path';
help::pkg.utility.aipsrcdata.objs.measures.iers := [=];
help::pkg.utility.aipsrcdata.objs.measures.iers.m := [=];
help::pkg.utility.aipsrcdata.objs.measures.iers.c := [=];
help::pkg.utility.aipsrcdata.objs.measures.iers.d := 'details for the IERS data handling -- user';
help::pkg.utility.aipsrcdata.objs.measures.iers.c.a.measuresdotierseop97dotdirectory := [=];
help::pkg.utility.aipsrcdata.objs.measures.iers.c.a.measuresdotierseop97dotdirectory.d := 'directory for the IERSeop97 table';
help::pkg.utility.aipsrcdata.objs.measures.iers.c.a.measuresdotierseop97dotdirectory.def := 'see description';
help::pkg.utility.aipsrcdata.objs.measures.iers.c.a.measuresdotierseop97dotdirectory.a := 'valid directory';
help::pkg.utility.aipsrcdata.objs.measures.iers.c.a.measuresdotierspredictdotdirectory := [=];
help::pkg.utility.aipsrcdata.objs.measures.iers.c.a.measuresdotierspredictdotdirectory.d := 'directory for the IERSpredict table';
help::pkg.utility.aipsrcdata.objs.measures.iers.c.a.measuresdotierspredictdotdirectory.def := 'see description';
help::pkg.utility.aipsrcdata.objs.measures.iers.c.a.measuresdotierspredictdotdirectory.a := 'valid directory';
help::pkg.utility.aipsrcdata.objs.measures.iers.c.a.measuresdottai_utcdotdirectory := [=];
help::pkg.utility.aipsrcdata.objs.measures.iers.c.a.measuresdottai_utcdotdirectory.d := 'directory for the TAI\_UTC leap second table';
help::pkg.utility.aipsrcdata.objs.measures.iers.c.a.measuresdottai_utcdotdirectory.def := 'see description';
help::pkg.utility.aipsrcdata.objs.measures.iers.c.a.measuresdottai_utcdotdirectory.a := 'valid directory';
help::pkg.utility.aipsrcdata.objs.measures.iers.c.a.measuresdotmeasiersdotb_notable := [=];
help::pkg.utility.aipsrcdata.objs.measures.iers.c.a.measuresdotmeasiersdotb_notable.d := 'do not use the IERSeop97 or IERSpredict tables';
help::pkg.utility.aipsrcdata.objs.measures.iers.c.a.measuresdotmeasiersdotb_notable.def := 'false';
help::pkg.utility.aipsrcdata.objs.measures.iers.c.a.measuresdotmeasiersdotb_notable.a := 'true or false';
help::pkg.utility.aipsrcdata.objs.measures.iers.c.a.measuresdotmeasiersdotb_forcepredict := [=];
help::pkg.utility.aipsrcdata.objs.measures.iers.c.a.measuresdotmeasiersdotb_forcepredict.d := 'use always the  IERSpredict table';
help::pkg.utility.aipsrcdata.objs.measures.iers.c.a.measuresdotmeasiersdotb_forcepredict.def := 'false';
help::pkg.utility.aipsrcdata.objs.measures.iers.c.a.measuresdotmeasiersdotb_forcepredict.a := 'true or false';
help::pkg.utility.aipsrcdata.objs.measures.iers.c.a.measuresdotmeasiersdotd_predicttime := [=];
help::pkg.utility.aipsrcdata.objs.measures.iers.c.a.measuresdotmeasiersdotd_predicttime.d := 'use always the IERSpredict table if coordinate conversion time is less than given number of days ago';
help::pkg.utility.aipsrcdata.objs.measures.iers.c.a.measuresdotmeasiersdotd_predicttime.def := '5';
help::pkg.utility.aipsrcdata.objs.measures.iers.c.a.measuresdotmeasiersdotd_predicttime.a := 'number of days';
help::pkg.utility.aipsrcdata.objs.measures.jpl := [=];
help::pkg.utility.aipsrcdata.objs.measures.jpl.m := [=];
help::pkg.utility.aipsrcdata.objs.measures.jpl.c := [=];
help::pkg.utility.aipsrcdata.objs.measures.jpl.d := 'details for the JPL ephemeris operations -- user';
help::pkg.utility.aipsrcdata.objs.measures.jpl.c.a.measuresdotjpldotephemeris := [=];
help::pkg.utility.aipsrcdata.objs.measures.jpl.c.a.measuresdotjpldotephemeris.d := 'specify JPL ephemeris';
help::pkg.utility.aipsrcdata.objs.measures.jpl.c.a.measuresdotjpldotephemeris.def := 'DE200';
help::pkg.utility.aipsrcdata.objs.measures.jpl.c.a.measuresdotjpldotephemeris.a := 'DE200 or DE405';
help::pkg.utility.aipsrcdata.objs.measures.jpl.c.a.measuresdotDE200dotdirectory := [=];
help::pkg.utility.aipsrcdata.objs.measures.jpl.c.a.measuresdotDE200dotdirectory.d := 'directory for the DE200 table';
help::pkg.utility.aipsrcdata.objs.measures.jpl.c.a.measuresdotDE200dotdirectory.def := 'see description';
help::pkg.utility.aipsrcdata.objs.measures.jpl.c.a.measuresdotDE200dotdirectory.a := 'valid directory';
help::pkg.utility.aipsrcdata.objs.measures.jpl.c.a.measuresdotDE405dotdirectory := [=];
help::pkg.utility.aipsrcdata.objs.measures.jpl.c.a.measuresdotDE405dotdirectory.d := 'directory for the DE405 table';
help::pkg.utility.aipsrcdata.objs.measures.jpl.c.a.measuresdotDE405dotdirectory.def := 'see description';
help::pkg.utility.aipsrcdata.objs.measures.jpl.c.a.measuresdotDE405dotdirectory.a := 'valid directory';
help::pkg.utility.aipsrcdata.objs.help.popup := [=];
help::pkg.utility.aipsrcdata.objs.help.popup.m := [=];
help::pkg.utility.aipsrcdata.objs.help.popup.c := [=];
help::pkg.utility.aipsrcdata.objs.help.popup.d := 'Popup help system setup -- user';
help::pkg.utility.aipsrcdata.objs.help.popup.c.a.helpdotpopupdottype := [=];
help::pkg.utility.aipsrcdata.objs.help.popup.c.a.helpdotpopupdottype.d := 'the default action for the popup help  system';
help::pkg.utility.aipsrcdata.objs.help.popup.c.a.helpdotpopupdottype.def := 'both';
help::pkg.utility.aipsrcdata.objs.help.popup.c.a.helpdotpopupdottype.a := 'coded value: \' none\'  \' both\'  \' mb3long\'  or \' hoverlong\' ';
help::pkg.utility.aipsrcdata.objs.user := [=];
help::pkg.utility.aipsrcdata.objs.user.m := [=];
help::pkg.utility.aipsrcdata.objs.user.c := [=];
help::pkg.utility.aipsrcdata.objs.user.d := 'Detail user environment -- user';
help::pkg.utility.aipsrcdata.objs.user.c.a.userdotaipsdir := [=];
help::pkg.utility.aipsrcdata.objs.user.c.a.userdotaipsdir.d := 'default user\' s AIPS++\  base directory';
help::pkg.utility.aipsrcdata.objs.user.c.a.userdotaipsdir.def := '~/aips++';
help::pkg.utility.aipsrcdata.objs.user.c.a.userdotaipsdir.a := 'valid directory name';
help::pkg.utility.aipsrcdata.objs.user.c.a.userdotdirectoriesdotwork := [=];
help::pkg.utility.aipsrcdata.objs.user.c.a.userdotdirectoriesdotwork.d := 'list of directories to put scratch files';
help::pkg.utility.aipsrcdata.objs.user.c.a.userdotdirectoriesdotwork.def := '"." or "/tmp"';
help::pkg.utility.aipsrcdata.objs.user.c.a.userdotdirectoriesdotwork.a := 'string';
help::pkg.utility.aipsrcdata.objs.user.c.a.userdotdowait := [=];
help::pkg.utility.aipsrcdata.objs.user.c.a.userdotdowait.d := 'Wait for asynchronous functions to finish?';
help::pkg.utility.aipsrcdata.objs.user.c.a.userdotdowait.def := 'false';
help::pkg.utility.aipsrcdata.objs.user.c.a.userdotdowait.a := 'falsor true';
help::pkg.utility.aipsrcdata.objs.user.c.a.userdotaipsrcdoteditdotkeep := [=];
help::pkg.utility.aipsrcdata.objs.user.c.a.userdotaipsrcdoteditdotkeep.d := 'the number of edits of an aipsrc keyword that are kept as history when saving automatically to the users .aipsrc';
help::pkg.utility.aipsrcdata.objs.user.c.a.userdotaipsrcdoteditdotkeep.def := '5';
help::pkg.utility.aipsrcdata.objs.user.c.a.userdotaipsrcdoteditdotkeep.a := 'integer';
help::pkg.utility.aipsrcdata.objs.user.c.a.userdotdisplaydotmemory := [=];
help::pkg.utility.aipsrcdata.objs.user.c.a.userdotdisplaydotmemory.d := 'display memory usage in a GUI barchart?';
help::pkg.utility.aipsrcdata.objs.user.c.a.userdotdisplaydotmemory.def := 'false';
help::pkg.utility.aipsrcdata.objs.user.c.a.userdotdisplaydotmemory.a := 'false or true';
help::pkg.utility.aipsrcdata.objs.user.c.a.userdotprestart := [=];
help::pkg.utility.aipsrcdata.objs.user.c.a.userdotprestart.d := 'Pre-start these clients';
help::pkg.utility.aipsrcdata.objs.user.c.a.userdotprestart.def := 'misc timer quanta';
help::pkg.utility.aipsrcdata.objs.user.c.a.userdotprestart.a := 'String';
help::pkg.utility.aipsrcdata.objs.table := [=];
help::pkg.utility.aipsrcdata.objs.table.m := [=];
help::pkg.utility.aipsrcdata.objs.table.c := [=];
help::pkg.utility.aipsrcdata.objs.table.d := 'Table System setup -- aipsmgr/user';
help::pkg.utility.aipsrcdata.objs.table.c.a.tabledotrelinquishdotreqautolocksdotinterval := [=];
help::pkg.utility.aipsrcdata.objs.table.c.a.tabledotrelinquishdotreqautolocksdotinterval.d := 'nr of seconds to wait before relinquishing autolocks requested in another process';
help::pkg.utility.aipsrcdata.objs.table.c.a.tabledotrelinquishdotreqautolocksdotinterval.def := '5';
help::pkg.utility.aipsrcdata.objs.table.c.a.tabledotrelinquishdotreqautolocksdotinterval.a := 'float';
help::pkg.utility.aipsrcdata.objs.table.c.a.tabledotrelinquishdotallautolocksdotinterval := [=];
help::pkg.utility.aipsrcdata.objs.table.c.a.tabledotrelinquishdotallautolocksdotinterval.d := 'nr of seconds to wait before relinquishing all autolocks';
help::pkg.utility.aipsrcdata.objs.table.c.a.tabledotrelinquishdotallautolocksdotinterval.def := '60';
help::pkg.utility.aipsrcdata.objs.table.c.a.tabledotrelinquishdotallautolocksdotinterval.a := 'float';
help::pkg.utility.aipsrcdata.objs.table.c.a.tabledotendianformat := [=];
help::pkg.utility.aipsrcdata.objs.table.c.a.tabledotendianformat.d := 'endian format to be used for storing data in new tables';
help::pkg.utility.aipsrcdata.objs.table.c.a.tabledotendianformat.def := 'big';
help::pkg.utility.aipsrcdata.objs.table.c.a.tabledotendianformat.a := 'big,little,local';
help::pkg.utility.aipsrcdata.objs.system := [=];
help::pkg.utility.aipsrcdata.objs.system.m := [=];
help::pkg.utility.aipsrcdata.objs.system.c := [=];
help::pkg.utility.aipsrcdata.objs.system.d := 'System resources setup -- aipsmgr/user';
help::pkg.utility.aipsrcdata.objs.system.c.a.systemdotresourcesdotnumcpu := [=];
help::pkg.utility.aipsrcdata.objs.system.c.a.systemdotresourcesdotnumcpu.d := 'number of cpu\' s on machine';
help::pkg.utility.aipsrcdata.objs.system.c.a.systemdotresourcesdotnumcpu.def := '1';
help::pkg.utility.aipsrcdata.objs.system.c.a.systemdotresourcesdotnumcpu.a := 'number';
help::pkg.utility.aipsrcdata.objs.system.c.a.systemdotresourcesdotmemory := [=];
help::pkg.utility.aipsrcdata.objs.system.c.a.systemdotresourcesdotmemory.d := 'amount of memory on machine in Mb';
help::pkg.utility.aipsrcdata.objs.system.c.a.systemdotresourcesdotmemory.def := '64';
help::pkg.utility.aipsrcdata.objs.system.c.a.systemdotresourcesdotmemory.a := 'number';
help::pkg.utility.aipsrcdata.objs.system.c.a.systemdottimedottzoffset := [=];
help::pkg.utility.aipsrcdata.objs.system.c.a.systemdottimedottzoffset.d := 'time zone offset';
help::pkg.utility.aipsrcdata.objs.system.c.a.systemdottimedottzoffset.def := '00:00 (soon system defined)';
help::pkg.utility.aipsrcdata.objs.system.c.a.systemdottimedottzoffset.a := '$\pm$hh\[\:mm\]';
help::pkg.utility.aipsrcdata.objs.system.c.a.systemdotaipscenter := [=];
help::pkg.utility.aipsrcdata.objs.system.c.a.systemdotaipscenter.d := 'Where to send problems/questions, same as system.aipscentre';
help::pkg.utility.aipsrcdata.objs.system.c.a.systemdotaipscenter.def := 'namerica';
help::pkg.utility.aipsrcdata.objs.system.c.a.systemdotaipscenter.a := 'namerica, australia, or europe';
help::pkg.utility.aipsrcdata.objs.system.c.a.systemdotaipscentre := [=];
help::pkg.utility.aipsrcdata.objs.system.c.a.systemdotaipscentre.d := 'Where to send problems/questions, same as system.aipscenter';
help::pkg.utility.aipsrcdata.objs.system.c.a.systemdotaipscentre.def := 'namerica';
help::pkg.utility.aipsrcdata.objs.system.c.a.systemdotaipscentre.a := 'namerica, australia, or europe';
help::pkg.utility.aipsrcdata.objs.system.c.a.systemdotlocaldotcontact := [=];
help::pkg.utility.aipsrcdata.objs.system.c.a.systemdotlocaldotcontact.d := 'Whom to send local questions/problems';
help::pkg.utility.aipsrcdata.objs.system.c.a.systemdotlocaldotcontact.def := 'aips2-help';
help::pkg.utility.aipsrcdata.objs.system.c.a.systemdotlocaldotcontact.a := 'any valid email address for an AIPS++\ expert';
help::pkg.utility.aipsrcdata.objs.system.c.a.systemdotlocaldotregistered := [=];
help::pkg.utility.aipsrcdata.objs.system.c.a.systemdotlocaldotregistered.d := 'Which versions of AIPS++\ have been registered';
help::pkg.utility.aipsrcdata.objs.system.c.a.systemdotlocaldotregistered.def := 'none';
help::pkg.utility.aipsrcdata.objs.system.c.a.systemdotlocaldotregistered.a := 'linux\_egcs, sun4sol\_egcs, sgi\_ntv, etc...';
help::pkg.utility.aipsrcdata.objs.printer := [=];
help::pkg.utility.aipsrcdata.objs.printer.m := [=];
help::pkg.utility.aipsrcdata.objs.printer.c := [=];
help::pkg.utility.aipsrcdata.objs.printer.d := 'Postscript printer definitions -- aipsmgr/user';
help::pkg.utility.aipsrcdata.objs.printer.c.a.printerdotdefault := [=];
help::pkg.utility.aipsrcdata.objs.printer.c.a.printerdotdefault.d := 'Print queue';
help::pkg.utility.aipsrcdata.objs.printer.c.a.printerdotdefault.def := 'DEFINE\_ME';
help::pkg.utility.aipsrcdata.objs.printer.c.a.printerdotdefault.a := 'name of a printer queue';
help::pkg.utility.aipsrcdata.objs.printer.c.a.printerdot_printqueue__dotpaper := [=];
help::pkg.utility.aipsrcdata.objs.printer.c.a.printerdot_printqueue__dotpaper.d := 'paper size on print queue';
help::pkg.utility.aipsrcdata.objs.printer.c.a.printerdot_printqueue__dotpaper.def := 'A4';
help::pkg.utility.aipsrcdata.objs.printer.c.a.printerdot_printqueue__dotpaper.a := 'A3, A4 or letter';
help::pkg.utility.aipsrcdata.objs.help := [=];
help::pkg.utility.aipsrcdata.objs.help.m := [=];
help::pkg.utility.aipsrcdata.objs.help.c := [=];
help::pkg.utility.aipsrcdata.objs.help.d := 'Help system setup -- aipsmgr/(user)';
help::pkg.utility.aipsrcdata.objs.help.c.a.helpdotdirectory := [=];
help::pkg.utility.aipsrcdata.objs.help.c.a.helpdotdirectory.d := 'directory for the Refman help system';
help::pkg.utility.aipsrcdata.objs.help.c.a.helpdotdirectory.def := 'none';
help::pkg.utility.aipsrcdata.objs.help.c.a.helpdotdirectory.a := 'valid directory name';
help::pkg.utility.aipsrcdata.objs.help.c.a.helpdotsystemfile := [=];
help::pkg.utility.aipsrcdata.objs.help.c.a.helpdotsystemfile.d := 'name of the Table directory with the help system';
help::pkg.utility.aipsrcdata.objs.help.c.a.helpdotsystemfile.def := 'none';
help::pkg.utility.aipsrcdata.objs.help.c.a.helpdotsystemfile.a := 'valid directory name in help.directory';
help::pkg.utility.aipsrcdata.objs.help.c.a.helpdotkeywordfile := [=];
help::pkg.utility.aipsrcdata.objs.help.c.a.helpdotkeywordfile.d := 'name of the help system keyword Table';
help::pkg.utility.aipsrcdata.objs.help.c.a.helpdotkeywordfile.def := 'none';
help::pkg.utility.aipsrcdata.objs.help.c.a.helpdotkeywordfile.a := 'valid directory name in help.directory';
help::pkg.utility.aipsrcdata.objs.help.c.a.helpdotbrowser := [=];
help::pkg.utility.aipsrcdata.objs.help.c.a.helpdotbrowser.d := 'browser to use for help display';
help::pkg.utility.aipsrcdata.objs.help.c.a.helpdotbrowser.def := 'netscape';
help::pkg.utility.aipsrcdata.objs.help.c.a.helpdotbrowser.a := 'valid browser command';
help::pkg.utility.aipsrcdata.objs.help.c.a.helpdotserver := [=];
help::pkg.utility.aipsrcdata.objs.help.c.a.helpdotserver.d := 'server to obtain help information from';
help::pkg.utility.aipsrcdata.objs.help.c.a.helpdotserver.def := 'file://localhost';
help::pkg.utility.aipsrcdata.objs.help.c.a.helpdotserver.a := 'valid server, e.g. http://www.atnf.csiro.au, but due to probably mixing of local file names with external server may not work';
help::pkg.utility.aipsrcdata.objs.unused := [=];
help::pkg.utility.aipsrcdata.objs.unused.m := [=];
help::pkg.utility.aipsrcdata.objs.unused.c := [=];
help::pkg.utility.aipsrcdata.objs.unused.d := 'details for unused program -- aipsmgr/programmer';
help::pkg.utility.aipsrcdata.objs.unused.c.a.unuseddotfiledotnm := [=];
help::pkg.utility.aipsrcdata.objs.unused.c.a.unuseddotfiledotnm.d := 'path to gnm or nm program';
help::pkg.utility.aipsrcdata.objs.unused.c.a.unuseddotfiledotnm.def := 'gnm';
help::pkg.utility.aipsrcdata.objs.unused.c.a.unuseddotfiledotnm.a := 'path to a valid nm program';
help::pkg.utility.aipsrcdata.objs.unused.c.a.unuseddotfiledotgfilt := [=];
help::pkg.utility.aipsrcdata.objs.unused.c.a.unuseddotfiledotgfilt.d := 'path of gcc name demangler';
help::pkg.utility.aipsrcdata.objs.unused.c.a.unuseddotfiledotgfilt.def := 'g++filt';
help::pkg.utility.aipsrcdata.objs.unused.c.a.unuseddotfiledotgfilt.a := 'path name to gcc name demangler';
help::pkg.utility.aipsrcdata.objs.inhale_or_sneeze := [=];
help::pkg.utility.aipsrcdata.objs.inhale_or_sneeze.m := [=];
help::pkg.utility.aipsrcdata.objs.inhale_or_sneeze.c := [=];
help::pkg.utility.aipsrcdata.objs.inhale_or_sneeze.d := 'Code distribution system -- aipsmgr';
help::pkg.utility.aipsrcdata.objs.inhale_or_sneeze.c.a.inhaledotbasedotcodedotpreserve := [=];
help::pkg.utility.aipsrcdata.objs.inhale_or_sneeze.c.a.inhaledotbasedotcodedotpreserve.d := 'Preserve old code when new base base release installed';
help::pkg.utility.aipsrcdata.objs.inhale_or_sneeze.c.a.inhaledotbasedotcodedotpreserve.def := 'true';
help::pkg.utility.aipsrcdata.objs.inhale_or_sneeze.c.a.inhaledotbasedotcodedotpreserve.a := 'true or false';
help::pkg.utility.aipsrcdata.objs.inhale_or_sneeze.c.a.inhaledotbasedotslavedotpreserve := [=];
help::pkg.utility.aipsrcdata.objs.inhale_or_sneeze.c.a.inhaledotbasedotslavedotpreserve.d := 'Preserve code in slave after base release';
help::pkg.utility.aipsrcdata.objs.inhale_or_sneeze.c.a.inhaledotbasedotslavedotpreserve.def := 'false';
help::pkg.utility.aipsrcdata.objs.inhale_or_sneeze.c.a.inhaledotbasedotslavedotpreserve.a := 'false or true';
help::pkg.utility.aipsrcdata.objs.inhale_or_sneeze.c.a.inhaledotsneezedothosts := [=];
help::pkg.utility.aipsrcdata.objs.inhale_or_sneeze.c.a.inhaledotsneezedothosts.d := 'hosts on which to inhaled system. Each host can have colon separated list of extensions (\_ for no extension)';
help::pkg.utility.aipsrcdata.objs.inhale_or_sneeze.c.a.inhaledotsneezedothosts.def := 'none';
help::pkg.utility.aipsrcdata.objs.inhale_or_sneeze.c.a.inhaledotsneezedothosts.a := 'valid host name with :ext\[:ext..\]';
help::pkg.utility.aipsrcdata.objs.inhale_or_sneeze.c.a.inhaledotsneezedot_host_dotrcmd := [=];
help::pkg.utility.aipsrcdata.objs.inhale_or_sneeze.c.a.inhaledotsneezedot_host_dotrcmd.d := 'Remote command to start sneeze on host';
help::pkg.utility.aipsrcdata.objs.inhale_or_sneeze.c.a.inhaledotsneezedot_host_dotrcmd.def := 'rsh';
help::pkg.utility.aipsrcdata.objs.inhale_or_sneeze.c.a.inhaledotsneezedot_host_dotrcmd.a := 'rsh or commands like ssh';
help::pkg.utility.aipsrcdata.objs.inhale_or_sneeze.c.a.sneezedothostdotaipsextdotlogfile := [=];
help::pkg.utility.aipsrcdata.objs.inhale_or_sneeze.c.a.sneezedothostdotaipsextdotlogfile.d := 'name of sneeze log file (replace host.aipsext with your host and aipsext)';
help::pkg.utility.aipsrcdata.objs.inhale_or_sneeze.c.a.sneezedothostdotaipsextdotlogfile.def := 'none';
help::pkg.utility.aipsrcdata.objs.inhale_or_sneeze.c.a.sneezedothostdotaipsextdotlogfile.a := 'valid file name';
help::pkg.utility.aipsrcdata.objs.inhale_or_sneeze.c.a.sneezedothostdotaipsextdotlogmail := [=];
help::pkg.utility.aipsrcdata.objs.inhale_or_sneeze.c.a.sneezedothostdotaipsextdotlogmail.d := 'address to mail the sneeze logfile to (replace host.aipsext with your host and aipsext)';
help::pkg.utility.aipsrcdata.objs.inhale_or_sneeze.c.a.sneezedothostdotaipsextdotlogmail.def := 'AIPS++\-inhale\@nrao.edu';
help::pkg.utility.aipsrcdata.objs.inhale_or_sneeze.c.a.sneezedothostdotaipsextdotlogmail.a := 'valid mail address';
help::pkg.utility.aipsrcdata.objs.inhale_or_sneeze.c.a.sneezedotbasedotdocsdotpreserve := [=];
help::pkg.utility.aipsrcdata.objs.inhale_or_sneeze.c.a.sneezedotbasedotdocsdotpreserve.d := 'Preserve old documentation when new base release installed';
help::pkg.utility.aipsrcdata.objs.inhale_or_sneeze.c.a.sneezedotbasedotdocsdotpreserve.def := 'true';
help::pkg.utility.aipsrcdata.objs.inhale_or_sneeze.c.a.sneezedotbasedotdocsdotpreserve.a := 'true or false';
help::pkg.utility.aipsrcdata.objs.inhale_or_sneeze.c.a.sneezedotbasedot_arch_dotpreserve := [=];
help::pkg.utility.aipsrcdata.objs.inhale_or_sneeze.c.a.sneezedotbasedot_arch_dotpreserve.d := 'Preserve old system when new base release installed';
help::pkg.utility.aipsrcdata.objs.inhale_or_sneeze.c.a.sneezedotbasedot_arch_dotpreserve.def := 'true';
help::pkg.utility.aipsrcdata.objs.inhale_or_sneeze.c.a.sneezedotbasedot_arch_dotpreserve.a := 'true or false';
help::pkg.utility.aipsrcdata.objs.account := [=];
help::pkg.utility.aipsrcdata.objs.account.m := [=];
help::pkg.utility.aipsrcdata.objs.account.c := [=];
help::pkg.utility.aipsrcdata.objs.account.d := 'AIPS++\  account definitions -- aipsmgr';
help::pkg.utility.aipsrcdata.objs.account.c.a.accountdotmanager := [=];
help::pkg.utility.aipsrcdata.objs.account.c.a.accountdotmanager.d := 'AIPS++\ account manager';
help::pkg.utility.aipsrcdata.objs.account.c.a.accountdotmanager.def := 'none';
help::pkg.utility.aipsrcdata.objs.account.c.a.accountdotmanager.a := 'e.g. aips2mgr.aipsmgr';
help::pkg.utility.aipsrcdata.objs.account.c.a.accountdotprogrammer := [=];
help::pkg.utility.aipsrcdata.objs.account.c.a.accountdotprogrammer.d := 'AIPS++\ programmer';
help::pkg.utility.aipsrcdata.objs.account.c.a.accountdotprogrammer.def := 'none';
help::pkg.utility.aipsrcdata.objs.account.c.a.accountdotprogrammer.a := 'e.g. aips2prg.aips2pgr';
help::pkg.utility.aipsrcdata.objs.account.c.a.accountdotuser := [=];
help::pkg.utility.aipsrcdata.objs.account.c.a.accountdotuser.d := 'AIPS++\ user';
help::pkg.utility.aipsrcdata.objs.account.c.a.accountdotuser.def := 'none';
help::pkg.utility.aipsrcdata.objs.account.c.a.accountdotuser.a := 'e.g. aips2usr.aips2usr';
help::pkg.utility.aipsrcdata.objs.dish := [=];
help::pkg.utility.aipsrcdata.objs.dish.m := [=];
help::pkg.utility.aipsrcdata.objs.dish.c := [=];
help::pkg.utility.aipsrcdata.objs.dish.d := 'dish startup options - user';
help::pkg.utility.aipsrcdata.objs.dish.c.a.dishdotrestorestate := [=];
help::pkg.utility.aipsrcdata.objs.dish.c.a.dishdotrestorestate.d := 'Restore state on startup?';
help::pkg.utility.aipsrcdata.objs.dish.c.a.dishdotrestorestate.def := 'T';
help::pkg.utility.aipsrcdata.objs.dish.c.a.dishdotrestorestate.a := 'T or F';
help::pkg.utility.aipsrcdata.objs.dish.c.a.dishdotstatefile := [=];
help::pkg.utility.aipsrcdata.objs.dish.c.a.dishdotstatefile.d := 'DISH state file to use on startup';
help::pkg.utility.aipsrcdata.objs.dish.c.a.dishdotstatefile.def := '\$HOME/dishstate/default';
help::pkg.utility.aipsrcdata.objs.dish.c.a.dishdotstatefile.a := 'any valid file name';
help::pkg.utility.aipsrcdata.objs.viewer := [=];
help::pkg.utility.aipsrcdata.objs.viewer.m := [=];
help::pkg.utility.aipsrcdata.objs.viewer.c := [=];
help::pkg.utility.aipsrcdata.objs.viewer.d := 'viewer definitions';
help::pkg.utility.aipsrcdata.objs.viewer.c.a.displaydotaxislabels := [=];
help::pkg.utility.aipsrcdata.objs.viewer.c.a.displaydotaxislabels.d := 'Turn on display of axes and labels?';
help::pkg.utility.aipsrcdata.objs.viewer.c.a.displaydotaxislabels.def := 'off for images, on for ms';
help::pkg.utility.aipsrcdata.objs.viewer.c.a.displaydotaxislabels.a := 'on or off';
help::pkg.utility.aipsrcdata.objs.viewer.c.a.displaydotaxislabelsdotcharsize := [=];
help::pkg.utility.aipsrcdata.objs.viewer.c.a.displaydotaxislabelsdotcharsize.d := 'Character size for axis labels (pgplot units)';
help::pkg.utility.aipsrcdata.objs.viewer.c.a.displaydotaxislabelsdotcharsize.def := '1.2';
help::pkg.utility.aipsrcdata.objs.viewer.c.a.displaydotaxislabelsdotcharsize.a := '0.1 -- 4.0';
help::pkg.utility.aipsrcdata.objs.viewer.c.a.displaydotaxislabelsdotlinewidth := [=];
help::pkg.utility.aipsrcdata.objs.viewer.c.a.displaydotaxislabelsdotlinewidth.d := 'Line width for axis labels (pgplot units)';
help::pkg.utility.aipsrcdata.objs.viewer.c.a.displaydotaxislabelsdotlinewidth.def := '1.4';
help::pkg.utility.aipsrcdata.objs.viewer.c.a.displaydotaxislabelsdotlinewidth.a := '0.0 -- 5.0';
help::pkg.utility.aipsrcdata.objs.viewer.c.a.displaydotaxislabelsdotworld := [=];
help::pkg.utility.aipsrcdata.objs.viewer.c.a.displaydotaxislabelsdotworld.d := 'Show world (on) or pixel (off)   coordinates';
help::pkg.utility.aipsrcdata.objs.viewer.c.a.displaydotaxislabelsdotworld.def := 'on';
help::pkg.utility.aipsrcdata.objs.viewer.c.a.displaydotaxislabelsdotworld.a := 'on or off';
help::pkg.utility.aipsrcdata.objs.viewer.c.a.displaydotcontrolsdotcolor := [=];
help::pkg.utility.aipsrcdata.objs.viewer.c.a.displaydotcontrolsdotcolor.d := 'The outline color of the drawing tools (e.g. zoom rectangle)';
help::pkg.utility.aipsrcdata.objs.viewer.c.a.displaydotcontrolsdotcolor.def := 'green';
help::pkg.utility.aipsrcdata.objs.viewer.c.a.displaydotcontrolsdotcolor.a := 'an X color name (string)';
help::pkg.utility.aipsrcdata.objs.viewer.c.a.displaydotcontrolsdotlinewidth := [=];
help::pkg.utility.aipsrcdata.objs.viewer.c.a.displaydotcontrolsdotlinewidth.d := 'The width in pixel of the drawing tools';
help::pkg.utility.aipsrcdata.objs.viewer.c.a.displaydotcontrolsdotlinewidth.def := '1';
help::pkg.utility.aipsrcdata.objs.viewer.c.a.displaydotcontrolsdotlinewidth.a := 'integer';
help::pkg.utility.aipsrcdata.objs.viewer.c.a.displaydotcontrolsdotdoubleclickinterval := [=];
help::pkg.utility.aipsrcdata.objs.viewer.c.a.displaydotcontrolsdotdoubleclickinterval.d := 'maximum time delay in seconds between two clicks (double click)';
help::pkg.utility.aipsrcdata.objs.viewer.c.a.displaydotcontrolsdotdoubleclickinterval.def := '0.5';
help::pkg.utility.aipsrcdata.objs.viewer.c.a.displaydotcontrolsdotdoubleclickinterval.a := 'float';
help::pkg.utility.aipsrcdata.objs.viewer.c.a.displaydotcolormapsdotdefaultcolormap := [=];
help::pkg.utility.aipsrcdata.objs.viewer.c.a.displaydotcolormapsdotdefaultcolormap.d := 'The default colormap for raster display';
help::pkg.utility.aipsrcdata.objs.viewer.c.a.displaydotcolormapsdotdefaultcolormap.def := 'Greyscale 1';
help::pkg.utility.aipsrcdata.objs.viewer.c.a.displaydotcolormapsdotdefaultcolormap.a := 'a colormap name (string)';
help::pkg.utility.aipsrcdata.objs.viewer.c.a.displaydotcolormapsdotusertable := [=];
help::pkg.utility.aipsrcdata.objs.viewer.c.a.displaydotcolormapsdotusertable.d := 'the full path to an aips++ table containing colormap definitions';
help::pkg.utility.aipsrcdata.objs.viewer.c.a.displaydotcolormapsdotusertable.def := '';
help::pkg.utility.aipsrcdata.objs.viewer.c.a.displaydotcolormapsdotusertable.a := 'any valid file name (full path)';
help::pkg.utility.aipsrcdata.objs.viewer.c.a.displaydotcolormapsdotusedefault := [=];
help::pkg.utility.aipsrcdata.objs.viewer.c.a.displaydotcolormapsdotusedefault.d := 'Use the default definitions as well as the user table?';
help::pkg.utility.aipsrcdata.objs.viewer.c.a.displaydotcolormapsdotusedefault.def := 'no';
help::pkg.utility.aipsrcdata.objs.viewer.c.a.displaydotcolormapsdotusedefault.a := 'yes or no';
help::pkg.utility.aipsrcdata.objs.viewer.c.a.displaydotcontourdotcolor := [=];
help::pkg.utility.aipsrcdata.objs.viewer.c.a.displaydotcontourdotcolor.d := 'The dafult color for contours';
help::pkg.utility.aipsrcdata.objs.viewer.c.a.displaydotcontourdotcolor.def := 'foreground';
help::pkg.utility.aipsrcdata.objs.viewer.c.a.displaydotcontourdotcolor.a := 'an X color name (string)';
help::pkg.utility.aipsrcdata.objs.viewer.c.a.displaydotcachesize := [=];
help::pkg.utility.aipsrcdata.objs.viewer.c.a.displaydotcachesize.d := 'maximum number of views which should be cached per Viewerdisplaydata';
help::pkg.utility.aipsrcdata.objs.viewer.c.a.displaydotcachesize.def := '256';
help::pkg.utility.aipsrcdata.objs.viewer.c.a.displaydotcachesize.a := 'integer';
help::pkg.utility.aipsrcdata.objs.viewer.c.a.viewerdotcolorscheme := [=];
help::pkg.utility.aipsrcdata.objs.viewer.c.a.viewerdotcolorscheme.d := 'The backgound color of viewerdisplaypanel tools';
help::pkg.utility.aipsrcdata.objs.viewer.c.a.viewerdotcolorscheme.def := 'screen';
help::pkg.utility.aipsrcdata.objs.viewer.c.a.viewerdotcolorscheme.a := 'screen or paper';

help::pkg.utility.catalog := [=];
help::pkg.utility.catalog.objs := [=];
help::pkg.utility.catalog.funs := [=];
help::pkg.utility.catalog.d := 'Module for file operations';
help::pkg.utility.catalog.objs.catalog := [=];
help::pkg.utility.catalog.objs.catalog.m := [=];
help::pkg.utility.catalog.objs.catalog.c := [=];
help::pkg.utility.catalog.objs.catalog.d := 'File operations';
help::pkg.utility.catalog.objs.catalog.c.catalog := [=];
help::pkg.utility.catalog.objs.catalog.c.catalog.d := 'File operations';
help::pkg.utility.catalog.objs.catalog.c.catalog.s := 'catalog()';
help::pkg.utility.catalog.objs.catalog.m.gui := [=];
help::pkg.utility.catalog.objs.catalog.m.gui.d := 'Use the GUI';
help::pkg.utility.catalog.objs.catalog.m.gui.a.refresh := [=];
help::pkg.utility.catalog.objs.catalog.m.gui.a.refresh.d := 'Refresh the contents (in case GUI is already active)';
help::pkg.utility.catalog.objs.catalog.m.gui.a.refresh.def := 'F';
help::pkg.utility.catalog.objs.catalog.m.gui.a.refresh.a := 'Bool';
help::pkg.utility.catalog.objs.catalog.m.gui.a.show_types := [=];
help::pkg.utility.catalog.objs.catalog.m.gui.a.show_types.d := 'File types to show';
help::pkg.utility.catalog.objs.catalog.m.gui.a.show_types.def := 'unset';
help::pkg.utility.catalog.objs.catalog.m.gui.a.show_types.a := 'Vector of strings';
help::pkg.utility.catalog.objs.catalog.m.gui.a.vscrollbarright := [=];
help::pkg.utility.catalog.objs.catalog.m.gui.a.vscrollbarright.d := 'Vertical scrollbar on right side? (otherwise on left)';
help::pkg.utility.catalog.objs.catalog.m.gui.a.vscrollbarright.def := 'unset';
help::pkg.utility.catalog.objs.catalog.m.gui.a.vscrollbarright.a := 'Bool';
help::pkg.utility.catalog.objs.catalog.m.gui.s := 'gui(refresh, show_types, vscrollbarright)';
help::pkg.utility.catalog.objs.catalog.m.screen := [=];
help::pkg.utility.catalog.objs.catalog.m.screen.d := 'Use the screen for catalog messages';
help::pkg.utility.catalog.objs.catalog.m.screen.s := 'screen()';
help::pkg.utility.catalog.objs.catalog.m.cli := [=];
help::pkg.utility.catalog.objs.catalog.m.cli.d := 'Use the screen for catalog messages';
help::pkg.utility.catalog.objs.catalog.m.cli.s := 'cli()';
help::pkg.utility.catalog.objs.catalog.m.availabletypes := [=];
help::pkg.utility.catalog.objs.catalog.m.availabletypes.d := 'Return vector of possible file types';
help::pkg.utility.catalog.objs.catalog.m.availabletypes.s := 'availabletypes()';
help::pkg.utility.catalog.objs.catalog.m.whatis := [=];
help::pkg.utility.catalog.objs.catalog.m.whatis.d := 'Determine what a particular file is';
help::pkg.utility.catalog.objs.catalog.m.whatis.a.file := [=];
help::pkg.utility.catalog.objs.catalog.m.whatis.a.file.d := 'Name of file to be classified';
help::pkg.utility.catalog.objs.catalog.m.whatis.a.file.def := '\' .\' ';
help::pkg.utility.catalog.objs.catalog.m.whatis.a.file.a := 'Any string';
help::pkg.utility.catalog.objs.catalog.m.whatis.a.dir := [=];
help::pkg.utility.catalog.objs.catalog.m.whatis.a.dir.d := 'Directory of the file';
help::pkg.utility.catalog.objs.catalog.m.whatis.a.dir.def := '\' .\' ';
help::pkg.utility.catalog.objs.catalog.m.whatis.a.dir.a := 'Any string';
help::pkg.utility.catalog.objs.catalog.m.whatis.s := 'whatis(file, dir)';
help::pkg.utility.catalog.objs.catalog.m.whatisfull := [=];
help::pkg.utility.catalog.objs.catalog.m.whatisfull.d := 'Determine full characteristics of a file';
help::pkg.utility.catalog.objs.catalog.m.whatisfull.a.file := [=];
help::pkg.utility.catalog.objs.catalog.m.whatisfull.a.file.d := 'Name of the file';
help::pkg.utility.catalog.objs.catalog.m.whatisfull.a.file.def := '\' .\' ';
help::pkg.utility.catalog.objs.catalog.m.whatisfull.a.file.a := 'Any string';
help::pkg.utility.catalog.objs.catalog.m.whatisfull.a.dir := [=];
help::pkg.utility.catalog.objs.catalog.m.whatisfull.a.dir.d := 'Directory of the file';
help::pkg.utility.catalog.objs.catalog.m.whatisfull.a.dir.def := '\' .\' ';
help::pkg.utility.catalog.objs.catalog.m.whatisfull.a.dir.a := 'Any string';
help::pkg.utility.catalog.objs.catalog.m.whatisfull.s := 'whatisfull(file, dir)';
help::pkg.utility.catalog.objs.catalog.m.list := [=];
help::pkg.utility.catalog.objs.catalog.m.list.d := 'return contents of directories';
help::pkg.utility.catalog.objs.catalog.m.list.a.files := [=];
help::pkg.utility.catalog.objs.catalog.m.list.a.files.d := 'Path name(s) to be processed';
help::pkg.utility.catalog.objs.catalog.m.list.a.files.def := '\' .\' ';
help::pkg.utility.catalog.objs.catalog.m.list.a.files.a := 'Vector of strings';
help::pkg.utility.catalog.objs.catalog.m.list.a.listtypes := [=];
help::pkg.utility.catalog.objs.catalog.m.list.a.listtypes.d := 'Types to be listed';
help::pkg.utility.catalog.objs.catalog.m.list.a.listtypes.def := '\' All\' ';
help::pkg.utility.catalog.objs.catalog.m.list.a.listtypes.a := 'Vector of strings';
help::pkg.utility.catalog.objs.catalog.m.list.a.strippath := [=];
help::pkg.utility.catalog.objs.catalog.m.list.a.strippath.d := 'Strip directory from resulting names';
help::pkg.utility.catalog.objs.catalog.m.list.a.strippath.def := 'unset';
help::pkg.utility.catalog.objs.catalog.m.list.a.strippath.a := 'Bool';
help::pkg.utility.catalog.objs.catalog.m.list.s := 'list(files, listtypes, strippath)';
help::pkg.utility.catalog.objs.catalog.m.show := [=];
help::pkg.utility.catalog.objs.catalog.m.show.d := 'Summarize the directory on the screen or on the GUI';
help::pkg.utility.catalog.objs.catalog.m.show.a.dir := [=];
help::pkg.utility.catalog.objs.catalog.m.show.a.dir.d := 'Directory to be processed';
help::pkg.utility.catalog.objs.catalog.m.show.a.dir.def := '\' .\' ';
help::pkg.utility.catalog.objs.catalog.m.show.a.dir.a := 'String';
help::pkg.utility.catalog.objs.catalog.m.show.a.show_types := [=];
help::pkg.utility.catalog.objs.catalog.m.show.a.show_types.d := 'Types to be shown';
help::pkg.utility.catalog.objs.catalog.m.show.a.show_types.def := 'F';
help::pkg.utility.catalog.objs.catalog.m.show.a.show_types.a := 'String';
help::pkg.utility.catalog.objs.catalog.m.show.a.writestatus := [=];
help::pkg.utility.catalog.objs.catalog.m.show.a.writestatus.d := 'Write messages to status line?';
help::pkg.utility.catalog.objs.catalog.m.show.a.writestatus.def := 'T';
help::pkg.utility.catalog.objs.catalog.m.show.a.writestatus.a := 'Bool';
help::pkg.utility.catalog.objs.catalog.m.show.s := 'show(dir, show_types, writestatus)';
help::pkg.utility.catalog.objs.catalog.m.setmask := [=];
help::pkg.utility.catalog.objs.catalog.m.setmask.d := 'Set the mask';
help::pkg.utility.catalog.objs.catalog.m.setmask.a.mask := [=];
help::pkg.utility.catalog.objs.catalog.m.setmask.a.mask.d := 'Mask string';
help::pkg.utility.catalog.objs.catalog.m.setmask.a.mask.def := '\' \' ';
help::pkg.utility.catalog.objs.catalog.m.setmask.a.mask.a := 'String';
help::pkg.utility.catalog.objs.catalog.m.setmask.s := 'setmask(mask)';
help::pkg.utility.catalog.objs.catalog.m.getmask := [=];
help::pkg.utility.catalog.objs.catalog.m.getmask.d := 'Get the mask';
help::pkg.utility.catalog.objs.catalog.m.getmask.s := 'getmask()';
help::pkg.utility.catalog.objs.catalog.m.setconfirm := [=];
help::pkg.utility.catalog.objs.catalog.m.setconfirm.d := 'Set the confirmation option';
help::pkg.utility.catalog.objs.catalog.m.setconfirm.a.flag := [=];
help::pkg.utility.catalog.objs.catalog.m.setconfirm.a.flag.d := 'Flag';
help::pkg.utility.catalog.objs.catalog.m.setconfirm.a.flag.def := 'yes';
help::pkg.utility.catalog.objs.catalog.m.setconfirm.a.flag.a := 'yes, directory ,no';
help::pkg.utility.catalog.objs.catalog.m.setconfirm.s := 'setconfirm(flag)';
help::pkg.utility.catalog.objs.catalog.m.getconfirm := [=];
help::pkg.utility.catalog.objs.catalog.m.getconfirm.d := 'Get the default confirmation status';
help::pkg.utility.catalog.objs.catalog.m.getconfirm.s := 'getconfirm()';
help::pkg.utility.catalog.objs.catalog.m.settablesizeoption := [=];
help::pkg.utility.catalog.objs.catalog.m.settablesizeoption.d := 'Set the tablesize option';
help::pkg.utility.catalog.objs.catalog.m.settablesizeoption.a.tablesizeoption := [=];
help::pkg.utility.catalog.objs.catalog.m.settablesizeoption.a.tablesizeoption.d := 'option';
help::pkg.utility.catalog.objs.catalog.m.settablesizeoption.a.tablesizeoption.def := 'no';
help::pkg.utility.catalog.objs.catalog.m.settablesizeoption.a.tablesizeoption.a := 'String';
help::pkg.utility.catalog.objs.catalog.m.settablesizeoption.s := 'settablesizeoption(tablesizeoption)';
help::pkg.utility.catalog.objs.catalog.m.gettablesizeoption := [=];
help::pkg.utility.catalog.objs.catalog.m.gettablesizeoption.d := 'Get the tablesize option';
help::pkg.utility.catalog.objs.catalog.m.gettablesizeoption.s := 'gettablesizeoption()';
help::pkg.utility.catalog.objs.catalog.m.setalwaysshowdir := [=];
help::pkg.utility.catalog.objs.catalog.m.setalwaysshowdir.d := 'Set the alwaysshowdir flag';
help::pkg.utility.catalog.objs.catalog.m.setalwaysshowdir.a.flag := [=];
help::pkg.utility.catalog.objs.catalog.m.setalwaysshowdir.a.flag.d := 'Flag';
help::pkg.utility.catalog.objs.catalog.m.setalwaysshowdir.a.flag.def := 'T';
help::pkg.utility.catalog.objs.catalog.m.setalwaysshowdir.a.flag.a := 'Bool';
help::pkg.utility.catalog.objs.catalog.m.setalwaysshowdir.s := 'setalwaysshowdir(flag)';
help::pkg.utility.catalog.objs.catalog.m.getalwaysshowdir := [=];
help::pkg.utility.catalog.objs.catalog.m.getalwaysshowdir.d := 'Get the alwaysshowdir status';
help::pkg.utility.catalog.objs.catalog.m.getalwaysshowdir.s := 'getalwaysshowdir()';
help::pkg.utility.catalog.objs.catalog.m.setsortbytype := [=];
help::pkg.utility.catalog.objs.catalog.m.setsortbytype.d := 'Set the sortbytype flag';
help::pkg.utility.catalog.objs.catalog.m.setsortbytype.a.flag := [=];
help::pkg.utility.catalog.objs.catalog.m.setsortbytype.a.flag.d := 'Flag';
help::pkg.utility.catalog.objs.catalog.m.setsortbytype.a.flag.def := 'F';
help::pkg.utility.catalog.objs.catalog.m.setsortbytype.a.flag.a := 'Bool';
help::pkg.utility.catalog.objs.catalog.m.setsortbytype.s := 'setsortbytype(flag)';
help::pkg.utility.catalog.objs.catalog.m.getsortbytype := [=];
help::pkg.utility.catalog.objs.catalog.m.getsortbytype.d := 'Get the sortbytype status';
help::pkg.utility.catalog.objs.catalog.m.getsortbytype.s := 'getsortbytype()';
help::pkg.utility.catalog.objs.catalog.m.refresh := [=];
help::pkg.utility.catalog.objs.catalog.m.refresh.d := 'Refresh the listing';
help::pkg.utility.catalog.objs.catalog.m.refresh.s := 'refresh()';
help::pkg.utility.catalog.objs.catalog.m.lastdirectory := [=];
help::pkg.utility.catalog.objs.catalog.m.lastdirectory.d := 'Get the last directory used';
help::pkg.utility.catalog.objs.catalog.m.lastdirectory.s := 'lastdirectory()';
help::pkg.utility.catalog.objs.catalog.m.lastshowtypes := [=];
help::pkg.utility.catalog.objs.catalog.m.lastshowtypes.d := 'Get the last shown filetypes used';
help::pkg.utility.catalog.objs.catalog.m.lastshowtypes.s := 'lastshowtypes()';
help::pkg.utility.catalog.objs.catalog.m.delete := [=];
help::pkg.utility.catalog.objs.catalog.m.delete.d := 'Delete';
help::pkg.utility.catalog.objs.catalog.m.delete.a.files := [=];
help::pkg.utility.catalog.objs.catalog.m.delete.a.files.d := 'Files to be deleted';
help::pkg.utility.catalog.objs.catalog.m.delete.a.files.def := '';
help::pkg.utility.catalog.objs.catalog.m.delete.a.files.a := 'String';
help::pkg.utility.catalog.objs.catalog.m.delete.a.refreshgui := [=];
help::pkg.utility.catalog.objs.catalog.m.delete.a.refreshgui.d := 'Refresh the GUI?';
help::pkg.utility.catalog.objs.catalog.m.delete.a.refreshgui.def := 'T';
help::pkg.utility.catalog.objs.catalog.m.delete.a.refreshgui.a := 'Bool';
help::pkg.utility.catalog.objs.catalog.m.delete.a.confirm := [=];
help::pkg.utility.catalog.objs.catalog.m.delete.a.confirm.d := 'Confirmation?';
help::pkg.utility.catalog.objs.catalog.m.delete.a.confirm.def := 'unset';
help::pkg.utility.catalog.objs.catalog.m.delete.a.confirm.a := 'yes, directory, no';
help::pkg.utility.catalog.objs.catalog.m.delete.s := 'delete(files, refreshgui, confirm)';
help::pkg.utility.catalog.objs.catalog.m.copy := [=];
help::pkg.utility.catalog.objs.catalog.m.copy.d := 'Copy';
help::pkg.utility.catalog.objs.catalog.m.copy.a.file := [=];
help::pkg.utility.catalog.objs.catalog.m.copy.a.file.d := 'File to be copied';
help::pkg.utility.catalog.objs.catalog.m.copy.a.file.def := '';
help::pkg.utility.catalog.objs.catalog.m.copy.a.file.a := 'String';
help::pkg.utility.catalog.objs.catalog.m.copy.a.newfile := [=];
help::pkg.utility.catalog.objs.catalog.m.copy.a.newfile.d := 'Name of new file';
help::pkg.utility.catalog.objs.catalog.m.copy.a.newfile.def := '';
help::pkg.utility.catalog.objs.catalog.m.copy.a.newfile.a := 'String';
help::pkg.utility.catalog.objs.catalog.m.copy.a.confirm := [=];
help::pkg.utility.catalog.objs.catalog.m.copy.a.confirm.d := 'Confirmation?';
help::pkg.utility.catalog.objs.catalog.m.copy.a.confirm.def := 'unset';
help::pkg.utility.catalog.objs.catalog.m.copy.a.confirm.a := 'yes, directory, no';
help::pkg.utility.catalog.objs.catalog.m.copy.s := 'copy(file, newfile, confirm)';
help::pkg.utility.catalog.objs.catalog.m.rename := [=];
help::pkg.utility.catalog.objs.catalog.m.rename.d := 'Rename';
help::pkg.utility.catalog.objs.catalog.m.rename.a.file := [=];
help::pkg.utility.catalog.objs.catalog.m.rename.a.file.d := 'File to be renamed';
help::pkg.utility.catalog.objs.catalog.m.rename.a.file.def := '';
help::pkg.utility.catalog.objs.catalog.m.rename.a.file.a := 'String';
help::pkg.utility.catalog.objs.catalog.m.rename.a.newfile := [=];
help::pkg.utility.catalog.objs.catalog.m.rename.a.newfile.d := 'New name of file';
help::pkg.utility.catalog.objs.catalog.m.rename.a.newfile.def := '';
help::pkg.utility.catalog.objs.catalog.m.rename.a.newfile.a := 'String';
help::pkg.utility.catalog.objs.catalog.m.rename.a.confirm := [=];
help::pkg.utility.catalog.objs.catalog.m.rename.a.confirm.d := 'Confirmation?';
help::pkg.utility.catalog.objs.catalog.m.rename.a.confirm.def := 'unset';
help::pkg.utility.catalog.objs.catalog.m.rename.a.confirm.a := 'yes, directory, no';
help::pkg.utility.catalog.objs.catalog.m.rename.s := 'rename(file, newfile, confirm)';
help::pkg.utility.catalog.objs.catalog.m.view := [=];
help::pkg.utility.catalog.objs.catalog.m.view.d := 'View';
help::pkg.utility.catalog.objs.catalog.m.view.a.file := [=];
help::pkg.utility.catalog.objs.catalog.m.view.a.file.d := 'File to be viewed';
help::pkg.utility.catalog.objs.catalog.m.view.a.file.def := '';
help::pkg.utility.catalog.objs.catalog.m.view.a.file.a := 'String';
help::pkg.utility.catalog.objs.catalog.m.view.s := 'view(file)';
help::pkg.utility.catalog.objs.catalog.m.tool := [=];
help::pkg.utility.catalog.objs.catalog.m.tool.d := 'Tool';
help::pkg.utility.catalog.objs.catalog.m.tool.a.file := [=];
help::pkg.utility.catalog.objs.catalog.m.tool.a.file.d := 'File to be processed';
help::pkg.utility.catalog.objs.catalog.m.tool.a.file.def := '';
help::pkg.utility.catalog.objs.catalog.m.tool.a.file.a := 'String';
help::pkg.utility.catalog.objs.catalog.m.tool.s := 'tool(file)';
help::pkg.utility.catalog.objs.catalog.m.edit := [=];
help::pkg.utility.catalog.objs.catalog.m.edit.d := 'Edit';
help::pkg.utility.catalog.objs.catalog.m.edit.a.file := [=];
help::pkg.utility.catalog.objs.catalog.m.edit.a.file.d := 'File to be edited';
help::pkg.utility.catalog.objs.catalog.m.edit.a.file.def := '';
help::pkg.utility.catalog.objs.catalog.m.edit.a.file.a := 'String';
help::pkg.utility.catalog.objs.catalog.m.edit.s := 'edit(file)';
help::pkg.utility.catalog.objs.catalog.m.create := [=];
help::pkg.utility.catalog.objs.catalog.m.create.d := 'Create';
help::pkg.utility.catalog.objs.catalog.m.create.a.file := [=];
help::pkg.utility.catalog.objs.catalog.m.create.a.file.d := 'File to be created';
help::pkg.utility.catalog.objs.catalog.m.create.a.file.def := '';
help::pkg.utility.catalog.objs.catalog.m.create.a.file.a := 'String';
help::pkg.utility.catalog.objs.catalog.m.create.a.type := [=];
help::pkg.utility.catalog.objs.catalog.m.create.a.type.d := 'Type of file to be created';
help::pkg.utility.catalog.objs.catalog.m.create.a.type.def := '';
help::pkg.utility.catalog.objs.catalog.m.create.a.type.a := 'ascii|Glish|Directory';
help::pkg.utility.catalog.objs.catalog.m.create.a.refreshgui := [=];
help::pkg.utility.catalog.objs.catalog.m.create.a.refreshgui.d := 'Refresh the GUI?';
help::pkg.utility.catalog.objs.catalog.m.create.a.refreshgui.def := 'T';
help::pkg.utility.catalog.objs.catalog.m.create.a.refreshgui.a := 'Bool';
help::pkg.utility.catalog.objs.catalog.m.create.s := 'create(file, type, refreshgui)';
help::pkg.utility.catalog.objs.catalog.m.summary := [=];
help::pkg.utility.catalog.objs.catalog.m.summary.d := 'Show a summary';
help::pkg.utility.catalog.objs.catalog.m.summary.a.file := [=];
help::pkg.utility.catalog.objs.catalog.m.summary.a.file.d := 'File to be summarized';
help::pkg.utility.catalog.objs.catalog.m.summary.a.file.def := '';
help::pkg.utility.catalog.objs.catalog.m.summary.a.file.a := 'String';
help::pkg.utility.catalog.objs.catalog.m.summary.s := 'summary(file)';
help::pkg.utility.catalog.objs.catalog.m.execute := [=];
help::pkg.utility.catalog.objs.catalog.m.execute.d := 'Execute a glish file';
help::pkg.utility.catalog.objs.catalog.m.execute.a.file := [=];
help::pkg.utility.catalog.objs.catalog.m.execute.a.file.d := 'File to be executed';
help::pkg.utility.catalog.objs.catalog.m.execute.a.file.def := '';
help::pkg.utility.catalog.objs.catalog.m.execute.a.file.a := 'String';
help::pkg.utility.catalog.objs.catalog.m.execute.s := 'execute(file)';
help::pkg.utility.catalog.objs.catalog.m.canonicalize := [=];
help::pkg.utility.catalog.objs.catalog.m.canonicalize.d := 'Return a file name in canonical form';
help::pkg.utility.catalog.objs.catalog.m.canonicalize.a.file := [=];
help::pkg.utility.catalog.objs.catalog.m.canonicalize.a.file.d := 'Name of file to be canonicalized';
help::pkg.utility.catalog.objs.catalog.m.canonicalize.a.file.def := '\' .\' ';
help::pkg.utility.catalog.objs.catalog.m.canonicalize.a.file.a := 'Any string';
help::pkg.utility.catalog.objs.catalog.m.canonicalize.s := 'canonicalize(file)';
help::pkg.utility.catalog.objs.catalog.m.type := [=];
help::pkg.utility.catalog.objs.catalog.m.type.d := 'Return the type of this tool';
help::pkg.utility.catalog.objs.catalog.m.type.s := 'type()';
help::pkg.utility.catalog.objs.catalog.m.dismiss := [=];
help::pkg.utility.catalog.objs.catalog.m.dismiss.d := 'Dismiss the gui';
help::pkg.utility.catalog.objs.catalog.m.dismiss.s := 'dismiss()';
help::pkg.utility.catalog.objs.catalog.m.done := [=];
help::pkg.utility.catalog.objs.catalog.m.done.d := 'Stop this catalog tool';
help::pkg.utility.catalog.objs.catalog.m.done.s := 'done()';
help::pkg.utility.catalog.objs.catalog.m.setselectcallback := [=];
help::pkg.utility.catalog.objs.catalog.m.setselectcallback.d := 'Set the selectcallback function';
help::pkg.utility.catalog.objs.catalog.m.setselectcallback.s := 'setselectcallback()';
help::pkg.utility.catalog.objs.catalog.m.selectcallback := [=];
help::pkg.utility.catalog.objs.catalog.m.selectcallback.d := 'Get the selectcallback function';
help::pkg.utility.catalog.objs.catalog.m.selectcallback.s := 'selectcallback()';
help::pkg.utility.catalog.funs.cat := [=];
help::pkg.utility.catalog.funs.cat.a := [=];
help::pkg.utility.catalog.funs.cat.d := 'Show all files';
help::pkg.utility.catalog.funs.cat.a.dir := [=];
help::pkg.utility.catalog.funs.cat.a.dir.d := 'Directory to be processed';
help::pkg.utility.catalog.funs.cat.a.dir.def := '\' .\' ';
help::pkg.utility.catalog.funs.cat.a.dir.a := 'String';
help::pkg.utility.catalog.funs.cat.s := 'cat(dir)';
help::pkg.utility.catalog.funs.icat := [=];
help::pkg.utility.catalog.funs.icat.a := [=];
help::pkg.utility.catalog.funs.icat.d := 'Show images only';
help::pkg.utility.catalog.funs.icat.a.dir := [=];
help::pkg.utility.catalog.funs.icat.a.dir.d := 'Directory to be processed';
help::pkg.utility.catalog.funs.icat.a.dir.def := '\' .\' ';
help::pkg.utility.catalog.funs.icat.a.dir.a := 'String';
help::pkg.utility.catalog.funs.icat.s := 'icat(dir)';
help::pkg.utility.catalog.funs.ccat := [=];
help::pkg.utility.catalog.funs.ccat.a := [=];
help::pkg.utility.catalog.funs.ccat.d := 'Show calibration tables only';
help::pkg.utility.catalog.funs.ccat.a.dir := [=];
help::pkg.utility.catalog.funs.ccat.a.dir.d := 'Directory to be processed';
help::pkg.utility.catalog.funs.ccat.a.dir.def := '\' .\' ';
help::pkg.utility.catalog.funs.ccat.a.dir.a := 'String';
help::pkg.utility.catalog.funs.ccat.s := 'ccat(dir)';
help::pkg.utility.catalog.funs.mscat := [=];
help::pkg.utility.catalog.funs.mscat.a := [=];
help::pkg.utility.catalog.funs.mscat.d := 'Show measurement sets only';
help::pkg.utility.catalog.funs.mscat.a.dir := [=];
help::pkg.utility.catalog.funs.mscat.a.dir.d := 'Directory to be processed';
help::pkg.utility.catalog.funs.mscat.a.dir.def := '\' .\' ';
help::pkg.utility.catalog.funs.mscat.a.dir.a := 'String';
help::pkg.utility.catalog.funs.mscat.s := 'mscat(dir)';
help::pkg.utility.catalog.funs.fcat := [=];
help::pkg.utility.catalog.funs.fcat.a := [=];
help::pkg.utility.catalog.funs.fcat.d := 'Show FITS files only';
help::pkg.utility.catalog.funs.fcat.a.dir := [=];
help::pkg.utility.catalog.funs.fcat.a.dir.d := 'Directory to be processed';
help::pkg.utility.catalog.funs.fcat.a.dir.def := '\' .\' ';
help::pkg.utility.catalog.funs.fcat.a.dir.a := 'String';
help::pkg.utility.catalog.funs.fcat.s := 'fcat(dir)';
help::pkg.utility.catalog.funs.gcat := [=];
help::pkg.utility.catalog.funs.gcat.a := [=];
help::pkg.utility.catalog.funs.gcat.d := 'Show Glish files only';
help::pkg.utility.catalog.funs.gcat.a.dir := [=];
help::pkg.utility.catalog.funs.gcat.a.dir.d := 'Directory to be processed';
help::pkg.utility.catalog.funs.gcat.a.dir.def := '\' .\' ';
help::pkg.utility.catalog.funs.gcat.a.dir.a := 'String';
help::pkg.utility.catalog.funs.gcat.s := 'gcat(dir)';
help::pkg.utility.catalog.funs.tcat := [=];
help::pkg.utility.catalog.funs.tcat.a := [=];
help::pkg.utility.catalog.funs.tcat.d := 'Show all tables only';
help::pkg.utility.catalog.funs.tcat.a.dir := [=];
help::pkg.utility.catalog.funs.tcat.a.dir.d := 'Directory to be processed';
help::pkg.utility.catalog.funs.tcat.a.dir.def := '\' .\' ';
help::pkg.utility.catalog.funs.tcat.a.dir.a := 'String';
help::pkg.utility.catalog.funs.tcat.s := 'tcat(dir)';
help::pkg.utility.catalog.funs.dcat := [=];
help::pkg.utility.catalog.funs.dcat.a := [=];
help::pkg.utility.catalog.funs.dcat.d := 'Show directories only';
help::pkg.utility.catalog.funs.dcat.a.dir := [=];
help::pkg.utility.catalog.funs.dcat.a.dir.d := 'Directory to be processed';
help::pkg.utility.catalog.funs.dcat.a.dir.def := '\' .\' ';
help::pkg.utility.catalog.funs.dcat.a.dir.a := 'String';
help::pkg.utility.catalog.funs.dcat.s := 'dcat(dir)';
help::pkg.utility.catalog.objs.checker := [=];
help::pkg.utility.catalog.objs.checker.m := [=];
help::pkg.utility.catalog.objs.checker.c := [=];
help::pkg.utility.catalog.objs.checker.d := 'Tool to check the AIPS++ environment';
help::pkg.utility.catalog.objs.checker.c.checker := [=];
help::pkg.utility.catalog.objs.checker.c.checker.d := 'Construct an checker';
help::pkg.utility.catalog.objs.checker.c.checker.s := 'checker()';
help::pkg.utility.catalog.objs.checker.m.type := [=];
help::pkg.utility.catalog.objs.checker.m.type.d := 'Return the type of this tool';
help::pkg.utility.catalog.objs.checker.m.type.s := 'type()';
help::pkg.utility.catalog.objs.checker.m.all := [=];
help::pkg.utility.catalog.objs.checker.m.all.d := 'Check all properties';
help::pkg.utility.catalog.objs.checker.m.all.a.verbose := [=];
help::pkg.utility.catalog.objs.checker.m.all.a.verbose.d := 'Be verbose?';
help::pkg.utility.catalog.objs.checker.m.all.a.verbose.def := 'F';
help::pkg.utility.catalog.objs.checker.m.all.a.verbose.a := 'Boolean';
help::pkg.utility.catalog.objs.checker.m.all.s := 'all(verbose)';
help::pkg.utility.catalog.objs.checker.m.display := [=];
help::pkg.utility.catalog.objs.checker.m.display.d := 'Check display properties';
help::pkg.utility.catalog.objs.checker.m.display.a.verbose := [=];
help::pkg.utility.catalog.objs.checker.m.display.a.verbose.d := 'Be verbose?';
help::pkg.utility.catalog.objs.checker.m.display.a.verbose.def := 'T';
help::pkg.utility.catalog.objs.checker.m.display.a.verbose.a := 'Boolean';
help::pkg.utility.catalog.objs.checker.m.display.s := 'display(verbose)';
help::pkg.utility.catalog.objs.checker.m.perl := [=];
help::pkg.utility.catalog.objs.checker.m.perl.d := 'Check to see if perl is available';
help::pkg.utility.catalog.objs.checker.m.perl.a.verbose := [=];
help::pkg.utility.catalog.objs.checker.m.perl.a.verbose.d := 'Be verbose?';
help::pkg.utility.catalog.objs.checker.m.perl.a.verbose.def := 'T';
help::pkg.utility.catalog.objs.checker.m.perl.a.verbose.a := 'Boolean';
help::pkg.utility.catalog.objs.checker.m.perl.s := 'perl(verbose)';
help::pkg.utility.catalog.objs.checker.m.plotter := [=];
help::pkg.utility.catalog.objs.checker.m.plotter.d := 'Check plotter properties';
help::pkg.utility.catalog.objs.checker.m.plotter.a.verbose := [=];
help::pkg.utility.catalog.objs.checker.m.plotter.a.verbose.d := 'Be verbose?';
help::pkg.utility.catalog.objs.checker.m.plotter.a.verbose.def := 'T';
help::pkg.utility.catalog.objs.checker.m.plotter.a.verbose.a := 'Boolean';
help::pkg.utility.catalog.objs.checker.m.plotter.s := 'plotter(verbose)';
help::pkg.utility.catalog.objs.checker.m.gui := [=];
help::pkg.utility.catalog.objs.checker.m.gui.d := 'Check gui properties';
help::pkg.utility.catalog.objs.checker.m.gui.a.verbose := [=];
help::pkg.utility.catalog.objs.checker.m.gui.a.verbose.d := 'Be verbose?';
help::pkg.utility.catalog.objs.checker.m.gui.a.verbose.def := 'T';
help::pkg.utility.catalog.objs.checker.m.gui.a.verbose.a := 'Boolean';
help::pkg.utility.catalog.objs.checker.m.gui.s := 'gui(verbose)';
help::pkg.utility.catalog.objs.checker.m.memory := [=];
help::pkg.utility.catalog.objs.checker.m.memory.d := 'Check memory properties';
help::pkg.utility.catalog.objs.checker.m.memory.a.verbose := [=];
help::pkg.utility.catalog.objs.checker.m.memory.a.verbose.d := 'Be verbose?';
help::pkg.utility.catalog.objs.checker.m.memory.a.verbose.def := 'T';
help::pkg.utility.catalog.objs.checker.m.memory.a.verbose.a := 'Boolean';
help::pkg.utility.catalog.objs.checker.m.memory.s := 'memory(verbose)';

help::pkg.utility.fitting := [=];
help::pkg.utility.fitting.objs := [=];
help::pkg.utility.fitting.funs := [=];
help::pkg.utility.fitting.d := 'Fitting handling';
help::pkg.utility.fitting.objs.functionfitter := [=];
help::pkg.utility.fitting.objs.functionfitter.m := [=];
help::pkg.utility.fitting.objs.functionfitter.c := [=];
help::pkg.utility.fitting.objs.functionfitter.d := 'Tool to do simple fitting of numeric data';
help::pkg.utility.fitting.objs.functionfitter.c.functionfitter := [=];
help::pkg.utility.fitting.objs.functionfitter.c.functionfitter.d := 'Construct a functionfitter tool';
help::pkg.utility.fitting.objs.functionfitter.c.functionfitter.s := 'functionfitter()';
help::pkg.utility.fitting.objs.functionfitter.m.done := [=];
help::pkg.utility.fitting.objs.functionfitter.m.done.d := 'Destroy this tool';
help::pkg.utility.fitting.objs.functionfitter.m.done.s := 'done()';
help::pkg.utility.fitting.objs.functionfitter.m.filter := [=];
help::pkg.utility.fitting.objs.functionfitter.m.filter.d := 'Filter a data array';
help::pkg.utility.fitting.objs.functionfitter.m.filter.a.method := [=];
help::pkg.utility.fitting.objs.functionfitter.m.filter.a.method.d := 'The method type';
help::pkg.utility.fitting.objs.functionfitter.m.filter.a.method.def := '\' median\' ';
help::pkg.utility.fitting.objs.functionfitter.m.filter.a.method.a := 'String (case insensitive) from \' median\'  or \' mean\' ';
help::pkg.utility.fitting.objs.functionfitter.m.filter.a.width := [=];
help::pkg.utility.fitting.objs.functionfitter.m.filter.a.width.d := 'Width of running median filter';
help::pkg.utility.fitting.objs.functionfitter.m.filter.a.width.def := '5 points';
help::pkg.utility.fitting.objs.functionfitter.m.filter.a.width.a := 'Positive integer';
help::pkg.utility.fitting.objs.functionfitter.m.filter.a.progress := [=];
help::pkg.utility.fitting.objs.functionfitter.m.filter.a.progress.d := 'See progress reports on median filter every progress points';
help::pkg.utility.fitting.objs.functionfitter.m.filter.a.progress.def := 'No reports';
help::pkg.utility.fitting.objs.functionfitter.m.filter.a.progress.a := 'Positive integer';
help::pkg.utility.fitting.objs.functionfitter.m.filter.s := 'filter(method, width, progress)';
help::pkg.utility.fitting.objs.functionfitter.m.fit := [=];
help::pkg.utility.fitting.objs.functionfitter.m.fit.d := 'Fit the data';
help::pkg.utility.fitting.objs.functionfitter.m.fit.a.linear := [=];
help::pkg.utility.fitting.objs.functionfitter.m.fit.a.linear.d := 'Linear or non-linear fit ?';
help::pkg.utility.fitting.objs.functionfitter.m.fit.a.linear.def := 'T';
help::pkg.utility.fitting.objs.functionfitter.m.fit.a.linear.a := 'T or F';
help::pkg.utility.fitting.objs.functionfitter.m.fit.a.fixed := [=];
help::pkg.utility.fitting.objs.functionfitter.m.fit.a.fixed.d := 'Fixed parameters mask';
help::pkg.utility.fitting.objs.functionfitter.m.fit.a.fixed.def := 'All parameters fitted';
help::pkg.utility.fitting.objs.functionfitter.m.fit.a.fixed.a := 'Boolean vector';
help::pkg.utility.fitting.objs.functionfitter.m.fit.s := 'fit(linear, fixed)';
help::pkg.utility.fitting.objs.functionfitter.m.getdata := [=];
help::pkg.utility.fitting.objs.functionfitter.m.getdata.d := 'Recover the internal data arrays';
help::pkg.utility.fitting.objs.functionfitter.m.getdata.s := 'getdata()';
help::pkg.utility.fitting.objs.functionfitter.m.getchisq := [=];
help::pkg.utility.fitting.objs.functionfitter.m.getchisq.d := 'Recover the chi squared of the fit';
help::pkg.utility.fitting.objs.functionfitter.m.getchisq.s := 'getchisq()';
help::pkg.utility.fitting.objs.functionfitter.m.getfunctionstate := [=];
help::pkg.utility.fitting.objs.functionfitter.m.getfunctionstate.d := 'Recover the state of the function';
help::pkg.utility.fitting.objs.functionfitter.m.getfunctionstate.s := 'getfunctionstate()';
help::pkg.utility.fitting.objs.functionfitter.m.geterror := [=];
help::pkg.utility.fitting.objs.functionfitter.m.geterror.d := 'Recover the error of the fitted parameters';
help::pkg.utility.fitting.objs.functionfitter.m.geterror.s := 'geterror()';
help::pkg.utility.fitting.objs.functionfitter.m.getmodel := [=];
help::pkg.utility.fitting.objs.functionfitter.m.getmodel.d := 'Evaluate the model';
help::pkg.utility.fitting.objs.functionfitter.m.getmodel.a.fit := [=];
help::pkg.utility.fitting.objs.functionfitter.m.getmodel.a.fit.d := 'Generate the model from the fit or the functional';
help::pkg.utility.fitting.objs.functionfitter.m.getmodel.a.fit.def := 'T';
help::pkg.utility.fitting.objs.functionfitter.m.getmodel.a.fit.a := 'T or F';
help::pkg.utility.fitting.objs.functionfitter.m.getmodel.s := 'getmodel(fit)';
help::pkg.utility.fitting.objs.functionfitter.m.getresidual := [=];
help::pkg.utility.fitting.objs.functionfitter.m.getresidual.d := 'Evaluate the residual';
help::pkg.utility.fitting.objs.functionfitter.m.getresidual.s := 'getresidual()';
help::pkg.utility.fitting.objs.functionfitter.m.getsolution := [=];
help::pkg.utility.fitting.objs.functionfitter.m.getsolution.d := 'Recover the solution vector';
help::pkg.utility.fitting.objs.functionfitter.m.getsolution.s := 'getsolution()';
help::pkg.utility.fitting.objs.functionfitter.m.medianclip := [=];
help::pkg.utility.fitting.objs.functionfitter.m.medianclip.d := 'Median clip a data array';
help::pkg.utility.fitting.objs.functionfitter.m.medianclip.a.width := [=];
help::pkg.utility.fitting.objs.functionfitter.m.medianclip.a.width.d := 'Width of running median filter';
help::pkg.utility.fitting.objs.functionfitter.m.medianclip.a.width.def := '5 points';
help::pkg.utility.fitting.objs.functionfitter.m.medianclip.a.width.a := 'Positive integer';
help::pkg.utility.fitting.objs.functionfitter.m.medianclip.a.clip := [=];
help::pkg.utility.fitting.objs.functionfitter.m.medianclip.a.clip.d := 'The clipping amount';
help::pkg.utility.fitting.objs.functionfitter.m.medianclip.a.clip.def := '5';
help::pkg.utility.fitting.objs.functionfitter.m.medianclip.a.clip.a := 'Positive numeric value';
help::pkg.utility.fitting.objs.functionfitter.m.medianclip.a.progress := [=];
help::pkg.utility.fitting.objs.functionfitter.m.medianclip.a.progress.d := 'See reports on median filter computation every progress points';
help::pkg.utility.fitting.objs.functionfitter.m.medianclip.a.progress.def := 'No reports';
help::pkg.utility.fitting.objs.functionfitter.m.medianclip.a.progress.a := 'Positive integer';
help::pkg.utility.fitting.objs.functionfitter.m.medianclip.s := 'medianclip(width, clip, progress)';
help::pkg.utility.fitting.objs.functionfitter.m.plot := [=];
help::pkg.utility.fitting.objs.functionfitter.m.plot.d := 'Plot data and fit';
help::pkg.utility.fitting.objs.functionfitter.m.plot.a.data := [=];
help::pkg.utility.fitting.objs.functionfitter.m.plot.a.data.d := 'Plot the data and optional errors';
help::pkg.utility.fitting.objs.functionfitter.m.plot.a.data.def := 'T';
help::pkg.utility.fitting.objs.functionfitter.m.plot.a.data.a := 'T or F';
help::pkg.utility.fitting.objs.functionfitter.m.plot.a.model := [=];
help::pkg.utility.fitting.objs.functionfitter.m.plot.a.model.d := 'Plot the model';
help::pkg.utility.fitting.objs.functionfitter.m.plot.a.model.def := 'T';
help::pkg.utility.fitting.objs.functionfitter.m.plot.a.model.a := 'T or F';
help::pkg.utility.fitting.objs.functionfitter.m.plot.a.fit := [=];
help::pkg.utility.fitting.objs.functionfitter.m.plot.a.fit.d := 'Plot the fit';
help::pkg.utility.fitting.objs.functionfitter.m.plot.a.fit.def := 'T';
help::pkg.utility.fitting.objs.functionfitter.m.plot.a.fit.a := 'T or F';
help::pkg.utility.fitting.objs.functionfitter.m.plot.a.resid := [=];
help::pkg.utility.fitting.objs.functionfitter.m.plot.a.resid.d := 'Plot the residual of the data and the fit';
help::pkg.utility.fitting.objs.functionfitter.m.plot.a.resid.def := 'F';
help::pkg.utility.fitting.objs.functionfitter.m.plot.a.resid.a := 'T or F';
help::pkg.utility.fitting.objs.functionfitter.m.plot.s := 'plot(data, model, fit, resid)';
help::pkg.utility.fitting.objs.functionfitter.m.setcoordsys := [=];
help::pkg.utility.fitting.objs.functionfitter.m.setcoordsys.d := 'Set a new Coordinate System';
help::pkg.utility.fitting.objs.functionfitter.m.setcoordsys.a.csys := [=];
help::pkg.utility.fitting.objs.functionfitter.m.setcoordsys.a.csys.d := 'The Coordinate System';
help::pkg.utility.fitting.objs.functionfitter.m.setcoordsys.a.csys.def := '';
help::pkg.utility.fitting.objs.functionfitter.m.setcoordsys.a.csys.a := 'Coordsys tool';
help::pkg.utility.fitting.objs.functionfitter.m.setcoordsys.a.axis := [=];
help::pkg.utility.fitting.objs.functionfitter.m.setcoordsys.a.axis.d := 'The axis of the Coordinate System that we are plotting';
help::pkg.utility.fitting.objs.functionfitter.m.setcoordsys.a.axis.def := '1';
help::pkg.utility.fitting.objs.functionfitter.m.setcoordsys.a.axis.a := 'Integer';
help::pkg.utility.fitting.objs.functionfitter.m.setcoordsys.s := 'setcoordsys(csys, axis)';
help::pkg.utility.fitting.objs.functionfitter.m.setdata := [=];
help::pkg.utility.fitting.objs.functionfitter.m.setdata.d := 'Set the data to fit';
help::pkg.utility.fitting.objs.functionfitter.m.setdata.a.x := [=];
help::pkg.utility.fitting.objs.functionfitter.m.setdata.a.x.d := 'The coordinate values';
help::pkg.utility.fitting.objs.functionfitter.m.setdata.a.x.def := '';
help::pkg.utility.fitting.objs.functionfitter.m.setdata.a.x.a := 'Numeric vector';
help::pkg.utility.fitting.objs.functionfitter.m.setdata.a.y := [=];
help::pkg.utility.fitting.objs.functionfitter.m.setdata.a.y.d := 'The ordinate values';
help::pkg.utility.fitting.objs.functionfitter.m.setdata.a.y.def := '';
help::pkg.utility.fitting.objs.functionfitter.m.setdata.a.y.a := 'Numeric vector';
help::pkg.utility.fitting.objs.functionfitter.m.setdata.a.yerr := [=];
help::pkg.utility.fitting.objs.functionfitter.m.setdata.a.yerr.d := 'The errors in the ordinate values';
help::pkg.utility.fitting.objs.functionfitter.m.setdata.a.yerr.def := 'None used';
help::pkg.utility.fitting.objs.functionfitter.m.setdata.a.yerr.a := 'Numeric vector';
help::pkg.utility.fitting.objs.functionfitter.m.setdata.a.mask := [=];
help::pkg.utility.fitting.objs.functionfitter.m.setdata.a.mask.d := 'The mask';
help::pkg.utility.fitting.objs.functionfitter.m.setdata.a.mask.def := 'All good';
help::pkg.utility.fitting.objs.functionfitter.m.setdata.a.mask.a := 'Boolean vector';
help::pkg.utility.fitting.objs.functionfitter.m.setdata.a.xunit := [=];
help::pkg.utility.fitting.objs.functionfitter.m.setdata.a.xunit.d := 'The unit of the x-data';
help::pkg.utility.fitting.objs.functionfitter.m.setdata.a.xunit.def := '\' m\' ';
help::pkg.utility.fitting.objs.functionfitter.m.setdata.a.xunit.a := 'Unit string';
help::pkg.utility.fitting.objs.functionfitter.m.setdata.s := 'setdata(x, y, yerr, mask, xunit)';
help::pkg.utility.fitting.objs.functionfitter.m.setdatafromtable := [=];
help::pkg.utility.fitting.objs.functionfitter.m.setdatafromtable.d := 'Set the data to fit from a table';
help::pkg.utility.fitting.objs.functionfitter.m.setdatafromtable.a.name := [=];
help::pkg.utility.fitting.objs.functionfitter.m.setdatafromtable.a.name.d := 'The table (AIPS++\ or ascii) name';
help::pkg.utility.fitting.objs.functionfitter.m.setdatafromtable.a.name.def := '';
help::pkg.utility.fitting.objs.functionfitter.m.setdatafromtable.a.name.a := 'String';
help::pkg.utility.fitting.objs.functionfitter.m.setdatafromtable.a.cold := [=];
help::pkg.utility.fitting.objs.functionfitter.m.setdatafromtable.a.cold.d := 'The columns holding the coordinate and ordinate values';
help::pkg.utility.fitting.objs.functionfitter.m.setdatafromtable.a.cold.def := '[1,2]';
help::pkg.utility.fitting.objs.functionfitter.m.setdatafromtable.a.cold.a := 'Integer vector of length 2';
help::pkg.utility.fitting.objs.functionfitter.m.setdatafromtable.a.cole := [=];
help::pkg.utility.fitting.objs.functionfitter.m.setdatafromtable.a.cole.d := 'The columns holding the ordinate error data';
help::pkg.utility.fitting.objs.functionfitter.m.setdatafromtable.a.cole.def := 'None';
help::pkg.utility.fitting.objs.functionfitter.m.setdatafromtable.a.cole.a := 'Integer';
help::pkg.utility.fitting.objs.functionfitter.m.setdatafromtable.a.colm := [=];
help::pkg.utility.fitting.objs.functionfitter.m.setdatafromtable.a.colm.d := 'The column holding the mask data';
help::pkg.utility.fitting.objs.functionfitter.m.setdatafromtable.a.colm.def := 'None';
help::pkg.utility.fitting.objs.functionfitter.m.setdatafromtable.a.colm.a := 'Integer';
help::pkg.utility.fitting.objs.functionfitter.m.setdatafromtable.a.xunit := [=];
help::pkg.utility.fitting.objs.functionfitter.m.setdatafromtable.a.xunit.d := 'The unit of the x-data';
help::pkg.utility.fitting.objs.functionfitter.m.setdatafromtable.a.xunit.def := '\' m\' ';
help::pkg.utility.fitting.objs.functionfitter.m.setdatafromtable.a.xunit.a := 'Unit string';
help::pkg.utility.fitting.objs.functionfitter.m.setdatafromtable.a.autoheader := [=];
help::pkg.utility.fitting.objs.functionfitter.m.setdatafromtable.a.autoheader.d := 'Auto detect data type from ascii table';
help::pkg.utility.fitting.objs.functionfitter.m.setdatafromtable.a.autoheader.def := 'T';
help::pkg.utility.fitting.objs.functionfitter.m.setdatafromtable.a.autoheader.a := 'T or F';
help::pkg.utility.fitting.objs.functionfitter.m.setdatafromtable.s := 'setdatafromtable(name, cold, cole, colm, xunit, autoheader)';
help::pkg.utility.fitting.objs.functionfitter.m.setfunction := [=];
help::pkg.utility.fitting.objs.functionfitter.m.setfunction.d := 'Set the function you wish to fit';
help::pkg.utility.fitting.objs.functionfitter.m.setfunction.a.fn := [=];
help::pkg.utility.fitting.objs.functionfitter.m.setfunction.a.fn.d := 'The function to fit';
help::pkg.utility.fitting.objs.functionfitter.m.setfunction.a.fn.def := '';
help::pkg.utility.fitting.objs.functionfitter.m.setfunction.a.fn.a := 'String expression or functional';
help::pkg.utility.fitting.objs.functionfitter.m.setfunction.s := 'setfunction(fn)';
help::pkg.utility.fitting.objs.functionfitter.m.setparameters := [=];
help::pkg.utility.fitting.objs.functionfitter.m.setparameters.d := 'Set the parameters for your function';
help::pkg.utility.fitting.objs.functionfitter.m.setparameters.a.pars := [=];
help::pkg.utility.fitting.objs.functionfitter.m.setparameters.a.pars.d := 'The parameters to set';
help::pkg.utility.fitting.objs.functionfitter.m.setparameters.a.pars.def := '';
help::pkg.utility.fitting.objs.functionfitter.m.setparameters.a.pars.a := 'Numeric vector';
help::pkg.utility.fitting.objs.functionfitter.m.setparameters.s := 'setparameters(pars)';
help::pkg.utility.fitting.objs.functionfitter.m.type := [=];
help::pkg.utility.fitting.objs.functionfitter.m.type.d := 'Return tool type';
help::pkg.utility.fitting.objs.functionfitter.m.type.s := 'type()';
help::pkg.utility.fitting.objs.fitter := [=];
help::pkg.utility.fitting.objs.fitter.m := [=];
help::pkg.utility.fitting.objs.fitter.c := [=];
help::pkg.utility.fitting.objs.fitter.d := 'fitting tool';
help::pkg.utility.fitting.objs.fitter.c.fitter := [=];
help::pkg.utility.fitting.objs.fitter.c.fitter.d := 'Construct fitting tool';
help::pkg.utility.fitting.objs.fitter.c.fitter.a.n := [=];
help::pkg.utility.fitting.objs.fitter.c.fitter.a.n.d := 'number of unknowns';
help::pkg.utility.fitting.objs.fitter.c.fitter.a.n.def := '0';
help::pkg.utility.fitting.objs.fitter.c.fitter.a.n.a := 'integer';
help::pkg.utility.fitting.objs.fitter.c.fitter.a.type := [=];
help::pkg.utility.fitting.objs.fitter.c.fitter.a.type.d := 'type of solution';
help::pkg.utility.fitting.objs.fitter.c.fitter.a.type.def := '\' real\' ';
help::pkg.utility.fitting.objs.fitter.c.fitter.a.type.a := 'coded value as string. Allowed: real, complex, separable, asreal, conjugate';
help::pkg.utility.fitting.objs.fitter.c.fitter.a.colfac := [=];
help::pkg.utility.fitting.objs.fitter.c.fitter.a.colfac.d := 'collinearity factor';
help::pkg.utility.fitting.objs.fitter.c.fitter.a.colfac.def := '1e-8';
help::pkg.utility.fitting.objs.fitter.c.fitter.a.colfac.a := 'positive float';
help::pkg.utility.fitting.objs.fitter.c.fitter.a.lmfac := [=];
help::pkg.utility.fitting.objs.fitter.c.fitter.a.lmfac.d := 'Levenberg-Marquardt factor';
help::pkg.utility.fitting.objs.fitter.c.fitter.a.lmfac.def := '1e-3';
help::pkg.utility.fitting.objs.fitter.c.fitter.a.lmfac.a := 'positive float';
help::pkg.utility.fitting.objs.fitter.c.fitter.a.host := [=];
help::pkg.utility.fitting.objs.fitter.c.fitter.a.host.d := 'name of host to run on';
help::pkg.utility.fitting.objs.fitter.c.fitter.a.host.def := '\' \' ';
help::pkg.utility.fitting.objs.fitter.c.fitter.a.host.a := 'string';
help::pkg.utility.fitting.objs.fitter.c.fitter.a.forcenewserver := [=];
help::pkg.utility.fitting.objs.fitter.c.fitter.a.forcenewserver.d := 'is a new process needed';
help::pkg.utility.fitting.objs.fitter.c.fitter.a.forcenewserver.def := 'F';
help::pkg.utility.fitting.objs.fitter.c.fitter.a.forcenewserver.a := 'bool';
help::pkg.utility.fitting.objs.fitter.c.fitter.s := 'fitter(n, type, colfac, lmfac, host, forcenewserver)';
help::pkg.utility.fitting.objs.fitter.m.id := [=];
help::pkg.utility.fitting.objs.fitter.m.id.d := 'identification of tool';
help::pkg.utility.fitting.objs.fitter.m.id.s := 'id()';
help::pkg.utility.fitting.objs.fitter.m.type := [=];
help::pkg.utility.fitting.objs.fitter.m.type.d := 'Obtain the type of the tool';
help::pkg.utility.fitting.objs.fitter.m.type.s := 'type()';
help::pkg.utility.fitting.objs.fitter.m.fitter := [=];
help::pkg.utility.fitting.objs.fitter.m.fitter.d := 'Create a sub-tool';
help::pkg.utility.fitting.objs.fitter.m.fitter.a.n := [=];
help::pkg.utility.fitting.objs.fitter.m.fitter.a.n.d := 'number of unknowns';
help::pkg.utility.fitting.objs.fitter.m.fitter.a.n.def := '0';
help::pkg.utility.fitting.objs.fitter.m.fitter.a.n.a := 'integer';
help::pkg.utility.fitting.objs.fitter.m.fitter.a.type := [=];
help::pkg.utility.fitting.objs.fitter.m.fitter.a.type.d := 'type of solution';
help::pkg.utility.fitting.objs.fitter.m.fitter.a.type.def := '\' real\' ';
help::pkg.utility.fitting.objs.fitter.m.fitter.a.type.a := 'coded value as string. Allowed: real, complex, separable, asreal, conjugate, with case-insensitive minimum-match';
help::pkg.utility.fitting.objs.fitter.m.fitter.a.colfac := [=];
help::pkg.utility.fitting.objs.fitter.m.fitter.a.colfac.d := 'collinearity factor';
help::pkg.utility.fitting.objs.fitter.m.fitter.a.colfac.def := '1e-8';
help::pkg.utility.fitting.objs.fitter.m.fitter.a.colfac.a := 'positive float';
help::pkg.utility.fitting.objs.fitter.m.fitter.a.lmfac := [=];
help::pkg.utility.fitting.objs.fitter.m.fitter.a.lmfac.d := 'Levenberg-Marquardt factor';
help::pkg.utility.fitting.objs.fitter.m.fitter.a.lmfac.def := '1e-3';
help::pkg.utility.fitting.objs.fitter.m.fitter.a.lmfac.a := 'positive float';
help::pkg.utility.fitting.objs.fitter.m.fitter.s := 'fitter(n, type, colfac, lmfac)';
help::pkg.utility.fitting.objs.fitter.m.done := [=];
help::pkg.utility.fitting.objs.fitter.m.done.d := 'Remove the tool s resources';
help::pkg.utility.fitting.objs.fitter.m.done.a.id := [=];
help::pkg.utility.fitting.objs.fitter.m.done.a.id.d := 'the id of a sub-tool';
help::pkg.utility.fitting.objs.fitter.m.done.a.id.def := 'unset';
help::pkg.utility.fitting.objs.fitter.m.done.a.id.a := 'fitter id';
help::pkg.utility.fitting.objs.fitter.m.done.a.kill := [=];
help::pkg.utility.fitting.objs.fitter.m.done.a.kill.d := 'force kill of the default tool';
help::pkg.utility.fitting.objs.fitter.m.done.a.kill.def := 'F';
help::pkg.utility.fitting.objs.fitter.m.done.a.kill.a := 'bool';
help::pkg.utility.fitting.objs.fitter.m.done.s := 'done(id, kill)';
help::pkg.utility.fitting.objs.fitter.m.reset := [=];
help::pkg.utility.fitting.objs.fitter.m.reset.d := 'Reset the tool to its initialized state';
help::pkg.utility.fitting.objs.fitter.m.reset.a.id := [=];
help::pkg.utility.fitting.objs.fitter.m.reset.a.id.d := 'the id of a sub-tool';
help::pkg.utility.fitting.objs.fitter.m.reset.a.id.def := 'unset';
help::pkg.utility.fitting.objs.fitter.m.reset.a.id.a := 'fitter id';
help::pkg.utility.fitting.objs.fitter.m.reset.s := 'reset(id)';
help::pkg.utility.fitting.objs.fitter.m.init := [=];
help::pkg.utility.fitting.objs.fitter.m.init.d := 'Initialize a fitting tool for use or re-use';
help::pkg.utility.fitting.objs.fitter.m.init.a.n := [=];
help::pkg.utility.fitting.objs.fitter.m.init.a.n.d := 'number of unknowns';
help::pkg.utility.fitting.objs.fitter.m.init.a.n.def := 'unset';
help::pkg.utility.fitting.objs.fitter.m.init.a.n.a := 'integer';
help::pkg.utility.fitting.objs.fitter.m.init.a.type := [=];
help::pkg.utility.fitting.objs.fitter.m.init.a.type.d := 'type of solution';
help::pkg.utility.fitting.objs.fitter.m.init.a.type.def := 'unset';
help::pkg.utility.fitting.objs.fitter.m.init.a.type.a := 'coded value as string. Allowed: real, complex, separable, asreal, conjugate, with case-insensitive minimum-match';
help::pkg.utility.fitting.objs.fitter.m.init.a.colfac := [=];
help::pkg.utility.fitting.objs.fitter.m.init.a.colfac.d := 'collinearity factor';
help::pkg.utility.fitting.objs.fitter.m.init.a.colfac.def := 'unset';
help::pkg.utility.fitting.objs.fitter.m.init.a.colfac.a := 'positive float';
help::pkg.utility.fitting.objs.fitter.m.init.a.lmfac := [=];
help::pkg.utility.fitting.objs.fitter.m.init.a.lmfac.d := 'Levenberg-Marquardt factor';
help::pkg.utility.fitting.objs.fitter.m.init.a.lmfac.def := 'unset';
help::pkg.utility.fitting.objs.fitter.m.init.a.lmfac.a := 'positive float';
help::pkg.utility.fitting.objs.fitter.m.init.a.id := [=];
help::pkg.utility.fitting.objs.fitter.m.init.a.id.d := 'the id of a sub-tool';
help::pkg.utility.fitting.objs.fitter.m.init.a.id.def := '0';
help::pkg.utility.fitting.objs.fitter.m.init.a.id.a := 'fitter id';
help::pkg.utility.fitting.objs.fitter.m.init.s := 'init(n, type, colfac, lmfac, id)';
help::pkg.utility.fitting.objs.fitter.m.set := [=];
help::pkg.utility.fitting.objs.fitter.m.set.d := '(Re-)initialize selected fitting tool properties';
help::pkg.utility.fitting.objs.fitter.m.set.a.n := [=];
help::pkg.utility.fitting.objs.fitter.m.set.a.n.d := 'number of unknowns';
help::pkg.utility.fitting.objs.fitter.m.set.a.n.def := 'unset';
help::pkg.utility.fitting.objs.fitter.m.set.a.n.a := 'integer';
help::pkg.utility.fitting.objs.fitter.m.set.a.type := [=];
help::pkg.utility.fitting.objs.fitter.m.set.a.type.d := 'type of solution';
help::pkg.utility.fitting.objs.fitter.m.set.a.type.def := 'unset';
help::pkg.utility.fitting.objs.fitter.m.set.a.type.a := 'coded value as string. Allowed: real, complex, separable, asreal, conjugate, with case-insensitive minimum-match';
help::pkg.utility.fitting.objs.fitter.m.set.a.colfac := [=];
help::pkg.utility.fitting.objs.fitter.m.set.a.colfac.d := 'collinearity factor';
help::pkg.utility.fitting.objs.fitter.m.set.a.colfac.def := 'unset';
help::pkg.utility.fitting.objs.fitter.m.set.a.colfac.a := 'positive float';
help::pkg.utility.fitting.objs.fitter.m.set.a.lmfac := [=];
help::pkg.utility.fitting.objs.fitter.m.set.a.lmfac.d := 'Levenberg-Marquardt factor';
help::pkg.utility.fitting.objs.fitter.m.set.a.lmfac.def := 'unset';
help::pkg.utility.fitting.objs.fitter.m.set.a.lmfac.a := 'positive float';
help::pkg.utility.fitting.objs.fitter.m.set.a.id := [=];
help::pkg.utility.fitting.objs.fitter.m.set.a.id.d := 'the id of a sub-tool';
help::pkg.utility.fitting.objs.fitter.m.set.a.id.def := '0';
help::pkg.utility.fitting.objs.fitter.m.set.a.id.a := 'fitter id';
help::pkg.utility.fitting.objs.fitter.m.set.s := 'set(n, type, colfac, lmfac, id)';
help::pkg.utility.fitting.objs.fitter.m.getstate := [=];
help::pkg.utility.fitting.objs.fitter.m.getstate.d := 'Obtain the state of the fitter';
help::pkg.utility.fitting.objs.fitter.m.getstate.a.id := [=];
help::pkg.utility.fitting.objs.fitter.m.getstate.a.id.d := 'the id of a sub-tool';
help::pkg.utility.fitting.objs.fitter.m.getstate.a.id.def := '0';
help::pkg.utility.fitting.objs.fitter.m.getstate.a.id.a := 'fitter id';
help::pkg.utility.fitting.objs.fitter.m.getstate.s := 'getstate(id)';
help::pkg.utility.fitting.objs.fitter.m.linear := [=];
help::pkg.utility.fitting.objs.fitter.m.linear.d := 'Solve a linear fitting problem';
help::pkg.utility.fitting.objs.fitter.m.linear.a.fnct := [=];
help::pkg.utility.fitting.objs.fitter.m.linear.a.fnct.d := 'functional to be fitted';
help::pkg.utility.fitting.objs.fitter.m.linear.a.fnct.def := 'unset';
help::pkg.utility.fitting.objs.fitter.m.linear.a.fnct.a := 'a functional';
help::pkg.utility.fitting.objs.fitter.m.linear.a.x := [=];
help::pkg.utility.fitting.objs.fitter.m.linear.a.x.d := 'the x coordinate values';
help::pkg.utility.fitting.objs.fitter.m.linear.a.x.def := '';
help::pkg.utility.fitting.objs.fitter.m.linear.a.x.a := 'vector';
help::pkg.utility.fitting.objs.fitter.m.linear.a.y := [=];
help::pkg.utility.fitting.objs.fitter.m.linear.a.y.d := 'the ordinate values';
help::pkg.utility.fitting.objs.fitter.m.linear.a.y.def := '';
help::pkg.utility.fitting.objs.fitter.m.linear.a.y.a := 'vector';
help::pkg.utility.fitting.objs.fitter.m.linear.a.sd := [=];
help::pkg.utility.fitting.objs.fitter.m.linear.a.sd.d := 'standard deviation of equations';
help::pkg.utility.fitting.objs.fitter.m.linear.a.sd.def := 'unset';
help::pkg.utility.fitting.objs.fitter.m.linear.a.sd.a := 'one or more values used cyclically';
help::pkg.utility.fitting.objs.fitter.m.linear.a.wt := [=];
help::pkg.utility.fitting.objs.fitter.m.linear.a.wt.d := 'an optional alternate for sd';
help::pkg.utility.fitting.objs.fitter.m.linear.a.wt.def := '1';
help::pkg.utility.fitting.objs.fitter.m.linear.a.wt.a := 'one or more values used cyclically';
help::pkg.utility.fitting.objs.fitter.m.linear.a.id := [=];
help::pkg.utility.fitting.objs.fitter.m.linear.a.id.d := 'the id of a sub-tool';
help::pkg.utility.fitting.objs.fitter.m.linear.a.id.def := '0';
help::pkg.utility.fitting.objs.fitter.m.linear.a.id.a := 'fitter id';
help::pkg.utility.fitting.objs.fitter.m.linear.s := 'linear(fnct, x, y, sd, wt, id)';
help::pkg.utility.fitting.objs.fitter.m.functional := [=];
help::pkg.utility.fitting.objs.fitter.m.functional.d := 'Solve a general fitting problem';
help::pkg.utility.fitting.objs.fitter.m.functional.a.fnct := [=];
help::pkg.utility.fitting.objs.fitter.m.functional.a.fnct.d := 'functional to be fitted';
help::pkg.utility.fitting.objs.fitter.m.functional.a.fnct.def := 'unset';
help::pkg.utility.fitting.objs.fitter.m.functional.a.fnct.a := 'a functional';
help::pkg.utility.fitting.objs.fitter.m.functional.a.x := [=];
help::pkg.utility.fitting.objs.fitter.m.functional.a.x.d := 'the x coordinate values';
help::pkg.utility.fitting.objs.fitter.m.functional.a.x.def := '';
help::pkg.utility.fitting.objs.fitter.m.functional.a.x.a := 'vector';
help::pkg.utility.fitting.objs.fitter.m.functional.a.y := [=];
help::pkg.utility.fitting.objs.fitter.m.functional.a.y.d := 'the ordinate values';
help::pkg.utility.fitting.objs.fitter.m.functional.a.y.def := '';
help::pkg.utility.fitting.objs.fitter.m.functional.a.y.a := 'vector';
help::pkg.utility.fitting.objs.fitter.m.functional.a.sd := [=];
help::pkg.utility.fitting.objs.fitter.m.functional.a.sd.d := 'standard deviation of equations';
help::pkg.utility.fitting.objs.fitter.m.functional.a.sd.def := 'unset';
help::pkg.utility.fitting.objs.fitter.m.functional.a.sd.a := 'one or more values used cyclically';
help::pkg.utility.fitting.objs.fitter.m.functional.a.wt := [=];
help::pkg.utility.fitting.objs.fitter.m.functional.a.wt.d := 'an optional alternate for sd';
help::pkg.utility.fitting.objs.fitter.m.functional.a.wt.def := '1';
help::pkg.utility.fitting.objs.fitter.m.functional.a.wt.a := 'one or more values used cyclically';
help::pkg.utility.fitting.objs.fitter.m.functional.a.mxiter := [=];
help::pkg.utility.fitting.objs.fitter.m.functional.a.mxiter.d := 'the maximum number of iterations';
help::pkg.utility.fitting.objs.fitter.m.functional.a.mxiter.def := '50';
help::pkg.utility.fitting.objs.fitter.m.functional.a.mxiter.a := 'integer';
help::pkg.utility.fitting.objs.fitter.m.functional.a.id := [=];
help::pkg.utility.fitting.objs.fitter.m.functional.a.id.d := 'the id of a sub-tool';
help::pkg.utility.fitting.objs.fitter.m.functional.a.id.def := '0';
help::pkg.utility.fitting.objs.fitter.m.functional.a.id.a := 'fitter id';
help::pkg.utility.fitting.objs.fitter.m.functional.s := 'functional(fnct, x, y, sd, wt, mxiter, id)';
help::pkg.utility.fitting.objs.fitter.m.fitavg := [=];
help::pkg.utility.fitting.objs.fitter.m.fitavg.d := 'Get an average';
help::pkg.utility.fitting.objs.fitter.m.fitavg.a.y := [=];
help::pkg.utility.fitting.objs.fitter.m.fitavg.a.y.d := 'observed values of the condition equations';
help::pkg.utility.fitting.objs.fitter.m.fitavg.a.y.def := '';
help::pkg.utility.fitting.objs.fitter.m.fitavg.a.y.a := '$N \times m$ values';
help::pkg.utility.fitting.objs.fitter.m.fitavg.a.sd := [=];
help::pkg.utility.fitting.objs.fitter.m.fitavg.a.sd.d := 'standard deviation of equations';
help::pkg.utility.fitting.objs.fitter.m.fitavg.a.sd.def := 'unset';
help::pkg.utility.fitting.objs.fitter.m.fitavg.a.sd.a := 'one or more values used cyclically';
help::pkg.utility.fitting.objs.fitter.m.fitavg.a.wt := [=];
help::pkg.utility.fitting.objs.fitter.m.fitavg.a.wt.d := 'an optional alternate for sd';
help::pkg.utility.fitting.objs.fitter.m.fitavg.a.wt.def := '1';
help::pkg.utility.fitting.objs.fitter.m.fitavg.a.wt.a := 'one or more values used cyclically';
help::pkg.utility.fitting.objs.fitter.m.fitavg.a.id := [=];
help::pkg.utility.fitting.objs.fitter.m.fitavg.a.id.d := 'the id of a sub-tool';
help::pkg.utility.fitting.objs.fitter.m.fitavg.a.id.def := '0';
help::pkg.utility.fitting.objs.fitter.m.fitavg.a.id.a := 'fitter id';
help::pkg.utility.fitting.objs.fitter.m.fitavg.s := 'fitavg(y, sd, wt, id)';
help::pkg.utility.fitting.objs.fitter.m.fitpoly := [=];
help::pkg.utility.fitting.objs.fitter.m.fitpoly.d := 'Solve polynomial equations';
help::pkg.utility.fitting.objs.fitter.m.fitpoly.a.n := [=];
help::pkg.utility.fitting.objs.fitter.m.fitpoly.a.n.d := 'the order of the polynomial to solve for';
help::pkg.utility.fitting.objs.fitter.m.fitpoly.a.n.def := '';
help::pkg.utility.fitting.objs.fitter.m.fitpoly.a.n.a := 'integer';
help::pkg.utility.fitting.objs.fitter.m.fitpoly.a.x := [=];
help::pkg.utility.fitting.objs.fitter.m.fitpoly.a.x.d := 'the parameter for the polynomial calculations';
help::pkg.utility.fitting.objs.fitter.m.fitpoly.a.x.def := '';
help::pkg.utility.fitting.objs.fitter.m.fitpoly.a.x.a := 'one or more real or complex values';
help::pkg.utility.fitting.objs.fitter.m.fitpoly.a.y := [=];
help::pkg.utility.fitting.objs.fitter.m.fitpoly.a.y.d := 'observed values of the condition equations';
help::pkg.utility.fitting.objs.fitter.m.fitpoly.a.y.def := '';
help::pkg.utility.fitting.objs.fitter.m.fitpoly.a.y.a := '$N \times m$ values';
help::pkg.utility.fitting.objs.fitter.m.fitpoly.a.sd := [=];
help::pkg.utility.fitting.objs.fitter.m.fitpoly.a.sd.d := 'standard deviation of equations';
help::pkg.utility.fitting.objs.fitter.m.fitpoly.a.sd.def := 'unset';
help::pkg.utility.fitting.objs.fitter.m.fitpoly.a.sd.a := 'one or more values used cyclically';
help::pkg.utility.fitting.objs.fitter.m.fitpoly.a.wt := [=];
help::pkg.utility.fitting.objs.fitter.m.fitpoly.a.wt.d := 'an optional alternate for sd';
help::pkg.utility.fitting.objs.fitter.m.fitpoly.a.wt.def := '1';
help::pkg.utility.fitting.objs.fitter.m.fitpoly.a.wt.a := 'one or more values used cyclically';
help::pkg.utility.fitting.objs.fitter.m.fitpoly.a.id := [=];
help::pkg.utility.fitting.objs.fitter.m.fitpoly.a.id.d := 'the id of a sub-tool';
help::pkg.utility.fitting.objs.fitter.m.fitpoly.a.id.def := '0';
help::pkg.utility.fitting.objs.fitter.m.fitpoly.a.id.a := 'fitter id';
help::pkg.utility.fitting.objs.fitter.m.fitpoly.s := 'fitpoly(n, x, y, sd, wt, id)';
help::pkg.utility.fitting.objs.fitter.m.fitspoly := [=];
help::pkg.utility.fitting.objs.fitter.m.fitspoly.d := 'Solve polynomial equationswith large x-range';
help::pkg.utility.fitting.objs.fitter.m.fitspoly.a.n := [=];
help::pkg.utility.fitting.objs.fitter.m.fitspoly.a.n.d := 'the order of the polynomial to solve for';
help::pkg.utility.fitting.objs.fitter.m.fitspoly.a.n.def := '';
help::pkg.utility.fitting.objs.fitter.m.fitspoly.a.n.a := 'integer';
help::pkg.utility.fitting.objs.fitter.m.fitspoly.a.x := [=];
help::pkg.utility.fitting.objs.fitter.m.fitspoly.a.x.d := 'the parameter for the polynomial calculations';
help::pkg.utility.fitting.objs.fitter.m.fitspoly.a.x.def := '';
help::pkg.utility.fitting.objs.fitter.m.fitspoly.a.x.a := 'one or more real or complex values';
help::pkg.utility.fitting.objs.fitter.m.fitspoly.a.y := [=];
help::pkg.utility.fitting.objs.fitter.m.fitspoly.a.y.d := 'observed values of the condition equations';
help::pkg.utility.fitting.objs.fitter.m.fitspoly.a.y.def := '';
help::pkg.utility.fitting.objs.fitter.m.fitspoly.a.y.a := '$N \times m$ values';
help::pkg.utility.fitting.objs.fitter.m.fitspoly.a.sd := [=];
help::pkg.utility.fitting.objs.fitter.m.fitspoly.a.sd.d := 'standard deviation of equations';
help::pkg.utility.fitting.objs.fitter.m.fitspoly.a.sd.def := 'unset';
help::pkg.utility.fitting.objs.fitter.m.fitspoly.a.sd.a := 'one or more values used cyclically';
help::pkg.utility.fitting.objs.fitter.m.fitspoly.a.wt := [=];
help::pkg.utility.fitting.objs.fitter.m.fitspoly.a.wt.d := 'an optional alternate for sd';
help::pkg.utility.fitting.objs.fitter.m.fitspoly.a.wt.def := '1';
help::pkg.utility.fitting.objs.fitter.m.fitspoly.a.wt.a := 'one or more values used cyclically';
help::pkg.utility.fitting.objs.fitter.m.fitspoly.a.id := [=];
help::pkg.utility.fitting.objs.fitter.m.fitspoly.a.id.d := 'the id of a sub-tool';
help::pkg.utility.fitting.objs.fitter.m.fitspoly.a.id.def := '0';
help::pkg.utility.fitting.objs.fitter.m.fitspoly.a.id.a := 'fitter id';
help::pkg.utility.fitting.objs.fitter.m.fitspoly.s := 'fitspoly(n, x, y, sd, wt, id)';
help::pkg.utility.fitting.objs.fitter.m.solution := [=];
help::pkg.utility.fitting.objs.fitter.m.solution.d := 'get solution';
help::pkg.utility.fitting.objs.fitter.m.solution.a.id := [=];
help::pkg.utility.fitting.objs.fitter.m.solution.a.id.d := 'the id of a sub-tool';
help::pkg.utility.fitting.objs.fitter.m.solution.a.id.def := '0';
help::pkg.utility.fitting.objs.fitter.m.solution.a.id.a := 'fitter id';
help::pkg.utility.fitting.objs.fitter.m.solution.s := 'solution(id)';
help::pkg.utility.fitting.objs.fitter.m.rank := [=];
help::pkg.utility.fitting.objs.fitter.m.rank.d := 'get solution rank';
help::pkg.utility.fitting.objs.fitter.m.rank.a.id := [=];
help::pkg.utility.fitting.objs.fitter.m.rank.a.id.d := 'the id of a sub-tool';
help::pkg.utility.fitting.objs.fitter.m.rank.a.id.def := '0';
help::pkg.utility.fitting.objs.fitter.m.rank.a.id.a := 'fitter id';
help::pkg.utility.fitting.objs.fitter.m.rank.s := 'rank(id)';
help::pkg.utility.fitting.objs.fitter.m.deficiency := [=];
help::pkg.utility.fitting.objs.fitter.m.deficiency.d := 'get missing rank';
help::pkg.utility.fitting.objs.fitter.m.deficiency.a.id := [=];
help::pkg.utility.fitting.objs.fitter.m.deficiency.a.id.d := 'the id of a sub-tool';
help::pkg.utility.fitting.objs.fitter.m.deficiency.a.id.def := '0';
help::pkg.utility.fitting.objs.fitter.m.deficiency.a.id.a := 'fitter id';
help::pkg.utility.fitting.objs.fitter.m.deficiency.s := 'deficiency(id)';
help::pkg.utility.fitting.objs.fitter.m.constraint := [=];
help::pkg.utility.fitting.objs.fitter.m.constraint.d := 'get missing rank constraint equations';
help::pkg.utility.fitting.objs.fitter.m.constraint.a.id := [=];
help::pkg.utility.fitting.objs.fitter.m.constraint.a.id.d := 'the id of a sub-tool';
help::pkg.utility.fitting.objs.fitter.m.constraint.a.id.def := '0';
help::pkg.utility.fitting.objs.fitter.m.constraint.a.id.a := 'fitter id';
help::pkg.utility.fitting.objs.fitter.m.constraint.s := 'constraint(id)';
help::pkg.utility.fitting.objs.fitter.m.chi2 := [=];
help::pkg.utility.fitting.objs.fitter.m.chi2.d := 'get the chi squared';
help::pkg.utility.fitting.objs.fitter.m.chi2.a.id := [=];
help::pkg.utility.fitting.objs.fitter.m.chi2.a.id.d := 'the id of a sub-tool';
help::pkg.utility.fitting.objs.fitter.m.chi2.a.id.def := '0';
help::pkg.utility.fitting.objs.fitter.m.chi2.a.id.a := 'fitter id';
help::pkg.utility.fitting.objs.fitter.m.chi2.s := 'chi2(id)';
help::pkg.utility.fitting.objs.fitter.m.sd := [=];
help::pkg.utility.fitting.objs.fitter.m.sd.d := 'get standard deviation per unit weight';
help::pkg.utility.fitting.objs.fitter.m.sd.a.id := [=];
help::pkg.utility.fitting.objs.fitter.m.sd.a.id.d := 'the id of a sub-tool';
help::pkg.utility.fitting.objs.fitter.m.sd.a.id.def := '0';
help::pkg.utility.fitting.objs.fitter.m.sd.a.id.a := 'fitter id';
help::pkg.utility.fitting.objs.fitter.m.sd.s := 'sd(id)';
help::pkg.utility.fitting.objs.fitter.m.stddev := [=];
help::pkg.utility.fitting.objs.fitter.m.stddev.d := 'get mean error (standard deviation per observation)';
help::pkg.utility.fitting.objs.fitter.m.stddev.a.id := [=];
help::pkg.utility.fitting.objs.fitter.m.stddev.a.id.d := 'the id of a sub-tool';
help::pkg.utility.fitting.objs.fitter.m.stddev.a.id.def := '0';
help::pkg.utility.fitting.objs.fitter.m.stddev.a.id.a := 'fitter id';
help::pkg.utility.fitting.objs.fitter.m.stddev.s := 'stddev(id)';
help::pkg.utility.fitting.objs.fitter.m.covariance := [=];
help::pkg.utility.fitting.objs.fitter.m.covariance.d := 'get the covariance matrix';
help::pkg.utility.fitting.objs.fitter.m.covariance.a.id := [=];
help::pkg.utility.fitting.objs.fitter.m.covariance.a.id.d := 'the id of a sub-tool';
help::pkg.utility.fitting.objs.fitter.m.covariance.a.id.def := '0';
help::pkg.utility.fitting.objs.fitter.m.covariance.a.id.a := 'fitter id';
help::pkg.utility.fitting.objs.fitter.m.covariance.s := 'covariance(id)';
help::pkg.utility.fitting.objs.fitter.m.error := [=];
help::pkg.utility.fitting.objs.fitter.m.error.d := 'get errors in unknowns';
help::pkg.utility.fitting.objs.fitter.m.error.a.id := [=];
help::pkg.utility.fitting.objs.fitter.m.error.a.id.d := 'the id of a sub-tool';
help::pkg.utility.fitting.objs.fitter.m.error.a.id.def := '0';
help::pkg.utility.fitting.objs.fitter.m.error.a.id.a := 'fitter id';
help::pkg.utility.fitting.objs.fitter.m.error.s := 'error(id)';
help::pkg.utility.fitting.objs.fitter.m.fitted := [=];
help::pkg.utility.fitting.objs.fitter.m.fitted.d := 'Test Levenberg-Marquardt loop';
help::pkg.utility.fitting.objs.fitter.m.fitted.a.id := [=];
help::pkg.utility.fitting.objs.fitter.m.fitted.a.id.d := 'the id of a sub-tool';
help::pkg.utility.fitting.objs.fitter.m.fitted.a.id.def := '0';
help::pkg.utility.fitting.objs.fitter.m.fitted.a.id.a := 'fitter id';
help::pkg.utility.fitting.objs.fitter.m.fitted.s := 'fitted(id)';

help::pkg.utility.functionals := [=];
help::pkg.utility.functionals.objs := [=];
help::pkg.utility.functionals.funs := [=];
help::pkg.utility.functionals.d := 'Functionals handling';
help::pkg.utility.functionals.funs.is_functional := [=];
help::pkg.utility.functionals.funs.is_functional.a := [=];
help::pkg.utility.functionals.funs.is_functional.d := 'Check if functional';
help::pkg.utility.functionals.funs.is_functional.a.v := [=];
help::pkg.utility.functionals.funs.is_functional.a.v.d := 'value to be tested';
help::pkg.utility.functionals.funs.is_functional.a.v.def := '';
help::pkg.utility.functionals.funs.is_functional.a.v.a := 'any';
help::pkg.utility.functionals.funs.is_functional.s := 'is_functional(v)';
help::pkg.utility.functionals.objs.functionalserver := [=];
help::pkg.utility.functionals.objs.functionalserver.m := [=];
help::pkg.utility.functionals.objs.functionalserver.c := [=];
help::pkg.utility.functionals.objs.functionalserver.d := 'functionalserver tool';
help::pkg.utility.functionals.objs.functionalserver.c.functionals := [=];
help::pkg.utility.functionals.objs.functionalserver.c.functionals.d := 'Construct functionalserver tool';
help::pkg.utility.functionals.objs.functionalserver.c.functionals.a.host := [=];
help::pkg.utility.functionals.objs.functionalserver.c.functionals.a.host.d := 'host on which to run tool';
help::pkg.utility.functionals.objs.functionalserver.c.functionals.a.host.def := '\' \' ';
help::pkg.utility.functionals.objs.functionalserver.c.functionals.a.host.a := 'valid host name string';
help::pkg.utility.functionals.objs.functionalserver.c.functionals.a.forceneweserver := [=];
help::pkg.utility.functionals.objs.functionalserver.c.functionals.a.forceneweserver.d := 'force the use of a new server';
help::pkg.utility.functionals.objs.functionalserver.c.functionals.a.forceneweserver.def := 'F';
help::pkg.utility.functionals.objs.functionalserver.c.functionals.a.forceneweserver.a := 'bool';
help::pkg.utility.functionals.objs.functionalserver.c.functionals.s := 'functionals(host, forceneweserver)';
help::pkg.utility.functionals.objs.functionalserver.m.names := [=];
help::pkg.utility.functionals.objs.functionalserver.m.names.d := 'Show the known functional names';
help::pkg.utility.functionals.objs.functionalserver.m.names.s := 'names()';
help::pkg.utility.functionals.objs.functionalserver.m.functional := [=];
help::pkg.utility.functionals.objs.functionalserver.m.functional.d := 'Create the named functional';
help::pkg.utility.functionals.objs.functionalserver.m.functional.a.name := [=];
help::pkg.utility.functionals.objs.functionalserver.m.functional.a.name.d := 'name of functional to create';
help::pkg.utility.functionals.objs.functionalserver.m.functional.a.name.def := 'unset';
help::pkg.utility.functionals.objs.functionalserver.m.functional.a.name.a := 'string';
help::pkg.utility.functionals.objs.functionalserver.m.functional.a.order := [=];
help::pkg.utility.functionals.objs.functionalserver.m.functional.a.order.d := 'order if appropriate';
help::pkg.utility.functionals.objs.functionalserver.m.functional.a.order.def := 'depending on functional';
help::pkg.utility.functionals.objs.functionalserver.m.functional.a.order.a := 'integer';
help::pkg.utility.functionals.objs.functionalserver.m.functional.a.params := [=];
help::pkg.utility.functionals.objs.functionalserver.m.functional.a.params.d := 'parameters';
help::pkg.utility.functionals.objs.functionalserver.m.functional.a.params.def := 'depending on functional';
help::pkg.utility.functionals.objs.functionalserver.m.functional.a.params.a := 'numeric array';
help::pkg.utility.functionals.objs.functionalserver.m.functional.s := 'functional(name, order, params)';
help::pkg.utility.functionals.objs.functionalserver.m.gaussian1d := [=];
help::pkg.utility.functionals.objs.functionalserver.m.gaussian1d.d := 'Create a 1D Gaussian function';
help::pkg.utility.functionals.objs.functionalserver.m.gaussian1d.a.height := [=];
help::pkg.utility.functionals.objs.functionalserver.m.gaussian1d.a.height.d := 'amplitude of Gaussian, or 3 values';
help::pkg.utility.functionals.objs.functionalserver.m.gaussian1d.a.height.def := '1';
help::pkg.utility.functionals.objs.functionalserver.m.gaussian1d.a.height.a := 'numeric';
help::pkg.utility.functionals.objs.functionalserver.m.gaussian1d.a.center := [=];
help::pkg.utility.functionals.objs.functionalserver.m.gaussian1d.a.center.d := 'center of Gaussian';
help::pkg.utility.functionals.objs.functionalserver.m.gaussian1d.a.center.def := '0';
help::pkg.utility.functionals.objs.functionalserver.m.gaussian1d.a.center.a := 'numeric';
help::pkg.utility.functionals.objs.functionalserver.m.gaussian1d.a.width := [=];
help::pkg.utility.functionals.objs.functionalserver.m.gaussian1d.a.width.d := 'HPBW width of Gaussian';
help::pkg.utility.functionals.objs.functionalserver.m.gaussian1d.a.width.def := '1';
help::pkg.utility.functionals.objs.functionalserver.m.gaussian1d.a.width.a := 'numeric';
help::pkg.utility.functionals.objs.functionalserver.m.gaussian1d.s := 'gaussian1d(height, center, width)';
help::pkg.utility.functionals.objs.functionalserver.m.gaussian2d := [=];
help::pkg.utility.functionals.objs.functionalserver.m.gaussian2d.d := 'Create a 2D Gaussian function';
help::pkg.utility.functionals.objs.functionalserver.m.gaussian2d.a.params := [=];
help::pkg.utility.functionals.objs.functionalserver.m.gaussian2d.a.params.d := 'amplitude, centers, major width, ratio, angle of Gaussian';
help::pkg.utility.functionals.objs.functionalserver.m.gaussian2d.a.params.def := '[1 0 0 1 1 0]';
help::pkg.utility.functionals.objs.functionalserver.m.gaussian2d.a.params.a := 'numeric';
help::pkg.utility.functionals.objs.functionalserver.m.gaussian2d.s := 'gaussian2d(params)';
help::pkg.utility.functionals.objs.functionalserver.m.poly := [=];
help::pkg.utility.functionals.objs.functionalserver.m.poly.d := 'Create a 1D polynomial function';
help::pkg.utility.functionals.objs.functionalserver.m.poly.a.order := [=];
help::pkg.utility.functionals.objs.functionalserver.m.poly.a.order.d := 'polynomial degree';
help::pkg.utility.functionals.objs.functionalserver.m.poly.a.order.def := '0';
help::pkg.utility.functionals.objs.functionalserver.m.poly.a.order.a := 'integer';
help::pkg.utility.functionals.objs.functionalserver.m.poly.a.params := [=];
help::pkg.utility.functionals.objs.functionalserver.m.poly.a.params.d := 'factors of terms';
help::pkg.utility.functionals.objs.functionalserver.m.poly.a.params.def := 'all 1';
help::pkg.utility.functionals.objs.functionalserver.m.poly.a.params.a := 'numeric';
help::pkg.utility.functionals.objs.functionalserver.m.poly.s := 'poly(order, params)';
help::pkg.utility.functionals.objs.functionalserver.m.oddpoly := [=];
help::pkg.utility.functionals.objs.functionalserver.m.oddpoly.d := 'Create an odd 1D polynomial function';
help::pkg.utility.functionals.objs.functionalserver.m.oddpoly.a.order := [=];
help::pkg.utility.functionals.objs.functionalserver.m.oddpoly.a.order.d := 'polynomial degree';
help::pkg.utility.functionals.objs.functionalserver.m.oddpoly.a.order.def := '0';
help::pkg.utility.functionals.objs.functionalserver.m.oddpoly.a.order.a := 'integer';
help::pkg.utility.functionals.objs.functionalserver.m.oddpoly.a.params := [=];
help::pkg.utility.functionals.objs.functionalserver.m.oddpoly.a.params.d := 'factors of terms';
help::pkg.utility.functionals.objs.functionalserver.m.oddpoly.a.params.def := 'all 1';
help::pkg.utility.functionals.objs.functionalserver.m.oddpoly.a.params.a := 'numeric';
help::pkg.utility.functionals.objs.functionalserver.m.oddpoly.s := 'oddpoly(order, params)';
help::pkg.utility.functionals.objs.functionalserver.m.evenpoly := [=];
help::pkg.utility.functionals.objs.functionalserver.m.evenpoly.d := 'Create an even 1D polynomial function';
help::pkg.utility.functionals.objs.functionalserver.m.evenpoly.a.order := [=];
help::pkg.utility.functionals.objs.functionalserver.m.evenpoly.a.order.d := 'polynomial degree';
help::pkg.utility.functionals.objs.functionalserver.m.evenpoly.a.order.def := '0';
help::pkg.utility.functionals.objs.functionalserver.m.evenpoly.a.order.a := 'integer';
help::pkg.utility.functionals.objs.functionalserver.m.evenpoly.a.params := [=];
help::pkg.utility.functionals.objs.functionalserver.m.evenpoly.a.params.d := 'factors of terms';
help::pkg.utility.functionals.objs.functionalserver.m.evenpoly.a.params.def := 'all 1';
help::pkg.utility.functionals.objs.functionalserver.m.evenpoly.a.params.a := 'numeric';
help::pkg.utility.functionals.objs.functionalserver.m.evenpoly.s := 'evenpoly(order, params)';
help::pkg.utility.functionals.objs.functionalserver.m.chebyshev := [=];
help::pkg.utility.functionals.objs.functionalserver.m.chebyshev.d := 'Create a 1D Chebyshev polynomial function';
help::pkg.utility.functionals.objs.functionalserver.m.chebyshev.a.order := [=];
help::pkg.utility.functionals.objs.functionalserver.m.chebyshev.a.order.d := 'order of the polynomial';
help::pkg.utility.functionals.objs.functionalserver.m.chebyshev.a.order.def := '0';
help::pkg.utility.functionals.objs.functionalserver.m.chebyshev.a.order.a := 'integer';
help::pkg.utility.functionals.objs.functionalserver.m.chebyshev.a.params := [=];
help::pkg.utility.functionals.objs.functionalserver.m.chebyshev.a.params.d := 'the Chebyshev coefficients';
help::pkg.utility.functionals.objs.functionalserver.m.chebyshev.a.params.def := 'all 0';
help::pkg.utility.functionals.objs.functionalserver.m.chebyshev.a.params.a := 'numeric';
help::pkg.utility.functionals.objs.functionalserver.m.chebyshev.a.xmin := [=];
help::pkg.utility.functionals.objs.functionalserver.m.chebyshev.a.xmin.d := 'the minimum value of the interval of interest';
help::pkg.utility.functionals.objs.functionalserver.m.chebyshev.a.xmin.def := '-1';
help::pkg.utility.functionals.objs.functionalserver.m.chebyshev.a.xmin.a := 'numeric';
help::pkg.utility.functionals.objs.functionalserver.m.chebyshev.a.xmax := [=];
help::pkg.utility.functionals.objs.functionalserver.m.chebyshev.a.xmax.d := 'the maximum value of the interval of interest';
help::pkg.utility.functionals.objs.functionalserver.m.chebyshev.a.xmax.def := '-1';
help::pkg.utility.functionals.objs.functionalserver.m.chebyshev.a.xmax.a := 'numeric';
help::pkg.utility.functionals.objs.functionalserver.m.chebyshev.a.ooimode := [=];
help::pkg.utility.functionals.objs.functionalserver.m.chebyshev.a.ooimode.d := 'the ``out-of-interval\' \'  mode.  This controls what gets returned when an input value to the function is outside the interval of interest.';
help::pkg.utility.functionals.objs.functionalserver.m.chebyshev.a.ooimode.def := 'a minimum match to the following values: \' constant\'  -- the value of the def argument; \' zeroth\'  -- the value of the zero-th order coefficient; \' extrapolate\'  -- the function evaluated explicitly at the input value; \' cyclic\'  -- the function evaluated at the input value after ``folding\' \'  it into the interval of interest; \' edge\'  -- the function evaluated at the nearest edge of the interval of interest';
help::pkg.utility.functionals.objs.functionalserver.m.chebyshev.a.ooimode.a := '\' constant\' ';
help::pkg.utility.functionals.objs.functionalserver.m.chebyshev.a.def := [=];
help::pkg.utility.functionals.objs.functionalserver.m.chebyshev.a.def.d := 'the default value to return for input values outside of the interval of interest when ooimode=\' constant\' ';
help::pkg.utility.functionals.objs.functionalserver.m.chebyshev.a.def.def := '0';
help::pkg.utility.functionals.objs.functionalserver.m.chebyshev.a.def.a := 'numeric';
help::pkg.utility.functionals.objs.functionalserver.m.chebyshev.s := 'chebyshev(order, params, xmin, xmax, ooimode, def)';
help::pkg.utility.functionals.objs.functionalserver.m.butterworth := [=];
help::pkg.utility.functionals.objs.functionalserver.m.butterworth.d := 'Create an approximation of butterworth bandpass';
help::pkg.utility.functionals.objs.functionalserver.m.butterworth.a.minorder := [=];
help::pkg.utility.functionals.objs.functionalserver.m.butterworth.a.minorder.d := 'the order of the minimum (high-pass) cutoff of the curve';
help::pkg.utility.functionals.objs.functionalserver.m.butterworth.a.minorder.def := '1';
help::pkg.utility.functionals.objs.functionalserver.m.butterworth.a.minorder.a := 'integer';
help::pkg.utility.functionals.objs.functionalserver.m.butterworth.a.maxorder := [=];
help::pkg.utility.functionals.objs.functionalserver.m.butterworth.a.maxorder.d := 'the order of the maximum (low-pass) cutoff of the curve';
help::pkg.utility.functionals.objs.functionalserver.m.butterworth.a.maxorder.def := '1';
help::pkg.utility.functionals.objs.functionalserver.m.butterworth.a.maxorder.a := 'integer';
help::pkg.utility.functionals.objs.functionalserver.m.butterworth.a.mincut := [=];
help::pkg.utility.functionals.objs.functionalserver.m.butterworth.a.mincut.d := 'the characteristic cutoff value of the minimum (high-pass) portion of the curve.';
help::pkg.utility.functionals.objs.functionalserver.m.butterworth.a.mincut.def := '-1.0';
help::pkg.utility.functionals.objs.functionalserver.m.butterworth.a.mincut.a := 'numeric';
help::pkg.utility.functionals.objs.functionalserver.m.butterworth.a.maxcut := [=];
help::pkg.utility.functionals.objs.functionalserver.m.butterworth.a.maxcut.d := 'the characteristic cutoff value of the maximum (low-pass) portion of the curve.';
help::pkg.utility.functionals.objs.functionalserver.m.butterworth.a.maxcut.def := '1.0';
help::pkg.utility.functionals.objs.functionalserver.m.butterworth.a.maxcut.a := 'numeric';
help::pkg.utility.functionals.objs.functionalserver.m.butterworth.a.center := [=];
help::pkg.utility.functionals.objs.functionalserver.m.butterworth.a.center.d := 'the location of the peak of the bandpass curve';
help::pkg.utility.functionals.objs.functionalserver.m.butterworth.a.center.def := '0.0';
help::pkg.utility.functionals.objs.functionalserver.m.butterworth.a.center.a := 'numeric';
help::pkg.utility.functionals.objs.functionalserver.m.butterworth.a.peak := [=];
help::pkg.utility.functionals.objs.functionalserver.m.butterworth.a.peak.d := 'the maximum value of the bandpass curve';
help::pkg.utility.functionals.objs.functionalserver.m.butterworth.a.peak.def := '1.0';
help::pkg.utility.functionals.objs.functionalserver.m.butterworth.a.peak.a := 'numeric';
help::pkg.utility.functionals.objs.functionalserver.m.butterworth.s := 'butterworth(minorder, maxorder, mincut, maxcut, center, peak)';
help::pkg.utility.functionals.objs.functionalserver.m.combi := [=];
help::pkg.utility.functionals.objs.functionalserver.m.combi.d := 'Create a combination function';
help::pkg.utility.functionals.objs.functionalserver.m.combi.s := 'combi()';
help::pkg.utility.functionals.objs.functionalserver.m.compound := [=];
help::pkg.utility.functionals.objs.functionalserver.m.compound.d := 'Create a compound function';
help::pkg.utility.functionals.objs.functionalserver.m.compound.s := 'compound()';
help::pkg.utility.functionals.objs.functionalserver.m.compiled := [=];
help::pkg.utility.functionals.objs.functionalserver.m.compiled.d := 'Create your own function';
help::pkg.utility.functionals.objs.functionalserver.m.compiled.a.code := [=];
help::pkg.utility.functionals.objs.functionalserver.m.compiled.a.code.d := 'programmable expression string';
help::pkg.utility.functionals.objs.functionalserver.m.compiled.a.code.def := '\' \' ';
help::pkg.utility.functionals.objs.functionalserver.m.compiled.a.code.a := 'string';
help::pkg.utility.functionals.objs.functionalserver.m.compiled.a.params := [=];
help::pkg.utility.functionals.objs.functionalserver.m.compiled.a.params.d := 'optionally parameters to be set';
help::pkg.utility.functionals.objs.functionalserver.m.compiled.a.params.def := 'unset';
help::pkg.utility.functionals.objs.functionalserver.m.compiled.a.params.a := 'double array';
help::pkg.utility.functionals.objs.functionalserver.m.compiled.s := 'compiled(code, params)';
help::pkg.utility.functionals.objs.functionalserver.m.id := [=];
help::pkg.utility.functionals.objs.functionalserver.m.id.d := 'identification of tool';
help::pkg.utility.functionals.objs.functionalserver.m.id.s := 'id()';
help::pkg.utility.functionals.objs.functionalserver.m.type := [=];
help::pkg.utility.functionals.objs.functionalserver.m.type.d := 'type of tool';
help::pkg.utility.functionals.objs.functionalserver.m.type.s := 'type()';
help::pkg.utility.functionals.objs.functionalserver.m.done := [=];
help::pkg.utility.functionals.objs.functionalserver.m.done.d := 'free resources used by tool';
help::pkg.utility.functionals.objs.functionalserver.m.done.a.kill := [=];
help::pkg.utility.functionals.objs.functionalserver.m.done.a.kill.d := 'force kill of the default tool';
help::pkg.utility.functionals.objs.functionalserver.m.done.a.kill.def := 'F';
help::pkg.utility.functionals.objs.functionalserver.m.done.a.kill.a := 'bool';
help::pkg.utility.functionals.objs.functionalserver.m.done.s := 'done(kill)';
help::pkg.utility.functionals.objs.functional := [=];
help::pkg.utility.functionals.objs.functional.m := [=];
help::pkg.utility.functionals.objs.functional.c := [=];
help::pkg.utility.functionals.objs.functional.d := 'functional tool';
help::pkg.utility.functionals.objs.functional.m.type := [=];
help::pkg.utility.functionals.objs.functional.m.type.d := 'Show the type name';
help::pkg.utility.functionals.objs.functional.m.type.s := 'type()';
help::pkg.utility.functionals.objs.functional.m.npar := [=];
help::pkg.utility.functionals.objs.functional.m.npar.d := 'Show the number of parameters';
help::pkg.utility.functionals.objs.functional.m.npar.s := 'npar()';
help::pkg.utility.functionals.objs.functional.m.ndim := [=];
help::pkg.utility.functionals.objs.functional.m.ndim.d := 'Show the number of dimensions';
help::pkg.utility.functionals.objs.functional.m.ndim.s := 'ndim()';
help::pkg.utility.functionals.objs.functional.m.order := [=];
help::pkg.utility.functionals.objs.functional.m.order.d := 'Show the order or similar information';
help::pkg.utility.functionals.objs.functional.m.order.s := 'order()';
help::pkg.utility.functionals.objs.functional.m.parameters := [=];
help::pkg.utility.functionals.objs.functional.m.parameters.d := 'Show the functional parameters';
help::pkg.utility.functionals.objs.functional.m.parameters.s := 'parameters()';
help::pkg.utility.functionals.objs.functional.m.setparameters := [=];
help::pkg.utility.functionals.objs.functional.m.setparameters.d := 'Set the functional parameters';
help::pkg.utility.functionals.objs.functional.m.setparameters.a.par := [=];
help::pkg.utility.functionals.objs.functional.m.setparameters.a.par.d := 'parameters to be set';
help::pkg.utility.functionals.objs.functional.m.setparameters.a.par.def := 'unset';
help::pkg.utility.functionals.objs.functional.m.setparameters.a.par.a := 'value array';
help::pkg.utility.functionals.objs.functional.m.setparameters.s := 'setparameters(par)';
help::pkg.utility.functionals.objs.functional.m.par := [=];
help::pkg.utility.functionals.objs.functional.m.par.d := 'Show a single parameter';
help::pkg.utility.functionals.objs.functional.m.par.a.n := [=];
help::pkg.utility.functionals.objs.functional.m.par.a.n.d := 'parameter index';
help::pkg.utility.functionals.objs.functional.m.par.a.n.def := '1';
help::pkg.utility.functionals.objs.functional.m.par.a.n.a := 'integer';
help::pkg.utility.functionals.objs.functional.m.par.s := 'par(n)';
help::pkg.utility.functionals.objs.functional.m.setpar := [=];
help::pkg.utility.functionals.objs.functional.m.setpar.d := 'Set a single parameter';
help::pkg.utility.functionals.objs.functional.m.setpar.a.n := [=];
help::pkg.utility.functionals.objs.functional.m.setpar.a.n.d := 'parameter index';
help::pkg.utility.functionals.objs.functional.m.setpar.a.n.def := '1';
help::pkg.utility.functionals.objs.functional.m.setpar.a.n.a := 'integer';
help::pkg.utility.functionals.objs.functional.m.setpar.a.v := [=];
help::pkg.utility.functionals.objs.functional.m.setpar.a.v.d := 'parameter values to be set';
help::pkg.utility.functionals.objs.functional.m.setpar.a.v.def := '1';
help::pkg.utility.functionals.objs.functional.m.setpar.a.v.a := 'value';
help::pkg.utility.functionals.objs.functional.m.setpar.s := 'setpar(n, v)';
help::pkg.utility.functionals.objs.functional.m.masks := [=];
help::pkg.utility.functionals.objs.functional.m.masks.d := 'Show the functional masks';
help::pkg.utility.functionals.objs.functional.m.masks.s := 'masks()';
help::pkg.utility.functionals.objs.functional.m.setmasks := [=];
help::pkg.utility.functionals.objs.functional.m.setmasks.d := 'Set the functional masks';
help::pkg.utility.functionals.objs.functional.m.setmasks.a.mask := [=];
help::pkg.utility.functionals.objs.functional.m.setmasks.a.mask.d := 'masks to be set';
help::pkg.utility.functionals.objs.functional.m.setmasks.a.mask.def := 'unset';
help::pkg.utility.functionals.objs.functional.m.setmasks.a.mask.a := 'boolean array';
help::pkg.utility.functionals.objs.functional.m.setmasks.s := 'setmasks(mask)';
help::pkg.utility.functionals.objs.functional.m.mask := [=];
help::pkg.utility.functionals.objs.functional.m.mask.d := 'Show a single mask';
help::pkg.utility.functionals.objs.functional.m.mask.a.n := [=];
help::pkg.utility.functionals.objs.functional.m.mask.a.n.d := 'parameter index';
help::pkg.utility.functionals.objs.functional.m.mask.a.n.def := '1';
help::pkg.utility.functionals.objs.functional.m.mask.a.n.a := 'integer';
help::pkg.utility.functionals.objs.functional.m.mask.s := 'mask(n)';
help::pkg.utility.functionals.objs.functional.m.setmask := [=];
help::pkg.utility.functionals.objs.functional.m.setmask.d := 'Set a single mask';
help::pkg.utility.functionals.objs.functional.m.setmask.a.n := [=];
help::pkg.utility.functionals.objs.functional.m.setmask.a.n.d := 'parameter index';
help::pkg.utility.functionals.objs.functional.m.setmask.a.n.def := '1';
help::pkg.utility.functionals.objs.functional.m.setmask.a.n.a := 'integer';
help::pkg.utility.functionals.objs.functional.m.setmask.a.v := [=];
help::pkg.utility.functionals.objs.functional.m.setmask.a.v.d := 'parameter mask to be set';
help::pkg.utility.functionals.objs.functional.m.setmask.a.v.def := 'T';
help::pkg.utility.functionals.objs.functional.m.setmask.a.v.a := 'boolean';
help::pkg.utility.functionals.objs.functional.m.setmask.s := 'setmask(n, v)';
help::pkg.utility.functionals.objs.functional.m.state := [=];
help::pkg.utility.functionals.objs.functional.m.state.d := 'Show complete state of the functional';
help::pkg.utility.functionals.objs.functional.m.state.s := 'state()';
help::pkg.utility.functionals.objs.functional.m.copyfrom := [=];
help::pkg.utility.functionals.objs.functional.m.copyfrom.d := 'Copy the complete state of a functional';
help::pkg.utility.functionals.objs.functional.m.copyfrom.a.funcin := [=];
help::pkg.utility.functionals.objs.functional.m.copyfrom.a.funcin.d := 'functional to be copied from';
help::pkg.utility.functionals.objs.functional.m.copyfrom.a.funcin.def := 'unset';
help::pkg.utility.functionals.objs.functional.m.copyfrom.a.funcin.a := 'functional';
help::pkg.utility.functionals.objs.functional.m.copyfrom.s := 'copyfrom(funcin)';
help::pkg.utility.functionals.objs.functional.m.f := [=];
help::pkg.utility.functionals.objs.functional.m.f.d := 'Calculate the value of the functional';
help::pkg.utility.functionals.objs.functional.m.f.a.x := [=];
help::pkg.utility.functionals.objs.functional.m.f.a.x.d := 'argument values';
help::pkg.utility.functionals.objs.functional.m.f.a.x.def := '$[]$';
help::pkg.utility.functionals.objs.functional.m.f.a.x.a := 'real';
help::pkg.utility.functionals.objs.functional.m.f.s := 'f(x)';
help::pkg.utility.functionals.objs.functional.m.cf := [=];
help::pkg.utility.functionals.objs.functional.m.cf.d := 'Calculate the value of the complex functional';
help::pkg.utility.functionals.objs.functional.m.cf.a.x := [=];
help::pkg.utility.functionals.objs.functional.m.cf.a.x.d := 'argument values';
help::pkg.utility.functionals.objs.functional.m.cf.a.x.def := '$[]$';
help::pkg.utility.functionals.objs.functional.m.cf.a.x.a := 'complex';
help::pkg.utility.functionals.objs.functional.m.cf.s := 'cf(x)';
help::pkg.utility.functionals.objs.functional.m.fdf := [=];
help::pkg.utility.functionals.objs.functional.m.fdf.d := 'Calculate the value and derivatives of the functional';
help::pkg.utility.functionals.objs.functional.m.fdf.a.x := [=];
help::pkg.utility.functionals.objs.functional.m.fdf.a.x.d := 'argument values';
help::pkg.utility.functionals.objs.functional.m.fdf.a.x.def := '$[]$';
help::pkg.utility.functionals.objs.functional.m.fdf.a.x.a := 'real';
help::pkg.utility.functionals.objs.functional.m.fdf.s := 'fdf(x)';
help::pkg.utility.functionals.objs.functional.m.cfdf := [=];
help::pkg.utility.functionals.objs.functional.m.cfdf.d := 'Calculate the value and derivatives of the complex functional';
help::pkg.utility.functionals.objs.functional.m.cfdf.a.x := [=];
help::pkg.utility.functionals.objs.functional.m.cfdf.a.x.d := 'argument values';
help::pkg.utility.functionals.objs.functional.m.cfdf.a.x.def := '$[]$';
help::pkg.utility.functionals.objs.functional.m.cfdf.a.x.a := 'complex';
help::pkg.utility.functionals.objs.functional.m.cfdf.s := 'cfdf(x)';
help::pkg.utility.functionals.objs.functional.m.add := [=];
help::pkg.utility.functionals.objs.functional.m.add.d := 'Add a functional to a combi or compound functional';
help::pkg.utility.functionals.objs.functional.m.add.a.x := [=];
help::pkg.utility.functionals.objs.functional.m.add.a.x.d := 'functional to be added';
help::pkg.utility.functionals.objs.functional.m.add.a.x.def := '';
help::pkg.utility.functionals.objs.functional.m.add.a.x.a := 'functional';
help::pkg.utility.functionals.objs.functional.m.add.s := 'add(x)';
help::pkg.utility.functionals.objs.functional.m.done := [=];
help::pkg.utility.functionals.objs.functional.m.done.d := 'Free resources of the functional';
help::pkg.utility.functionals.objs.functional.m.done.s := 'done()';

help::pkg.utility.mathematics := [=];
help::pkg.utility.mathematics.objs := [=];
help::pkg.utility.mathematics.funs := [=];
help::pkg.utility.mathematics.d := 'Computations on arrays';
help::pkg.utility.mathematics.funs.mean := [=];
help::pkg.utility.mathematics.funs.mean.a := [=];
help::pkg.utility.mathematics.funs.mean.d := 'Calculate the mean of a set of numbers';
help::pkg.utility.mathematics.funs.mean.a.dots := [=];
help::pkg.utility.mathematics.funs.mean.a.dots.d := 'The set of numbers to average';
help::pkg.utility.mathematics.funs.mean.a.dots.def := '';
help::pkg.utility.mathematics.funs.mean.a.dots.a := '';
help::pkg.utility.mathematics.funs.mean.s := 'mean(dots)';
help::pkg.utility.mathematics.funs.moments := [=];
help::pkg.utility.mathematics.funs.moments.a := [=];
help::pkg.utility.mathematics.funs.moments.d := 'Calculate one or more moments for a set of numbers';
help::pkg.utility.mathematics.funs.moments.a.highest_moment := [=];
help::pkg.utility.mathematics.funs.moments.a.highest_moment.d := '1=mean,...4=kurtosis';
help::pkg.utility.mathematics.funs.moments.a.highest_moment.def := '';
help::pkg.utility.mathematics.funs.moments.a.highest_moment.a := '';
help::pkg.utility.mathematics.funs.moments.a.dots := [=];
help::pkg.utility.mathematics.funs.moments.a.dots.d := 'The values to perform statistics on';
help::pkg.utility.mathematics.funs.moments.a.dots.def := '';
help::pkg.utility.mathematics.funs.moments.a.dots.a := '';
help::pkg.utility.mathematics.funs.moments.a.assumed_mean := [=];
help::pkg.utility.mathematics.funs.moments.a.assumed_mean.d := 'If numeric, assume the mean is this value rather              than calculating it; \bf if used, parameter name must              be explicitly specified';
help::pkg.utility.mathematics.funs.moments.a.assumed_mean.def := '[=]';
help::pkg.utility.mathematics.funs.moments.a.assumed_mean.a := 'numeric scalar';
help::pkg.utility.mathematics.funs.moments.s := 'moments(highest_moment, dots, assumed_mean)';
help::pkg.utility.mathematics.funs.variance := [=];
help::pkg.utility.mathematics.funs.variance.a := [=];
help::pkg.utility.mathematics.funs.variance.d := 'Calculate the variance of a set of numbers';
help::pkg.utility.mathematics.funs.variance.a.dots := [=];
help::pkg.utility.mathematics.funs.variance.a.dots.d := 'The numbers to perform statistics on';
help::pkg.utility.mathematics.funs.variance.a.dots.def := '';
help::pkg.utility.mathematics.funs.variance.a.dots.a := '';
help::pkg.utility.mathematics.funs.variance.a.assumed_mean := [=];
help::pkg.utility.mathematics.funs.variance.a.assumed_mean.d := 'If numeric, assume the mean is this value rather              than calculating it; \bf if used, parameter name must              be explicitly specified';
help::pkg.utility.mathematics.funs.variance.a.assumed_mean.def := '[=]';
help::pkg.utility.mathematics.funs.variance.a.assumed_mean.a := 'numeric scalar';
help::pkg.utility.mathematics.funs.variance.s := 'variance(dots, assumed_mean)';
help::pkg.utility.mathematics.funs.stddev := [=];
help::pkg.utility.mathematics.funs.stddev.a := [=];
help::pkg.utility.mathematics.funs.stddev.d := 'Calculate the standard deviation of a set of numbers';
help::pkg.utility.mathematics.funs.stddev.a.dots := [=];
help::pkg.utility.mathematics.funs.stddev.a.dots.d := 'The numbers to perform statistics on';
help::pkg.utility.mathematics.funs.stddev.a.dots.def := '';
help::pkg.utility.mathematics.funs.stddev.a.dots.a := '';
help::pkg.utility.mathematics.funs.stddev.a.assumed_mean := [=];
help::pkg.utility.mathematics.funs.stddev.a.assumed_mean.d := 'If numeric, assume the mean is this value rather              than calculating it; \bf if used, parameter name must              be explicitly specified';
help::pkg.utility.mathematics.funs.stddev.a.assumed_mean.def := '[=]';
help::pkg.utility.mathematics.funs.stddev.a.assumed_mean.a := 'numeric scalar';
help::pkg.utility.mathematics.funs.stddev.s := 'stddev(dots, assumed_mean)';
help::pkg.utility.mathematics.funs.skew := [=];
help::pkg.utility.mathematics.funs.skew.a := [=];
help::pkg.utility.mathematics.funs.skew.d := 'Calculate the skew of a set of numbers';
help::pkg.utility.mathematics.funs.skew.a.dots := [=];
help::pkg.utility.mathematics.funs.skew.a.dots.d := 'The numbers to perform statistics on';
help::pkg.utility.mathematics.funs.skew.a.dots.def := '';
help::pkg.utility.mathematics.funs.skew.a.dots.a := '';
help::pkg.utility.mathematics.funs.skew.a.assumed_mean := [=];
help::pkg.utility.mathematics.funs.skew.a.assumed_mean.d := 'If numeric, assume the mean is this value rather              than calculating it; \bf if used, parameter name must              be explicitly specified';
help::pkg.utility.mathematics.funs.skew.a.assumed_mean.def := '[=]';
help::pkg.utility.mathematics.funs.skew.a.assumed_mean.a := 'numeric scalar';
help::pkg.utility.mathematics.funs.skew.s := 'skew(dots, assumed_mean)';
help::pkg.utility.mathematics.funs.kurtosis := [=];
help::pkg.utility.mathematics.funs.kurtosis.a := [=];
help::pkg.utility.mathematics.funs.kurtosis.d := 'Calculate the kurtosis of a set of numbers';
help::pkg.utility.mathematics.funs.kurtosis.a.dots := [=];
help::pkg.utility.mathematics.funs.kurtosis.a.dots.d := 'The numbers to perform statistics on';
help::pkg.utility.mathematics.funs.kurtosis.a.dots.def := '';
help::pkg.utility.mathematics.funs.kurtosis.a.dots.a := '';
help::pkg.utility.mathematics.funs.kurtosis.a.assumed_mean := [=];
help::pkg.utility.mathematics.funs.kurtosis.a.assumed_mean.d := 'If numeric, assume the mean is this value rather              than calculating it; \bf if used, parameter name must              be explicitly specified';
help::pkg.utility.mathematics.funs.kurtosis.a.assumed_mean.def := '[=]';
help::pkg.utility.mathematics.funs.kurtosis.a.assumed_mean.a := 'numeric scalar';
help::pkg.utility.mathematics.funs.kurtosis.s := 'kurtosis(dots, assumed_mean)';
help::pkg.utility.mathematics.funs.median := [=];
help::pkg.utility.mathematics.funs.median.a := [=];
help::pkg.utility.mathematics.funs.median.d := 'Calculate the median of a set of numbers';
help::pkg.utility.mathematics.funs.median.a.dots := [=];
help::pkg.utility.mathematics.funs.median.a.dots.d := 'The numbers to perform statistics on';
help::pkg.utility.mathematics.funs.median.a.dots.def := '';
help::pkg.utility.mathematics.funs.median.a.dots.a := '';
help::pkg.utility.mathematics.funs.median.a.is_sorted := [=];
help::pkg.utility.mathematics.funs.median.a.is_sorted.d := 'Set if the values are already sorted';
help::pkg.utility.mathematics.funs.median.a.is_sorted.def := 'F';
help::pkg.utility.mathematics.funs.median.a.is_sorted.a := 'T/F';
help::pkg.utility.mathematics.funs.median.s := 'median(dots, is_sorted)';
help::pkg.utility.mathematics.funs.range_with_location := [=];
help::pkg.utility.mathematics.funs.range_with_location.a := [=];
help::pkg.utility.mathematics.funs.range_with_location.d := 'Determine locations of min and max for a set of numbers';
help::pkg.utility.mathematics.funs.range_with_location.a.data := [=];
help::pkg.utility.mathematics.funs.range_with_location.a.data.d := 'The array to search';
help::pkg.utility.mathematics.funs.range_with_location.a.data.def := '';
help::pkg.utility.mathematics.funs.range_with_location.a.data.a := '';
help::pkg.utility.mathematics.funs.range_with_location.a.min_location := [=];
help::pkg.utility.mathematics.funs.range_with_location.a.min_location.d := 'Position of the minimum value';
help::pkg.utility.mathematics.funs.range_with_location.a.min_location.def := '';
help::pkg.utility.mathematics.funs.range_with_location.a.min_location.a := '';
help::pkg.utility.mathematics.funs.range_with_location.a.max_location := [=];
help::pkg.utility.mathematics.funs.range_with_location.a.max_location.d := 'Position of the maximum value';
help::pkg.utility.mathematics.funs.range_with_location.a.max_location.def := '';
help::pkg.utility.mathematics.funs.range_with_location.a.max_location.a := '';
help::pkg.utility.mathematics.funs.range_with_location.a.mask := [=];
help::pkg.utility.mathematics.funs.range_with_location.a.mask.d := 'If set, only consider locations where mask==True';
help::pkg.utility.mathematics.funs.range_with_location.a.mask.def := 'null';
help::pkg.utility.mathematics.funs.range_with_location.a.mask.a := 'bool array';
help::pkg.utility.mathematics.funs.range_with_location.s := 'range_with_location(data, min_location, max_location, mask)';
help::pkg.utility.mathematics.funs.max_with_location := [=];
help::pkg.utility.mathematics.funs.max_with_location.a := [=];
help::pkg.utility.mathematics.funs.max_with_location.d := 'Determine location of the maximum of a set of numbers';
help::pkg.utility.mathematics.funs.max_with_location.a.data := [=];
help::pkg.utility.mathematics.funs.max_with_location.a.data.d := 'The array to search';
help::pkg.utility.mathematics.funs.max_with_location.a.data.def := '';
help::pkg.utility.mathematics.funs.max_with_location.a.data.a := '';
help::pkg.utility.mathematics.funs.max_with_location.a.max_location := [=];
help::pkg.utility.mathematics.funs.max_with_location.a.max_location.d := 'Position of the maximum value';
help::pkg.utility.mathematics.funs.max_with_location.a.max_location.def := '';
help::pkg.utility.mathematics.funs.max_with_location.a.max_location.a := '';
help::pkg.utility.mathematics.funs.max_with_location.a.mask := [=];
help::pkg.utility.mathematics.funs.max_with_location.a.mask.d := 'If set, only consider locations where mask==True';
help::pkg.utility.mathematics.funs.max_with_location.a.mask.def := 'null';
help::pkg.utility.mathematics.funs.max_with_location.a.mask.a := 'bool array';
help::pkg.utility.mathematics.funs.max_with_location.s := 'max_with_location(data, max_location, mask)';
help::pkg.utility.mathematics.funs.min_with_location := [=];
help::pkg.utility.mathematics.funs.min_with_location.a := [=];
help::pkg.utility.mathematics.funs.min_with_location.d := 'Determine location of the minimum of a set of numbers';
help::pkg.utility.mathematics.funs.min_with_location.a.data := [=];
help::pkg.utility.mathematics.funs.min_with_location.a.data.d := 'The array to search';
help::pkg.utility.mathematics.funs.min_with_location.a.data.def := '';
help::pkg.utility.mathematics.funs.min_with_location.a.data.a := '';
help::pkg.utility.mathematics.funs.min_with_location.a.min_location := [=];
help::pkg.utility.mathematics.funs.min_with_location.a.min_location.d := 'Position of the minimum value';
help::pkg.utility.mathematics.funs.min_with_location.a.min_location.def := '';
help::pkg.utility.mathematics.funs.min_with_location.a.min_location.a := '';
help::pkg.utility.mathematics.funs.min_with_location.a.mask := [=];
help::pkg.utility.mathematics.funs.min_with_location.a.mask.d := 'If set, only consider locations where mask==True';
help::pkg.utility.mathematics.funs.min_with_location.a.mask.def := 'null';
help::pkg.utility.mathematics.funs.min_with_location.a.mask.a := 'bool array';
help::pkg.utility.mathematics.funs.min_with_location.s := 'min_with_location(data, min_location, mask)';
help::pkg.utility.mathematics.objs.fftserver := [=];
help::pkg.utility.mathematics.objs.fftserver.m := [=];
help::pkg.utility.mathematics.objs.fftserver.c := [=];
help::pkg.utility.mathematics.objs.fftserver.d := 'FFTs and related operations';
help::pkg.utility.mathematics.objs.fftserver.c.fftserver := [=];
help::pkg.utility.mathematics.objs.fftserver.c.fftserver.d := 'Construct an fftserver tool';
help::pkg.utility.mathematics.objs.fftserver.c.fftserver.s := 'fftserver()';
help::pkg.utility.mathematics.objs.fftserver.m.complexfft := [=];
help::pkg.utility.mathematics.objs.fftserver.m.complexfft.d := 'Complex in-place Fourier transform.';
help::pkg.utility.mathematics.objs.fftserver.m.complexfft.a.a := [=];
help::pkg.utility.mathematics.objs.fftserver.m.complexfft.a.a.d := 'Complex array to transform';
help::pkg.utility.mathematics.objs.fftserver.m.complexfft.a.a.def := '';
help::pkg.utility.mathematics.objs.fftserver.m.complexfft.a.a.a := '';
help::pkg.utility.mathematics.objs.fftserver.m.complexfft.a.dir := [=];
help::pkg.utility.mathematics.objs.fftserver.m.complexfft.a.dir.d := 'Direction of the transform';
help::pkg.utility.mathematics.objs.fftserver.m.complexfft.a.dir.def := '';
help::pkg.utility.mathematics.objs.fftserver.m.complexfft.a.dir.a := '+1 forward, -1 reverse';
help::pkg.utility.mathematics.objs.fftserver.m.complexfft.s := 'complexfft(a, dir)';
help::pkg.utility.mathematics.objs.fftserver.m.mfft := [=];
help::pkg.utility.mathematics.objs.fftserver.m.mfft.d := 'mutiple Fourier transforms.';
help::pkg.utility.mathematics.objs.fftserver.m.mfft.a.a := [=];
help::pkg.utility.mathematics.objs.fftserver.m.mfft.a.a.d := 'Complex array to transform';
help::pkg.utility.mathematics.objs.fftserver.m.mfft.a.a.def := '';
help::pkg.utility.mathematics.objs.fftserver.m.mfft.a.a.a := '';
help::pkg.utility.mathematics.objs.fftserver.m.mfft.a.axes := [=];
help::pkg.utility.mathematics.objs.fftserver.m.mfft.a.axes.d := 'axes to transform';
help::pkg.utility.mathematics.objs.fftserver.m.mfft.a.axes.def := '';
help::pkg.utility.mathematics.objs.fftserver.m.mfft.a.axes.a := 'Vector of Booleans';
help::pkg.utility.mathematics.objs.fftserver.m.mfft.a.forward := [=];
help::pkg.utility.mathematics.objs.fftserver.m.mfft.a.forward.d := 'Direction of the transform';
help::pkg.utility.mathematics.objs.fftserver.m.mfft.a.forward.def := 'T';
help::pkg.utility.mathematics.objs.fftserver.m.mfft.a.forward.a := 'T=forward, F=reverse';
help::pkg.utility.mathematics.objs.fftserver.m.mfft.s := 'mfft(a, axes, forward)';
help::pkg.utility.mathematics.objs.fftserver.m.realtocomplexfft := [=];
help::pkg.utility.mathematics.objs.fftserver.m.realtocomplexfft.d := 'Real to complex forward Fourier  transform.';
help::pkg.utility.mathematics.objs.fftserver.m.realtocomplexfft.a.a := [=];
help::pkg.utility.mathematics.objs.fftserver.m.realtocomplexfft.a.a.d := 'Any real array';
help::pkg.utility.mathematics.objs.fftserver.m.realtocomplexfft.a.a.def := '';
help::pkg.utility.mathematics.objs.fftserver.m.realtocomplexfft.a.a.a := '';
help::pkg.utility.mathematics.objs.fftserver.m.realtocomplexfft.s := 'realtocomplexfft(a)';
help::pkg.utility.mathematics.objs.fftserver.m.convolve := [=];
help::pkg.utility.mathematics.objs.fftserver.m.convolve.d := 'Convolve two arrays.';
help::pkg.utility.mathematics.objs.fftserver.m.convolve.a.a := [=];
help::pkg.utility.mathematics.objs.fftserver.m.convolve.a.a.d := 'Real array';
help::pkg.utility.mathematics.objs.fftserver.m.convolve.a.a.def := '';
help::pkg.utility.mathematics.objs.fftserver.m.convolve.a.a.a := '';
help::pkg.utility.mathematics.objs.fftserver.m.convolve.a.b := [=];
help::pkg.utility.mathematics.objs.fftserver.m.convolve.a.b.d := 'Real array';
help::pkg.utility.mathematics.objs.fftserver.m.convolve.a.b.def := '';
help::pkg.utility.mathematics.objs.fftserver.m.convolve.a.b.a := '';
help::pkg.utility.mathematics.objs.fftserver.m.convolve.s := 'convolve(a, b)';
help::pkg.utility.mathematics.objs.fftserver.m.crosscorr := [=];
help::pkg.utility.mathematics.objs.fftserver.m.crosscorr.d := 'Cross-correlate two arrays';
help::pkg.utility.mathematics.objs.fftserver.m.crosscorr.a.a := [=];
help::pkg.utility.mathematics.objs.fftserver.m.crosscorr.a.a.d := 'Real array';
help::pkg.utility.mathematics.objs.fftserver.m.crosscorr.a.a.def := '';
help::pkg.utility.mathematics.objs.fftserver.m.crosscorr.a.a.a := '';
help::pkg.utility.mathematics.objs.fftserver.m.crosscorr.a.b := [=];
help::pkg.utility.mathematics.objs.fftserver.m.crosscorr.a.b.d := 'Real array';
help::pkg.utility.mathematics.objs.fftserver.m.crosscorr.a.b.def := '';
help::pkg.utility.mathematics.objs.fftserver.m.crosscorr.a.b.a := '';
help::pkg.utility.mathematics.objs.fftserver.m.crosscorr.s := 'crosscorr(a, b)';
help::pkg.utility.mathematics.objs.fftserver.m.autocorr := [=];
help::pkg.utility.mathematics.objs.fftserver.m.autocorr.d := 'Auto-correlate an array';
help::pkg.utility.mathematics.objs.fftserver.m.autocorr.a.a := [=];
help::pkg.utility.mathematics.objs.fftserver.m.autocorr.a.a.d := 'Real array';
help::pkg.utility.mathematics.objs.fftserver.m.autocorr.a.a.def := '';
help::pkg.utility.mathematics.objs.fftserver.m.autocorr.a.a.a := '';
help::pkg.utility.mathematics.objs.fftserver.m.autocorr.s := 'autocorr(a)';
help::pkg.utility.mathematics.objs.fftserver.m.shift := [=];
help::pkg.utility.mathematics.objs.fftserver.m.shift.d := 'Shift an array a non-integral number of pixels.';
help::pkg.utility.mathematics.objs.fftserver.m.shift.a.a := [=];
help::pkg.utility.mathematics.objs.fftserver.m.shift.a.a.d := 'Real array';
help::pkg.utility.mathematics.objs.fftserver.m.shift.a.a.def := '';
help::pkg.utility.mathematics.objs.fftserver.m.shift.a.a.a := '';
help::pkg.utility.mathematics.objs.fftserver.m.shift.a.shift := [=];
help::pkg.utility.mathematics.objs.fftserver.m.shift.a.shift.d := 'How much to shift on each axis. $>0$ means towards the end of the array, $<0$ means towards the beginning of the array.';
help::pkg.utility.mathematics.objs.fftserver.m.shift.a.shift.def := '';
help::pkg.utility.mathematics.objs.fftserver.m.shift.a.shift.a := '';
help::pkg.utility.mathematics.objs.fftserver.m.shift.s := 'shift(a, shift)';
help::pkg.utility.mathematics.objs.fftserver.m.done := [=];
help::pkg.utility.mathematics.objs.fftserver.m.done.d := 'Delete the fftserver tool';
help::pkg.utility.mathematics.objs.fftserver.m.done.s := 'done()';
help::pkg.utility.mathematics.funs.fftserverdemo := [=];
help::pkg.utility.mathematics.funs.fftserverdemo.a := [=];
help::pkg.utility.mathematics.funs.fftserverdemo.d := 'Demonstrate the use of functions in fftserver';
help::pkg.utility.mathematics.funs.fftserverdemo.s := 'fftserverdemo()';
help::pkg.utility.mathematics.funs.fftservertest := [=];
help::pkg.utility.mathematics.funs.fftservertest.a := [=];
help::pkg.utility.mathematics.funs.fftservertest.d := 'Test the fftserver class';
help::pkg.utility.mathematics.funs.fftservertest.s := 'fftservertest()';
help::pkg.utility.mathematics.objs.interpolate1d := [=];
help::pkg.utility.mathematics.objs.interpolate1d.m := [=];
help::pkg.utility.mathematics.objs.interpolate1d.c := [=];
help::pkg.utility.mathematics.objs.interpolate1d.d := 'Various sorts of 1-dimensional interpolation';
help::pkg.utility.mathematics.objs.interpolate1d.c.interpolate1d := [=];
help::pkg.utility.mathematics.objs.interpolate1d.c.interpolate1d.d := 'Construct an interpolate1d \tool';
help::pkg.utility.mathematics.objs.interpolate1d.c.interpolate1d.s := 'interpolate1d()';
help::pkg.utility.mathematics.objs.interpolate1d.m.initialize := [=];
help::pkg.utility.mathematics.objs.interpolate1d.m.initialize.d := 'Set the data and the interpolation function';
help::pkg.utility.mathematics.objs.interpolate1d.m.initialize.a.x := [=];
help::pkg.utility.mathematics.objs.interpolate1d.m.initialize.a.x.d := 'independent data variable';
help::pkg.utility.mathematics.objs.interpolate1d.m.initialize.a.x.def := '';
help::pkg.utility.mathematics.objs.interpolate1d.m.initialize.a.x.a := 'Real valued array.';
help::pkg.utility.mathematics.objs.interpolate1d.m.initialize.a.y := [=];
help::pkg.utility.mathematics.objs.interpolate1d.m.initialize.a.y.d := 'dependent data variable';
help::pkg.utility.mathematics.objs.interpolate1d.m.initialize.a.y.def := '';
help::pkg.utility.mathematics.objs.interpolate1d.m.initialize.a.y.a := 'Real valued array. Must be the same length as x.';
help::pkg.utility.mathematics.objs.interpolate1d.m.initialize.a.function := [=];
help::pkg.utility.mathematics.objs.interpolate1d.m.initialize.a.function.d := 'interpolation function to use';
help::pkg.utility.mathematics.objs.interpolate1d.m.initialize.a.function.def := '\' linear\' ';
help::pkg.utility.mathematics.objs.interpolate1d.m.initialize.a.function.a := '\' linear\' , \' nearest\' , \' cubic\' , \' spline\' ';
help::pkg.utility.mathematics.objs.interpolate1d.m.initialize.s := 'initialize(x, y, function)';
help::pkg.utility.mathematics.objs.interpolate1d.m.interpolate := [=];
help::pkg.utility.mathematics.objs.interpolate1d.m.interpolate.d := 'Perform an interpolation';
help::pkg.utility.mathematics.objs.interpolate1d.m.interpolate.a.x := [=];
help::pkg.utility.mathematics.objs.interpolate1d.m.interpolate.a.x.d := 'Perform the interpolation for these positions';
help::pkg.utility.mathematics.objs.interpolate1d.m.interpolate.a.x.def := '';
help::pkg.utility.mathematics.objs.interpolate1d.m.interpolate.a.x.a := 'Real valued array';
help::pkg.utility.mathematics.objs.interpolate1d.m.interpolate.s := 'interpolate(x)';
help::pkg.utility.mathematics.objs.interpolate1d.m.setfunction := [=];
help::pkg.utility.mathematics.objs.interpolate1d.m.setfunction.d := 'Change the interpolation function';
help::pkg.utility.mathematics.objs.interpolate1d.m.setfunction.a.function := [=];
help::pkg.utility.mathematics.objs.interpolate1d.m.setfunction.a.function.d := 'interpolation function to use';
help::pkg.utility.mathematics.objs.interpolate1d.m.setfunction.a.function.def := '\' linear\' ';
help::pkg.utility.mathematics.objs.interpolate1d.m.setfunction.a.function.a := '\' linear\' , \' nearest\' , \' cubic\' , \' spline\' ';
help::pkg.utility.mathematics.objs.interpolate1d.m.setfunction.s := 'setfunction(function)';
help::pkg.utility.mathematics.objs.interpolate1d.m.done := [=];
help::pkg.utility.mathematics.objs.interpolate1d.m.done.d := 'Delete the interpolate1d tool';
help::pkg.utility.mathematics.objs.interpolate1d.m.done.s := 'done()';
help::pkg.utility.mathematics.objs.interpolate1d.m.type := [=];
help::pkg.utility.mathematics.objs.interpolate1d.m.type.d := 'Return the type of this tool';
help::pkg.utility.mathematics.objs.interpolate1d.m.type.s := 'type()';
help::pkg.utility.mathematics.funs.interpolate1ddemo := [=];
help::pkg.utility.mathematics.funs.interpolate1ddemo.a := [=];
help::pkg.utility.mathematics.funs.interpolate1ddemo.d := 'Demonstrate the use of functions in interpolate1d';
help::pkg.utility.mathematics.funs.interpolate1ddemo.s := 'interpolate1ddemo()';
help::pkg.utility.mathematics.funs.interpolate1dtest := [=];
help::pkg.utility.mathematics.funs.interpolate1dtest.a := [=];
help::pkg.utility.mathematics.funs.interpolate1dtest.d := 'Test the interpolate1d class';
help::pkg.utility.mathematics.funs.interpolate1dtest.s := 'interpolate1dtest()';
help::pkg.utility.mathematics.objs.randomnumbers := [=];
help::pkg.utility.mathematics.objs.randomnumbers.m := [=];
help::pkg.utility.mathematics.objs.randomnumbers.c := [=];
help::pkg.utility.mathematics.objs.randomnumbers.d := 'Random numbers from various statistical distributions';
help::pkg.utility.mathematics.objs.randomnumbers.c.randomnumbers := [=];
help::pkg.utility.mathematics.objs.randomnumbers.c.randomnumbers.d := 'Construct an randomnumbers tool';
help::pkg.utility.mathematics.objs.randomnumbers.c.randomnumbers.a.host := [=];
help::pkg.utility.mathematics.objs.randomnumbers.c.randomnumbers.a.host.d := 'The host on which the server process should be run';
help::pkg.utility.mathematics.objs.randomnumbers.c.randomnumbers.a.host.def := 'unset';
help::pkg.utility.mathematics.objs.randomnumbers.c.randomnumbers.a.host.a := 'string';
help::pkg.utility.mathematics.objs.randomnumbers.c.randomnumbers.a.forcenewserver := [=];
help::pkg.utility.mathematics.objs.randomnumbers.c.randomnumbers.a.forcenewserver.d := 'Always start a new server';
help::pkg.utility.mathematics.objs.randomnumbers.c.randomnumbers.a.forcenewserver.def := 'F';
help::pkg.utility.mathematics.objs.randomnumbers.c.randomnumbers.a.forcenewserver.a := 'Boolean';
help::pkg.utility.mathematics.objs.randomnumbers.c.randomnumbers.s := 'randomnumbers(host, forcenewserver)';
help::pkg.utility.mathematics.objs.randomnumbers.m.binomial := [=];
help::pkg.utility.mathematics.objs.randomnumbers.m.binomial.d := 'Generate binomially distributed random numbers';
help::pkg.utility.mathematics.objs.randomnumbers.m.binomial.a.number := [=];
help::pkg.utility.mathematics.objs.randomnumbers.m.binomial.a.number.d := 'Number of trials';
help::pkg.utility.mathematics.objs.randomnumbers.m.binomial.a.number.def := '1';
help::pkg.utility.mathematics.objs.randomnumbers.m.binomial.a.number.a := 'integer';
help::pkg.utility.mathematics.objs.randomnumbers.m.binomial.a.probability := [=];
help::pkg.utility.mathematics.objs.randomnumbers.m.binomial.a.probability.d := 'probability of success for one trial';
help::pkg.utility.mathematics.objs.randomnumbers.m.binomial.a.probability.def := '0.5';
help::pkg.utility.mathematics.objs.randomnumbers.m.binomial.a.probability.a := 'double';
help::pkg.utility.mathematics.objs.randomnumbers.m.binomial.a.shape := [=];
help::pkg.utility.mathematics.objs.randomnumbers.m.binomial.a.shape.d := 'Shape of the output array';
help::pkg.utility.mathematics.objs.randomnumbers.m.binomial.a.shape.def := '1';
help::pkg.utility.mathematics.objs.randomnumbers.m.binomial.a.shape.a := 'integer or a vector of integers';
help::pkg.utility.mathematics.objs.randomnumbers.m.binomial.s := 'binomial(number, probability, shape)';
help::pkg.utility.mathematics.objs.randomnumbers.m.discreteuniform := [=];
help::pkg.utility.mathematics.objs.randomnumbers.m.discreteuniform.d := 'Generate uniformly distributed random integers';
help::pkg.utility.mathematics.objs.randomnumbers.m.discreteuniform.a.low := [=];
help::pkg.utility.mathematics.objs.randomnumbers.m.discreteuniform.a.low.d := 'Lower bound';
help::pkg.utility.mathematics.objs.randomnumbers.m.discreteuniform.a.low.def := '-1';
help::pkg.utility.mathematics.objs.randomnumbers.m.discreteuniform.a.low.a := 'integer';
help::pkg.utility.mathematics.objs.randomnumbers.m.discreteuniform.a.high := [=];
help::pkg.utility.mathematics.objs.randomnumbers.m.discreteuniform.a.high.d := 'Upper bound';
help::pkg.utility.mathematics.objs.randomnumbers.m.discreteuniform.a.high.def := '1';
help::pkg.utility.mathematics.objs.randomnumbers.m.discreteuniform.a.high.a := 'integer';
help::pkg.utility.mathematics.objs.randomnumbers.m.discreteuniform.a.shape := [=];
help::pkg.utility.mathematics.objs.randomnumbers.m.discreteuniform.a.shape.d := 'Shape of the output array';
help::pkg.utility.mathematics.objs.randomnumbers.m.discreteuniform.a.shape.def := '1';
help::pkg.utility.mathematics.objs.randomnumbers.m.discreteuniform.a.shape.a := 'integer or a vector of integers';
help::pkg.utility.mathematics.objs.randomnumbers.m.discreteuniform.s := 'discreteuniform(low, high, shape)';
help::pkg.utility.mathematics.objs.randomnumbers.m.erlang := [=];
help::pkg.utility.mathematics.objs.randomnumbers.m.erlang.d := 'Generate random numbers that have an Erlang distribution.';
help::pkg.utility.mathematics.objs.randomnumbers.m.erlang.a.mean := [=];
help::pkg.utility.mathematics.objs.randomnumbers.m.erlang.a.mean.d := 'Mean of the distribution';
help::pkg.utility.mathematics.objs.randomnumbers.m.erlang.a.mean.def := '1.0';
help::pkg.utility.mathematics.objs.randomnumbers.m.erlang.a.mean.a := 'double';
help::pkg.utility.mathematics.objs.randomnumbers.m.erlang.a.variance := [=];
help::pkg.utility.mathematics.objs.randomnumbers.m.erlang.a.variance.d := 'Variance of the distribution';
help::pkg.utility.mathematics.objs.randomnumbers.m.erlang.a.variance.def := '1.0';
help::pkg.utility.mathematics.objs.randomnumbers.m.erlang.a.variance.a := 'double';
help::pkg.utility.mathematics.objs.randomnumbers.m.erlang.a.shape := [=];
help::pkg.utility.mathematics.objs.randomnumbers.m.erlang.a.shape.d := 'Shape of the output array';
help::pkg.utility.mathematics.objs.randomnumbers.m.erlang.a.shape.def := '1';
help::pkg.utility.mathematics.objs.randomnumbers.m.erlang.a.shape.a := 'integer or a vector of integers';
help::pkg.utility.mathematics.objs.randomnumbers.m.erlang.s := 'erlang(mean, variance, shape)';
help::pkg.utility.mathematics.objs.randomnumbers.m.geometric := [=];
help::pkg.utility.mathematics.objs.randomnumbers.m.geometric.d := 'Generate geometrically distributed random numbers';
help::pkg.utility.mathematics.objs.randomnumbers.m.geometric.a.probability := [=];
help::pkg.utility.mathematics.objs.randomnumbers.m.geometric.a.probability.d := 'probability';
help::pkg.utility.mathematics.objs.randomnumbers.m.geometric.a.probability.def := '0.5';
help::pkg.utility.mathematics.objs.randomnumbers.m.geometric.a.probability.a := 'double';
help::pkg.utility.mathematics.objs.randomnumbers.m.geometric.a.shape := [=];
help::pkg.utility.mathematics.objs.randomnumbers.m.geometric.a.shape.d := 'Shape of the output array';
help::pkg.utility.mathematics.objs.randomnumbers.m.geometric.a.shape.def := '1';
help::pkg.utility.mathematics.objs.randomnumbers.m.geometric.a.shape.a := 'integer or a vector of integers';
help::pkg.utility.mathematics.objs.randomnumbers.m.geometric.s := 'geometric(probability, shape)';
help::pkg.utility.mathematics.objs.randomnumbers.m.hypergeometric := [=];
help::pkg.utility.mathematics.objs.randomnumbers.m.hypergeometric.d := 'Generate random numbers that have an hyper-geometric distribution.';
help::pkg.utility.mathematics.objs.randomnumbers.m.hypergeometric.a.mean := [=];
help::pkg.utility.mathematics.objs.randomnumbers.m.hypergeometric.a.mean.d := 'Mean of the distribution';
help::pkg.utility.mathematics.objs.randomnumbers.m.hypergeometric.a.mean.def := '0.5';
help::pkg.utility.mathematics.objs.randomnumbers.m.hypergeometric.a.mean.a := 'double';
help::pkg.utility.mathematics.objs.randomnumbers.m.hypergeometric.a.variance := [=];
help::pkg.utility.mathematics.objs.randomnumbers.m.hypergeometric.a.variance.d := 'Variance of the distribution';
help::pkg.utility.mathematics.objs.randomnumbers.m.hypergeometric.a.variance.def := '1.0';
help::pkg.utility.mathematics.objs.randomnumbers.m.hypergeometric.a.variance.a := 'double';
help::pkg.utility.mathematics.objs.randomnumbers.m.hypergeometric.a.shape := [=];
help::pkg.utility.mathematics.objs.randomnumbers.m.hypergeometric.a.shape.d := 'Shape of the output array';
help::pkg.utility.mathematics.objs.randomnumbers.m.hypergeometric.a.shape.def := '1';
help::pkg.utility.mathematics.objs.randomnumbers.m.hypergeometric.a.shape.a := 'integer or a vector of integers';
help::pkg.utility.mathematics.objs.randomnumbers.m.hypergeometric.s := 'hypergeometric(mean, variance, shape)';
help::pkg.utility.mathematics.objs.randomnumbers.m.normal := [=];
help::pkg.utility.mathematics.objs.randomnumbers.m.normal.d := 'Generate normally distributed random numbers';
help::pkg.utility.mathematics.objs.randomnumbers.m.normal.a.mean := [=];
help::pkg.utility.mathematics.objs.randomnumbers.m.normal.a.mean.d := 'Mean of the distribution';
help::pkg.utility.mathematics.objs.randomnumbers.m.normal.a.mean.def := '0.0';
help::pkg.utility.mathematics.objs.randomnumbers.m.normal.a.mean.a := 'double';
help::pkg.utility.mathematics.objs.randomnumbers.m.normal.a.variance := [=];
help::pkg.utility.mathematics.objs.randomnumbers.m.normal.a.variance.d := 'Variance of the distribution';
help::pkg.utility.mathematics.objs.randomnumbers.m.normal.a.variance.def := '1.0';
help::pkg.utility.mathematics.objs.randomnumbers.m.normal.a.variance.a := 'double';
help::pkg.utility.mathematics.objs.randomnumbers.m.normal.a.shape := [=];
help::pkg.utility.mathematics.objs.randomnumbers.m.normal.a.shape.d := 'Shape of the output array';
help::pkg.utility.mathematics.objs.randomnumbers.m.normal.a.shape.def := '1';
help::pkg.utility.mathematics.objs.randomnumbers.m.normal.a.shape.a := 'integer or a vector of integers';
help::pkg.utility.mathematics.objs.randomnumbers.m.normal.s := 'normal(mean, variance, shape)';
help::pkg.utility.mathematics.objs.randomnumbers.m.lognormal := [=];
help::pkg.utility.mathematics.objs.randomnumbers.m.lognormal.d := 'Generate random numbers with a log-normal distribution';
help::pkg.utility.mathematics.objs.randomnumbers.m.lognormal.a.mean := [=];
help::pkg.utility.mathematics.objs.randomnumbers.m.lognormal.a.mean.d := 'Mean of the distribution';
help::pkg.utility.mathematics.objs.randomnumbers.m.lognormal.a.mean.def := '1.0';
help::pkg.utility.mathematics.objs.randomnumbers.m.lognormal.a.mean.a := 'double';
help::pkg.utility.mathematics.objs.randomnumbers.m.lognormal.a.variance := [=];
help::pkg.utility.mathematics.objs.randomnumbers.m.lognormal.a.variance.d := 'Variance of the distribution';
help::pkg.utility.mathematics.objs.randomnumbers.m.lognormal.a.variance.def := '1.0';
help::pkg.utility.mathematics.objs.randomnumbers.m.lognormal.a.variance.a := 'double';
help::pkg.utility.mathematics.objs.randomnumbers.m.lognormal.a.shape := [=];
help::pkg.utility.mathematics.objs.randomnumbers.m.lognormal.a.shape.d := 'Shape of the output array';
help::pkg.utility.mathematics.objs.randomnumbers.m.lognormal.a.shape.def := '1';
help::pkg.utility.mathematics.objs.randomnumbers.m.lognormal.a.shape.a := 'integer or a vector of integers';
help::pkg.utility.mathematics.objs.randomnumbers.m.lognormal.s := 'lognormal(mean, variance, shape)';
help::pkg.utility.mathematics.objs.randomnumbers.m.negativeexponential := [=];
help::pkg.utility.mathematics.objs.randomnumbers.m.negativeexponential.d := 'Generate random numbers with a negative-exponential distribution';
help::pkg.utility.mathematics.objs.randomnumbers.m.negativeexponential.a.mean := [=];
help::pkg.utility.mathematics.objs.randomnumbers.m.negativeexponential.a.mean.d := 'Mean of the distribution';
help::pkg.utility.mathematics.objs.randomnumbers.m.negativeexponential.a.mean.def := '1.0';
help::pkg.utility.mathematics.objs.randomnumbers.m.negativeexponential.a.mean.a := 'double';
help::pkg.utility.mathematics.objs.randomnumbers.m.negativeexponential.a.shape := [=];
help::pkg.utility.mathematics.objs.randomnumbers.m.negativeexponential.a.shape.d := 'Shape of the output array';
help::pkg.utility.mathematics.objs.randomnumbers.m.negativeexponential.a.shape.def := '1';
help::pkg.utility.mathematics.objs.randomnumbers.m.negativeexponential.a.shape.a := 'integer or a vector of integers';
help::pkg.utility.mathematics.objs.randomnumbers.m.negativeexponential.s := 'negativeexponential(mean, shape)';
help::pkg.utility.mathematics.objs.randomnumbers.m.poisson := [=];
help::pkg.utility.mathematics.objs.randomnumbers.m.poisson.d := 'Generate Poisson distributed random numbers';
help::pkg.utility.mathematics.objs.randomnumbers.m.poisson.a.mean := [=];
help::pkg.utility.mathematics.objs.randomnumbers.m.poisson.a.mean.d := 'Mean of the distribution';
help::pkg.utility.mathematics.objs.randomnumbers.m.poisson.a.mean.def := '1.0';
help::pkg.utility.mathematics.objs.randomnumbers.m.poisson.a.mean.a := 'double';
help::pkg.utility.mathematics.objs.randomnumbers.m.poisson.a.shape := [=];
help::pkg.utility.mathematics.objs.randomnumbers.m.poisson.a.shape.d := 'Shape of the output array';
help::pkg.utility.mathematics.objs.randomnumbers.m.poisson.a.shape.def := '1';
help::pkg.utility.mathematics.objs.randomnumbers.m.poisson.a.shape.a := 'integer or a vector of integers';
help::pkg.utility.mathematics.objs.randomnumbers.m.poisson.s := 'poisson(mean, shape)';
help::pkg.utility.mathematics.objs.randomnumbers.m.uniform := [=];
help::pkg.utility.mathematics.objs.randomnumbers.m.uniform.d := 'Generate uniformly distributed random numbers';
help::pkg.utility.mathematics.objs.randomnumbers.m.uniform.a.low := [=];
help::pkg.utility.mathematics.objs.randomnumbers.m.uniform.a.low.d := 'Lower bound';
help::pkg.utility.mathematics.objs.randomnumbers.m.uniform.a.low.def := '-1.0';
help::pkg.utility.mathematics.objs.randomnumbers.m.uniform.a.low.a := 'integer';
help::pkg.utility.mathematics.objs.randomnumbers.m.uniform.a.high := [=];
help::pkg.utility.mathematics.objs.randomnumbers.m.uniform.a.high.d := 'Upper bound';
help::pkg.utility.mathematics.objs.randomnumbers.m.uniform.a.high.def := '1.0';
help::pkg.utility.mathematics.objs.randomnumbers.m.uniform.a.high.a := 'integer';
help::pkg.utility.mathematics.objs.randomnumbers.m.uniform.a.shape := [=];
help::pkg.utility.mathematics.objs.randomnumbers.m.uniform.a.shape.d := 'Shape of the output array';
help::pkg.utility.mathematics.objs.randomnumbers.m.uniform.a.shape.def := '1';
help::pkg.utility.mathematics.objs.randomnumbers.m.uniform.a.shape.a := 'integer or a vector of integers';
help::pkg.utility.mathematics.objs.randomnumbers.m.uniform.s := 'uniform(low, high, shape)';
help::pkg.utility.mathematics.objs.randomnumbers.m.weibull := [=];
help::pkg.utility.mathematics.objs.randomnumbers.m.weibull.d := 'Generate random numbers with a Weibull distribution';
help::pkg.utility.mathematics.objs.randomnumbers.m.weibull.a.alpha := [=];
help::pkg.utility.mathematics.objs.randomnumbers.m.weibull.a.alpha.d := 'The alpha parameter';
help::pkg.utility.mathematics.objs.randomnumbers.m.weibull.a.alpha.def := '1.0';
help::pkg.utility.mathematics.objs.randomnumbers.m.weibull.a.alpha.a := 'double';
help::pkg.utility.mathematics.objs.randomnumbers.m.weibull.a.beta := [=];
help::pkg.utility.mathematics.objs.randomnumbers.m.weibull.a.beta.d := 'The beta parameter';
help::pkg.utility.mathematics.objs.randomnumbers.m.weibull.a.beta.def := '1.0';
help::pkg.utility.mathematics.objs.randomnumbers.m.weibull.a.beta.a := 'double';
help::pkg.utility.mathematics.objs.randomnumbers.m.weibull.a.shape := [=];
help::pkg.utility.mathematics.objs.randomnumbers.m.weibull.a.shape.d := 'Shape of the output array';
help::pkg.utility.mathematics.objs.randomnumbers.m.weibull.a.shape.def := '1';
help::pkg.utility.mathematics.objs.randomnumbers.m.weibull.a.shape.a := 'integer or a vector of integers';
help::pkg.utility.mathematics.objs.randomnumbers.m.weibull.s := 'weibull(alpha, beta, shape)';
help::pkg.utility.mathematics.objs.randomnumbers.m.reseed := [=];
help::pkg.utility.mathematics.objs.randomnumbers.m.reseed.d := 'Set the seed used by the random number generator.';
help::pkg.utility.mathematics.objs.randomnumbers.m.reseed.a.seed := [=];
help::pkg.utility.mathematics.objs.randomnumbers.m.reseed.a.seed.d := 'seed';
help::pkg.utility.mathematics.objs.randomnumbers.m.reseed.a.seed.def := 'unset';
help::pkg.utility.mathematics.objs.randomnumbers.m.reseed.a.seed.a := 'double or unset';
help::pkg.utility.mathematics.objs.randomnumbers.m.reseed.s := 'reseed(seed)';
help::pkg.utility.mathematics.objs.randomnumbers.m.done := [=];
help::pkg.utility.mathematics.objs.randomnumbers.m.done.d := 'Delete the randomnumbers tool';
help::pkg.utility.mathematics.objs.randomnumbers.m.done.s := 'done()';
help::pkg.utility.mathematics.objs.randomnumbers.m.type := [=];
help::pkg.utility.mathematics.objs.randomnumbers.m.type.d := 'Return the type of this tool';
help::pkg.utility.mathematics.objs.randomnumbers.m.type.s := 'type()';
help::pkg.utility.mathematics.funs.randomnumbersdemo := [=];
help::pkg.utility.mathematics.funs.randomnumbersdemo.a := [=];
help::pkg.utility.mathematics.funs.randomnumbersdemo.d := 'Demonstrate the randomnumbers tool';
help::pkg.utility.mathematics.funs.randomnumbersdemo.s := 'randomnumbersdemo()';
help::pkg.utility.mathematics.funs.randomnumberstest := [=];
help::pkg.utility.mathematics.funs.randomnumberstest.a := [=];
help::pkg.utility.mathematics.funs.randomnumberstest.d := 'Test the randomnumbers class';
help::pkg.utility.mathematics.funs.randomnumberstest.s := 'randomnumberstest()';
help::pkg.utility.mathematics.objs.gauss1dfitter := [=];
help::pkg.utility.mathematics.objs.gauss1dfitter.m := [=];
help::pkg.utility.mathematics.objs.gauss1dfitter.c := [=];
help::pkg.utility.mathematics.objs.gauss1dfitter.d := 'Non-linear least-squares fit multiple 1-D Gaussians to vector';
help::pkg.utility.mathematics.objs.gauss1dfitter.c.gauss1dfit := [=];
help::pkg.utility.mathematics.objs.gauss1dfitter.c.gauss1dfit.d := 'Construct a gauss1dfit tool';
help::pkg.utility.mathematics.objs.gauss1dfitter.c.gauss1dfit.s := 'gauss1dfit()';
help::pkg.utility.mathematics.objs.gauss1dfitter.m.fit := [=];
help::pkg.utility.mathematics.objs.gauss1dfitter.m.fit.d := 'Fit Gaussian(s) to y vector given x vector';
help::pkg.utility.mathematics.objs.gauss1dfitter.m.fit.a.x := [=];
help::pkg.utility.mathematics.objs.gauss1dfitter.m.fit.a.x.d := 'X coordinate at y values';
help::pkg.utility.mathematics.objs.gauss1dfitter.m.fit.a.x.def := '';
help::pkg.utility.mathematics.objs.gauss1dfitter.m.fit.a.x.a := 'vector double';
help::pkg.utility.mathematics.objs.gauss1dfitter.m.fit.a.y := [=];
help::pkg.utility.mathematics.objs.gauss1dfitter.m.fit.a.y.d := 'Y values to fit. Must be the same length as x.';
help::pkg.utility.mathematics.objs.gauss1dfitter.m.fit.a.y.def := '';
help::pkg.utility.mathematics.objs.gauss1dfitter.m.fit.a.y.a := 'vector double';
help::pkg.utility.mathematics.objs.gauss1dfitter.m.fit.s := 'fit(x, y)';
help::pkg.utility.mathematics.objs.gauss1dfitter.m.fit.s := 'fit(x, y)';
help::pkg.utility.mathematics.objs.gauss1dfitter.m.fit.s := 'fit(x, y)';
help::pkg.utility.mathematics.objs.gauss1dfitter.m.eval := [=];
help::pkg.utility.mathematics.objs.gauss1dfitter.m.eval.d := 'Evaluate a sum of Gaussians (usually the result of a fit)';
help::pkg.utility.mathematics.objs.gauss1dfitter.m.eval.a.x := [=];
help::pkg.utility.mathematics.objs.gauss1dfitter.m.eval.a.x.d := 'The coordinate values at which the function will be evaluated';
help::pkg.utility.mathematics.objs.gauss1dfitter.m.eval.a.x.def := '';
help::pkg.utility.mathematics.objs.gauss1dfitter.m.eval.a.x.a := 'vector double';
help::pkg.utility.mathematics.objs.gauss1dfitter.m.eval.s := 'eval(x)';
help::pkg.utility.mathematics.objs.gauss1dfitter.m.getstate := [=];
help::pkg.utility.mathematics.objs.gauss1dfitter.m.getstate.d := 'Get the state of the fitter';
help::pkg.utility.mathematics.objs.gauss1dfitter.m.getstate.s := 'getstate()';
help::pkg.utility.mathematics.objs.gauss1dfitter.m.setstate := [=];
help::pkg.utility.mathematics.objs.gauss1dfitter.m.setstate.d := 'Set the state of the fitter';
help::pkg.utility.mathematics.objs.gauss1dfitter.m.setstate.a.state := [=];
help::pkg.utility.mathematics.objs.gauss1dfitter.m.setstate.a.state.d := 'Part or all of a state record';
help::pkg.utility.mathematics.objs.gauss1dfitter.m.setstate.a.state.def := '';
help::pkg.utility.mathematics.objs.gauss1dfitter.m.setstate.a.state.a := 'record';
help::pkg.utility.mathematics.objs.gauss1dfitter.m.setstate.s := 'setstate(state)';
help::pkg.utility.mathematics.objs.gauss1dfitter.m.setheight := [=];
help::pkg.utility.mathematics.objs.gauss1dfitter.m.setheight.d := 'Set the height state';
help::pkg.utility.mathematics.objs.gauss1dfitter.m.setheight.a.height := [=];
help::pkg.utility.mathematics.objs.gauss1dfitter.m.setheight.a.height.d := 'New vector of heights';
help::pkg.utility.mathematics.objs.gauss1dfitter.m.setheight.a.height.def := '';
help::pkg.utility.mathematics.objs.gauss1dfitter.m.setheight.a.height.a := 'vector double';
help::pkg.utility.mathematics.objs.gauss1dfitter.m.setheight.s := 'setheight(height)';
help::pkg.utility.mathematics.objs.gauss1dfitter.m.setcenter := [=];
help::pkg.utility.mathematics.objs.gauss1dfitter.m.setcenter.d := 'Set the center state';
help::pkg.utility.mathematics.objs.gauss1dfitter.m.setcenter.a.center := [=];
help::pkg.utility.mathematics.objs.gauss1dfitter.m.setcenter.a.center.d := 'New vector of center';
help::pkg.utility.mathematics.objs.gauss1dfitter.m.setcenter.a.center.def := '';
help::pkg.utility.mathematics.objs.gauss1dfitter.m.setcenter.a.center.a := 'vector double';
help::pkg.utility.mathematics.objs.gauss1dfitter.m.setcenter.s := 'setcenter(center)';
help::pkg.utility.mathematics.objs.gauss1dfitter.m.setwidth := [=];
help::pkg.utility.mathematics.objs.gauss1dfitter.m.setwidth.d := 'Set the width state';
help::pkg.utility.mathematics.objs.gauss1dfitter.m.setwidth.a.width := [=];
help::pkg.utility.mathematics.objs.gauss1dfitter.m.setwidth.a.width.d := 'New vector of widths';
help::pkg.utility.mathematics.objs.gauss1dfitter.m.setwidth.a.width.def := '';
help::pkg.utility.mathematics.objs.gauss1dfitter.m.setwidth.a.width.a := 'vector double';
help::pkg.utility.mathematics.objs.gauss1dfitter.m.setwidth.s := 'setwidth(width)';
help::pkg.utility.mathematics.objs.gauss1dfitter.m.setmaxiter := [=];
help::pkg.utility.mathematics.objs.gauss1dfitter.m.setmaxiter.d := 'Set the maximum number of iterations';
help::pkg.utility.mathematics.objs.gauss1dfitter.m.setmaxiter.a.maxiter := [=];
help::pkg.utility.mathematics.objs.gauss1dfitter.m.setmaxiter.a.maxiter.d := 'New maxiter';
help::pkg.utility.mathematics.objs.gauss1dfitter.m.setmaxiter.a.maxiter.def := '';
help::pkg.utility.mathematics.objs.gauss1dfitter.m.setmaxiter.a.maxiter.a := 'integer';
help::pkg.utility.mathematics.objs.gauss1dfitter.m.setmaxiter.s := 'setmaxiter(maxiter)';
help::pkg.utility.mathematics.objs.gauss1dfitter.m.setcriteria := [=];
help::pkg.utility.mathematics.objs.gauss1dfitter.m.setcriteria.d := 'Set the convergence criteria';
help::pkg.utility.mathematics.objs.gauss1dfitter.m.setcriteria.a.criteria := [=];
help::pkg.utility.mathematics.objs.gauss1dfitter.m.setcriteria.a.criteria.d := 'New criteria';
help::pkg.utility.mathematics.objs.gauss1dfitter.m.setcriteria.a.criteria.def := '';
help::pkg.utility.mathematics.objs.gauss1dfitter.m.setcriteria.a.criteria.a := 'double';
help::pkg.utility.mathematics.objs.gauss1dfitter.m.setcriteria.s := 'setcriteria(criteria)';
help::pkg.utility.mathematics.objs.polyfitter := [=];
help::pkg.utility.mathematics.objs.polyfitter.m := [=];
help::pkg.utility.mathematics.objs.polyfitter.c := [=];
help::pkg.utility.mathematics.objs.polyfitter.d := 'Least-squares fit polynomials to data';
help::pkg.utility.mathematics.objs.polyfitter.m.fit := [=];
help::pkg.utility.mathematics.objs.polyfitter.m.fit.d := 'Fit a polynomial of a specified order to data';
help::pkg.utility.mathematics.objs.polyfitter.m.fit.a.coeff := [=];
help::pkg.utility.mathematics.objs.polyfitter.m.fit.a.coeff.d := 'The coefficients of the fit. The constant (0th-order) term is first, highest order term last. (Output)';
help::pkg.utility.mathematics.objs.polyfitter.m.fit.a.coeff.def := '';
help::pkg.utility.mathematics.objs.polyfitter.m.fit.a.coeff.a := '';
help::pkg.utility.mathematics.objs.polyfitter.m.fit.a.coefferrs := [=];
help::pkg.utility.mathematics.objs.polyfitter.m.fit.a.coefferrs.d := 'Estimated errors of the fit. (Output)';
help::pkg.utility.mathematics.objs.polyfitter.m.fit.a.coefferrs.def := '';
help::pkg.utility.mathematics.objs.polyfitter.m.fit.a.coefferrs.a := '';
help::pkg.utility.mathematics.objs.polyfitter.m.fit.a.chisq := [=];
help::pkg.utility.mathematics.objs.polyfitter.m.fit.a.chisq.d := '$\chi^2$ for the fit. (Output)';
help::pkg.utility.mathematics.objs.polyfitter.m.fit.a.chisq.def := '';
help::pkg.utility.mathematics.objs.polyfitter.m.fit.a.chisq.a := '';
help::pkg.utility.mathematics.objs.polyfitter.m.fit.a.x := [=];
help::pkg.utility.mathematics.objs.polyfitter.m.fit.a.x.d := '(Input)';
help::pkg.utility.mathematics.objs.polyfitter.m.fit.a.x.def := '';
help::pkg.utility.mathematics.objs.polyfitter.m.fit.a.x.a := '';
help::pkg.utility.mathematics.objs.polyfitter.m.fit.a.y := [=];
help::pkg.utility.mathematics.objs.polyfitter.m.fit.a.y.d := 'Must be the same length as ``x\' \' . (Input)';
help::pkg.utility.mathematics.objs.polyfitter.m.fit.a.y.def := '';
help::pkg.utility.mathematics.objs.polyfitter.m.fit.a.y.a := '';
help::pkg.utility.mathematics.objs.polyfitter.m.fit.a.sigma := [=];
help::pkg.utility.mathematics.objs.polyfitter.m.fit.a.sigma.d := 'Errors in the ``y\' \'  values. (Input) ';
help::pkg.utility.mathematics.objs.polyfitter.m.fit.a.sigma.def := '1.0';
help::pkg.utility.mathematics.objs.polyfitter.m.fit.a.sigma.a := '';
help::pkg.utility.mathematics.objs.polyfitter.m.fit.a.order := [=];
help::pkg.utility.mathematics.objs.polyfitter.m.fit.a.order.d := 'Order of the highest term in the polynomial to fit. (Input)';
help::pkg.utility.mathematics.objs.polyfitter.m.fit.a.order.def := '1';
help::pkg.utility.mathematics.objs.polyfitter.m.fit.a.order.a := '$0\le order \le 10$';
help::pkg.utility.mathematics.objs.polyfitter.m.fit.s := 'fit(coeff, coefferrs, chisq, x, y, sigma, order)';
help::pkg.utility.mathematics.objs.polyfitter.m.multifit := [=];
help::pkg.utility.mathematics.objs.polyfitter.m.multifit.d := 'Fit several sets of data to polynomials';
help::pkg.utility.mathematics.objs.polyfitter.m.multifit.a.coeff := [=];
help::pkg.utility.mathematics.objs.polyfitter.m.multifit.a.coeff.d := 'The coefficients of the fit. The constant (0th-order) term is first, highest order term last. coeff[,1] are the coefficients for the first fit, coeff[,2] for the second, and so on. (Output)';
help::pkg.utility.mathematics.objs.polyfitter.m.multifit.a.coeff.def := '';
help::pkg.utility.mathematics.objs.polyfitter.m.multifit.a.coeff.a := '';
help::pkg.utility.mathematics.objs.polyfitter.m.multifit.a.coefferrs := [=];
help::pkg.utility.mathematics.objs.polyfitter.m.multifit.a.coefferrs.d := 'Estimated errors of the fit. coefferrs[,i] are the errors for the ith fit. (Output)';
help::pkg.utility.mathematics.objs.polyfitter.m.multifit.a.coefferrs.def := '';
help::pkg.utility.mathematics.objs.polyfitter.m.multifit.a.coefferrs.a := '';
help::pkg.utility.mathematics.objs.polyfitter.m.multifit.a.chisq := [=];
help::pkg.utility.mathematics.objs.polyfitter.m.multifit.a.chisq.d := '$\chi^2$ for the fit. chisq[i] is the chi-square for the i\' th fit. (Output)';
help::pkg.utility.mathematics.objs.polyfitter.m.multifit.a.chisq.def := '';
help::pkg.utility.mathematics.objs.polyfitter.m.multifit.a.chisq.a := '';
help::pkg.utility.mathematics.objs.polyfitter.m.multifit.a.x := [=];
help::pkg.utility.mathematics.objs.polyfitter.m.multifit.a.x.d := 'One dimensional array. (Input)';
help::pkg.utility.mathematics.objs.polyfitter.m.multifit.a.x.def := '';
help::pkg.utility.mathematics.objs.polyfitter.m.multifit.a.x.a := '';
help::pkg.utility.mathematics.objs.polyfitter.m.multifit.a.y := [=];
help::pkg.utility.mathematics.objs.polyfitter.m.multifit.a.y.d := 'Must be the same length as ``x\' \'  in its first axis, the length of the second axis is the number of fits to do. (Input)';
help::pkg.utility.mathematics.objs.polyfitter.m.multifit.a.y.def := '';
help::pkg.utility.mathematics.objs.polyfitter.m.multifit.a.y.a := '';
help::pkg.utility.mathematics.objs.polyfitter.m.multifit.a.sigma := [=];
help::pkg.utility.mathematics.objs.polyfitter.m.multifit.a.sigma.d := 'Errors in the ``y\' \'  values. If one dimensional, the sigmas are assumed to be the same for all fits. (Input) ';
help::pkg.utility.mathematics.objs.polyfitter.m.multifit.a.sigma.def := '1.0';
help::pkg.utility.mathematics.objs.polyfitter.m.multifit.a.sigma.a := '';
help::pkg.utility.mathematics.objs.polyfitter.m.multifit.a.order := [=];
help::pkg.utility.mathematics.objs.polyfitter.m.multifit.a.order.d := 'Order of the highest term in the polynomial to fit. (Input)';
help::pkg.utility.mathematics.objs.polyfitter.m.multifit.a.order.def := '1';
help::pkg.utility.mathematics.objs.polyfitter.m.multifit.a.order.a := '$0\le order \le 10$';
help::pkg.utility.mathematics.objs.polyfitter.m.multifit.s := 'multifit(coeff, coefferrs, chisq, x, y, sigma, order)';
help::pkg.utility.mathematics.objs.polyfitter.m.eval := [=];
help::pkg.utility.mathematics.objs.polyfitter.m.eval.d := 'Evaluate a polynomial (usually the result of a fit)';
help::pkg.utility.mathematics.objs.polyfitter.m.eval.a.y := [=];
help::pkg.utility.mathematics.objs.polyfitter.m.eval.a.y.d := 'Values of the evaluated polynomial.  If coeff has two dimensions, y[,1] is the evaluation using coeff[,1], y[,2] corresponds to coeff[,2] and so on.(Output)';
help::pkg.utility.mathematics.objs.polyfitter.m.eval.a.y.def := '';
help::pkg.utility.mathematics.objs.polyfitter.m.eval.a.y.a := '';
help::pkg.utility.mathematics.objs.polyfitter.m.eval.a.x := [=];
help::pkg.utility.mathematics.objs.polyfitter.m.eval.a.x.d := 'The independent variable. (Input)';
help::pkg.utility.mathematics.objs.polyfitter.m.eval.a.x.def := '';
help::pkg.utility.mathematics.objs.polyfitter.m.eval.a.x.a := '';
help::pkg.utility.mathematics.objs.polyfitter.m.eval.a.coeff := [=];
help::pkg.utility.mathematics.objs.polyfitter.m.eval.a.coeff.d := 'The coefficients in the order as emitted by fit or multifit.(Input)';
help::pkg.utility.mathematics.objs.polyfitter.m.eval.a.coeff.def := '';
help::pkg.utility.mathematics.objs.polyfitter.m.eval.a.coeff.a := '';
help::pkg.utility.mathematics.objs.polyfitter.m.eval.s := 'eval(y, x, coeff)';
help::pkg.utility.mathematics.funs.polyfitterdemo := [=];
help::pkg.utility.mathematics.funs.polyfitterdemo.a := [=];
help::pkg.utility.mathematics.funs.polyfitterdemo.d := 'Demonstrate the use of functions in polyfitter';
help::pkg.utility.mathematics.funs.polyfitterdemo.s := 'polyfitterdemo()';
help::pkg.utility.mathematics.funs.polyfittertest := [=];
help::pkg.utility.mathematics.funs.polyfittertest.a := [=];
help::pkg.utility.mathematics.funs.polyfittertest.d := 'Test the polyfitter class';
help::pkg.utility.mathematics.funs.polyfittertest.s := 'polyfittertest()';
help::pkg.utility.mathematics.objs.sinusoidfitter := [=];
help::pkg.utility.mathematics.objs.sinusoidfitter.m := [=];
help::pkg.utility.mathematics.objs.sinusoidfitter.c := [=];
help::pkg.utility.mathematics.objs.sinusoidfitter.d := 'Non-linear least-squares fit sinusoid to data';
help::pkg.utility.mathematics.objs.sinusoidfitter.m.fit := [=];
help::pkg.utility.mathematics.objs.sinusoidfitter.m.fit.d := 'Fit a sinusoid to data';
help::pkg.utility.mathematics.objs.sinusoidfitter.m.fit.a.state := [=];
help::pkg.utility.mathematics.objs.sinusoidfitter.m.fit.a.state.d := 'The state of the fitter after the fit. (Output)';
help::pkg.utility.mathematics.objs.sinusoidfitter.m.fit.a.state.def := '';
help::pkg.utility.mathematics.objs.sinusoidfitter.m.fit.a.state.a := '';
help::pkg.utility.mathematics.objs.sinusoidfitter.m.fit.a.x := [=];
help::pkg.utility.mathematics.objs.sinusoidfitter.m.fit.a.x.d := '(Input)';
help::pkg.utility.mathematics.objs.sinusoidfitter.m.fit.a.x.def := '';
help::pkg.utility.mathematics.objs.sinusoidfitter.m.fit.a.x.a := '';
help::pkg.utility.mathematics.objs.sinusoidfitter.m.fit.a.y := [=];
help::pkg.utility.mathematics.objs.sinusoidfitter.m.fit.a.y.d := 'Must be the same length as ``x\' \' . (Input)';
help::pkg.utility.mathematics.objs.sinusoidfitter.m.fit.a.y.def := '';
help::pkg.utility.mathematics.objs.sinusoidfitter.m.fit.a.y.a := '';
help::pkg.utility.mathematics.objs.sinusoidfitter.m.fit.a.sigma := [=];
help::pkg.utility.mathematics.objs.sinusoidfitter.m.fit.a.sigma.d := 'Errors in the ``y\' \'  values. (Input) ';
help::pkg.utility.mathematics.objs.sinusoidfitter.m.fit.a.sigma.def := '1.0';
help::pkg.utility.mathematics.objs.sinusoidfitter.m.fit.a.sigma.a := '';
help::pkg.utility.mathematics.objs.sinusoidfitter.m.fit.s := 'fit(state, x, y, sigma)';
help::pkg.utility.mathematics.objs.sinusoidfitter.m.eval := [=];
help::pkg.utility.mathematics.objs.sinusoidfitter.m.eval.d := 'Evaluate a sinusoid (usually the result of a fit)';
help::pkg.utility.mathematics.objs.sinusoidfitter.m.eval.a.y := [=];
help::pkg.utility.mathematics.objs.sinusoidfitter.m.eval.a.y.d := 'Values of the evaluated sinusoid. (Output)';
help::pkg.utility.mathematics.objs.sinusoidfitter.m.eval.a.y.def := '';
help::pkg.utility.mathematics.objs.sinusoidfitter.m.eval.a.y.a := '';
help::pkg.utility.mathematics.objs.sinusoidfitter.m.eval.a.x := [=];
help::pkg.utility.mathematics.objs.sinusoidfitter.m.eval.a.x.d := 'The independent variable. (Input)';
help::pkg.utility.mathematics.objs.sinusoidfitter.m.eval.a.x.def := '';
help::pkg.utility.mathematics.objs.sinusoidfitter.m.eval.a.x.a := '';
help::pkg.utility.mathematics.objs.sinusoidfitter.m.eval.s := 'eval(y, x)';
help::pkg.utility.mathematics.objs.sinusoidfitter.m.setstate := [=];
help::pkg.utility.mathematics.objs.sinusoidfitter.m.setstate.d := 'Set the state of the fitter';
help::pkg.utility.mathematics.objs.sinusoidfitter.m.setstate.a.state := [=];
help::pkg.utility.mathematics.objs.sinusoidfitter.m.setstate.a.state.d := 'The state record indicated values in the fitter to change (Input).';
help::pkg.utility.mathematics.objs.sinusoidfitter.m.setstate.a.state.def := '';
help::pkg.utility.mathematics.objs.sinusoidfitter.m.setstate.a.state.a := '';
help::pkg.utility.mathematics.objs.sinusoidfitter.m.setstate.s := 'setstate(state)';
help::pkg.utility.mathematics.funs.sinusoidfitterdemo := [=];
help::pkg.utility.mathematics.funs.sinusoidfitterdemo.a := [=];
help::pkg.utility.mathematics.funs.sinusoidfitterdemo.d := 'Demonstrate the use of functions in sinusoidfitter';
help::pkg.utility.mathematics.funs.sinusoidfitterdemo.s := 'sinusoidfitterdemo()';
help::pkg.utility.mathematics.funs.sinusoidfittertest := [=];
help::pkg.utility.mathematics.funs.sinusoidfittertest.a := [=];
help::pkg.utility.mathematics.funs.sinusoidfittertest.d := 'Test the sinusoidfitter class';
help::pkg.utility.mathematics.funs.sinusoidfittertest.s := 'sinusoidfittertest()';
help::pkg.utility.mathematics.funs.gaussian1d := [=];
help::pkg.utility.mathematics.funs.gaussian1d.a := [=];
help::pkg.utility.mathematics.funs.gaussian1d.d := 'Calculate a one-dimensional Gaussian';
help::pkg.utility.mathematics.funs.gaussian1d.a.x := [=];
help::pkg.utility.mathematics.funs.gaussian1d.a.x.d := 'values at which to evaluate the Gaussian';
help::pkg.utility.mathematics.funs.gaussian1d.a.x.def := 'no default';
help::pkg.utility.mathematics.funs.gaussian1d.a.x.a := 'double';
help::pkg.utility.mathematics.funs.gaussian1d.a.height := [=];
help::pkg.utility.mathematics.funs.gaussian1d.a.height.d := 'maximum value of the Gaussian';
help::pkg.utility.mathematics.funs.gaussian1d.a.height.def := '1.0';
help::pkg.utility.mathematics.funs.gaussian1d.a.height.a := 'double';
help::pkg.utility.mathematics.funs.gaussian1d.a.center := [=];
help::pkg.utility.mathematics.funs.gaussian1d.a.center.d := 'location of the maximum value of the Gaussian';
help::pkg.utility.mathematics.funs.gaussian1d.a.center.def := '0.0';
help::pkg.utility.mathematics.funs.gaussian1d.a.center.a := 'double';
help::pkg.utility.mathematics.funs.gaussian1d.a.fwhm := [=];
help::pkg.utility.mathematics.funs.gaussian1d.a.fwhm.d := 'width of the gaussian';
help::pkg.utility.mathematics.funs.gaussian1d.a.fwhm.def := '1/fwhm\_to\_natural';
help::pkg.utility.mathematics.funs.gaussian1d.a.fwhm.a := 'double';
help::pkg.utility.mathematics.funs.gaussian1d.s := 'gaussian1d(x, height, center, fwhm)';
help::pkg.utility.mathematics.funs.gaussian2d := [=];
help::pkg.utility.mathematics.funs.gaussian2d.a := [=];
help::pkg.utility.mathematics.funs.gaussian2d.d := 'Calculate two-dimensional Gaussian';
help::pkg.utility.mathematics.funs.gaussian2d.a.x := [=];
help::pkg.utility.mathematics.funs.gaussian2d.a.x.d := 'values at which to evaluate the Gaussian';
help::pkg.utility.mathematics.funs.gaussian2d.a.x.def := 'no default';
help::pkg.utility.mathematics.funs.gaussian2d.a.x.a := 'double';
help::pkg.utility.mathematics.funs.gaussian2d.a.y := [=];
help::pkg.utility.mathematics.funs.gaussian2d.a.y.d := 'values at which to evaluate the Gaussian';
help::pkg.utility.mathematics.funs.gaussian2d.a.y.def := 'no default';
help::pkg.utility.mathematics.funs.gaussian2d.a.y.a := 'numeric';
help::pkg.utility.mathematics.funs.gaussian2d.a.height := [=];
help::pkg.utility.mathematics.funs.gaussian2d.a.height.d := 'maximum value of the Gaussian';
help::pkg.utility.mathematics.funs.gaussian2d.a.height.def := '1.0';
help::pkg.utility.mathematics.funs.gaussian2d.a.height.a := 'double';
help::pkg.utility.mathematics.funs.gaussian2d.a.center := [=];
help::pkg.utility.mathematics.funs.gaussian2d.a.center.d := 'location of the maximum value of the Gaussian';
help::pkg.utility.mathematics.funs.gaussian2d.a.center.def := '[0.0,0.0]';
help::pkg.utility.mathematics.funs.gaussian2d.a.center.a := 'double vector';
help::pkg.utility.mathematics.funs.gaussian2d.a.fwhm := [=];
help::pkg.utility.mathematics.funs.gaussian2d.a.fwhm.d := 'width of the gaussian';
help::pkg.utility.mathematics.funs.gaussian2d.a.fwhm.def := '[1.0,1.0]/fwhm\_to\_natural';
help::pkg.utility.mathematics.funs.gaussian2d.a.fwhm.a := 'double vector';
help::pkg.utility.mathematics.funs.gaussian2d.a.pa := [=];
help::pkg.utility.mathematics.funs.gaussian2d.a.pa.d := 'position angle (from y-axis to major-axis) (radians)';
help::pkg.utility.mathematics.funs.gaussian2d.a.pa.def := '0.0';
help::pkg.utility.mathematics.funs.gaussian2d.a.pa.a := 'double';
help::pkg.utility.mathematics.funs.gaussian2d.s := 'gaussian2d(x, y, height, center, fwhm, pa)';
help::pkg.utility.mathematics.objs.matrix := [=];
help::pkg.utility.mathematics.objs.matrix.m := [=];
help::pkg.utility.mathematics.objs.matrix.c := [=];
help::pkg.utility.mathematics.objs.matrix.d := 'A collection of matrix/vector routines';
help::pkg.utility.mathematics.objs.matrix.m.unitmatrix := [=];
help::pkg.utility.mathematics.objs.matrix.m.unitmatrix.d := 'make an $n\times n$ unit matrix';
help::pkg.utility.mathematics.objs.matrix.m.unitmatrix.a.n := [=];
help::pkg.utility.mathematics.objs.matrix.m.unitmatrix.a.n.d := 'the length of the diagonal (Input) ';
help::pkg.utility.mathematics.objs.matrix.m.unitmatrix.a.n.def := '';
help::pkg.utility.mathematics.objs.matrix.m.unitmatrix.a.n.a := '';
help::pkg.utility.mathematics.objs.matrix.m.unitmatrix.s := 'unitmatrix(n)';
help::pkg.utility.mathematics.objs.matrix.m.diagonalmatrix := [=];
help::pkg.utility.mathematics.objs.matrix.m.diagonalmatrix.d := 'make an $n\times n$ diagonal matrix';
help::pkg.utility.mathematics.objs.matrix.m.diagonalmatrix.a.diag := [=];
help::pkg.utility.mathematics.objs.matrix.m.diagonalmatrix.a.diag.d := 'the matrix diagonal (vector) (Input) ';
help::pkg.utility.mathematics.objs.matrix.m.diagonalmatrix.a.diag.def := '';
help::pkg.utility.mathematics.objs.matrix.m.diagonalmatrix.a.diag.a := '';
help::pkg.utility.mathematics.objs.matrix.m.diagonalmatrix.s := 'diagonalmatrix(diag)';
help::pkg.utility.mathematics.objs.matrix.m.rotationmatrix := [=];
help::pkg.utility.mathematics.objs.matrix.m.rotationmatrix.d := 'make a $2\times 2$ rotation matrix';
help::pkg.utility.mathematics.objs.matrix.m.rotationmatrix.a.angle := [=];
help::pkg.utility.mathematics.objs.matrix.m.rotationmatrix.a.angle.d := 'The rotation angle $\phi$ (rad) (Input) ';
help::pkg.utility.mathematics.objs.matrix.m.rotationmatrix.a.angle.def := '';
help::pkg.utility.mathematics.objs.matrix.m.rotationmatrix.a.angle.a := '';
help::pkg.utility.mathematics.objs.matrix.m.rotationmatrix.a.deg := [=];
help::pkg.utility.mathematics.objs.matrix.m.rotationmatrix.a.deg.d := 'If T, the angle is in degrees (Input) ';
help::pkg.utility.mathematics.objs.matrix.m.rotationmatrix.a.deg.def := 'F';
help::pkg.utility.mathematics.objs.matrix.m.rotationmatrix.a.deg.a := '';
help::pkg.utility.mathematics.objs.matrix.m.rotationmatrix.s := 'rotationmatrix(angle, deg)';
help::pkg.utility.mathematics.objs.matrix.m.rotate := [=];
help::pkg.utility.mathematics.objs.matrix.m.rotate.d := 'rotate a 2D (plain) vector';
help::pkg.utility.mathematics.objs.matrix.m.rotate.a.v := [=];
help::pkg.utility.mathematics.objs.matrix.m.rotate.a.v.d := 'The 2x2 vector to be rotated (Input) ';
help::pkg.utility.mathematics.objs.matrix.m.rotate.a.v.def := '';
help::pkg.utility.mathematics.objs.matrix.m.rotate.a.v.a := '';
help::pkg.utility.mathematics.objs.matrix.m.rotate.a.angle := [=];
help::pkg.utility.mathematics.objs.matrix.m.rotate.a.angle.d := 'The rotation angle $\phi$ (rad) (Input) ';
help::pkg.utility.mathematics.objs.matrix.m.rotate.a.angle.def := '';
help::pkg.utility.mathematics.objs.matrix.m.rotate.a.angle.a := '';
help::pkg.utility.mathematics.objs.matrix.m.rotate.a.deg := [=];
help::pkg.utility.mathematics.objs.matrix.m.rotate.a.deg.d := 'If T, the angle is in degrees (Input) ';
help::pkg.utility.mathematics.objs.matrix.m.rotate.a.deg.def := 'F';
help::pkg.utility.mathematics.objs.matrix.m.rotate.a.deg.a := '';
help::pkg.utility.mathematics.objs.matrix.m.rotate.s := 'rotate(v, angle, deg)';
help::pkg.utility.mathematics.objs.matrix.m.mult := [=];
help::pkg.utility.mathematics.objs.matrix.m.mult.d := 'matrix multiplication';
help::pkg.utility.mathematics.objs.matrix.m.mult.a.m1 := [=];
help::pkg.utility.mathematics.objs.matrix.m.mult.a.m1.d := 'The first $(m\times k)$ matrix (Input) ';
help::pkg.utility.mathematics.objs.matrix.m.mult.a.m1.def := '';
help::pkg.utility.mathematics.objs.matrix.m.mult.a.m1.a := '';
help::pkg.utility.mathematics.objs.matrix.m.mult.a.m2 := [=];
help::pkg.utility.mathematics.objs.matrix.m.mult.a.m2.d := 'The second $(k\times n)$ matrix (Input) ';
help::pkg.utility.mathematics.objs.matrix.m.mult.a.m2.def := '';
help::pkg.utility.mathematics.objs.matrix.m.mult.a.m2.a := '';
help::pkg.utility.mathematics.objs.matrix.m.mult.s := 'mult(m1, m2)';
help::pkg.utility.mathematics.objs.matrix.m.directproduct := [=];
help::pkg.utility.mathematics.objs.matrix.m.directproduct.d := 'Direct Matrix Product';
help::pkg.utility.mathematics.objs.matrix.m.directproduct.a.m1 := [=];
help::pkg.utility.mathematics.objs.matrix.m.directproduct.a.m1.d := 'The first $(n\times m)$ matrix (Input) ';
help::pkg.utility.mathematics.objs.matrix.m.directproduct.a.m1.def := '';
help::pkg.utility.mathematics.objs.matrix.m.directproduct.a.m1.a := '';
help::pkg.utility.mathematics.objs.matrix.m.directproduct.a.m2 := [=];
help::pkg.utility.mathematics.objs.matrix.m.directproduct.a.m2.d := 'The second $(p\times q)$ matrix (Input) ';
help::pkg.utility.mathematics.objs.matrix.m.directproduct.a.m2.def := '';
help::pkg.utility.mathematics.objs.matrix.m.directproduct.a.m2.a := '';
help::pkg.utility.mathematics.objs.matrix.m.directproduct.s := 'directproduct(m1, m2)';
help::pkg.utility.mathematics.objs.matrix.m.crossproduct := [=];
help::pkg.utility.mathematics.objs.matrix.m.crossproduct.d := 'vector cross-product';
help::pkg.utility.mathematics.objs.matrix.m.crossproduct.a.v1 := [=];
help::pkg.utility.mathematics.objs.matrix.m.crossproduct.a.v1.d := 'The first 3D vector (Input) ';
help::pkg.utility.mathematics.objs.matrix.m.crossproduct.a.v1.def := '';
help::pkg.utility.mathematics.objs.matrix.m.crossproduct.a.v1.a := '';
help::pkg.utility.mathematics.objs.matrix.m.crossproduct.a.v2 := [=];
help::pkg.utility.mathematics.objs.matrix.m.crossproduct.a.v2.d := 'The second 3D vector (Input) ';
help::pkg.utility.mathematics.objs.matrix.m.crossproduct.a.v2.def := '';
help::pkg.utility.mathematics.objs.matrix.m.crossproduct.a.v2.a := '';
help::pkg.utility.mathematics.objs.matrix.m.crossproduct.s := 'crossproduct(v1, v2)';
help::pkg.utility.mathematics.objs.matrix.m.dotproduct := [=];
help::pkg.utility.mathematics.objs.matrix.m.dotproduct.d := 'vector dot-product';
help::pkg.utility.mathematics.objs.matrix.m.dotproduct.a.v1 := [=];
help::pkg.utility.mathematics.objs.matrix.m.dotproduct.a.v1.d := 'The first vector (Input) ';
help::pkg.utility.mathematics.objs.matrix.m.dotproduct.a.v1.def := '';
help::pkg.utility.mathematics.objs.matrix.m.dotproduct.a.v1.a := '';
help::pkg.utility.mathematics.objs.matrix.m.dotproduct.a.v2 := [=];
help::pkg.utility.mathematics.objs.matrix.m.dotproduct.a.v2.d := 'The second vector (Input) ';
help::pkg.utility.mathematics.objs.matrix.m.dotproduct.a.v2.def := '';
help::pkg.utility.mathematics.objs.matrix.m.dotproduct.a.v2.a := '';
help::pkg.utility.mathematics.objs.matrix.m.dotproduct.s := 'dotproduct(v1, v2)';
help::pkg.utility.mathematics.objs.matrix.m.angle := [=];
help::pkg.utility.mathematics.objs.matrix.m.angle.d := 'Find the angle between two vectors';
help::pkg.utility.mathematics.objs.matrix.m.angle.a.v1 := [=];
help::pkg.utility.mathematics.objs.matrix.m.angle.a.v1.d := 'The first vector (Input) ';
help::pkg.utility.mathematics.objs.matrix.m.angle.a.v1.def := '';
help::pkg.utility.mathematics.objs.matrix.m.angle.a.v1.a := '';
help::pkg.utility.mathematics.objs.matrix.m.angle.a.v2 := [=];
help::pkg.utility.mathematics.objs.matrix.m.angle.a.v2.d := 'The second vector (Input) ';
help::pkg.utility.mathematics.objs.matrix.m.angle.a.v2.def := '';
help::pkg.utility.mathematics.objs.matrix.m.angle.a.v2.a := '';
help::pkg.utility.mathematics.objs.matrix.m.angle.a.deg := [=];
help::pkg.utility.mathematics.objs.matrix.m.angle.a.deg.d := 'If T, the result is in degrees (Input) ';
help::pkg.utility.mathematics.objs.matrix.m.angle.a.deg.def := 'F';
help::pkg.utility.mathematics.objs.matrix.m.angle.a.deg.a := '';
help::pkg.utility.mathematics.objs.matrix.m.angle.s := 'angle(v1, v2, deg)';
help::pkg.utility.mathematics.objs.matrix.m.cosangle := [=];
help::pkg.utility.mathematics.objs.matrix.m.cosangle.d := 'Find the cosine of the angle between two vectors';
help::pkg.utility.mathematics.objs.matrix.m.cosangle.a.v1 := [=];
help::pkg.utility.mathematics.objs.matrix.m.cosangle.a.v1.d := 'The first vector (Input) ';
help::pkg.utility.mathematics.objs.matrix.m.cosangle.a.v1.def := '';
help::pkg.utility.mathematics.objs.matrix.m.cosangle.a.v1.a := '';
help::pkg.utility.mathematics.objs.matrix.m.cosangle.a.v2 := [=];
help::pkg.utility.mathematics.objs.matrix.m.cosangle.a.v2.d := 'The second vector (Input) ';
help::pkg.utility.mathematics.objs.matrix.m.cosangle.a.v2.def := '';
help::pkg.utility.mathematics.objs.matrix.m.cosangle.a.v2.a := '';
help::pkg.utility.mathematics.objs.matrix.m.cosangle.s := 'cosangle(v1, v2)';
help::pkg.utility.mathematics.objs.matrix.m.transpose := [=];
help::pkg.utility.mathematics.objs.matrix.m.transpose.d := 'Transpose a matrix';
help::pkg.utility.mathematics.objs.matrix.m.transpose.a.m := [=];
help::pkg.utility.mathematics.objs.matrix.m.transpose.a.m.d := 'The given $n\times m$ matrix (Input) ';
help::pkg.utility.mathematics.objs.matrix.m.transpose.a.m.def := '';
help::pkg.utility.mathematics.objs.matrix.m.transpose.a.m.a := '';
help::pkg.utility.mathematics.objs.matrix.m.transpose.s := 'transpose(m)';
help::pkg.utility.mathematics.objs.matrix.m.invert := [=];
help::pkg.utility.mathematics.objs.matrix.m.invert.d := 'Invert a matrix';
help::pkg.utility.mathematics.objs.matrix.m.invert.a.m := [=];
help::pkg.utility.mathematics.objs.matrix.m.invert.a.m.d := 'The matrix to be inverted (Input) ';
help::pkg.utility.mathematics.objs.matrix.m.invert.a.m.def := '';
help::pkg.utility.mathematics.objs.matrix.m.invert.a.m.a := '';
help::pkg.utility.mathematics.objs.matrix.m.invert.s := 'invert(m)';
help::pkg.utility.mathematics.objs.matrix.m.norm := [=];
help::pkg.utility.mathematics.objs.matrix.m.norm.d := 'the `norm  of a vector or matrix';
help::pkg.utility.mathematics.objs.matrix.m.norm.a.m := [=];
help::pkg.utility.mathematics.objs.matrix.m.norm.a.m.d := 'array (Input) ';
help::pkg.utility.mathematics.objs.matrix.m.norm.a.m.def := '';
help::pkg.utility.mathematics.objs.matrix.m.norm.a.m.a := '';
help::pkg.utility.mathematics.objs.matrix.m.norm.s := 'norm(m)';
help::pkg.utility.mathematics.objs.matrix.m.mean := [=];
help::pkg.utility.mathematics.objs.matrix.m.mean.d := 'the mean of the elements';
help::pkg.utility.mathematics.objs.matrix.m.mean.a.m := [=];
help::pkg.utility.mathematics.objs.matrix.m.mean.a.m.d := 'array (Input) ';
help::pkg.utility.mathematics.objs.matrix.m.mean.a.m.def := '';
help::pkg.utility.mathematics.objs.matrix.m.mean.a.m.a := '';
help::pkg.utility.mathematics.objs.matrix.m.mean.s := 'mean(m)';
help::pkg.utility.mathematics.objs.matrix.m.rms := [=];
help::pkg.utility.mathematics.objs.matrix.m.rms.d := 'the root mean square (rms) of the elements';
help::pkg.utility.mathematics.objs.matrix.m.rms.a.m := [=];
help::pkg.utility.mathematics.objs.matrix.m.rms.a.m.d := 'array (Input) ';
help::pkg.utility.mathematics.objs.matrix.m.rms.a.m.def := '';
help::pkg.utility.mathematics.objs.matrix.m.rms.a.m.a := '';
help::pkg.utility.mathematics.objs.matrix.m.rms.s := 'rms(m)';
help::pkg.utility.mathematics.objs.matrix.m.symbolic := [=];
help::pkg.utility.mathematics.objs.matrix.m.symbolic.d := 'Make a symbolic matrix/vector';
help::pkg.utility.mathematics.objs.matrix.m.symbolic.a.name := [=];
help::pkg.utility.mathematics.objs.matrix.m.symbolic.a.name.d := 'The `root\'  name of an element (Input) ';
help::pkg.utility.mathematics.objs.matrix.m.symbolic.a.name.def := '';
help::pkg.utility.mathematics.objs.matrix.m.symbolic.a.name.a := '';
help::pkg.utility.mathematics.objs.matrix.m.symbolic.a.nrow := [=];
help::pkg.utility.mathematics.objs.matrix.m.symbolic.a.nrow.d := 'The nr of rows (Input) ';
help::pkg.utility.mathematics.objs.matrix.m.symbolic.a.nrow.def := '';
help::pkg.utility.mathematics.objs.matrix.m.symbolic.a.nrow.a := '';
help::pkg.utility.mathematics.objs.matrix.m.symbolic.a.ncol := [=];
help::pkg.utility.mathematics.objs.matrix.m.symbolic.a.ncol.d := 'Optional: The nr of columns (Input) ';
help::pkg.utility.mathematics.objs.matrix.m.symbolic.a.ncol.def := 'F';
help::pkg.utility.mathematics.objs.matrix.m.symbolic.a.ncol.a := '';
help::pkg.utility.mathematics.objs.matrix.m.symbolic.s := 'symbolic(name, nrow, ncol)';
help::pkg.utility.mathematics.objs.matrix.m.print := [=];
help::pkg.utility.mathematics.objs.matrix.m.print.d := 'print a matrix/vector';
help::pkg.utility.mathematics.objs.matrix.m.print.a.m := [=];
help::pkg.utility.mathematics.objs.matrix.m.print.a.m.d := 'The vector/matrix to be printed (Input) ';
help::pkg.utility.mathematics.objs.matrix.m.print.a.m.def := '';
help::pkg.utility.mathematics.objs.matrix.m.print.a.m.a := '';
help::pkg.utility.mathematics.objs.matrix.m.print.a.name := [=];
help::pkg.utility.mathematics.objs.matrix.m.print.a.name.d := 'Optional: a header text (Input) ';
help::pkg.utility.mathematics.objs.matrix.m.print.a.name.def := '\'  \' ';
help::pkg.utility.mathematics.objs.matrix.m.print.a.name.a := '';
help::pkg.utility.mathematics.objs.matrix.m.print.a.prec := [=];
help::pkg.utility.mathematics.objs.matrix.m.print.a.prec.d := 'Optional: the printing precision (Input) ';
help::pkg.utility.mathematics.objs.matrix.m.print.a.prec.def := '0';
help::pkg.utility.mathematics.objs.matrix.m.print.a.prec.a := '';
help::pkg.utility.mathematics.objs.matrix.m.print.s := 'print(m, name, prec)';
help::pkg.utility.mathematics.objs.matrix.m.help := [=];
help::pkg.utility.mathematics.objs.matrix.m.help.d := 'print a summary of matrix functions';
help::pkg.utility.mathematics.objs.matrix.m.help.s := 'help()';
help::pkg.utility.mathematics.objs.matrix.m.test := [=];
help::pkg.utility.mathematics.objs.matrix.m.test.d := 'a test of most matrix functions';
help::pkg.utility.mathematics.objs.matrix.m.test.s := 'test()';
help::pkg.utility.mathematics.objs.lsfit := [=];
help::pkg.utility.mathematics.objs.lsfit.m := [=];
help::pkg.utility.mathematics.objs.lsfit.c := [=];
help::pkg.utility.mathematics.objs.lsfit.d := 'Least-squares fit by matrix inversion';
help::pkg.utility.mathematics.objs.lsfit.m.init := [=];
help::pkg.utility.mathematics.objs.lsfit.m.init.d := 'initialise before accumulation';
help::pkg.utility.mathematics.objs.lsfit.m.init.a.nuk := [=];
help::pkg.utility.mathematics.objs.lsfit.m.init.a.nuk.d := 'nr of unknowns (Input) ';
help::pkg.utility.mathematics.objs.lsfit.m.init.a.nuk.def := '';
help::pkg.utility.mathematics.objs.lsfit.m.init.a.nuk.a := 'int';
help::pkg.utility.mathematics.objs.lsfit.m.init.a.keep := [=];
help::pkg.utility.mathematics.objs.lsfit.m.init.a.keep.d := 'keep the coefficent matrix (Input) ';
help::pkg.utility.mathematics.objs.lsfit.m.init.a.keep.def := 'T';
help::pkg.utility.mathematics.objs.lsfit.m.init.a.keep.a := 'bool';
help::pkg.utility.mathematics.objs.lsfit.m.init.a.mode := [=];
help::pkg.utility.mathematics.objs.lsfit.m.init.a.mode.d := 'inversion mode (Input) ';
help::pkg.utility.mathematics.objs.lsfit.m.init.a.mode.def := '\' chol\' ';
help::pkg.utility.mathematics.objs.lsfit.m.init.a.mode.a := 'string';
help::pkg.utility.mathematics.objs.lsfit.m.init.s := 'init(nuk, keep, mode)';
help::pkg.utility.mathematics.objs.lsfit.m.accumulate := [=];
help::pkg.utility.mathematics.objs.lsfit.m.accumulate.d := 'accumulate an equation';
help::pkg.utility.mathematics.objs.lsfit.m.accumulate.a.aa := [=];
help::pkg.utility.mathematics.objs.lsfit.m.accumulate.a.aa.d := 'coefficient vector (Input) ';
help::pkg.utility.mathematics.objs.lsfit.m.accumulate.a.aa.def := '';
help::pkg.utility.mathematics.objs.lsfit.m.accumulate.a.aa.a := '';
help::pkg.utility.mathematics.objs.lsfit.m.accumulate.a.y := [=];
help::pkg.utility.mathematics.objs.lsfit.m.accumulate.a.y.d := 'driving value (Input) ';
help::pkg.utility.mathematics.objs.lsfit.m.accumulate.a.y.def := '';
help::pkg.utility.mathematics.objs.lsfit.m.accumulate.a.y.a := '';
help::pkg.utility.mathematics.objs.lsfit.m.accumulate.a.wgt := [=];
help::pkg.utility.mathematics.objs.lsfit.m.accumulate.a.wgt.d := 'weight (Input) ';
help::pkg.utility.mathematics.objs.lsfit.m.accumulate.a.wgt.def := '1.0';
help::pkg.utility.mathematics.objs.lsfit.m.accumulate.a.wgt.a := '';
help::pkg.utility.mathematics.objs.lsfit.m.accumulate.a.constreq := [=];
help::pkg.utility.mathematics.objs.lsfit.m.accumulate.a.constreq.d := 'is constraint equation (Input) ';
help::pkg.utility.mathematics.objs.lsfit.m.accumulate.a.constreq.def := 'F';
help::pkg.utility.mathematics.objs.lsfit.m.accumulate.a.constreq.a := 'bool';
help::pkg.utility.mathematics.objs.lsfit.m.accumulate.a.show := [=];
help::pkg.utility.mathematics.objs.lsfit.m.accumulate.a.show.d := 'print one-line progress message (Input) ';
help::pkg.utility.mathematics.objs.lsfit.m.accumulate.a.show.def := 'F';
help::pkg.utility.mathematics.objs.lsfit.m.accumulate.a.show.a := 'bool';
help::pkg.utility.mathematics.objs.lsfit.m.accumulate.s := 'accumulate(aa, y, wgt, constreq, show)';
help::pkg.utility.mathematics.objs.lsfit.m.solve := [=];
help::pkg.utility.mathematics.objs.lsfit.m.solve.d := 'solves for the unknowns (x)';
help::pkg.utility.mathematics.objs.lsfit.m.solve.a.yy := [=];
help::pkg.utility.mathematics.objs.lsfit.m.solve.a.yy.d := 'vector of new driving values (Input) ';
help::pkg.utility.mathematics.objs.lsfit.m.solve.a.yy.def := 'F';
help::pkg.utility.mathematics.objs.lsfit.m.solve.a.yy.a := 'double';
help::pkg.utility.mathematics.objs.lsfit.m.solve.s := 'solve(yy)';
help::pkg.utility.mathematics.objs.lsfit.m.inityonly := [=];
help::pkg.utility.mathematics.objs.lsfit.m.inityonly.d := 'initialise the vector only';
help::pkg.utility.mathematics.objs.lsfit.m.inityonly.s := 'inityonly()';
help::pkg.utility.mathematics.objs.lsfit.m.status := [=];
help::pkg.utility.mathematics.objs.lsfit.m.status.d := 'print lsfit internal status';
help::pkg.utility.mathematics.objs.lsfit.m.status.a.name := [=];
help::pkg.utility.mathematics.objs.lsfit.m.status.a.name.d := 'Optional: header string (Input) ';
help::pkg.utility.mathematics.objs.lsfit.m.status.a.name.def := '\'  \' ';
help::pkg.utility.mathematics.objs.lsfit.m.status.a.name.a := '';
help::pkg.utility.mathematics.objs.lsfit.m.status.s := 'status(name)';
help::pkg.utility.mathematics.objs.lsfit.m.print := [=];
help::pkg.utility.mathematics.objs.lsfit.m.print.d := 'print internal matrices';
help::pkg.utility.mathematics.objs.lsfit.m.print.a.name := [=];
help::pkg.utility.mathematics.objs.lsfit.m.print.a.name.d := 'name of matrix to be printed (Input) ';
help::pkg.utility.mathematics.objs.lsfit.m.print.a.name.def := '';
help::pkg.utility.mathematics.objs.lsfit.m.print.a.name.a := 'string';
help::pkg.utility.mathematics.objs.lsfit.m.print.s := 'print(name)';
help::pkg.utility.mathematics.objs.lsfit.m.help := [=];
help::pkg.utility.mathematics.objs.lsfit.m.help.d := 'print summary of lsfit functions';
help::pkg.utility.mathematics.objs.lsfit.m.help.s := 'help()';
help::pkg.utility.mathematics.objs.lsfit.m.test := [=];
help::pkg.utility.mathematics.objs.lsfit.m.test.d := 'test of the main lsfit functions';
help::pkg.utility.mathematics.objs.lsfit.m.test.s := 'test()';
help::pkg.utility.mathematics.objs.datafilter := [=];
help::pkg.utility.mathematics.objs.datafilter.m := [=];
help::pkg.utility.mathematics.objs.datafilter.c := [=];
help::pkg.utility.mathematics.objs.datafilter.d := 'Filtering operations on data arrays';
help::pkg.utility.mathematics.objs.datafilter.c.datafilter := [=];
help::pkg.utility.mathematics.objs.datafilter.c.datafilter.d := 'Construct a Datafilter tool';
help::pkg.utility.mathematics.objs.datafilter.c.datafilter.s := 'datafilter()';
help::pkg.utility.mathematics.objs.datafilter.m.done := [=];
help::pkg.utility.mathematics.objs.datafilter.m.done.d := 'Destroy this tool';
help::pkg.utility.mathematics.objs.datafilter.m.done.s := 'done()';
help::pkg.utility.mathematics.objs.datafilter.m.filter := [=];
help::pkg.utility.mathematics.objs.datafilter.m.filter.d := 'Filter a data array';
help::pkg.utility.mathematics.objs.datafilter.m.filter.a.data := [=];
help::pkg.utility.mathematics.objs.datafilter.m.filter.a.data.d := 'Input numeric data array';
help::pkg.utility.mathematics.objs.datafilter.m.filter.a.data.def := '';
help::pkg.utility.mathematics.objs.datafilter.m.filter.a.data.a := 'Numeric Glish vector';
help::pkg.utility.mathematics.objs.datafilter.m.filter.a.width := [=];
help::pkg.utility.mathematics.objs.datafilter.m.filter.a.width.d := 'Width of running median filter';
help::pkg.utility.mathematics.objs.datafilter.m.filter.a.width.def := '5 points';
help::pkg.utility.mathematics.objs.datafilter.m.filter.a.width.a := 'Positive integer';
help::pkg.utility.mathematics.objs.datafilter.m.filter.a.method := [=];
help::pkg.utility.mathematics.objs.datafilter.m.filter.a.method.d := 'The method type';
help::pkg.utility.mathematics.objs.datafilter.m.filter.a.method.def := '\' median\' ';
help::pkg.utility.mathematics.objs.datafilter.m.filter.a.method.a := 'String (case insensitive) from \' median\'  or \' mean\' ';
help::pkg.utility.mathematics.objs.datafilter.m.filter.a.progress := [=];
help::pkg.utility.mathematics.objs.datafilter.m.filter.a.progress.d := 'See progress reports on median filter every progress points';
help::pkg.utility.mathematics.objs.datafilter.m.filter.a.progress.def := 'No reports';
help::pkg.utility.mathematics.objs.datafilter.m.filter.a.progress.a := 'Positive integer';
help::pkg.utility.mathematics.objs.datafilter.m.filter.s := 'filter(data, width, method, progress)';
help::pkg.utility.mathematics.objs.datafilter.m.medianclip := [=];
help::pkg.utility.mathematics.objs.datafilter.m.medianclip.d := 'Median clip a data array';
help::pkg.utility.mathematics.objs.datafilter.m.medianclip.a.data := [=];
help::pkg.utility.mathematics.objs.datafilter.m.medianclip.a.data.d := 'Input numeric data array';
help::pkg.utility.mathematics.objs.datafilter.m.medianclip.a.data.def := '';
help::pkg.utility.mathematics.objs.datafilter.m.medianclip.a.data.a := 'Numeric Glish vector';
help::pkg.utility.mathematics.objs.datafilter.m.medianclip.a.width := [=];
help::pkg.utility.mathematics.objs.datafilter.m.medianclip.a.width.d := 'Width of running median filter';
help::pkg.utility.mathematics.objs.datafilter.m.medianclip.a.width.def := '5 points';
help::pkg.utility.mathematics.objs.datafilter.m.medianclip.a.width.a := 'Positive integer';
help::pkg.utility.mathematics.objs.datafilter.m.medianclip.a.clip := [=];
help::pkg.utility.mathematics.objs.datafilter.m.medianclip.a.clip.d := 'The clipping amount';
help::pkg.utility.mathematics.objs.datafilter.m.medianclip.a.clip.def := '5';
help::pkg.utility.mathematics.objs.datafilter.m.medianclip.a.clip.a := 'Positive numeric value';
help::pkg.utility.mathematics.objs.datafilter.m.medianclip.a.progress := [=];
help::pkg.utility.mathematics.objs.datafilter.m.medianclip.a.progress.d := 'See reports on median filter computation every progress points';
help::pkg.utility.mathematics.objs.datafilter.m.medianclip.a.progress.def := 'No reports';
help::pkg.utility.mathematics.objs.datafilter.m.medianclip.a.progress.a := 'Positive integer';
help::pkg.utility.mathematics.objs.datafilter.m.medianclip.s := 'medianclip(data, width, clip, progress)';

help::pkg.utility.misc := [=];
help::pkg.utility.misc.objs := [=];
help::pkg.utility.misc.funs := [=];
help::pkg.utility.misc.d := 'Miscellaneous utilities';
help::pkg.utility.misc.objs.misc := [=];
help::pkg.utility.misc.objs.misc.m := [=];
help::pkg.utility.misc.objs.misc.c := [=];
help::pkg.utility.misc.objs.misc.d := 'Misc tool';
help::pkg.utility.misc.objs.misc.c.misc := [=];
help::pkg.utility.misc.objs.misc.c.misc.d := 'Construct a misc tool';
help::pkg.utility.misc.objs.misc.c.misc.s := 'misc()';
help::pkg.utility.misc.objs.misc.m.type := [=];
help::pkg.utility.misc.objs.misc.m.type.d := 'Returns tool type; ``misc  ';
help::pkg.utility.misc.objs.misc.m.type.s := 'type()';
help::pkg.utility.misc.objs.misc.m.shellcmd := [=];
help::pkg.utility.misc.objs.misc.m.shellcmd.d := 'Execute a shell command';
help::pkg.utility.misc.objs.misc.m.shellcmd.a.command := [=];
help::pkg.utility.misc.objs.misc.m.shellcmd.a.command.d := 'Command string';
help::pkg.utility.misc.objs.misc.m.shellcmd.a.command.def := '';
help::pkg.utility.misc.objs.misc.m.shellcmd.a.command.a := 'String';
help::pkg.utility.misc.objs.misc.m.shellcmd.a.log := [=];
help::pkg.utility.misc.objs.misc.m.shellcmd.a.log.d := 'Log the output?';
help::pkg.utility.misc.objs.misc.m.shellcmd.a.log.def := 'T';
help::pkg.utility.misc.objs.misc.m.shellcmd.a.log.a := 'Bool';
help::pkg.utility.misc.objs.misc.m.shellcmd.s := 'shellcmd(command, log)';
help::pkg.utility.misc.objs.misc.m.escapespecial := [=];
help::pkg.utility.misc.objs.misc.m.escapespecial.d := 'escape characters in a string special to the shell';
help::pkg.utility.misc.objs.misc.m.escapespecial.a.string := [=];
help::pkg.utility.misc.objs.misc.m.escapespecial.a.string.d := 'String';
help::pkg.utility.misc.objs.misc.m.escapespecial.a.string.def := '';
help::pkg.utility.misc.objs.misc.m.escapespecial.a.string.a := 'String';
help::pkg.utility.misc.objs.misc.m.escapespecial.s := 'escapespecial(string)';
help::pkg.utility.misc.objs.misc.m.striptrailingblanks := [=];
help::pkg.utility.misc.objs.misc.m.striptrailingblanks.d := 'Strip trailing blanks from a string';
help::pkg.utility.misc.objs.misc.m.striptrailingblanks.a.string := [=];
help::pkg.utility.misc.objs.misc.m.striptrailingblanks.a.string.d := 'String to be stripped';
help::pkg.utility.misc.objs.misc.m.striptrailingblanks.a.string.def := '';
help::pkg.utility.misc.objs.misc.m.striptrailingblanks.a.string.a := 'String';
help::pkg.utility.misc.objs.misc.m.striptrailingblanks.s := 'striptrailingblanks(string)';
help::pkg.utility.misc.objs.misc.m.stripleadingblanks := [=];
help::pkg.utility.misc.objs.misc.m.stripleadingblanks.d := 'Strip leading blanks from a string';
help::pkg.utility.misc.objs.misc.m.stripleadingblanks.a.string := [=];
help::pkg.utility.misc.objs.misc.m.stripleadingblanks.a.string.d := 'String to be stripped';
help::pkg.utility.misc.objs.misc.m.stripleadingblanks.a.string.def := '';
help::pkg.utility.misc.objs.misc.m.stripleadingblanks.a.string.a := 'String';
help::pkg.utility.misc.objs.misc.m.stripleadingblanks.s := 'stripleadingblanks(string)';
help::pkg.utility.misc.objs.misc.m.patternmatch := [=];
help::pkg.utility.misc.objs.misc.m.patternmatch.d := 'Find matching strings using shell expressions';
help::pkg.utility.misc.objs.misc.m.patternmatch.a.pattern := [=];
help::pkg.utility.misc.objs.misc.m.patternmatch.a.pattern.d := 'Pattern';
help::pkg.utility.misc.objs.misc.m.patternmatch.a.pattern.def := '';
help::pkg.utility.misc.objs.misc.m.patternmatch.a.pattern.a := 'Any shell expression';
help::pkg.utility.misc.objs.misc.m.patternmatch.a.strings := [=];
help::pkg.utility.misc.objs.misc.m.patternmatch.a.strings.d := 'Strings to be tested';
help::pkg.utility.misc.objs.misc.m.patternmatch.a.strings.def := '';
help::pkg.utility.misc.objs.misc.m.patternmatch.a.strings.a := 'String';
help::pkg.utility.misc.objs.misc.m.patternmatch.s := 'patternmatch(pattern, strings)';
help::pkg.utility.misc.objs.misc.m.fields := [=];
help::pkg.utility.misc.objs.misc.m.fields.d := 'list fields in a record or tool';
help::pkg.utility.misc.objs.misc.m.fields.a.rec := [=];
help::pkg.utility.misc.objs.misc.m.fields.a.rec.d := 'record name';
help::pkg.utility.misc.objs.misc.m.fields.a.rec.def := '';
help::pkg.utility.misc.objs.misc.m.fields.a.rec.a := 'record';
help::pkg.utility.misc.objs.misc.m.fields.s := 'fields(rec)';
help::pkg.utility.misc.objs.misc.m.fileexists := [=];
help::pkg.utility.misc.objs.misc.m.fileexists.d := 'Does this file exist?';
help::pkg.utility.misc.objs.misc.m.fileexists.a.file := [=];
help::pkg.utility.misc.objs.misc.m.fileexists.a.file.d := 'file name';
help::pkg.utility.misc.objs.misc.m.fileexists.a.file.def := '';
help::pkg.utility.misc.objs.misc.m.fileexists.a.file.a := 'String';
help::pkg.utility.misc.objs.misc.m.fileexists.a.opt := [=];
help::pkg.utility.misc.objs.misc.m.fileexists.a.opt.d := 'option for UNIX test command';
help::pkg.utility.misc.objs.misc.m.fileexists.a.opt.def := '-s';
help::pkg.utility.misc.objs.misc.m.fileexists.a.opt.a := 'String';
help::pkg.utility.misc.objs.misc.m.fileexists.s := 'fileexists(file, opt)';
help::pkg.utility.misc.objs.misc.m.dir := [=];
help::pkg.utility.misc.objs.misc.m.dir.d := 'Return the directory for a given directory name';
help::pkg.utility.misc.objs.misc.m.dir.a.directoryname := [=];
help::pkg.utility.misc.objs.misc.m.dir.a.directoryname.d := 'Directory name';
help::pkg.utility.misc.objs.misc.m.dir.a.directoryname.def := '';
help::pkg.utility.misc.objs.misc.m.dir.a.directoryname.a := 'String';
help::pkg.utility.misc.objs.misc.m.dir.s := 'dir(directoryname)';
help::pkg.utility.misc.objs.misc.m.parentdir := [=];
help::pkg.utility.misc.objs.misc.m.parentdir.d := 'Return the parent directory';
help::pkg.utility.misc.objs.misc.m.parentdir.a.directoryname := [=];
help::pkg.utility.misc.objs.misc.m.parentdir.a.directoryname.d := 'Directory name';
help::pkg.utility.misc.objs.misc.m.parentdir.a.directoryname.def := '';
help::pkg.utility.misc.objs.misc.m.parentdir.a.directoryname.a := 'String';
help::pkg.utility.misc.objs.misc.m.parentdir.s := 'parentdir(directoryname)';
help::pkg.utility.misc.objs.misc.m.thisdir := [=];
help::pkg.utility.misc.objs.misc.m.thisdir.d := 'Return the name of this directory';
help::pkg.utility.misc.objs.misc.m.thisdir.a.directoryname := [=];
help::pkg.utility.misc.objs.misc.m.thisdir.a.directoryname.d := 'Directory name';
help::pkg.utility.misc.objs.misc.m.thisdir.a.directoryname.def := '';
help::pkg.utility.misc.objs.misc.m.thisdir.a.directoryname.a := 'String';
help::pkg.utility.misc.objs.misc.m.thisdir.s := 'thisdir(directoryname)';
help::pkg.utility.misc.objs.misc.m.filetype := [=];
help::pkg.utility.misc.objs.misc.m.filetype.d := 'returns the UNIX type of file';
help::pkg.utility.misc.objs.misc.m.filetype.a.filename := [=];
help::pkg.utility.misc.objs.misc.m.filetype.a.filename.d := 'File name';
help::pkg.utility.misc.objs.misc.m.filetype.a.filename.def := '';
help::pkg.utility.misc.objs.misc.m.filetype.a.filename.a := 'String';
help::pkg.utility.misc.objs.misc.m.filetype.s := 'filetype(filename)';
help::pkg.utility.misc.objs.misc.m.fopen := [=];
help::pkg.utility.misc.objs.misc.m.fopen.d := 'interface to c fopen';
help::pkg.utility.misc.objs.misc.m.fopen.a.filename := [=];
help::pkg.utility.misc.objs.misc.m.fopen.a.filename.d := 'File name';
help::pkg.utility.misc.objs.misc.m.fopen.a.filename.def := '';
help::pkg.utility.misc.objs.misc.m.fopen.a.filename.a := 'String';
help::pkg.utility.misc.objs.misc.m.fopen.a.mode := [=];
help::pkg.utility.misc.objs.misc.m.fopen.a.mode.d := 'UNIX mode of access';
help::pkg.utility.misc.objs.misc.m.fopen.a.mode.def := '';
help::pkg.utility.misc.objs.misc.m.fopen.a.mode.a := 'Usually r, w, or a';
help::pkg.utility.misc.objs.misc.m.fopen.s := 'fopen(filename, mode)';
help::pkg.utility.misc.objs.misc.m.fclose := [=];
help::pkg.utility.misc.objs.misc.m.fclose.d := 'close fileid';
help::pkg.utility.misc.objs.misc.m.fclose.a.fileid := [=];
help::pkg.utility.misc.objs.misc.m.fclose.a.fileid.d := 'File id';
help::pkg.utility.misc.objs.misc.m.fclose.a.fileid.def := '';
help::pkg.utility.misc.objs.misc.m.fclose.a.fileid.a := 'file id as returned by fopen';
help::pkg.utility.misc.objs.misc.m.fclose.s := 'fclose(fileid)';
help::pkg.utility.misc.objs.misc.m.fprintf := [=];
help::pkg.utility.misc.objs.misc.m.fprintf.d := 'C-style formatted output';
help::pkg.utility.misc.objs.misc.m.fprintf.a.fileid := [=];
help::pkg.utility.misc.objs.misc.m.fprintf.a.fileid.d := 'File id';
help::pkg.utility.misc.objs.misc.m.fprintf.a.fileid.def := '';
help::pkg.utility.misc.objs.misc.m.fprintf.a.fileid.a := 'file id as returned by fopen';
help::pkg.utility.misc.objs.misc.m.fprintf.a.format := [=];
help::pkg.utility.misc.objs.misc.m.fprintf.a.format.d := 'c-style format description';
help::pkg.utility.misc.objs.misc.m.fprintf.a.format.def := '';
help::pkg.utility.misc.objs.misc.m.fprintf.a.format.a := 'String';
help::pkg.utility.misc.objs.misc.m.fprintf.a.dots := [=];
help::pkg.utility.misc.objs.misc.m.fprintf.a.dots.d := 'Additional arguments';
help::pkg.utility.misc.objs.misc.m.fprintf.a.dots.def := '';
help::pkg.utility.misc.objs.misc.m.fprintf.a.dots.a := 'Strings, floats, ints, etc...';
help::pkg.utility.misc.objs.misc.m.fprintf.s := 'fprintf(fileid, format, ...)';
help::pkg.utility.misc.objs.misc.m.fgets := [=];
help::pkg.utility.misc.objs.misc.m.fgets.d := 'interface to fgets';
help::pkg.utility.misc.objs.misc.m.fgets.a.fileid := [=];
help::pkg.utility.misc.objs.misc.m.fgets.a.fileid.d := 'File id';
help::pkg.utility.misc.objs.misc.m.fgets.a.fileid.def := '';
help::pkg.utility.misc.objs.misc.m.fgets.a.fileid.a := 'file id as returned by fopen';
help::pkg.utility.misc.objs.misc.m.fgets.a.filler := [=];
help::pkg.utility.misc.objs.misc.m.fgets.a.filler.d := 'string buffer to replace blanks';
help::pkg.utility.misc.objs.misc.m.fgets.a.filler.def := '\' \' ';
help::pkg.utility.misc.objs.misc.m.fgets.a.filler.a := 'String';
help::pkg.utility.misc.objs.misc.m.fgets.s := 'fgets(fileid, filler)';
help::pkg.utility.misc.objs.misc.m.readfile := [=];
help::pkg.utility.misc.objs.misc.m.readfile.d := 'reads a file into a buffer';
help::pkg.utility.misc.objs.misc.m.readfile.a.file := [=];
help::pkg.utility.misc.objs.misc.m.readfile.a.file.d := 'File name';
help::pkg.utility.misc.objs.misc.m.readfile.a.file.def := '';
help::pkg.utility.misc.objs.misc.m.readfile.a.file.a := 'String';
help::pkg.utility.misc.objs.misc.m.readfile.s := 'readfile(file)';
help::pkg.utility.misc.objs.misc.m.fopen := [=];
help::pkg.utility.misc.objs.misc.m.fopen.d := 'interface to c fopen';
help::pkg.utility.misc.objs.misc.m.fopen.a.filename := [=];
help::pkg.utility.misc.objs.misc.m.fopen.a.filename.d := 'File name';
help::pkg.utility.misc.objs.misc.m.fopen.a.filename.def := '';
help::pkg.utility.misc.objs.misc.m.fopen.a.filename.a := 'String';
help::pkg.utility.misc.objs.misc.m.fopen.a.mode := [=];
help::pkg.utility.misc.objs.misc.m.fopen.a.mode.d := 'UNIX mode of access';
help::pkg.utility.misc.objs.misc.m.fopen.a.mode.def := '';
help::pkg.utility.misc.objs.misc.m.fopen.a.mode.a := 'Usually r, w, or a';
help::pkg.utility.misc.objs.misc.m.fopen.s := 'fopen(filename, mode)';
help::pkg.utility.misc.objs.misc.m.initspinner := [=];
help::pkg.utility.misc.objs.misc.m.initspinner.d := 'start an ascii activity spinner';
help::pkg.utility.misc.objs.misc.m.initspinner.a.interval := [=];
help::pkg.utility.misc.objs.misc.m.initspinner.a.interval.d := 'Interval in seconds between characters';
help::pkg.utility.misc.objs.misc.m.initspinner.a.interval.def := '';
help::pkg.utility.misc.objs.misc.m.initspinner.a.interval.a := 'Real';
help::pkg.utility.misc.objs.misc.m.initspinner.s := 'initspinner(interval)';
help::pkg.utility.misc.objs.misc.m.killspinner := [=];
help::pkg.utility.misc.objs.misc.m.killspinner.d := 'kill an ascii activity spinner';
help::pkg.utility.misc.objs.misc.m.killspinner.s := 'killspinner()';
help::pkg.utility.misc.objs.misc.m.listfields := [=];
help::pkg.utility.misc.objs.misc.m.listfields.d := 'Hierarchically list fields in a record';
help::pkg.utility.misc.objs.misc.m.listfields.a.rec := [=];
help::pkg.utility.misc.objs.misc.m.listfields.a.rec.d := 'Record to list';
help::pkg.utility.misc.objs.misc.m.listfields.a.rec.def := '';
help::pkg.utility.misc.objs.misc.m.listfields.a.rec.a := 'Glish record';
help::pkg.utility.misc.objs.misc.m.listfields.a.listdata := [=];
help::pkg.utility.misc.objs.misc.m.listfields.a.listdata.d := 'List data at bottom of record';
help::pkg.utility.misc.objs.misc.m.listfields.a.listdata.def := 'T';
help::pkg.utility.misc.objs.misc.m.listfields.a.listdata.a := 'Boolean';
help::pkg.utility.misc.objs.misc.m.listfields.a.depth := [=];
help::pkg.utility.misc.objs.misc.m.listfields.a.depth.d := 'Depth in record';
help::pkg.utility.misc.objs.misc.m.listfields.a.depth.def := '0';
help::pkg.utility.misc.objs.misc.m.listfields.a.depth.a := 'Integer';
help::pkg.utility.misc.objs.misc.m.listfields.s := 'listfields(rec, listdata, depth)';
help::pkg.utility.misc.objs.misc.m.tovector := [=];
help::pkg.utility.misc.objs.misc.m.tovector.d := 'Convert variable to a vector';
help::pkg.utility.misc.objs.misc.m.tovector.a.thing := [=];
help::pkg.utility.misc.objs.misc.m.tovector.a.thing.d := 'Variable to convert';
help::pkg.utility.misc.objs.misc.m.tovector.a.thing.def := '';
help::pkg.utility.misc.objs.misc.m.tovector.a.thing.a := 'Any Glish variable';
help::pkg.utility.misc.objs.misc.m.tovector.a.type := [=];
help::pkg.utility.misc.objs.misc.m.tovector.a.type.d := 'Specify the output type of the vector';
help::pkg.utility.misc.objs.misc.m.tovector.a.type.def := '\' string\' ';
help::pkg.utility.misc.objs.misc.m.tovector.a.type.a := 'String chosen from `string\' , `float\' , `double\' , `integer\' ';
help::pkg.utility.misc.objs.misc.m.tovector.a.unsetvalue := [=];
help::pkg.utility.misc.objs.misc.m.tovector.a.unsetvalue.d := 'Unset value for unset items in records';
help::pkg.utility.misc.objs.misc.m.tovector.a.unsetvalue.def := 'unset';
help::pkg.utility.misc.objs.misc.m.tovector.a.unsetvalue.a := 'Numeric value';
help::pkg.utility.misc.objs.misc.m.tovector.s := 'tovector(thing, type, unsetvalue)';
help::pkg.utility.misc.objs.os := [=];
help::pkg.utility.misc.objs.os.m := [=];
help::pkg.utility.misc.objs.os.c := [=];
help::pkg.utility.misc.objs.os.d := 'Functions to perform system-specific operations';
help::pkg.utility.misc.objs.os.m.isvalidpathname := [=];
help::pkg.utility.misc.objs.os.m.isvalidpathname.d := 'test if path names are valid';
help::pkg.utility.misc.objs.os.m.isvalidpathname.a.pathname := [=];
help::pkg.utility.misc.objs.os.m.isvalidpathname.a.pathname.d := 'path names';
help::pkg.utility.misc.objs.os.m.isvalidpathname.a.pathname.def := '';
help::pkg.utility.misc.objs.os.m.isvalidpathname.a.pathname.a := 'vector of strings';
help::pkg.utility.misc.objs.os.m.isvalidpathname.s := 'isvalidpathname(pathname)';
help::pkg.utility.misc.objs.os.m.fileexists := [=];
help::pkg.utility.misc.objs.os.m.fileexists.d := 'test if files exists';
help::pkg.utility.misc.objs.os.m.fileexists.a.file := [=];
help::pkg.utility.misc.objs.os.m.fileexists.a.file.d := 'file names';
help::pkg.utility.misc.objs.os.m.fileexists.a.file.def := '';
help::pkg.utility.misc.objs.os.m.fileexists.a.file.a := 'vector of strings';
help::pkg.utility.misc.objs.os.m.fileexists.a.follow := [=];
help::pkg.utility.misc.objs.os.m.fileexists.a.follow.d := 'follow symlink?';
help::pkg.utility.misc.objs.os.m.fileexists.a.follow.def := 'T';
help::pkg.utility.misc.objs.os.m.fileexists.a.follow.a := 'bool';
help::pkg.utility.misc.objs.os.m.fileexists.s := 'fileexists(file, follow)';
help::pkg.utility.misc.objs.os.m.dir := [=];
help::pkg.utility.misc.objs.os.m.dir.d := 'return a vector of strings with directory listing';
help::pkg.utility.misc.objs.os.m.dir.a.directoryname := [=];
help::pkg.utility.misc.objs.os.m.dir.a.directoryname.d := 'directory name';
help::pkg.utility.misc.objs.os.m.dir.a.directoryname.def := '\' .\' ';
help::pkg.utility.misc.objs.os.m.dir.a.directoryname.a := 'string';
help::pkg.utility.misc.objs.os.m.dir.a.pattern := [=];
help::pkg.utility.misc.objs.os.m.dir.a.pattern.d := 'file name pattern';
help::pkg.utility.misc.objs.os.m.dir.a.pattern.def := '\' \' ';
help::pkg.utility.misc.objs.os.m.dir.a.pattern.a := 'string';
help::pkg.utility.misc.objs.os.m.dir.a.types := [=];
help::pkg.utility.misc.objs.os.m.dir.a.types.d := 'which types?';
help::pkg.utility.misc.objs.os.m.dir.a.types.def := '\' \' ';
help::pkg.utility.misc.objs.os.m.dir.a.types.a := 'string';
help::pkg.utility.misc.objs.os.m.dir.a.all := [=];
help::pkg.utility.misc.objs.os.m.dir.a.all.d := 'also dot files?';
help::pkg.utility.misc.objs.os.m.dir.a.all.def := 'F';
help::pkg.utility.misc.objs.os.m.dir.a.all.a := 'bool';
help::pkg.utility.misc.objs.os.m.dir.a.follow := [=];
help::pkg.utility.misc.objs.os.m.dir.a.follow.d := 'follow symlink?';
help::pkg.utility.misc.objs.os.m.dir.a.follow.def := 'T';
help::pkg.utility.misc.objs.os.m.dir.a.follow.a := 'bool';
help::pkg.utility.misc.objs.os.m.dir.s := 'dir(directoryname, pattern, types, all, follow)';
help::pkg.utility.misc.objs.os.m.ls := [=];
help::pkg.utility.misc.objs.os.m.ls.d := 'directory listing';
help::pkg.utility.misc.objs.os.m.ls.a.dir := [=];
help::pkg.utility.misc.objs.os.m.ls.a.dir.d := 'directory name';
help::pkg.utility.misc.objs.os.m.ls.a.dir.def := 'current directory';
help::pkg.utility.misc.objs.os.m.ls.a.dir.a := 'string';
help::pkg.utility.misc.objs.os.m.ls.s := 'ls(dir)';
help::pkg.utility.misc.objs.os.m.mkdir := [=];
help::pkg.utility.misc.objs.os.m.mkdir.d := 'create directories';
help::pkg.utility.misc.objs.os.m.mkdir.a.directoryname := [=];
help::pkg.utility.misc.objs.os.m.mkdir.a.directoryname.d := 'directory names';
help::pkg.utility.misc.objs.os.m.mkdir.a.directoryname.def := '';
help::pkg.utility.misc.objs.os.m.mkdir.a.directoryname.a := 'vector of strings';
help::pkg.utility.misc.objs.os.m.mkdir.a.makeparent := [=];
help::pkg.utility.misc.objs.os.m.mkdir.a.makeparent.d := 'make parent directories if needed';
help::pkg.utility.misc.objs.os.m.mkdir.a.makeparent.def := 'F';
help::pkg.utility.misc.objs.os.m.mkdir.a.makeparent.a := 'bool';
help::pkg.utility.misc.objs.os.m.mkdir.s := 'mkdir(directoryname, makeparent)';
help::pkg.utility.misc.objs.os.m.fullname := [=];
help::pkg.utility.misc.objs.os.m.fullname.d := 'expand path names';
help::pkg.utility.misc.objs.os.m.fullname.a.pathname := [=];
help::pkg.utility.misc.objs.os.m.fullname.a.pathname.d := 'path name';
help::pkg.utility.misc.objs.os.m.fullname.a.pathname.def := '\' .\' ';
help::pkg.utility.misc.objs.os.m.fullname.a.pathname.a := 'vector of strings';
help::pkg.utility.misc.objs.os.m.fullname.s := 'fullname(pathname)';
help::pkg.utility.misc.objs.os.m.dirname := [=];
help::pkg.utility.misc.objs.os.m.dirname.d := 'get directory part in path names';
help::pkg.utility.misc.objs.os.m.dirname.a.pathname := [=];
help::pkg.utility.misc.objs.os.m.dirname.a.pathname.d := 'path name';
help::pkg.utility.misc.objs.os.m.dirname.a.pathname.def := '\' .\' ';
help::pkg.utility.misc.objs.os.m.dirname.a.pathname.a := 'vector of strings';
help::pkg.utility.misc.objs.os.m.dirname.s := 'dirname(pathname)';
help::pkg.utility.misc.objs.os.m.basename := [=];
help::pkg.utility.misc.objs.os.m.basename.d := 'get file part in path names';
help::pkg.utility.misc.objs.os.m.basename.a.pathname := [=];
help::pkg.utility.misc.objs.os.m.basename.a.pathname.d := 'path name';
help::pkg.utility.misc.objs.os.m.basename.a.pathname.def := '\' .\' ';
help::pkg.utility.misc.objs.os.m.basename.a.pathname.a := 'vector of strings';
help::pkg.utility.misc.objs.os.m.basename.s := 'basename(pathname)';
help::pkg.utility.misc.objs.os.m.filetype := [=];
help::pkg.utility.misc.objs.os.m.filetype.d := 'determine file type';
help::pkg.utility.misc.objs.os.m.filetype.a.filename := [=];
help::pkg.utility.misc.objs.os.m.filetype.a.filename.d := 'file name';
help::pkg.utility.misc.objs.os.m.filetype.a.filename.def := '';
help::pkg.utility.misc.objs.os.m.filetype.a.filename.a := 'vector of strings';
help::pkg.utility.misc.objs.os.m.filetype.a.follow := [=];
help::pkg.utility.misc.objs.os.m.filetype.a.follow.d := 'follow symlink?';
help::pkg.utility.misc.objs.os.m.filetype.a.follow.def := 'T';
help::pkg.utility.misc.objs.os.m.filetype.a.follow.a := 'bool';
help::pkg.utility.misc.objs.os.m.filetype.s := 'filetype(filename, follow)';
help::pkg.utility.misc.objs.os.m.filetime := [=];
help::pkg.utility.misc.objs.os.m.filetime.d := 'return the file time';
help::pkg.utility.misc.objs.os.m.filetime.a.pathname := [=];
help::pkg.utility.misc.objs.os.m.filetime.a.pathname.d := 'path name';
help::pkg.utility.misc.objs.os.m.filetime.a.pathname.def := '\' .\' ';
help::pkg.utility.misc.objs.os.m.filetime.a.pathname.a := 'vector of strings';
help::pkg.utility.misc.objs.os.m.filetime.a.whichtime := [=];
help::pkg.utility.misc.objs.os.m.filetime.a.whichtime.d := 'which time to return';
help::pkg.utility.misc.objs.os.m.filetime.a.whichtime.def := '2';
help::pkg.utility.misc.objs.os.m.filetime.a.whichtime.a := 'integer';
help::pkg.utility.misc.objs.os.m.filetime.a.follow := [=];
help::pkg.utility.misc.objs.os.m.filetime.a.follow.d := 'follow symlink?';
help::pkg.utility.misc.objs.os.m.filetime.a.follow.def := 'T';
help::pkg.utility.misc.objs.os.m.filetime.a.follow.a := 'bool';
help::pkg.utility.misc.objs.os.m.filetime.s := 'filetime(pathname, whichtime, follow)';
help::pkg.utility.misc.objs.os.m.filetimestring := [=];
help::pkg.utility.misc.objs.os.m.filetimestring.d := 'return the file time string';
help::pkg.utility.misc.objs.os.m.filetimestring.a.pathname := [=];
help::pkg.utility.misc.objs.os.m.filetimestring.a.pathname.d := 'path name';
help::pkg.utility.misc.objs.os.m.filetimestring.a.pathname.def := '\' .\' ';
help::pkg.utility.misc.objs.os.m.filetimestring.a.pathname.a := 'vector of strings';
help::pkg.utility.misc.objs.os.m.filetimestring.a.whichtime := [=];
help::pkg.utility.misc.objs.os.m.filetimestring.a.whichtime.d := 'which time to return';
help::pkg.utility.misc.objs.os.m.filetimestring.a.whichtime.def := '2';
help::pkg.utility.misc.objs.os.m.filetimestring.a.whichtime.a := 'integer';
help::pkg.utility.misc.objs.os.m.filetimestring.a.follow := [=];
help::pkg.utility.misc.objs.os.m.filetimestring.a.follow.d := 'follow symlink?';
help::pkg.utility.misc.objs.os.m.filetimestring.a.follow.def := 'T';
help::pkg.utility.misc.objs.os.m.filetimestring.a.follow.a := 'bool';
help::pkg.utility.misc.objs.os.m.filetimestring.s := 'filetimestring(pathname, whichtime, follow)';
help::pkg.utility.misc.objs.os.m.size := [=];
help::pkg.utility.misc.objs.os.m.size.d := 'determine file or directory sizes';
help::pkg.utility.misc.objs.os.m.size.a.pathname := [=];
help::pkg.utility.misc.objs.os.m.size.a.pathname.d := 'path name';
help::pkg.utility.misc.objs.os.m.size.a.pathname.def := '\' .\' ';
help::pkg.utility.misc.objs.os.m.size.a.pathname.a := 'vector of strings';
help::pkg.utility.misc.objs.os.m.size.a.follow := [=];
help::pkg.utility.misc.objs.os.m.size.a.follow.d := 'follow symlink?';
help::pkg.utility.misc.objs.os.m.size.a.follow.def := 'T';
help::pkg.utility.misc.objs.os.m.size.a.follow.a := 'bool';
help::pkg.utility.misc.objs.os.m.size.s := 'size(pathname, follow)';
help::pkg.utility.misc.objs.os.m.freespace := [=];
help::pkg.utility.misc.objs.os.m.freespace.d := 'determine freespace on file systems';
help::pkg.utility.misc.objs.os.m.freespace.a.pathname := [=];
help::pkg.utility.misc.objs.os.m.freespace.a.pathname.d := 'path name';
help::pkg.utility.misc.objs.os.m.freespace.a.pathname.def := '\' .\' ';
help::pkg.utility.misc.objs.os.m.freespace.a.pathname.a := 'vector of strings';
help::pkg.utility.misc.objs.os.m.freespace.a.follow := [=];
help::pkg.utility.misc.objs.os.m.freespace.a.follow.d := 'follow symlink?';
help::pkg.utility.misc.objs.os.m.freespace.a.follow.def := 'T';
help::pkg.utility.misc.objs.os.m.freespace.a.follow.a := 'bool';
help::pkg.utility.misc.objs.os.m.freespace.s := 'freespace(pathname, follow)';
help::pkg.utility.misc.objs.os.m.copy := [=];
help::pkg.utility.misc.objs.os.m.copy.d := 'copy a file, directory, or symlink';
help::pkg.utility.misc.objs.os.m.copy.a.source := [=];
help::pkg.utility.misc.objs.os.m.copy.a.source.d := 'path name of source';
help::pkg.utility.misc.objs.os.m.copy.a.source.def := '';
help::pkg.utility.misc.objs.os.m.copy.a.source.a := 'string';
help::pkg.utility.misc.objs.os.m.copy.a.target := [=];
help::pkg.utility.misc.objs.os.m.copy.a.target.d := 'path name of target';
help::pkg.utility.misc.objs.os.m.copy.a.target.def := '';
help::pkg.utility.misc.objs.os.m.copy.a.target.a := 'string';
help::pkg.utility.misc.objs.os.m.copy.a.overwrite := [=];
help::pkg.utility.misc.objs.os.m.copy.a.overwrite.d := 'overwrite if target exists?';
help::pkg.utility.misc.objs.os.m.copy.a.overwrite.def := 'F';
help::pkg.utility.misc.objs.os.m.copy.a.overwrite.a := 'bool';
help::pkg.utility.misc.objs.os.m.copy.a.follow := [=];
help::pkg.utility.misc.objs.os.m.copy.a.follow.d := 'follow symlink?';
help::pkg.utility.misc.objs.os.m.copy.a.follow.def := 'T';
help::pkg.utility.misc.objs.os.m.copy.a.follow.a := 'bool';
help::pkg.utility.misc.objs.os.m.copy.s := 'copy(source, target, overwrite, follow)';
help::pkg.utility.misc.objs.os.m.move := [=];
help::pkg.utility.misc.objs.os.m.move.d := 'move a file, directory, or symlink';
help::pkg.utility.misc.objs.os.m.move.a.source := [=];
help::pkg.utility.misc.objs.os.m.move.a.source.d := 'path name of source';
help::pkg.utility.misc.objs.os.m.move.a.source.def := '';
help::pkg.utility.misc.objs.os.m.move.a.source.a := 'string';
help::pkg.utility.misc.objs.os.m.move.a.target := [=];
help::pkg.utility.misc.objs.os.m.move.a.target.d := 'path name of target';
help::pkg.utility.misc.objs.os.m.move.a.target.def := '';
help::pkg.utility.misc.objs.os.m.move.a.target.a := 'string';
help::pkg.utility.misc.objs.os.m.move.a.overwrite := [=];
help::pkg.utility.misc.objs.os.m.move.a.overwrite.d := 'overwrite if target exists?';
help::pkg.utility.misc.objs.os.m.move.a.overwrite.def := 'F';
help::pkg.utility.misc.objs.os.m.move.a.overwrite.a := 'bool';
help::pkg.utility.misc.objs.os.m.move.a.follow := [=];
help::pkg.utility.misc.objs.os.m.move.a.follow.d := 'follow symlink?';
help::pkg.utility.misc.objs.os.m.move.a.follow.def := 'T';
help::pkg.utility.misc.objs.os.m.move.a.follow.a := 'bool';
help::pkg.utility.misc.objs.os.m.move.s := 'move(source, target, overwrite, follow)';
help::pkg.utility.misc.objs.os.m.remove := [=];
help::pkg.utility.misc.objs.os.m.remove.d := 'remove files, directories, or symlinks';
help::pkg.utility.misc.objs.os.m.remove.a.pathname := [=];
help::pkg.utility.misc.objs.os.m.remove.a.pathname.d := 'path names';
help::pkg.utility.misc.objs.os.m.remove.a.pathname.def := '';
help::pkg.utility.misc.objs.os.m.remove.a.pathname.a := 'vector of strings';
help::pkg.utility.misc.objs.os.m.remove.a.recursive := [=];
help::pkg.utility.misc.objs.os.m.remove.a.recursive.d := 'remove directories recursively?';
help::pkg.utility.misc.objs.os.m.remove.a.recursive.def := 'T';
help::pkg.utility.misc.objs.os.m.remove.a.recursive.a := 'bool';
help::pkg.utility.misc.objs.os.m.remove.a.mustexist := [=];
help::pkg.utility.misc.objs.os.m.remove.a.mustexist.d := 'does the file need to exist?';
help::pkg.utility.misc.objs.os.m.remove.a.mustexist.def := 'T';
help::pkg.utility.misc.objs.os.m.remove.a.mustexist.a := 'bool';
help::pkg.utility.misc.objs.os.m.remove.a.follow := [=];
help::pkg.utility.misc.objs.os.m.remove.a.follow.d := 'follow symlink?';
help::pkg.utility.misc.objs.os.m.remove.a.follow.def := 'T';
help::pkg.utility.misc.objs.os.m.remove.a.follow.a := 'bool';
help::pkg.utility.misc.objs.os.m.remove.s := 'remove(pathname, recursive, mustexist, follow)';
help::pkg.utility.misc.objs.os.m.lockinfo := [=];
help::pkg.utility.misc.objs.os.m.lockinfo.d := 'get info about table use and locking';
help::pkg.utility.misc.objs.os.m.lockinfo.a.tablename := [=];
help::pkg.utility.misc.objs.os.m.lockinfo.a.tablename.d := 'table name';
help::pkg.utility.misc.objs.os.m.lockinfo.a.tablename.def := '';
help::pkg.utility.misc.objs.os.m.lockinfo.a.tablename.a := 'string';
help::pkg.utility.misc.objs.os.m.lockinfo.s := 'lockinfo(tablename)';
help::pkg.utility.misc.objs.os.m.showtableuse := [=];
help::pkg.utility.misc.objs.os.m.showtableuse.d := 'tell if a table is used or locked';
help::pkg.utility.misc.objs.os.m.showtableuse.a.tablename := [=];
help::pkg.utility.misc.objs.os.m.showtableuse.a.tablename.d := 'table name';
help::pkg.utility.misc.objs.os.m.showtableuse.a.tablename.def := '';
help::pkg.utility.misc.objs.os.m.showtableuse.a.tablename.a := 'string';
help::pkg.utility.misc.objs.os.m.showtableuse.s := 'showtableuse(tablename)';
help::pkg.utility.misc.objs.os.m.mail := [=];
help::pkg.utility.misc.objs.os.m.mail.d := 'mail a message to a user';
help::pkg.utility.misc.objs.os.m.mail.a.message := [=];
help::pkg.utility.misc.objs.os.m.mail.a.message.d := 'message to send';
help::pkg.utility.misc.objs.os.m.mail.a.message.def := '';
help::pkg.utility.misc.objs.os.m.mail.a.message.a := 'string';
help::pkg.utility.misc.objs.os.m.mail.a.recipient := [=];
help::pkg.utility.misc.objs.os.m.mail.a.recipient.d := 'whom to send the message';
help::pkg.utility.misc.objs.os.m.mail.a.recipient.def := '';
help::pkg.utility.misc.objs.os.m.mail.a.recipient.a := 'string';
help::pkg.utility.misc.objs.os.m.mail.a.sender := [=];
help::pkg.utility.misc.objs.os.m.mail.a.sender.d := 'whom the message comes from';
help::pkg.utility.misc.objs.os.m.mail.a.sender.def := 'T';
help::pkg.utility.misc.objs.os.m.mail.a.sender.a := 'string';
help::pkg.utility.misc.objs.os.m.mail.a.subject := [=];
help::pkg.utility.misc.objs.os.m.mail.a.subject.d := 'subject of the email';
help::pkg.utility.misc.objs.os.m.mail.a.subject.def := '\' \' ';
help::pkg.utility.misc.objs.os.m.mail.a.subject.a := 'string';
help::pkg.utility.misc.objs.os.m.mail.a.cc := [=];
help::pkg.utility.misc.objs.os.m.mail.a.cc.d := 'whom to cc the message';
help::pkg.utility.misc.objs.os.m.mail.a.cc.def := '\' \' ';
help::pkg.utility.misc.objs.os.m.mail.a.cc.a := 'string';
help::pkg.utility.misc.objs.os.m.mail.a.bcc := [=];
help::pkg.utility.misc.objs.os.m.mail.a.bcc.d := 'whom to bcc (blind copy) the message';
help::pkg.utility.misc.objs.os.m.mail.a.bcc.def := '\' \' ';
help::pkg.utility.misc.objs.os.m.mail.a.bcc.a := 'string';
help::pkg.utility.misc.objs.os.m.mail.s := 'mail(message, recipient, sender, subject, cc, bcc)';
help::pkg.utility.misc.objs.os.m.edit := [=];
help::pkg.utility.misc.objs.os.m.edit.d := 'edit a file';
help::pkg.utility.misc.objs.os.m.edit.a.file := [=];
help::pkg.utility.misc.objs.os.m.edit.a.file.d := 'file to be edited';
help::pkg.utility.misc.objs.os.m.edit.a.file.def := '';
help::pkg.utility.misc.objs.os.m.edit.a.file.a := 'string';
help::pkg.utility.misc.objs.os.m.edit.a.editor := [=];
help::pkg.utility.misc.objs.os.m.edit.a.editor.d := 'editor to be used';
help::pkg.utility.misc.objs.os.m.edit.a.editor.def := 'emacs';
help::pkg.utility.misc.objs.os.m.edit.a.editor.a := 'string';
help::pkg.utility.misc.objs.os.m.edit.a.async := [=];
help::pkg.utility.misc.objs.os.m.edit.a.async.d := 'Run asynchronously';
help::pkg.utility.misc.objs.os.m.edit.a.async.def := 'T';
help::pkg.utility.misc.objs.os.m.edit.a.async.a := 'boolean';
help::pkg.utility.misc.objs.os.m.edit.s := 'edit(file, editor, async)';
help::pkg.utility.misc.objs.os.m.type := [=];
help::pkg.utility.misc.objs.os.m.type.d := 'Return the type of this tool';
help::pkg.utility.misc.objs.os.m.type.s := 'type()';
help::pkg.utility.misc.objs.os.m.done := [=];
help::pkg.utility.misc.objs.os.m.done.d := 'end the os tool';
help::pkg.utility.misc.objs.os.m.done.s := 'done()';
help::pkg.utility.misc.objs.aipsrc := [=];
help::pkg.utility.misc.objs.aipsrc.m := [=];
help::pkg.utility.misc.objs.aipsrc.c := [=];
help::pkg.utility.misc.objs.aipsrc.d := 'tool to find aips resources from .aipsrc files';
help::pkg.utility.misc.objs.aipsrc.c.aipsrc := [=];
help::pkg.utility.misc.objs.aipsrc.c.aipsrc.d := 'Construct aipsrc tool';
help::pkg.utility.misc.objs.aipsrc.c.aipsrc.a.host := [=];
help::pkg.utility.misc.objs.aipsrc.c.aipsrc.a.host.d := 'host on which to run tool';
help::pkg.utility.misc.objs.aipsrc.c.aipsrc.a.host.def := '\' \' ';
help::pkg.utility.misc.objs.aipsrc.c.aipsrc.a.host.a := 'valid host name string';
help::pkg.utility.misc.objs.aipsrc.c.aipsrc.a.forceneweserver := [=];
help::pkg.utility.misc.objs.aipsrc.c.aipsrc.a.forceneweserver.d := 'force the use of a new server';
help::pkg.utility.misc.objs.aipsrc.c.aipsrc.a.forceneweserver.def := 'F';
help::pkg.utility.misc.objs.aipsrc.c.aipsrc.a.forceneweserver.a := 'bool';
help::pkg.utility.misc.objs.aipsrc.c.aipsrc.s := 'aipsrc(host, forceneweserver)';
help::pkg.utility.misc.objs.aipsrc.m.find := [=];
help::pkg.utility.misc.objs.aipsrc.m.find.d := 'lookup a resource definition';
help::pkg.utility.misc.objs.aipsrc.m.find.a.value := [=];
help::pkg.utility.misc.objs.aipsrc.m.find.a.value.d := 'The value of the resource (Out)';
help::pkg.utility.misc.objs.aipsrc.m.find.a.value.def := '';
help::pkg.utility.misc.objs.aipsrc.m.find.a.value.a := 'String';
help::pkg.utility.misc.objs.aipsrc.m.find.a.keyword := [=];
help::pkg.utility.misc.objs.aipsrc.m.find.a.keyword.d := 'The name of the resource to look up (In)';
help::pkg.utility.misc.objs.aipsrc.m.find.a.keyword.def := '';
help::pkg.utility.misc.objs.aipsrc.m.find.a.keyword.a := 'String';
help::pkg.utility.misc.objs.aipsrc.m.find.a.def := [=];
help::pkg.utility.misc.objs.aipsrc.m.find.a.def.d := 'The default value to use if no aipsrc resource 	found';
help::pkg.utility.misc.objs.aipsrc.m.find.a.def.def := 'F';
help::pkg.utility.misc.objs.aipsrc.m.find.a.def.a := 'String';
help::pkg.utility.misc.objs.aipsrc.m.find.a.usehome := [=];
help::pkg.utility.misc.objs.aipsrc.m.find.a.usehome.d := 'Use the users own .aipsrc file? (In)';
help::pkg.utility.misc.objs.aipsrc.m.find.a.usehome.def := 'T';
help::pkg.utility.misc.objs.aipsrc.m.find.a.usehome.a := 'Bool';
help::pkg.utility.misc.objs.aipsrc.m.find.s := 'find(value, keyword, def, usehome)';
help::pkg.utility.misc.objs.aipsrc.m.findbool := [=];
help::pkg.utility.misc.objs.aipsrc.m.findbool.d := 'lookup a boolean resource definition';
help::pkg.utility.misc.objs.aipsrc.m.findbool.a.value := [=];
help::pkg.utility.misc.objs.aipsrc.m.findbool.a.value.d := 'The value of the resource (Out)';
help::pkg.utility.misc.objs.aipsrc.m.findbool.a.value.def := '';
help::pkg.utility.misc.objs.aipsrc.m.findbool.a.value.a := 'Bool';
help::pkg.utility.misc.objs.aipsrc.m.findbool.a.keyword := [=];
help::pkg.utility.misc.objs.aipsrc.m.findbool.a.keyword.d := 'The name of the resource to look up (In)';
help::pkg.utility.misc.objs.aipsrc.m.findbool.a.keyword.def := '';
help::pkg.utility.misc.objs.aipsrc.m.findbool.a.keyword.a := 'String';
help::pkg.utility.misc.objs.aipsrc.m.findbool.a.def := [=];
help::pkg.utility.misc.objs.aipsrc.m.findbool.a.def.d := 'Default to use if keyword not found';
help::pkg.utility.misc.objs.aipsrc.m.findbool.a.def.def := 'T';
help::pkg.utility.misc.objs.aipsrc.m.findbool.a.def.a := 'Bool';
help::pkg.utility.misc.objs.aipsrc.m.findbool.s := 'findbool(value, keyword, def)';
help::pkg.utility.misc.objs.aipsrc.m.findfloat := [=];
help::pkg.utility.misc.objs.aipsrc.m.findfloat.d := 'lookup a float value resource definition';
help::pkg.utility.misc.objs.aipsrc.m.findfloat.a.value := [=];
help::pkg.utility.misc.objs.aipsrc.m.findfloat.a.value.d := 'The value of the resource (Out)';
help::pkg.utility.misc.objs.aipsrc.m.findfloat.a.value.def := '';
help::pkg.utility.misc.objs.aipsrc.m.findfloat.a.value.a := 'Double';
help::pkg.utility.misc.objs.aipsrc.m.findfloat.a.keyword := [=];
help::pkg.utility.misc.objs.aipsrc.m.findfloat.a.keyword.d := 'The name of the resource to look up (In)';
help::pkg.utility.misc.objs.aipsrc.m.findfloat.a.keyword.def := '';
help::pkg.utility.misc.objs.aipsrc.m.findfloat.a.keyword.a := 'String';
help::pkg.utility.misc.objs.aipsrc.m.findfloat.a.def := [=];
help::pkg.utility.misc.objs.aipsrc.m.findfloat.a.def.d := 'Default to use if keyword not found';
help::pkg.utility.misc.objs.aipsrc.m.findfloat.a.def.def := '0';
help::pkg.utility.misc.objs.aipsrc.m.findfloat.a.def.a := 'Numeric';
help::pkg.utility.misc.objs.aipsrc.m.findfloat.a.undef := [=];
help::pkg.utility.misc.objs.aipsrc.m.findfloat.a.undef.d := 'Default units to use if none given in aipsrc   file';
help::pkg.utility.misc.objs.aipsrc.m.findfloat.a.undef.def := 'F';
help::pkg.utility.misc.objs.aipsrc.m.findfloat.a.undef.a := 'valid unit string';
help::pkg.utility.misc.objs.aipsrc.m.findfloat.a.unres := [=];
help::pkg.utility.misc.objs.aipsrc.m.findfloat.a.unres.d := 'The units the result will be converted to before giving   the value from aipsrc file';
help::pkg.utility.misc.objs.aipsrc.m.findfloat.a.unres.def := 'F';
help::pkg.utility.misc.objs.aipsrc.m.findfloat.a.unres.a := 'valid unit string';
help::pkg.utility.misc.objs.aipsrc.m.findfloat.s := 'findfloat(value, keyword, def, undef, unres)';
help::pkg.utility.misc.objs.aipsrc.m.findint := [=];
help::pkg.utility.misc.objs.aipsrc.m.findint.d := 'lookup a float value resource definition';
help::pkg.utility.misc.objs.aipsrc.m.findint.a.value := [=];
help::pkg.utility.misc.objs.aipsrc.m.findint.a.value.d := 'The value of the resource (Out)';
help::pkg.utility.misc.objs.aipsrc.m.findint.a.value.def := '';
help::pkg.utility.misc.objs.aipsrc.m.findint.a.value.a := 'Int';
help::pkg.utility.misc.objs.aipsrc.m.findint.a.keyword := [=];
help::pkg.utility.misc.objs.aipsrc.m.findint.a.keyword.d := 'The name of the resource to look up (In)';
help::pkg.utility.misc.objs.aipsrc.m.findint.a.keyword.def := '';
help::pkg.utility.misc.objs.aipsrc.m.findint.a.keyword.a := 'String';
help::pkg.utility.misc.objs.aipsrc.m.findint.a.def := [=];
help::pkg.utility.misc.objs.aipsrc.m.findint.a.def.d := 'Default value to use if keyword not found';
help::pkg.utility.misc.objs.aipsrc.m.findint.a.def.def := '0';
help::pkg.utility.misc.objs.aipsrc.m.findint.a.def.a := 'Numeric';
help::pkg.utility.misc.objs.aipsrc.m.findint.a.undef := [=];
help::pkg.utility.misc.objs.aipsrc.m.findint.a.undef.d := 'Default units to use if none given in aipsrc   file';
help::pkg.utility.misc.objs.aipsrc.m.findint.a.undef.def := 'F';
help::pkg.utility.misc.objs.aipsrc.m.findint.a.undef.a := 'valid unit string';
help::pkg.utility.misc.objs.aipsrc.m.findint.a.unres := [=];
help::pkg.utility.misc.objs.aipsrc.m.findint.a.unres.d := 'The units the result will be converted to before giving   the value from aipsrc file';
help::pkg.utility.misc.objs.aipsrc.m.findint.a.unres.def := 'F';
help::pkg.utility.misc.objs.aipsrc.m.findint.a.unres.a := 'valid unit string';
help::pkg.utility.misc.objs.aipsrc.m.findint.s := 'findint(value, keyword, def, undef, unres)';
help::pkg.utility.misc.objs.aipsrc.m.findlist := [=];
help::pkg.utility.misc.objs.aipsrc.m.findlist.d := 'lookup a value in a code list';
help::pkg.utility.misc.objs.aipsrc.m.findlist.a.value := [=];
help::pkg.utility.misc.objs.aipsrc.m.findlist.a.value.d := 'The value of the resource (Out)';
help::pkg.utility.misc.objs.aipsrc.m.findlist.a.value.def := '';
help::pkg.utility.misc.objs.aipsrc.m.findlist.a.value.a := 'Int';
help::pkg.utility.misc.objs.aipsrc.m.findlist.a.keyword := [=];
help::pkg.utility.misc.objs.aipsrc.m.findlist.a.keyword.d := 'The name of the resource to look up (In)';
help::pkg.utility.misc.objs.aipsrc.m.findlist.a.keyword.def := '';
help::pkg.utility.misc.objs.aipsrc.m.findlist.a.keyword.a := 'String';
help::pkg.utility.misc.objs.aipsrc.m.findlist.a.vlist := [=];
help::pkg.utility.misc.objs.aipsrc.m.findlist.a.vlist.d := 'List of code values that will be recognised';
help::pkg.utility.misc.objs.aipsrc.m.findlist.a.vlist.def := '';
help::pkg.utility.misc.objs.aipsrc.m.findlist.a.vlist.a := 'String   array';
help::pkg.utility.misc.objs.aipsrc.m.findlist.a.def := [=];
help::pkg.utility.misc.objs.aipsrc.m.findlist.a.def.d := 'Default value to use if keyword not present, or value does   not match code value list';
help::pkg.utility.misc.objs.aipsrc.m.findlist.a.def.def := '\' \' ';
help::pkg.utility.misc.objs.aipsrc.m.findlist.a.def.a := 'String';
help::pkg.utility.misc.objs.aipsrc.m.findlist.s := 'findlist(value, keyword, vlist, def)';
help::pkg.utility.misc.objs.aipsrc.m.init := [=];
help::pkg.utility.misc.objs.aipsrc.m.init.d := 're-read all the .aipsrc files';
help::pkg.utility.misc.objs.aipsrc.m.init.s := 'init()';
help::pkg.utility.misc.objs.aipsrc.m.aipsroot := [=];
help::pkg.utility.misc.objs.aipsrc.m.aipsroot.d := 'The AIPSROOT directory string';
help::pkg.utility.misc.objs.aipsrc.m.aipsroot.s := 'aipsroot()';
help::pkg.utility.misc.objs.aipsrc.m.aipsarch := [=];
help::pkg.utility.misc.objs.aipsrc.m.aipsarch.d := 'The AIPSARCH directory string';
help::pkg.utility.misc.objs.aipsrc.m.aipsarch.s := 'aipsarch()';
help::pkg.utility.misc.objs.aipsrc.m.aipssite := [=];
help::pkg.utility.misc.objs.aipsrc.m.aipssite.d := 'The AIPSSITE directory string';
help::pkg.utility.misc.objs.aipsrc.m.aipssite.s := 'aipssite()';
help::pkg.utility.misc.objs.aipsrc.m.aipshost := [=];
help::pkg.utility.misc.objs.aipsrc.m.aipshost.d := 'The AIPSHOST directory string';
help::pkg.utility.misc.objs.aipsrc.m.aipshost.s := 'aipshost()';
help::pkg.utility.misc.objs.aipsrc.m.aipshome := [=];
help::pkg.utility.misc.objs.aipsrc.m.aipshome.d := 'The user s aips++ directory string';
help::pkg.utility.misc.objs.aipsrc.m.aipshome.s := 'aipshome()';
help::pkg.utility.misc.objs.aipsrc.m.tzoffset := [=];
help::pkg.utility.misc.objs.aipsrc.m.tzoffset.d := 'The local time zone offset';
help::pkg.utility.misc.objs.aipsrc.m.tzoffset.s := 'tzoffset()';
help::pkg.utility.misc.objs.aipsrc.m.id := [=];
help::pkg.utility.misc.objs.aipsrc.m.id.d := 'identification of tool';
help::pkg.utility.misc.objs.aipsrc.m.id.s := 'id()';
help::pkg.utility.misc.objs.aipsrc.m.type := [=];
help::pkg.utility.misc.objs.aipsrc.m.type.d := 'type of tool';
help::pkg.utility.misc.objs.aipsrc.m.type.s := 'type()';
help::pkg.utility.misc.objs.aipsrc.m.done := [=];
help::pkg.utility.misc.objs.aipsrc.m.done.d := 'free resources used by tool';
help::pkg.utility.misc.objs.aipsrc.m.done.a.kill := [=];
help::pkg.utility.misc.objs.aipsrc.m.done.a.kill.d := 'force kill of the default tool';
help::pkg.utility.misc.objs.aipsrc.m.done.a.kill.def := 'F';
help::pkg.utility.misc.objs.aipsrc.m.done.a.kill.a := 'bool';
help::pkg.utility.misc.objs.aipsrc.m.done.s := 'done(kill)';
help::pkg.utility.misc.objs.aipsrcedit := [=];
help::pkg.utility.misc.objs.aipsrcedit.m := [=];
help::pkg.utility.misc.objs.aipsrcedit.c := [=];
help::pkg.utility.misc.objs.aipsrcedit.d := 'Tool to edit aipsrc file';
help::pkg.utility.misc.objs.aipsrcedit.c.aipsrcedit := [=];
help::pkg.utility.misc.objs.aipsrcedit.c.aipsrcedit.d := 'Construct an aipsrcedit tool';
help::pkg.utility.misc.objs.aipsrcedit.c.aipsrcedit.s := 'aipsrcedit()';
help::pkg.utility.misc.objs.aipsrcedit.m.gui := [=];
help::pkg.utility.misc.objs.aipsrcedit.m.gui.d := 'Use the GUI';
help::pkg.utility.misc.objs.aipsrcedit.m.gui.s := 'gui()';
help::pkg.utility.misc.objs.getrc := [=];
help::pkg.utility.misc.objs.getrc.m := [=];
help::pkg.utility.misc.objs.getrc.c := [=];
help::pkg.utility.misc.objs.getrc.d := 'find aips recources from .aipsrc files using the getrc utility';
help::pkg.utility.misc.objs.getrc.m.find := [=];
help::pkg.utility.misc.objs.getrc.m.find.d := 'lookup a resource definition';
help::pkg.utility.misc.objs.getrc.m.find.a.value := [=];
help::pkg.utility.misc.objs.getrc.m.find.a.value.d := 'The value of the resource (Out)';
help::pkg.utility.misc.objs.getrc.m.find.a.value.def := '';
help::pkg.utility.misc.objs.getrc.m.find.a.value.a := 'String';
help::pkg.utility.misc.objs.getrc.m.find.a.keyword := [=];
help::pkg.utility.misc.objs.getrc.m.find.a.keyword.d := 'The name of the resource to look up (In)';
help::pkg.utility.misc.objs.getrc.m.find.a.keyword.def := '';
help::pkg.utility.misc.objs.getrc.m.find.a.keyword.a := 'String';
help::pkg.utility.misc.objs.getrc.m.find.a.def := [=];
help::pkg.utility.misc.objs.getrc.m.find.a.def.d := 'The default value to use if no aipsrc resource 	found';
help::pkg.utility.misc.objs.getrc.m.find.a.def.def := 'F';
help::pkg.utility.misc.objs.getrc.m.find.a.def.a := 'String';
help::pkg.utility.misc.objs.getrc.m.find.a.usehome := [=];
help::pkg.utility.misc.objs.getrc.m.find.a.usehome.d := 'Use the users own .aipsrc file? (In)';
help::pkg.utility.misc.objs.getrc.m.find.a.usehome.def := 'T';
help::pkg.utility.misc.objs.getrc.m.find.a.usehome.a := 'Bool';
help::pkg.utility.misc.objs.getrc.m.find.s := 'find(value, keyword, def, usehome)';
help::pkg.utility.misc.objs.sysinfo := [=];
help::pkg.utility.misc.objs.sysinfo.m := [=];
help::pkg.utility.misc.objs.sysinfo.c := [=];
help::pkg.utility.misc.objs.sysinfo.d := 'Miscellaneous information';
help::pkg.utility.misc.objs.sysinfo.m.numcpu := [=];
help::pkg.utility.misc.objs.sysinfo.m.numcpu.d := 'Number of CPU s on the present computer';
help::pkg.utility.misc.objs.sysinfo.m.numcpu.s := 'numcpu()';
help::pkg.utility.misc.objs.sysinfo.m.memory := [=];
help::pkg.utility.misc.objs.sysinfo.m.memory.d := 'Memory in MB';
help::pkg.utility.misc.objs.sysinfo.m.memory.s := 'memory()';
help::pkg.utility.misc.objs.sysinfo.m.root := [=];
help::pkg.utility.misc.objs.sysinfo.m.root.d := 'Root of the directory installation';
help::pkg.utility.misc.objs.sysinfo.m.root.s := 'root()';
help::pkg.utility.misc.objs.sysinfo.m.arch := [=];
help::pkg.utility.misc.objs.sysinfo.m.arch.d := 'Architecture';
help::pkg.utility.misc.objs.sysinfo.m.arch.s := 'arch()';
help::pkg.utility.misc.objs.sysinfo.m.site := [=];
help::pkg.utility.misc.objs.sysinfo.m.site.d := 'Site of the installation';
help::pkg.utility.misc.objs.sysinfo.m.site.s := 'site()';
help::pkg.utility.misc.objs.sysinfo.m.host := [=];
help::pkg.utility.misc.objs.sysinfo.m.host.d := 'Host we are running on';
help::pkg.utility.misc.objs.sysinfo.m.host.s := 'host()';
help::pkg.utility.misc.objs.sysinfo.m.version := [=];
help::pkg.utility.misc.objs.sysinfo.m.version.d := 'AIPS++\ version information';
help::pkg.utility.misc.objs.sysinfo.m.version.a.major := [=];
help::pkg.utility.misc.objs.sysinfo.m.version.a.major.d := 'major version number (Out)';
help::pkg.utility.misc.objs.sysinfo.m.version.a.major.def := 'F';
help::pkg.utility.misc.objs.sysinfo.m.version.a.major.a := 'int';
help::pkg.utility.misc.objs.sysinfo.m.version.a.minor := [=];
help::pkg.utility.misc.objs.sysinfo.m.version.a.minor.d := 'minor version number (Out)';
help::pkg.utility.misc.objs.sysinfo.m.version.a.minor.def := 'F';
help::pkg.utility.misc.objs.sysinfo.m.version.a.minor.a := 'int';
help::pkg.utility.misc.objs.sysinfo.m.version.a.patch := [=];
help::pkg.utility.misc.objs.sysinfo.m.version.a.patch.d := 'patch number(Out)';
help::pkg.utility.misc.objs.sysinfo.m.version.a.patch.def := 'F';
help::pkg.utility.misc.objs.sysinfo.m.version.a.patch.a := 'int';
help::pkg.utility.misc.objs.sysinfo.m.version.a.date := [=];
help::pkg.utility.misc.objs.sysinfo.m.version.a.date.d := 'date of the release (Out)';
help::pkg.utility.misc.objs.sysinfo.m.version.a.date.def := 'F';
help::pkg.utility.misc.objs.sysinfo.m.version.a.date.a := 'string';
help::pkg.utility.misc.objs.sysinfo.m.version.a.info := [=];
help::pkg.utility.misc.objs.sysinfo.m.version.a.info.d := 'information about the release (Out)';
help::pkg.utility.misc.objs.sysinfo.m.version.a.info.def := 'F';
help::pkg.utility.misc.objs.sysinfo.m.version.a.info.a := 'string';
help::pkg.utility.misc.objs.sysinfo.m.version.a.formatted := [=];
help::pkg.utility.misc.objs.sysinfo.m.version.a.formatted.d := 'the above information combined (Out)';
help::pkg.utility.misc.objs.sysinfo.m.version.a.formatted.def := 'F';
help::pkg.utility.misc.objs.sysinfo.m.version.a.formatted.a := 'string';
help::pkg.utility.misc.objs.sysinfo.m.version.a.dolog := [=];
help::pkg.utility.misc.objs.sysinfo.m.version.a.dolog.d := 'Log the version information to the logger (In)';
help::pkg.utility.misc.objs.sysinfo.m.version.a.dolog.def := 'T';
help::pkg.utility.misc.objs.sysinfo.m.version.a.dolog.a := 'boolean';
help::pkg.utility.misc.objs.sysinfo.m.version.s := 'version(major, minor, patch, date, info, formatted, dolog)';
help::pkg.utility.misc.funs.about := [=];
help::pkg.utility.misc.funs.about.a := [=];
help::pkg.utility.misc.funs.about.d := 'Information about AIPS++';
help::pkg.utility.misc.funs.about.a.use_gui := [=];
help::pkg.utility.misc.funs.about.a.use_gui.d := 'Should we use a gui?';
help::pkg.utility.misc.funs.about.a.use_gui.def := 'have\_gui';
help::pkg.utility.misc.funs.about.a.use_gui.a := 'boolean';
help::pkg.utility.misc.funs.about.s := 'about(use_gui)';
help::pkg.utility.misc.objs.printer := [=];
help::pkg.utility.misc.objs.printer.m := [=];
help::pkg.utility.misc.objs.printer.c := [=];
help::pkg.utility.misc.objs.printer.d := 'Print files';
help::pkg.utility.misc.objs.printer.c.printer := [=];
help::pkg.utility.misc.objs.printer.c.printer.d := 'Create a printer access tool';
help::pkg.utility.misc.objs.printer.c.printer.a.printername := [=];
help::pkg.utility.misc.objs.printer.c.printer.a.printername.d := 'Device name of the printer. Defaults to PRINTER environment variable or printer.default aipsrc variable.';
help::pkg.utility.misc.objs.printer.c.printer.a.printername.def := 'F';
help::pkg.utility.misc.objs.printer.c.printer.a.printername.a := '';
help::pkg.utility.misc.objs.printer.c.printer.a.mode := [=];
help::pkg.utility.misc.objs.printer.c.printer.a.mode.d := 'How to print the file';
help::pkg.utility.misc.objs.printer.c.printer.a.mode.def := 'p';
help::pkg.utility.misc.objs.printer.c.printer.a.mode.a := 'p=portrait,l=landscape,80=two-up width=80,72=two-up width=72';
help::pkg.utility.misc.objs.printer.c.printer.a.paper := [=];
help::pkg.utility.misc.objs.printer.c.printer.a.paper.d := 'Paper format';
help::pkg.utility.misc.objs.printer.c.printer.a.paper.def := 'l';
help::pkg.utility.misc.objs.printer.c.printer.a.paper.a := 'l=US letter, A4, A3';
help::pkg.utility.misc.objs.printer.c.printer.a.display := [=];
help::pkg.utility.misc.objs.printer.c.printer.a.display.d := 'Print to ghostview instead of print?';
help::pkg.utility.misc.objs.printer.c.printer.a.display.def := 'F';
help::pkg.utility.misc.objs.printer.c.printer.a.display.a := 'boolean';
help::pkg.utility.misc.objs.printer.c.printer.a.printernote := [=];
help::pkg.utility.misc.objs.printer.c.printer.a.printernote.d := 'The note function to use to log our messages.';
help::pkg.utility.misc.objs.printer.c.printer.a.printernote.def := 'note';
help::pkg.utility.misc.objs.printer.c.printer.a.printernote.a := 'a note function';
help::pkg.utility.misc.objs.printer.c.printer.s := 'printer(printername, mode, paper, display, printernote)';
help::pkg.utility.misc.objs.printer.m.reinit := [=];
help::pkg.utility.misc.objs.printer.m.reinit.d := 'Reset the printing parameters';
help::pkg.utility.misc.objs.printer.m.reinit.a.printername := [=];
help::pkg.utility.misc.objs.printer.m.reinit.a.printername.d := 'Device name of the printer. Defaults to PRINTER environment variable.';
help::pkg.utility.misc.objs.printer.m.reinit.a.printername.def := 'F';
help::pkg.utility.misc.objs.printer.m.reinit.a.printername.a := '';
help::pkg.utility.misc.objs.printer.m.reinit.a.mode := [=];
help::pkg.utility.misc.objs.printer.m.reinit.a.mode.d := 'How to print the file';
help::pkg.utility.misc.objs.printer.m.reinit.a.mode.def := 'p';
help::pkg.utility.misc.objs.printer.m.reinit.a.mode.a := 'p=portrait,l=landscape,80=two-up width=80,72=two-up width=72';
help::pkg.utility.misc.objs.printer.m.reinit.a.paper := [=];
help::pkg.utility.misc.objs.printer.m.reinit.a.paper.d := 'Paper format';
help::pkg.utility.misc.objs.printer.m.reinit.a.paper.def := 'l';
help::pkg.utility.misc.objs.printer.m.reinit.a.paper.a := 'l=US letter, A4, A3';
help::pkg.utility.misc.objs.printer.m.reinit.a.display := [=];
help::pkg.utility.misc.objs.printer.m.reinit.a.display.d := 'Print to ghostview instead of print?';
help::pkg.utility.misc.objs.printer.m.reinit.a.display.def := 'F';
help::pkg.utility.misc.objs.printer.m.reinit.a.display.a := 'boolean';
help::pkg.utility.misc.objs.printer.m.reinit.s := 'reinit(printername, mode, paper, display)';
help::pkg.utility.misc.objs.printer.m.print := [=];
help::pkg.utility.misc.objs.printer.m.print.d := 'Send some files to the printer';
help::pkg.utility.misc.objs.printer.m.print.a.files := [=];
help::pkg.utility.misc.objs.printer.m.print.a.files.d := 'List of file names (text or postscript)';
help::pkg.utility.misc.objs.printer.m.print.a.files.def := '';
help::pkg.utility.misc.objs.printer.m.print.a.files.a := 'string array';
help::pkg.utility.misc.objs.printer.m.print.s := 'print(files)';
help::pkg.utility.misc.objs.printer.m.gui := [=];
help::pkg.utility.misc.objs.printer.m.gui.d := 'Send some files to the printer using a GUI';
help::pkg.utility.misc.objs.printer.m.gui.a.files := [=];
help::pkg.utility.misc.objs.printer.m.gui.a.files.d := 'List of file names (text or postscript)';
help::pkg.utility.misc.objs.printer.m.gui.a.files.def := '""';
help::pkg.utility.misc.objs.printer.m.gui.a.files.a := 'string array';
help::pkg.utility.misc.objs.printer.m.gui.a.landscape := [=];
help::pkg.utility.misc.objs.printer.m.gui.a.landscape.d := 'Default to landscape printing?';
help::pkg.utility.misc.objs.printer.m.gui.a.landscape.def := 'F';
help::pkg.utility.misc.objs.printer.m.gui.a.landscape.a := 'boolean';
help::pkg.utility.misc.objs.printer.m.gui.s := 'gui(files, landscape)';
help::pkg.utility.misc.objs.printer.m.printvalues := [=];
help::pkg.utility.misc.objs.printer.m.printvalues.d := 'Print some Glish values';
help::pkg.utility.misc.objs.printer.m.printvalues.a.values := [=];
help::pkg.utility.misc.objs.printer.m.printvalues.a.values.d := 'Glish variable to be printed';
help::pkg.utility.misc.objs.printer.m.printvalues.a.values.def := '';
help::pkg.utility.misc.objs.printer.m.printvalues.a.values.a := 'any';
help::pkg.utility.misc.objs.printer.m.printvalues.a.needcr := [=];
help::pkg.utility.misc.objs.printer.m.printvalues.a.needcr.d := 'Do we need carriage returns at the end of every line?';
help::pkg.utility.misc.objs.printer.m.printvalues.a.needcr.def := 'T';
help::pkg.utility.misc.objs.printer.m.printvalues.a.needcr.a := 'boolean';
help::pkg.utility.misc.objs.printer.m.printvalues.a.usegui := [=];
help::pkg.utility.misc.objs.printer.m.printvalues.a.usegui.d := 'Use the GUI?';
help::pkg.utility.misc.objs.printer.m.printvalues.a.usegui.def := 'F';
help::pkg.utility.misc.objs.printer.m.printvalues.a.usegui.a := 'boolean';
help::pkg.utility.misc.objs.printer.m.printvalues.s := 'printvalues(values, needcr, usegui)';
help::pkg.utility.misc.funs.help := [=];
help::pkg.utility.misc.funs.help.a := [=];
help::pkg.utility.misc.funs.help.d := 'Provides user help.';
help::pkg.utility.misc.funs.help.a.help_about := [=];
help::pkg.utility.misc.funs.help.a.help_about.d := 'Help a user is looking for';
help::pkg.utility.misc.funs.help.a.help_about.def := '';
help::pkg.utility.misc.funs.help.a.help_about.a := 'String';
help::pkg.utility.misc.funs.help.a.browser := [=];
help::pkg.utility.misc.funs.help.a.browser.d := 'Optional browser to drive';
help::pkg.utility.misc.funs.help.a.browser.def := 'netscape';
help::pkg.utility.misc.funs.help.a.browser.a := 'Optional: netscape or mosaic';
help::pkg.utility.misc.funs.help.a.server := [=];
help::pkg.utility.misc.funs.help.a.server.d := 'Optional server to use';
help::pkg.utility.misc.funs.help.a.server.def := 'file://localhost';
help::pkg.utility.misc.funs.help.a.server.a := 'Optional: any valid AIPS++ documentation server';
help::pkg.utility.misc.funs.help.s := 'help(help about, browser, server)';
help::pkg.utility.misc.funs.web := [=];
help::pkg.utility.misc.funs.web.a := [=];
help::pkg.utility.misc.funs.web.d := 'Drives a web browser to the last requested help';
help::pkg.utility.misc.funs.web.s := 'web()';
help::pkg.utility.misc.funs.bug := [=];
help::pkg.utility.misc.funs.bug.a := [=];
help::pkg.utility.misc.funs.bug.d := 'Provides a GUI to for user s to report problems.';
help::pkg.utility.misc.funs.bug.s := 'bug()';
help::pkg.utility.misc.funs.ask := [=];
help::pkg.utility.misc.funs.ask.a := [=];
help::pkg.utility.misc.funs.ask.d := 'Provides a GUI to for user s to ask questions.';
help::pkg.utility.misc.funs.ask.s := 'ask()';
help::pkg.utility.misc.funs.register := [=];
help::pkg.utility.misc.funs.register.a := [=];
help::pkg.utility.misc.funs.register.d := 'Provides a GUI to for user s to register AIPS++.';
help::pkg.utility.misc.funs.register.s := 'register()';
help::pkg.utility.misc.funs.faq := [=];
help::pkg.utility.misc.funs.faq.a := [=];
help::pkg.utility.misc.funs.faq.d := 'Drives the user s web browser to the AIPS++ FAQ';
help::pkg.utility.misc.funs.faq.s := 'faq()';
help::pkg.utility.misc.objs.sh := [=];
help::pkg.utility.misc.objs.sh.m := [=];
help::pkg.utility.misc.objs.sh.c := [=];
help::pkg.utility.misc.objs.sh.d := 'A persistent shell client';
help::pkg.utility.misc.objs.sh.c.sh := [=];
help::pkg.utility.misc.objs.sh.c.sh.d := 'Construct persistent shell client tool';
help::pkg.utility.misc.objs.sh.c.sh.s := 'sh()';
help::pkg.utility.misc.objs.sh.m.command := [=];
help::pkg.utility.misc.objs.sh.m.command.d := 'execute command';
help::pkg.utility.misc.objs.sh.m.command.a.command := [=];
help::pkg.utility.misc.objs.sh.m.command.a.command.d := 'Command line to be executed by Bourne shell';
help::pkg.utility.misc.objs.sh.m.command.a.command.def := '';
help::pkg.utility.misc.objs.sh.m.command.a.command.a := '';
help::pkg.utility.misc.objs.sh.m.command.a.timeout := [=];
help::pkg.utility.misc.objs.sh.m.command.a.timeout.d := 'Timeout interval (seconds): 0 for no timeout';
help::pkg.utility.misc.objs.sh.m.command.a.timeout.def := '0';
help::pkg.utility.misc.objs.sh.m.command.a.timeout.a := 'Int';
help::pkg.utility.misc.objs.sh.m.command.s := 'command(command, timeout)';
help::pkg.utility.misc.objs.sh.m.done := [=];
help::pkg.utility.misc.objs.sh.m.done.d := 'destroy the tool';
help::pkg.utility.misc.objs.sh.m.done.s := 'done()';
help::pkg.utility.misc.objs.substitute := [=];
help::pkg.utility.misc.objs.substitute.m := [=];
help::pkg.utility.misc.objs.substitute.c := [=];
help::pkg.utility.misc.objs.substitute.d := 'Functions to substitute Glish variables and expressions';
help::pkg.utility.misc.objs.substitute.m.substitute := [=];
help::pkg.utility.misc.objs.substitute.m.substitute.d := 'substitute Glish variables and expressions';
help::pkg.utility.misc.objs.substitute.m.substitute.a.string := [=];
help::pkg.utility.misc.objs.substitute.m.substitute.a.string.d := 'string to be analyzed';
help::pkg.utility.misc.objs.substitute.m.substitute.a.string.def := '';
help::pkg.utility.misc.objs.substitute.m.substitute.a.string.a := '';
help::pkg.utility.misc.objs.substitute.m.substitute.a.type := [=];
help::pkg.utility.misc.objs.substitute.m.substitute.a.type.d := 'tool type recognized (default none)';
help::pkg.utility.misc.objs.substitute.m.substitute.a.type.def := '';
help::pkg.utility.misc.objs.substitute.m.substitute.a.type.a := '';
help::pkg.utility.misc.objs.substitute.m.substitute.a.startseqnr := [=];
help::pkg.utility.misc.objs.substitute.m.substitute.a.startseqnr.d := 'first sequence number to use for substituted tools';
help::pkg.utility.misc.objs.substitute.m.substitute.a.startseqnr.def := '';
help::pkg.utility.misc.objs.substitute.m.substitute.a.startseqnr.a := '';
help::pkg.utility.misc.objs.substitute.m.substitute.a.idrec := [=];
help::pkg.utility.misc.objs.substitute.m.substitute.a.idrec.d := 'record containing id\' s of substituted tools';
help::pkg.utility.misc.objs.substitute.m.substitute.a.idrec.def := '';
help::pkg.utility.misc.objs.substitute.m.substitute.a.idrec.a := '';
help::pkg.utility.misc.objs.substitute.m.substitute.s := 'substitute(string, type, startseqnr, idrec)';
help::pkg.utility.misc.objs.substitute.m.substitutename := [=];
help::pkg.utility.misc.objs.substitute.m.substitutename.d := 'return the value of a variable name';
help::pkg.utility.misc.objs.substitute.m.substitutename.a.name := [=];
help::pkg.utility.misc.objs.substitute.m.substitutename.a.name.d := 'name of variable to be substituted';
help::pkg.utility.misc.objs.substitute.m.substitutename.a.name.def := '';
help::pkg.utility.misc.objs.substitute.m.substitutename.a.name.a := '';
help::pkg.utility.misc.objs.substitute.m.substitutename.a.type := [=];
help::pkg.utility.misc.objs.substitute.m.substitutename.a.type.d := 'tool type recognized (default none)';
help::pkg.utility.misc.objs.substitute.m.substitutename.a.type.def := '';
help::pkg.utility.misc.objs.substitute.m.substitutename.a.type.a := '';
help::pkg.utility.misc.objs.substitute.m.substitutename.a.idrec := [=];
help::pkg.utility.misc.objs.substitute.m.substitutename.a.idrec.d := 'record containing id\' s of substituted tools';
help::pkg.utility.misc.objs.substitute.m.substitutename.a.idrec.def := '';
help::pkg.utility.misc.objs.substitute.m.substitutename.a.idrec.a := '';
help::pkg.utility.misc.objs.substitute.m.substitutename.s := 'substitutename(name, type, idrec)';
help::pkg.utility.misc.objs.substitute.m.substitutevar := [=];
help::pkg.utility.misc.objs.substitute.m.substitutevar.d := 'return the value of a variable';
help::pkg.utility.misc.objs.substitute.m.substitutevar.a.var := [=];
help::pkg.utility.misc.objs.substitute.m.substitutevar.a.var.d := 'variable';
help::pkg.utility.misc.objs.substitute.m.substitutevar.a.var.def := '';
help::pkg.utility.misc.objs.substitute.m.substitutevar.a.var.a := '';
help::pkg.utility.misc.objs.substitute.m.substitutevar.s := 'substitutevar(var)';
help::pkg.utility.misc.objs.substitute.m.substitutestring := [=];
help::pkg.utility.misc.objs.substitute.m.substitutestring.d := 'return the value of a string variable';
help::pkg.utility.misc.objs.substitute.m.substitutestring.a.var := [=];
help::pkg.utility.misc.objs.substitute.m.substitutestring.a.var.d := 'variable';
help::pkg.utility.misc.objs.substitute.m.substitutestring.a.var.def := '';
help::pkg.utility.misc.objs.substitute.m.substitutestring.a.var.a := '';
help::pkg.utility.misc.objs.substitute.m.substitutestring.s := 'substitutestring(var)';
help::pkg.utility.misc.objs.itemcontainer := [=];
help::pkg.utility.misc.objs.itemcontainer.m := [=];
help::pkg.utility.misc.objs.itemcontainer.c := [=];
help::pkg.utility.misc.objs.itemcontainer.d := 'A generic closure toolcontainer';
help::pkg.utility.misc.objs.itemcontainer.c.itemcontainer := [=];
help::pkg.utility.misc.objs.itemcontainer.c.itemcontainer.d := 'Construct an itemcontainer';
help::pkg.utility.misc.objs.itemcontainer.c.itemcontainer.s := 'itemcontainer()';
help::pkg.utility.misc.objs.itemcontainer.m.type := [=];
help::pkg.utility.misc.objs.itemcontainer.m.type.d := 'Return the type of this tool';
help::pkg.utility.misc.objs.itemcontainer.m.type.s := 'type()';
help::pkg.utility.misc.objs.itemcontainer.m.done := [=];
help::pkg.utility.misc.objs.itemcontainer.m.done.d := 'Destroy this itemcontainer';
help::pkg.utility.misc.objs.itemcontainer.m.done.s := 'done()';
help::pkg.utility.misc.objs.itemcontainer.m.has_item := [=];
help::pkg.utility.misc.objs.itemcontainer.m.has_item.d := 'Does this item exist';
help::pkg.utility.misc.objs.itemcontainer.m.has_item.s := 'has_item()';
help::pkg.utility.misc.objs.itemcontainer.m.names := [=];
help::pkg.utility.misc.objs.itemcontainer.m.names.d := 'Returns list of item names';
help::pkg.utility.misc.objs.itemcontainer.m.names.s := 'names()';
help::pkg.utility.misc.objs.itemcontainer.m.makeconst := [=];
help::pkg.utility.misc.objs.itemcontainer.m.makeconst.d := 'Make this itemcontainer const';
help::pkg.utility.misc.objs.itemcontainer.m.makeconst.s := 'makeconst()';
help::pkg.utility.misc.objs.itemcontainer.m.makeunconst := [=];
help::pkg.utility.misc.objs.itemcontainer.m.makeunconst.d := 'Make this itemcontainer unconst';
help::pkg.utility.misc.objs.itemcontainer.m.makeunconst.s := 'makeunconst()';
help::pkg.utility.misc.objs.itemcontainer.m.length := [=];
help::pkg.utility.misc.objs.itemcontainer.m.length.d := 'Returns the number of items';
help::pkg.utility.misc.objs.itemcontainer.m.length.a.showdeleted := [=];
help::pkg.utility.misc.objs.itemcontainer.m.length.a.showdeleted.d := 'yes or no';
help::pkg.utility.misc.objs.itemcontainer.m.length.a.showdeleted.def := 'F';
help::pkg.utility.misc.objs.itemcontainer.m.length.a.showdeleted.a := 'Bool';
help::pkg.utility.misc.objs.itemcontainer.m.length.s := 'length(showdeleted)';
help::pkg.utility.misc.objs.itemcontainer.m.torecord := [=];
help::pkg.utility.misc.objs.itemcontainer.m.torecord.d := 'Return the contents of the container as a record';
help::pkg.utility.misc.objs.itemcontainer.m.torecord.a.showdeleted := [=];
help::pkg.utility.misc.objs.itemcontainer.m.torecord.a.showdeleted.d := 'yes or no';
help::pkg.utility.misc.objs.itemcontainer.m.torecord.a.showdeleted.def := 'F';
help::pkg.utility.misc.objs.itemcontainer.m.torecord.a.showdeleted.a := 'Bool';
help::pkg.utility.misc.objs.itemcontainer.m.torecord.s := 'torecord(showdeleted)';
help::pkg.utility.misc.objs.itemcontainer.m.fromrecord := [=];
help::pkg.utility.misc.objs.itemcontainer.m.fromrecord.d := 'Add the fields of this record';
help::pkg.utility.misc.objs.itemcontainer.m.fromrecord.s := 'fromrecord()';
help::pkg.utility.misc.objs.itemcontainer.m.set := [=];
help::pkg.utility.misc.objs.itemcontainer.m.set.d := 'Put the named item into the container';
help::pkg.utility.misc.objs.itemcontainer.m.set.a.item := [=];
help::pkg.utility.misc.objs.itemcontainer.m.set.a.item.d := 'Item name';
help::pkg.utility.misc.objs.itemcontainer.m.set.a.item.def := '';
help::pkg.utility.misc.objs.itemcontainer.m.set.a.item.a := 'String';
help::pkg.utility.misc.objs.itemcontainer.m.set.a.value := [=];
help::pkg.utility.misc.objs.itemcontainer.m.set.a.value.d := 'Item';
help::pkg.utility.misc.objs.itemcontainer.m.set.a.value.def := '';
help::pkg.utility.misc.objs.itemcontainer.m.set.a.value.a := 'Any';
help::pkg.utility.misc.objs.itemcontainer.m.set.s := 'set(item, value)';
help::pkg.utility.misc.objs.itemcontainer.m.add := [=];
help::pkg.utility.misc.objs.itemcontainer.m.add.d := 'Add the item to the container';
help::pkg.utility.misc.objs.itemcontainer.m.add.a.value := [=];
help::pkg.utility.misc.objs.itemcontainer.m.add.a.value.d := 'Item';
help::pkg.utility.misc.objs.itemcontainer.m.add.a.value.def := '';
help::pkg.utility.misc.objs.itemcontainer.m.add.a.value.a := 'Any';
help::pkg.utility.misc.objs.itemcontainer.m.add.s := 'add(value)';
help::pkg.utility.misc.objs.itemcontainer.m.delete := [=];
help::pkg.utility.misc.objs.itemcontainer.m.delete.d := 'Remove the item from the container';
help::pkg.utility.misc.objs.itemcontainer.m.delete.a.item := [=];
help::pkg.utility.misc.objs.itemcontainer.m.delete.a.item.d := 'Item';
help::pkg.utility.misc.objs.itemcontainer.m.delete.a.item.def := '';
help::pkg.utility.misc.objs.itemcontainer.m.delete.a.item.a := 'String or Integer';
help::pkg.utility.misc.objs.itemcontainer.m.delete.s := 'delete(item)';
help::pkg.utility.misc.objs.itemcontainer.m.get := [=];
help::pkg.utility.misc.objs.itemcontainer.m.get.d := 'Recover value of specified item';
help::pkg.utility.misc.objs.itemcontainer.m.get.a.item := [=];
help::pkg.utility.misc.objs.itemcontainer.m.get.a.item.d := 'Item name or number';
help::pkg.utility.misc.objs.itemcontainer.m.get.a.item.def := '';
help::pkg.utility.misc.objs.itemcontainer.m.get.a.item.a := 'String or integer';
help::pkg.utility.misc.objs.itemcontainer.m.get.s := 'get(item)';
help::pkg.utility.misc.funs.is_itemcontainer := [=];
help::pkg.utility.misc.funs.is_itemcontainer.a := [=];
help::pkg.utility.misc.funs.is_itemcontainer.d := 'Is this an itemcontainer tool?';
help::pkg.utility.misc.funs.is_itemcontainer.a.thing := [=];
help::pkg.utility.misc.funs.is_itemcontainer.a.thing.d := 'The thing to test';
help::pkg.utility.misc.funs.is_itemcontainer.a.thing.def := '';
help::pkg.utility.misc.funs.is_itemcontainer.a.thing.a := 'Any';
help::pkg.utility.misc.funs.is_itemcontainer.s := 'is_itemcontainer(thing)';
help::pkg.utility.misc.funs.ask := [=];
help::pkg.utility.misc.funs.ask.a := [=];
help::pkg.utility.misc.funs.ask.d := 'Displays the AIPS++\ question submission form';
help::pkg.utility.misc.funs.ask.s := 'ask()';
help::pkg.utility.misc.objs.assay := [=];
help::pkg.utility.misc.objs.assay.m := [=];
help::pkg.utility.misc.objs.assay.c := [=];
help::pkg.utility.misc.objs.assay.d := 'Assay test and demo functions';
help::pkg.utility.misc.objs.assay.m.try := [=];
help::pkg.utility.misc.objs.assay.m.try.d := 'Try each of a list of functions';
help::pkg.utility.misc.objs.assay.m.try.a.functionlist := [=];
help::pkg.utility.misc.objs.assay.m.try.a.functionlist.d := 'The list of functions';
help::pkg.utility.misc.objs.assay.m.try.a.functionlist.def := '';
help::pkg.utility.misc.objs.assay.m.try.a.functionlist.a := '';
help::pkg.utility.misc.objs.assay.m.try.s := 'try(functionlist)';
help::pkg.utility.misc.objs.assay.m.tests := [=];
help::pkg.utility.misc.objs.assay.m.tests.d := 'Returns names of the standard tests';
help::pkg.utility.misc.objs.assay.m.tests.s := 'tests()';
help::pkg.utility.misc.objs.assay.m.demos := [=];
help::pkg.utility.misc.objs.assay.m.demos.d := 'Returns names of the standard demonstrations';
help::pkg.utility.misc.objs.assay.m.demos.s := 'demos()';
help::pkg.utility.misc.objs.assay.m.trytests := [=];
help::pkg.utility.misc.objs.assay.m.trytests.d := 'Tries the standard tests';
help::pkg.utility.misc.objs.assay.m.trytests.a.tests := [=];
help::pkg.utility.misc.objs.assay.m.trytests.a.tests.d := 'Names of tests';
help::pkg.utility.misc.objs.assay.m.trytests.a.tests.def := 'All tests';
help::pkg.utility.misc.objs.assay.m.trytests.a.tests.a := 'String';
help::pkg.utility.misc.objs.assay.m.trytests.s := 'trytests(tests)';
help::pkg.utility.misc.objs.assay.m.trydemos := [=];
help::pkg.utility.misc.objs.assay.m.trydemos.d := 'Tries the standard demonstrations';
help::pkg.utility.misc.objs.assay.m.trydemos.a.demos := [=];
help::pkg.utility.misc.objs.assay.m.trydemos.a.demos.d := 'Names of demos';
help::pkg.utility.misc.objs.assay.m.trydemos.a.demos.def := 'All demos';
help::pkg.utility.misc.objs.assay.m.trydemos.a.demos.a := 'String';
help::pkg.utility.misc.objs.assay.m.trydemos.s := 'trydemos(demos)';
help::pkg.utility.misc.objs.stopwatch := [=];
help::pkg.utility.misc.objs.stopwatch.m := [=];
help::pkg.utility.misc.objs.stopwatch.c := [=];
help::pkg.utility.misc.objs.stopwatch.d := 'stopwatch style timer functions';
help::pkg.utility.misc.objs.stopwatch.c.stopwatch := [=];
help::pkg.utility.misc.objs.stopwatch.c.stopwatch.d := 'Construct stopwatch tool';
help::pkg.utility.misc.objs.stopwatch.c.stopwatch.s := 'stopwatch()';
help::pkg.utility.misc.objs.stopwatch.m.start := [=];
help::pkg.utility.misc.objs.stopwatch.m.start.d := 'start timer running';
help::pkg.utility.misc.objs.stopwatch.m.start.a.quiet := [=];
help::pkg.utility.misc.objs.stopwatch.m.start.a.quiet.d := 'Suppress status output?';
help::pkg.utility.misc.objs.stopwatch.m.start.a.quiet.def := 'F';
help::pkg.utility.misc.objs.stopwatch.m.start.a.quiet.a := '';
help::pkg.utility.misc.objs.stopwatch.m.start.s := 'start(quiet)';
help::pkg.utility.misc.objs.stopwatch.m.stop := [=];
help::pkg.utility.misc.objs.stopwatch.m.stop.d := 'stop timer';
help::pkg.utility.misc.objs.stopwatch.m.stop.a.quiet := [=];
help::pkg.utility.misc.objs.stopwatch.m.stop.a.quiet.d := 'Suppress status output?';
help::pkg.utility.misc.objs.stopwatch.m.stop.a.quiet.def := 'F';
help::pkg.utility.misc.objs.stopwatch.m.stop.a.quiet.a := '';
help::pkg.utility.misc.objs.stopwatch.m.stop.s := 'stop(quiet)';
help::pkg.utility.misc.objs.stopwatch.m.reset := [=];
help::pkg.utility.misc.objs.stopwatch.m.reset.d := 'reset time value to zero';
help::pkg.utility.misc.objs.stopwatch.m.reset.a.quiet := [=];
help::pkg.utility.misc.objs.stopwatch.m.reset.a.quiet.d := 'Suppress status output?';
help::pkg.utility.misc.objs.stopwatch.m.reset.a.quiet.def := 'F';
help::pkg.utility.misc.objs.stopwatch.m.reset.a.quiet.a := '';
help::pkg.utility.misc.objs.stopwatch.m.reset.s := 'reset(quiet)';
help::pkg.utility.misc.objs.stopwatch.m.zero := [=];
help::pkg.utility.misc.objs.stopwatch.m.zero.d := 'stop and reset timer';
help::pkg.utility.misc.objs.stopwatch.m.zero.a.quiet := [=];
help::pkg.utility.misc.objs.stopwatch.m.zero.a.quiet.d := 'Suppress status output?';
help::pkg.utility.misc.objs.stopwatch.m.zero.a.quiet.def := 'F';
help::pkg.utility.misc.objs.stopwatch.m.zero.a.quiet.a := '';
help::pkg.utility.misc.objs.stopwatch.m.zero.s := 'zero(quiet)';
help::pkg.utility.misc.objs.stopwatch.m.value := [=];
help::pkg.utility.misc.objs.stopwatch.m.value.d := 'get numerical value of timer in seconds';
help::pkg.utility.misc.objs.stopwatch.m.value.s := 'value()';
help::pkg.utility.misc.objs.stopwatch.m.fmtvalue := [=];
help::pkg.utility.misc.objs.stopwatch.m.fmtvalue.d := 'formatted string value of timer with units';
help::pkg.utility.misc.objs.stopwatch.m.fmtvalue.a.value := [=];
help::pkg.utility.misc.objs.stopwatch.m.fmtvalue.a.value.d := 'Time in seconds to be formatted';
help::pkg.utility.misc.objs.stopwatch.m.fmtvalue.a.value.def := 'Current value()';
help::pkg.utility.misc.objs.stopwatch.m.fmtvalue.a.value.a := '';
help::pkg.utility.misc.objs.stopwatch.m.fmtvalue.s := 'fmtvalue(value)';
help::pkg.utility.misc.objs.stopwatch.m.state := [=];
help::pkg.utility.misc.objs.stopwatch.m.state.d := 'get run state of timer';
help::pkg.utility.misc.objs.stopwatch.m.state.s := 'state()';
help::pkg.utility.misc.objs.stopwatch.m.show := [=];
help::pkg.utility.misc.objs.stopwatch.m.show.d := 'show value and run state of timer';
help::pkg.utility.misc.objs.stopwatch.m.show.s := 'show()';
help::pkg.utility.misc.objs.stopwatch.m.timefunc := [=];
help::pkg.utility.misc.objs.stopwatch.m.timefunc.d := 'time a function';
help::pkg.utility.misc.objs.stopwatch.m.timefunc.a.func := [=];
help::pkg.utility.misc.objs.stopwatch.m.timefunc.a.func.d := 'Function to be timed';
help::pkg.utility.misc.objs.stopwatch.m.timefunc.a.func.def := '';
help::pkg.utility.misc.objs.stopwatch.m.timefunc.a.func.a := '';
help::pkg.utility.misc.objs.stopwatch.m.timefunc.a.niter := [=];
help::pkg.utility.misc.objs.stopwatch.m.timefunc.a.niter.d := 'Number of iterations';
help::pkg.utility.misc.objs.stopwatch.m.timefunc.a.niter.def := '1';
help::pkg.utility.misc.objs.stopwatch.m.timefunc.a.niter.a := '';
help::pkg.utility.misc.objs.stopwatch.m.timefunc.a.name := [=];
help::pkg.utility.misc.objs.stopwatch.m.timefunc.a.name.d := 'Output label';
help::pkg.utility.misc.objs.stopwatch.m.timefunc.a.name.def := '\' \'  or func';
help::pkg.utility.misc.objs.stopwatch.m.timefunc.a.name.a := '';
help::pkg.utility.misc.objs.stopwatch.m.timefunc.a.quiet := [=];
help::pkg.utility.misc.objs.stopwatch.m.timefunc.a.quiet.d := 'Suppress status output?';
help::pkg.utility.misc.objs.stopwatch.m.timefunc.a.quiet.def := 'F';
help::pkg.utility.misc.objs.stopwatch.m.timefunc.a.quiet.a := '';
help::pkg.utility.misc.objs.stopwatch.m.timefunc.s := 'timefunc(func, niter, name, quiet)';
help::pkg.utility.misc.objs.stopwatch.m.help := [=];
help::pkg.utility.misc.objs.stopwatch.m.help.d := 'display help';
help::pkg.utility.misc.objs.stopwatch.m.help.s := 'help()';
help::pkg.utility.misc.objs.stopwatch.m.delete := [=];
help::pkg.utility.misc.objs.stopwatch.m.delete.d := 'destroy the tool';
help::pkg.utility.misc.objs.stopwatch.m.delete.s := 'delete()';
help::pkg.utility.misc.funs.edit := [=];
help::pkg.utility.misc.funs.edit.a := [=];
help::pkg.utility.misc.funs.edit.d := 'Edit and optionally execute a file';
help::pkg.utility.misc.funs.edit.a.file := [=];
help::pkg.utility.misc.funs.edit.a.file.d := 'File to edit';
help::pkg.utility.misc.funs.edit.a.file.def := '';
help::pkg.utility.misc.funs.edit.a.file.a := 'string';
help::pkg.utility.misc.funs.edit.a.execute := [=];
help::pkg.utility.misc.funs.edit.a.execute.d := 'Read the file into glish?';
help::pkg.utility.misc.funs.edit.a.execute.def := 'T';
help::pkg.utility.misc.funs.edit.a.execute.a := 'T or F';
help::pkg.utility.misc.funs.edit.a.editor := [=];
help::pkg.utility.misc.funs.edit.a.editor.d := 'Editor to use, if unset use EDITOR';
help::pkg.utility.misc.funs.edit.a.editor.def := '\' \' ';
help::pkg.utility.misc.funs.edit.a.editor.a := 'string';
help::pkg.utility.misc.funs.edit.s := 'edit(file, execute, editor)';
help::pkg.utility.misc.funs.note := [=];
help::pkg.utility.misc.funs.note.a := [=];
help::pkg.utility.misc.funs.note.d := 'Send a message to the logger or terminal';
help::pkg.utility.misc.funs.note.a.dots := [=];
help::pkg.utility.misc.funs.note.a.dots.d := 'components of the message';
help::pkg.utility.misc.funs.note.a.dots.def := '';
help::pkg.utility.misc.funs.note.a.dots.a := 'string';
help::pkg.utility.misc.funs.note.a.priority := [=];
help::pkg.utility.misc.funs.note.a.priority.d := 'Message priority';
help::pkg.utility.misc.funs.note.a.priority.def := 'NORMAL';
help::pkg.utility.misc.funs.note.a.priority.a := 'DEBUGGING,NORMAL,WARN,SEVERE';
help::pkg.utility.misc.funs.note.a.origin := [=];
help::pkg.utility.misc.funs.note.a.origin.d := 'source of the message';
help::pkg.utility.misc.funs.note.a.origin.def := '\' Glish\' ';
help::pkg.utility.misc.funs.note.a.origin.a := 'string';
help::pkg.utility.misc.funs.note.a.time := [=];
help::pkg.utility.misc.funs.note.a.time.d := 'time as a string';
help::pkg.utility.misc.funs.note.a.time.def := 'Current time';
help::pkg.utility.misc.funs.note.a.time.a := 'string';
help::pkg.utility.misc.funs.note.a.postcli := [=];
help::pkg.utility.misc.funs.note.a.postcli.d := 'Show message in CLI window too?';
help::pkg.utility.misc.funs.note.a.postcli.def := 'F';
help::pkg.utility.misc.funs.note.a.postcli.a := 'Bool';
help::pkg.utility.misc.funs.note.s := 'note(\ldots, priority, origin, time, postcli)';
help::pkg.utility.misc.funs.throw := [=];
help::pkg.utility.misc.funs.throw.a := [=];
help::pkg.utility.misc.funs.throw.d := 'Send a SEVERE message, then fail';
help::pkg.utility.misc.funs.throw.a.dots := [=];
help::pkg.utility.misc.funs.throw.a.dots.d := 'components of the message';
help::pkg.utility.misc.funs.throw.a.dots.def := '';
help::pkg.utility.misc.funs.throw.a.dots.a := 'string';
help::pkg.utility.misc.funs.throw.a.origin := [=];
help::pkg.utility.misc.funs.throw.a.origin.d := 'source of the message';
help::pkg.utility.misc.funs.throw.a.origin.def := '\' Glish\' ';
help::pkg.utility.misc.funs.throw.a.origin.a := 'string';
help::pkg.utility.misc.funs.throw.a.postcli := [=];
help::pkg.utility.misc.funs.throw.a.postcli.d := 'Show message in CLI window too?';
help::pkg.utility.misc.funs.throw.a.postcli.def := 'F';
help::pkg.utility.misc.funs.throw.a.postcli.a := 'Bool';
help::pkg.utility.misc.funs.throw.s := 'throw(\ldots, origin, postcli)';
help::pkg.utility.misc.objs.plugins := [=];
help::pkg.utility.misc.objs.plugins.m := [=];
help::pkg.utility.misc.objs.plugins.c := [=];
help::pkg.utility.misc.objs.plugins.d := 'attach code to tools at runtime';
help::pkg.utility.misc.objs.plugins.m.rescan := [=];
help::pkg.utility.misc.objs.plugins.m.rescan.d := 'Find all plugin (.gp) files';
help::pkg.utility.misc.objs.plugins.m.rescan.s := 'rescan()';
help::pkg.utility.misc.objs.plugins.m.loadplugins := [=];
help::pkg.utility.misc.objs.plugins.m.loadplugins.d := 'load plugin (.gp) files for some class';
help::pkg.utility.misc.objs.plugins.m.loadplugins.a.type := [=];
help::pkg.utility.misc.objs.plugins.m.loadplugins.a.type.d := 'type (class) for which we want to load plugins';
help::pkg.utility.misc.objs.plugins.m.loadplugins.a.type.def := '';
help::pkg.utility.misc.objs.plugins.m.loadplugins.a.type.a := 'string';
help::pkg.utility.misc.objs.plugins.m.loadplugins.s := 'loadplugins(type)';
help::pkg.utility.misc.objs.plugins.m.loaded := [=];
help::pkg.utility.misc.objs.plugins.m.loaded.d := 'list which plugins have been loaded';
help::pkg.utility.misc.objs.plugins.m.loaded.s := 'loaded()';
help::pkg.utility.misc.objs.plugins.m.attach := [=];
help::pkg.utility.misc.objs.plugins.m.attach.d := 'Attach plugins for a type to an tool';
help::pkg.utility.misc.objs.plugins.m.attach.a.type := [=];
help::pkg.utility.misc.objs.plugins.m.attach.a.type.d := 'type (class) for which we want to load plugins';
help::pkg.utility.misc.objs.plugins.m.attach.a.type.def := '';
help::pkg.utility.misc.objs.plugins.m.attach.a.type.a := 'string';
help::pkg.utility.misc.objs.plugins.m.attach.a.objpublic := [=];
help::pkg.utility.misc.objs.plugins.m.attach.a.objpublic.d := 'the tool the constructor will return to the caller';
help::pkg.utility.misc.objs.plugins.m.attach.a.objpublic.def := '';
help::pkg.utility.misc.objs.plugins.m.attach.a.objpublic.a := 'record';
help::pkg.utility.misc.objs.plugins.m.attach.s := 'attach(type, objpublic)';
help::pkg.utility.misc.objs.timer := [=];
help::pkg.utility.misc.objs.timer.m := [=];
help::pkg.utility.misc.objs.timer.c := [=];
help::pkg.utility.misc.objs.timer.d := 'Execute functions periodically, wait for a specified time';
help::pkg.utility.misc.objs.timer.m.execute := [=];
help::pkg.utility.misc.objs.timer.m.execute.d := 'execute a function periodically';
help::pkg.utility.misc.objs.timer.m.execute.a.callback := [=];
help::pkg.utility.misc.objs.timer.m.execute.a.callback.d := 'function to be executed';
help::pkg.utility.misc.objs.timer.m.execute.a.callback.def := '';
help::pkg.utility.misc.objs.timer.m.execute.a.callback.a := 'two-argument function';
help::pkg.utility.misc.objs.timer.m.execute.a.interval := [=];
help::pkg.utility.misc.objs.timer.m.execute.a.interval.d := 'how long to wait before executing function (seconds)';
help::pkg.utility.misc.objs.timer.m.execute.a.interval.def := '60';
help::pkg.utility.misc.objs.timer.m.execute.a.interval.a := 'float';
help::pkg.utility.misc.objs.timer.m.execute.a.oneshot := [=];
help::pkg.utility.misc.objs.timer.m.execute.a.oneshot.d := 'execute function once only?';
help::pkg.utility.misc.objs.timer.m.execute.a.oneshot.def := 'T';
help::pkg.utility.misc.objs.timer.m.execute.a.oneshot.a := 'boolean';
help::pkg.utility.misc.objs.timer.m.execute.s := 'execute(callback, interval, oneshot)';
help::pkg.utility.misc.objs.timer.m.remove := [=];
help::pkg.utility.misc.objs.timer.m.remove.d := 'remove a callback function from the timer';
help::pkg.utility.misc.objs.timer.m.remove.a.name := [=];
help::pkg.utility.misc.objs.timer.m.remove.a.name.d := 'identifier returned from execute';
help::pkg.utility.misc.objs.timer.m.remove.a.name.def := '';
help::pkg.utility.misc.objs.timer.m.remove.a.name.a := 'string';
help::pkg.utility.misc.objs.timer.m.remove.s := 'remove(name)';
help::pkg.utility.misc.objs.timer.m.wait := [=];
help::pkg.utility.misc.objs.timer.m.wait.d := 'wait a specified amount of time';
help::pkg.utility.misc.objs.timer.m.wait.a.interval := [=];
help::pkg.utility.misc.objs.timer.m.wait.a.interval.d := 'how long to wait (seconds)';
help::pkg.utility.misc.objs.timer.m.wait.a.interval.def := '';
help::pkg.utility.misc.objs.timer.m.wait.a.interval.a := 'float';
help::pkg.utility.misc.objs.timer.m.wait.s := 'wait(interval)';
help::pkg.utility.misc.funs.serverexists := [=];
help::pkg.utility.misc.funs.serverexists.a := [=];
help::pkg.utility.misc.funs.serverexists.d := 'Does the specified server exist';
help::pkg.utility.misc.funs.serverexists.a.symbol := [=];
help::pkg.utility.misc.funs.serverexists.a.symbol.d := 'Symbol of interest';
help::pkg.utility.misc.funs.serverexists.a.symbol.def := '';
help::pkg.utility.misc.funs.serverexists.a.symbol.a := 'String';
help::pkg.utility.misc.funs.serverexists.a.name := [=];
help::pkg.utility.misc.funs.serverexists.a.name.d := 'The name of the type of server';
help::pkg.utility.misc.funs.serverexists.a.name.def := '';
help::pkg.utility.misc.funs.serverexists.a.name.a := 'String';
help::pkg.utility.misc.funs.serverexists.a.server := [=];
help::pkg.utility.misc.funs.serverexists.a.server.d := 'The server tool';
help::pkg.utility.misc.funs.serverexists.a.server.def := '';
help::pkg.utility.misc.funs.serverexists.a.server.a := 'Glish closure tool';
help::pkg.utility.misc.funs.serverexists.s := 'serverexists(symbol, name, server)';
help::pkg.utility.misc.funs.aips2loc := [=];
help::pkg.utility.misc.funs.aips2loc.a := [=];
help::pkg.utility.misc.funs.aips2loc.d := 'Plot lines of code in AIPS++';
help::pkg.utility.misc.funs.aips2loc.a.file := [=];
help::pkg.utility.misc.funs.aips2loc.a.file.d := 'Name of text file containing source lines';
help::pkg.utility.misc.funs.aips2loc.a.file.def := '/export/aips++/linecount/source\_lines';
help::pkg.utility.misc.funs.aips2loc.a.file.a := 'String';
help::pkg.utility.misc.funs.aips2loc.s := 'aips2loc(file)';
help::pkg.utility.misc.objs.ftp := [=];
help::pkg.utility.misc.objs.ftp.m := [=];
help::pkg.utility.misc.objs.ftp.c := [=];
help::pkg.utility.misc.objs.ftp.d := 'Tool to ftp files';
help::pkg.utility.misc.objs.ftp.c.ftp := [=];
help::pkg.utility.misc.objs.ftp.c.ftp.d := 'Construct an ftp tool';
help::pkg.utility.misc.objs.ftp.c.ftp.a.host := [=];
help::pkg.utility.misc.objs.ftp.c.ftp.a.host.d := 'Host to connect to';
help::pkg.utility.misc.objs.ftp.c.ftp.a.host.def := 'aips2.nrao.edu';
help::pkg.utility.misc.objs.ftp.c.ftp.a.host.a := 'String';
help::pkg.utility.misc.objs.ftp.c.ftp.a.user := [=];
help::pkg.utility.misc.objs.ftp.c.ftp.a.user.d := 'User name';
help::pkg.utility.misc.objs.ftp.c.ftp.a.user.def := 'anonymous';
help::pkg.utility.misc.objs.ftp.c.ftp.a.user.a := 'String';
help::pkg.utility.misc.objs.ftp.c.ftp.a.pass := [=];
help::pkg.utility.misc.objs.ftp.c.ftp.a.pass.d := 'Password';
help::pkg.utility.misc.objs.ftp.c.ftp.a.pass.def := 'e-mail address';
help::pkg.utility.misc.objs.ftp.c.ftp.a.pass.a := 'String';
help::pkg.utility.misc.objs.ftp.c.ftp.a.command := [=];
help::pkg.utility.misc.objs.ftp.c.ftp.a.command.d := 'ftp command string';
help::pkg.utility.misc.objs.ftp.c.ftp.a.command.def := 'ftp -n -v -i';
help::pkg.utility.misc.objs.ftp.c.ftp.a.command.a := 'String';
help::pkg.utility.misc.objs.ftp.c.ftp.a.prompt := [=];
help::pkg.utility.misc.objs.ftp.c.ftp.a.prompt.d := 'ftp command prompt';
help::pkg.utility.misc.objs.ftp.c.ftp.a.prompt.def := 'ftp>';
help::pkg.utility.misc.objs.ftp.c.ftp.a.prompt.a := 'String';
help::pkg.utility.misc.objs.ftp.c.ftp.a.verbose := [=];
help::pkg.utility.misc.objs.ftp.c.ftp.a.verbose.d := 'Report lots of information?';
help::pkg.utility.misc.objs.ftp.c.ftp.a.verbose.def := 'T|F';
help::pkg.utility.misc.objs.ftp.c.ftp.a.verbose.a := 'Boolean';
help::pkg.utility.misc.objs.ftp.c.ftp.s := 'ftp(host, user, pass, command, prompt, verbose)';
help::pkg.utility.misc.objs.ftp.m.type := [=];
help::pkg.utility.misc.objs.ftp.m.type.d := 'Return the type of this tool';
help::pkg.utility.misc.objs.ftp.m.type.s := 'type()';
help::pkg.utility.misc.objs.ftp.m.connect := [=];
help::pkg.utility.misc.objs.ftp.m.connect.d := 'Connect to the host';
help::pkg.utility.misc.objs.ftp.m.connect.s := 'connect()';
help::pkg.utility.misc.objs.ftp.m.disconnect := [=];
help::pkg.utility.misc.objs.ftp.m.disconnect.d := 'Disconnect from the host';
help::pkg.utility.misc.objs.ftp.m.disconnect.s := 'disconnect()';
help::pkg.utility.misc.objs.ftp.m.binary := [=];
help::pkg.utility.misc.objs.ftp.m.binary.d := 'Use binary mode for transfer';
help::pkg.utility.misc.objs.ftp.m.binary.s := 'binary()';
help::pkg.utility.misc.objs.ftp.m.ascii := [=];
help::pkg.utility.misc.objs.ftp.m.ascii.d := 'Use ascii mode for transfer';
help::pkg.utility.misc.objs.ftp.m.ascii.s := 'ascii()';
help::pkg.utility.misc.objs.ftp.m.get := [=];
help::pkg.utility.misc.objs.ftp.m.get.d := 'Get a file';
help::pkg.utility.misc.objs.ftp.m.get.a.file := [=];
help::pkg.utility.misc.objs.ftp.m.get.a.file.d := 'File name';
help::pkg.utility.misc.objs.ftp.m.get.a.file.def := '';
help::pkg.utility.misc.objs.ftp.m.get.a.file.a := 'String';
help::pkg.utility.misc.objs.ftp.m.get.s := 'get(file)';
help::pkg.utility.misc.objs.ftp.m.send := [=];
help::pkg.utility.misc.objs.ftp.m.send.d := 'Send a file';
help::pkg.utility.misc.objs.ftp.m.send.a.file := [=];
help::pkg.utility.misc.objs.ftp.m.send.a.file.d := 'File name';
help::pkg.utility.misc.objs.ftp.m.send.a.file.def := '';
help::pkg.utility.misc.objs.ftp.m.send.a.file.a := 'String';
help::pkg.utility.misc.objs.ftp.m.send.s := 'send(file)';
help::pkg.utility.misc.objs.ftp.m.cd := [=];
help::pkg.utility.misc.objs.ftp.m.cd.d := 'Change directory';
help::pkg.utility.misc.objs.ftp.m.cd.a.dir := [=];
help::pkg.utility.misc.objs.ftp.m.cd.a.dir.d := 'Directory name';
help::pkg.utility.misc.objs.ftp.m.cd.a.dir.def := '';
help::pkg.utility.misc.objs.ftp.m.cd.a.dir.a := 'String';
help::pkg.utility.misc.objs.ftp.m.cd.s := 'cd(dir)';
help::pkg.utility.misc.funs.ftptest := [=];
help::pkg.utility.misc.funs.ftptest.a := [=];
help::pkg.utility.misc.funs.ftptest.d := 'Test the ftp tool';
help::pkg.utility.misc.funs.ftptest.a.verbose := [=];
help::pkg.utility.misc.funs.ftptest.a.verbose.d := 'Report lots of information?';
help::pkg.utility.misc.funs.ftptest.a.verbose.def := 'T|F';
help::pkg.utility.misc.funs.ftptest.a.verbose.a := 'Boolean';
help::pkg.utility.misc.funs.ftptest.s := 'ftptest(verbose)';
help::pkg.utility.misc.funs.make := [=];
help::pkg.utility.misc.funs.make.a := [=];
help::pkg.utility.misc.funs.make.d := 'Function for a production system';
help::pkg.utility.misc.funs.make.a.target := [=];
help::pkg.utility.misc.funs.make.a.target.d := 'Target to be constructed';
help::pkg.utility.misc.funs.make.a.target.def := '';
help::pkg.utility.misc.funs.make.a.target.a := 'String';
help::pkg.utility.misc.funs.make.a.args := [=];
help::pkg.utility.misc.funs.make.a.args.d := 'Arguments';
help::pkg.utility.misc.funs.make.a.args.def := '';
help::pkg.utility.misc.funs.make.a.args.a := 'String';
help::pkg.utility.misc.funs.make.a.makefile := [=];
help::pkg.utility.misc.funs.make.a.makefile.d := 'Makefile to be used';
help::pkg.utility.misc.funs.make.a.makefile.def := '\' makefile\' ';
help::pkg.utility.misc.funs.make.a.makefile.a := 'File name';
help::pkg.utility.misc.funs.make.a.Execute := [=];
help::pkg.utility.misc.funs.make.a.Execute.d := 'Execute commands';
help::pkg.utility.misc.funs.make.a.Execute.def := 'T';
help::pkg.utility.misc.funs.make.a.Execute.a := 'Bool';
help::pkg.utility.misc.funs.make.a.script := [=];
help::pkg.utility.misc.funs.make.a.script.d := 'Name of script file to be written';
help::pkg.utility.misc.funs.make.a.script.def := '';
help::pkg.utility.misc.funs.make.a.script.a := 'String';
help::pkg.utility.misc.funs.make.a.debug := [=];
help::pkg.utility.misc.funs.make.a.debug.d := 'Write debugging information?';
help::pkg.utility.misc.funs.make.a.debug.def := 'F';
help::pkg.utility.misc.funs.make.a.debug.a := 'Bool';
help::pkg.utility.misc.funs.make.s := 'make(target, args, makefile, Execute, script, debug)';
help::pkg.utility.misc.objs.executive := [=];
help::pkg.utility.misc.objs.executive.m := [=];
help::pkg.utility.misc.objs.executive.c := [=];
help::pkg.utility.misc.objs.executive.d := 'Tool for running scripts in a queue';
help::pkg.utility.misc.objs.executive.c.executive := [=];
help::pkg.utility.misc.objs.executive.c.executive.d := 'Construct a executive tool';
help::pkg.utility.misc.objs.executive.c.executive.a.concurrent := [=];
help::pkg.utility.misc.objs.executive.c.executive.a.concurrent.d := 'Number of concurrent jobs';
help::pkg.utility.misc.objs.executive.c.executive.a.concurrent.def := '1';
help::pkg.utility.misc.objs.executive.c.executive.a.concurrent.a := 'Int';
help::pkg.utility.misc.objs.executive.c.executive.s := 'executive(concurrent)';
help::pkg.utility.misc.objs.executive.m.runscript := [=];
help::pkg.utility.misc.objs.executive.m.runscript.d := 'Run a script';
help::pkg.utility.misc.objs.executive.m.runscript.a.script := [=];
help::pkg.utility.misc.objs.executive.m.runscript.a.script.d := 'Script to be executed';
help::pkg.utility.misc.objs.executive.m.runscript.a.script.def := 'None';
help::pkg.utility.misc.objs.executive.m.runscript.a.script.a := 'String';
help::pkg.utility.misc.objs.executive.m.runscript.a.host := [=];
help::pkg.utility.misc.objs.executive.m.runscript.a.host.d := 'Host where script is to be run: default is current host';
help::pkg.utility.misc.objs.executive.m.runscript.a.host.def := '\' \' ';
help::pkg.utility.misc.objs.executive.m.runscript.a.host.a := 'String';
help::pkg.utility.misc.objs.executive.m.runscript.a.log := [=];
help::pkg.utility.misc.objs.executive.m.runscript.a.log.d := 'Log file';
help::pkg.utility.misc.objs.executive.m.runscript.a.log.def := '\' \' ';
help::pkg.utility.misc.objs.executive.m.runscript.a.log.a := 'String';
help::pkg.utility.misc.objs.executive.m.runscript.s := 'runscript(script, host, log)';
help::pkg.utility.misc.objs.executive.m.run := [=];
help::pkg.utility.misc.objs.executive.m.run.d := 'Run a sequence of commands';
help::pkg.utility.misc.objs.executive.m.run.a.commands := [=];
help::pkg.utility.misc.objs.executive.m.run.a.commands.d := 'Commands to be executed';
help::pkg.utility.misc.objs.executive.m.run.a.commands.def := 'None';
help::pkg.utility.misc.objs.executive.m.run.a.commands.a := 'String';
help::pkg.utility.misc.objs.executive.m.run.a.inc := [=];
help::pkg.utility.misc.objs.executive.m.run.a.inc.d := 'Include file to be invoked on start';
help::pkg.utility.misc.objs.executive.m.run.a.inc.def := '\' \' ';
help::pkg.utility.misc.objs.executive.m.run.a.inc.a := 'String';
help::pkg.utility.misc.objs.executive.m.run.a.host := [=];
help::pkg.utility.misc.objs.executive.m.run.a.host.d := 'Host where script is to be run: default is current host';
help::pkg.utility.misc.objs.executive.m.run.a.host.def := '\' \' ';
help::pkg.utility.misc.objs.executive.m.run.a.host.a := 'String';
help::pkg.utility.misc.objs.executive.m.run.a.log := [=];
help::pkg.utility.misc.objs.executive.m.run.a.log.d := 'Log file';
help::pkg.utility.misc.objs.executive.m.run.a.log.def := '\' \' ';
help::pkg.utility.misc.objs.executive.m.run.a.log.a := 'String';
help::pkg.utility.misc.objs.executive.m.run.s := 'run(commands, inc, host, log)';
help::pkg.utility.misc.objs.executive.m.make := [=];
help::pkg.utility.misc.objs.executive.m.make.d := 'Run a makefile';
help::pkg.utility.misc.objs.executive.m.make.a.target := [=];
help::pkg.utility.misc.objs.executive.m.make.a.target.d := 'Target to be constructed';
help::pkg.utility.misc.objs.executive.m.make.a.target.def := '';
help::pkg.utility.misc.objs.executive.m.make.a.target.a := 'String';
help::pkg.utility.misc.objs.executive.m.make.a.args := [=];
help::pkg.utility.misc.objs.executive.m.make.a.args.d := 'Arguments';
help::pkg.utility.misc.objs.executive.m.make.a.args.def := '';
help::pkg.utility.misc.objs.executive.m.make.a.args.a := 'String';
help::pkg.utility.misc.objs.executive.m.make.a.makefile := [=];
help::pkg.utility.misc.objs.executive.m.make.a.makefile.d := 'Makefile to be used';
help::pkg.utility.misc.objs.executive.m.make.a.makefile.def := '\' makefile\' ';
help::pkg.utility.misc.objs.executive.m.make.a.makefile.a := 'File name';
help::pkg.utility.misc.objs.executive.m.make.a.host := [=];
help::pkg.utility.misc.objs.executive.m.make.a.host.d := 'Host where script is to be run: default is current host';
help::pkg.utility.misc.objs.executive.m.make.a.host.def := '\' \' ';
help::pkg.utility.misc.objs.executive.m.make.a.host.a := 'String';
help::pkg.utility.misc.objs.executive.m.make.a.log := [=];
help::pkg.utility.misc.objs.executive.m.make.a.log.d := 'Log file';
help::pkg.utility.misc.objs.executive.m.make.a.log.def := '\' \' ';
help::pkg.utility.misc.objs.executive.m.make.a.log.a := 'String';
help::pkg.utility.misc.objs.executive.m.make.s := 'make(target, args, makefile, host, log)';
help::pkg.utility.misc.objs.executive.m.done := [=];
help::pkg.utility.misc.objs.executive.m.done.d := 'Terminate the executive';
help::pkg.utility.misc.objs.executive.m.done.s := 'done()';
help::pkg.utility.misc.objs.executive.m.concurrent := [=];
help::pkg.utility.misc.objs.executive.m.concurrent.d := 'Return number of concurrent jobs allowed';
help::pkg.utility.misc.objs.executive.m.concurrent.s := 'concurrent()';
help::pkg.utility.misc.objs.executive.m.running := [=];
help::pkg.utility.misc.objs.executive.m.running.d := 'Return number of running jobs';
help::pkg.utility.misc.objs.executive.m.running.s := 'running()';
help::pkg.utility.misc.objs.executive.m.setconcurrent := [=];
help::pkg.utility.misc.objs.executive.m.setconcurrent.d := 'Set number of concurrent jobs allowed';
help::pkg.utility.misc.objs.executive.m.setconcurrent.a.concurrent := [=];
help::pkg.utility.misc.objs.executive.m.setconcurrent.a.concurrent.d := 'Number of concurrent jobs';
help::pkg.utility.misc.objs.executive.m.setconcurrent.a.concurrent.def := '1';
help::pkg.utility.misc.objs.executive.m.setconcurrent.a.concurrent.a := 'Int';
help::pkg.utility.misc.objs.executive.m.setconcurrent.s := 'setconcurrent(concurrent)';
help::pkg.utility.misc.objs.executive.m.show := [=];
help::pkg.utility.misc.objs.executive.m.show.d := 'Show the queue status';
help::pkg.utility.misc.objs.executive.m.show.s := 'show()';
help::pkg.utility.misc.objs.executive.m.list := [=];
help::pkg.utility.misc.objs.executive.m.list.d := 'Return the queue status';
help::pkg.utility.misc.objs.executive.m.list.s := 'list()';
help::pkg.utility.misc.objs.executive.m.stop := [=];
help::pkg.utility.misc.objs.executive.m.stop.d := 'Stop a specified job';
help::pkg.utility.misc.objs.executive.m.stop.a.id := [=];
help::pkg.utility.misc.objs.executive.m.stop.a.id.d := 'Job id from run or runscript';
help::pkg.utility.misc.objs.executive.m.stop.a.id.def := 'None';
help::pkg.utility.misc.objs.executive.m.stop.a.id.a := 'Int';
help::pkg.utility.misc.objs.executive.m.stop.s := 'stop(id)';
help::pkg.utility.misc.objs.executive.m.gui := [=];
help::pkg.utility.misc.objs.executive.m.gui.d := 'Open a GUI for this tool';
help::pkg.utility.misc.objs.executive.m.gui.s := 'gui()';
help::pkg.utility.misc.objs.executive.m.test := [=];
help::pkg.utility.misc.objs.executive.m.test.d := 'Run a test for this tool';
help::pkg.utility.misc.objs.executive.m.test.s := 'test()';
help::pkg.utility.misc.funs.executivetest := [=];
help::pkg.utility.misc.funs.executivetest.a := [=];
help::pkg.utility.misc.funs.executivetest.d := 'Perform a test of executive';
help::pkg.utility.misc.funs.executivetest.s := 'executivetest()';

help::pkg.utility.table := [=];
help::pkg.utility.table.objs := [=];
help::pkg.utility.table.funs := [=];
help::pkg.utility.table.d := 'Glish interface to table system';
help::pkg.utility.table.objs.table := [=];
help::pkg.utility.table.objs.table.m := [=];
help::pkg.utility.table.objs.table.c := [=];
help::pkg.utility.table.objs.table.d := 'Access tables from Glish';
help::pkg.utility.table.objs.table.c.table := [=];
help::pkg.utility.table.objs.table.c.table.d := 'Construct table tool';
help::pkg.utility.table.objs.table.c.table.a.tablename := [=];
help::pkg.utility.table.objs.table.c.table.a.tablename.d := 'Name of table on disk';
help::pkg.utility.table.objs.table.c.table.a.tablename.def := 'F';
help::pkg.utility.table.objs.table.c.table.a.tablename.a := 'String|Bool';
help::pkg.utility.table.objs.table.c.table.a.tabledesc := [=];
help::pkg.utility.table.objs.table.c.table.a.tabledesc.d := 'Table descriptor';
help::pkg.utility.table.objs.table.c.table.a.tabledesc.def := 'F';
help::pkg.utility.table.objs.table.c.table.a.tabledesc.a := 'Descriptor|Bool';
help::pkg.utility.table.objs.table.c.table.a.nrow := [=];
help::pkg.utility.table.objs.table.c.table.a.nrow.d := 'Number of rows';
help::pkg.utility.table.objs.table.c.table.a.nrow.def := '0';
help::pkg.utility.table.objs.table.c.table.a.nrow.a := 'Int';
help::pkg.utility.table.objs.table.c.table.a.readonly := [=];
help::pkg.utility.table.objs.table.c.table.a.readonly.d := 'Open Read-only?';
help::pkg.utility.table.objs.table.c.table.a.readonly.def := 'T';
help::pkg.utility.table.objs.table.c.table.a.readonly.a := 'Bool';
help::pkg.utility.table.objs.table.c.table.a.lockoptions := [=];
help::pkg.utility.table.objs.table.c.table.a.lockoptions.d := 'locking to be used';
help::pkg.utility.table.objs.table.c.table.a.lockoptions.def := 'default';
help::pkg.utility.table.objs.table.c.table.a.lockoptions.a := 'String|Record';
help::pkg.utility.table.objs.table.c.table.a.ack := [=];
help::pkg.utility.table.objs.table.c.table.a.ack.d := 'Acknowledge creations, etc';
help::pkg.utility.table.objs.table.c.table.a.ack.def := 'T';
help::pkg.utility.table.objs.table.c.table.a.ack.a := 'Bool';
help::pkg.utility.table.objs.table.c.table.a.dminfo := [=];
help::pkg.utility.table.objs.table.c.table.a.dminfo.d := 'Data manager info for new table';
help::pkg.utility.table.objs.table.c.table.a.dminfo.def := 'F';
help::pkg.utility.table.objs.table.c.table.a.dminfo.a := 'Record';
help::pkg.utility.table.objs.table.c.table.a.endian := [=];
help::pkg.utility.table.objs.table.c.table.a.endian.d := 'Endian format of new table';
help::pkg.utility.table.objs.table.c.table.a.endian.def := 'aipsrc';
help::pkg.utility.table.objs.table.c.table.a.endian.a := 'String';
help::pkg.utility.table.objs.table.c.table.a.memorytable := [=];
help::pkg.utility.table.objs.table.c.table.a.memorytable.d := 'Hold new table in memory?';
help::pkg.utility.table.objs.table.c.table.a.memorytable.def := 'F';
help::pkg.utility.table.objs.table.c.table.a.memorytable.a := 'Bool';
help::pkg.utility.table.objs.table.c.table.a.tableserver := [=];
help::pkg.utility.table.objs.table.c.table.a.tableserver.d := 'Table handler to be used';
help::pkg.utility.table.objs.table.c.table.a.tableserver.def := 'defaulttableserver';
help::pkg.utility.table.objs.table.c.table.a.tableserver.a := 'Any tableserver';
help::pkg.utility.table.objs.table.c.table.a.tablenote := [=];
help::pkg.utility.table.objs.table.c.table.a.tablenote.d := 'note function to be used';
help::pkg.utility.table.objs.table.c.table.a.tablenote.def := 'note';
help::pkg.utility.table.objs.table.c.table.a.tablenote.a := 'Any note function';
help::pkg.utility.table.objs.table.c.table.a.handle := [=];
help::pkg.utility.table.objs.table.c.table.a.handle.d := 'attach to this table handle';
help::pkg.utility.table.objs.table.c.table.a.handle.def := 'F';
help::pkg.utility.table.objs.table.c.table.a.handle.a := 'for internal use only';
help::pkg.utility.table.objs.table.c.table.s := 'table(tablename, tabledesc, nrow, readonly, lockoptions, ack, dminfo, endian, memorytable, tableserver, tablenote, handle)';
help::pkg.utility.table.objs.table.c.tablefromfits := [=];
help::pkg.utility.table.objs.table.c.tablefromfits.d := 'Create an AIPS++\ table from binary FITS';
help::pkg.utility.table.objs.table.c.tablefromfits.a.tablename := [=];
help::pkg.utility.table.objs.table.c.tablefromfits.a.tablename.d := 'Name of table to be created';
help::pkg.utility.table.objs.table.c.tablefromfits.a.tablename.def := '';
help::pkg.utility.table.objs.table.c.tablefromfits.a.tablename.a := 'String';
help::pkg.utility.table.objs.table.c.tablefromfits.a.fitsfile := [=];
help::pkg.utility.table.objs.table.c.tablefromfits.a.fitsfile.d := 'Name of FITS file to be read';
help::pkg.utility.table.objs.table.c.tablefromfits.a.fitsfile.def := '';
help::pkg.utility.table.objs.table.c.tablefromfits.a.fitsfile.a := 'String';
help::pkg.utility.table.objs.table.c.tablefromfits.a.whichhdu := [=];
help::pkg.utility.table.objs.table.c.tablefromfits.a.whichhdu.d := 'Which HDU to read (0-relative to primary HDU i.e. 1 is the smallest valid value)';
help::pkg.utility.table.objs.table.c.tablefromfits.a.whichhdu.def := '1';
help::pkg.utility.table.objs.table.c.tablefromfits.a.whichhdu.a := 'Int';
help::pkg.utility.table.objs.table.c.tablefromfits.a.storage := [=];
help::pkg.utility.table.objs.table.c.tablefromfits.a.storage.d := 'Storage manager to use (standard or incremental)';
help::pkg.utility.table.objs.table.c.tablefromfits.a.storage.def := 'standard';
help::pkg.utility.table.objs.table.c.tablefromfits.a.storage.a := 'String';
help::pkg.utility.table.objs.table.c.tablefromfits.a.convention := [=];
help::pkg.utility.table.objs.table.c.tablefromfits.a.convention.d := 'Convention to use (SDFITS or none)';
help::pkg.utility.table.objs.table.c.tablefromfits.a.convention.def := 'sdfits';
help::pkg.utility.table.objs.table.c.tablefromfits.a.convention.a := 'String';
help::pkg.utility.table.objs.table.c.tablefromfits.a.readonly := [=];
help::pkg.utility.table.objs.table.c.tablefromfits.a.readonly.d := 'Open Read-only?';
help::pkg.utility.table.objs.table.c.tablefromfits.a.readonly.def := 'T';
help::pkg.utility.table.objs.table.c.tablefromfits.a.readonly.a := 'Bool';
help::pkg.utility.table.objs.table.c.tablefromfits.a.lockoptions := [=];
help::pkg.utility.table.objs.table.c.tablefromfits.a.lockoptions.d := 'locking to be used';
help::pkg.utility.table.objs.table.c.tablefromfits.a.lockoptions.def := 'default';
help::pkg.utility.table.objs.table.c.tablefromfits.a.lockoptions.a := 'String|Record';
help::pkg.utility.table.objs.table.c.tablefromfits.a.ack := [=];
help::pkg.utility.table.objs.table.c.tablefromfits.a.ack.d := 'Acknowledge creations, etc';
help::pkg.utility.table.objs.table.c.tablefromfits.a.ack.def := 'T';
help::pkg.utility.table.objs.table.c.tablefromfits.a.ack.a := 'Bool';
help::pkg.utility.table.objs.table.c.tablefromfits.a.tableserver := [=];
help::pkg.utility.table.objs.table.c.tablefromfits.a.tableserver.d := 'Table server to be used';
help::pkg.utility.table.objs.table.c.tablefromfits.a.tableserver.def := 'defaulttableserver';
help::pkg.utility.table.objs.table.c.tablefromfits.a.tableserver.a := 'Any tableserver';
help::pkg.utility.table.objs.table.c.tablefromfits.s := 'tablefromfits(tablename, fitsfile, whichhdu, storage, convention, readonly, lockoptions, ack, tableserver)';
help::pkg.utility.table.objs.table.c.tablefromascii := [=];
help::pkg.utility.table.objs.table.c.tablefromascii.d := 'Create an AIPS++\ table from an ASCII format';
help::pkg.utility.table.objs.table.c.tablefromascii.a.tablename := [=];
help::pkg.utility.table.objs.table.c.tablefromascii.a.tablename.d := 'Name of table to be created';
help::pkg.utility.table.objs.table.c.tablefromascii.a.tablename.def := '';
help::pkg.utility.table.objs.table.c.tablefromascii.a.tablename.a := 'String';
help::pkg.utility.table.objs.table.c.tablefromascii.a.asciifile := [=];
help::pkg.utility.table.objs.table.c.tablefromascii.a.asciifile.d := 'Name of ASCII file to be read';
help::pkg.utility.table.objs.table.c.tablefromascii.a.asciifile.def := '';
help::pkg.utility.table.objs.table.c.tablefromascii.a.asciifile.a := 'String';
help::pkg.utility.table.objs.table.c.tablefromascii.a.headerfile := [=];
help::pkg.utility.table.objs.table.c.tablefromascii.a.headerfile.d := 'Name of an optional file defining the format';
help::pkg.utility.table.objs.table.c.tablefromascii.a.headerfile.def := '\' \' ';
help::pkg.utility.table.objs.table.c.tablefromascii.a.headerfile.a := 'String';
help::pkg.utility.table.objs.table.c.tablefromascii.a.autoheader := [=];
help::pkg.utility.table.objs.table.c.tablefromascii.a.autoheader.d := 'Determine header information automatically';
help::pkg.utility.table.objs.table.c.tablefromascii.a.autoheader.def := 'F';
help::pkg.utility.table.objs.table.c.tablefromascii.a.autoheader.a := 'Boolean';
help::pkg.utility.table.objs.table.c.tablefromascii.a.autoshape := [=];
help::pkg.utility.table.objs.table.c.tablefromascii.a.autoshape.d := 'Shape to be used if autoheader=T';
help::pkg.utility.table.objs.table.c.tablefromascii.a.autoshape.def := '[]';
help::pkg.utility.table.objs.table.c.tablefromascii.a.autoshape.a := 'Vector of Ints';
help::pkg.utility.table.objs.table.c.tablefromascii.a.sep := [=];
help::pkg.utility.table.objs.table.c.tablefromascii.a.sep.d := 'Value separator';
help::pkg.utility.table.objs.table.c.tablefromascii.a.sep.def := '\'  \' ';
help::pkg.utility.table.objs.table.c.tablefromascii.a.sep.a := 'String';
help::pkg.utility.table.objs.table.c.tablefromascii.a.commentmarker := [=];
help::pkg.utility.table.objs.table.c.tablefromascii.a.commentmarker.d := 'Regex indicating comment line';
help::pkg.utility.table.objs.table.c.tablefromascii.a.commentmarker.def := '\' \' ';
help::pkg.utility.table.objs.table.c.tablefromascii.a.commentmarker.a := 'String';
help::pkg.utility.table.objs.table.c.tablefromascii.a.firstline := [=];
help::pkg.utility.table.objs.table.c.tablefromascii.a.firstline.d := 'First line to use';
help::pkg.utility.table.objs.table.c.tablefromascii.a.firstline.def := '1';
help::pkg.utility.table.objs.table.c.tablefromascii.a.firstline.a := 'Int';
help::pkg.utility.table.objs.table.c.tablefromascii.a.lastline := [=];
help::pkg.utility.table.objs.table.c.tablefromascii.a.lastline.d := 'Last line to use';
help::pkg.utility.table.objs.table.c.tablefromascii.a.lastline.def := '-1';
help::pkg.utility.table.objs.table.c.tablefromascii.a.lastline.a := 'Int';
help::pkg.utility.table.objs.table.c.tablefromascii.a.readonly := [=];
help::pkg.utility.table.objs.table.c.tablefromascii.a.readonly.d := 'Open Read-only?';
help::pkg.utility.table.objs.table.c.tablefromascii.a.readonly.def := 'T';
help::pkg.utility.table.objs.table.c.tablefromascii.a.readonly.a := 'Bool';
help::pkg.utility.table.objs.table.c.tablefromascii.a.lockoptions := [=];
help::pkg.utility.table.objs.table.c.tablefromascii.a.lockoptions.d := 'locking to be used';
help::pkg.utility.table.objs.table.c.tablefromascii.a.lockoptions.def := 'default';
help::pkg.utility.table.objs.table.c.tablefromascii.a.lockoptions.a := 'String|Record';
help::pkg.utility.table.objs.table.c.tablefromascii.a.ack := [=];
help::pkg.utility.table.objs.table.c.tablefromascii.a.ack.d := 'Acknowledge creations, etc';
help::pkg.utility.table.objs.table.c.tablefromascii.a.ack.def := 'T';
help::pkg.utility.table.objs.table.c.tablefromascii.a.ack.a := 'Bool';
help::pkg.utility.table.objs.table.c.tablefromascii.a.tableserver := [=];
help::pkg.utility.table.objs.table.c.tablefromascii.a.tableserver.d := 'Table server to be used';
help::pkg.utility.table.objs.table.c.tablefromascii.a.tableserver.def := 'defaulttableserver';
help::pkg.utility.table.objs.table.c.tablefromascii.a.tableserver.a := 'Any tableserver';
help::pkg.utility.table.objs.table.c.tablefromascii.s := 'tablefromascii(tablename, asciifile, headerfile, autoheader, autoshape, sep, commentmarker, firstline, lastline, readonly, lockoptions, ack, tableserver)';
help::pkg.utility.table.objs.table.m.flush := [=];
help::pkg.utility.table.objs.table.m.flush.d := 'flush the current contents to disk';
help::pkg.utility.table.objs.table.m.flush.a.recursive := [=];
help::pkg.utility.table.objs.table.m.flush.a.recursive.d := 'Flush all subtables recursively?';
help::pkg.utility.table.objs.table.m.flush.a.recursive.def := 'F';
help::pkg.utility.table.objs.table.m.flush.a.recursive.a := 'Bool';
help::pkg.utility.table.objs.table.m.flush.s := 'flush(recursive)';
help::pkg.utility.table.objs.table.m.resync := [=];
help::pkg.utility.table.objs.table.m.resync.d := 'resync the table tool with table file';
help::pkg.utility.table.objs.table.m.resync.s := 'resync()';
help::pkg.utility.table.objs.table.m.close := [=];
help::pkg.utility.table.objs.table.m.close.d := 'close the table tool';
help::pkg.utility.table.objs.table.m.close.s := 'close()';
help::pkg.utility.table.objs.table.m.copy := [=];
help::pkg.utility.table.objs.table.m.copy.d := 'copy a table';
help::pkg.utility.table.objs.table.m.copy.a.newtablename := [=];
help::pkg.utility.table.objs.table.m.copy.a.newtablename.d := 'Name of newtable on disk';
help::pkg.utility.table.objs.table.m.copy.a.newtablename.def := '';
help::pkg.utility.table.objs.table.m.copy.a.newtablename.a := 'String';
help::pkg.utility.table.objs.table.m.copy.a.deep := [=];
help::pkg.utility.table.objs.table.m.copy.a.deep.d := 'Make a deep copy of a reference table?';
help::pkg.utility.table.objs.table.m.copy.a.deep.def := 'F';
help::pkg.utility.table.objs.table.m.copy.a.deep.a := 'Bool';
help::pkg.utility.table.objs.table.m.copy.a.valuecopy := [=];
help::pkg.utility.table.objs.table.m.copy.a.valuecopy.d := 'Make a deep copy of any table?';
help::pkg.utility.table.objs.table.m.copy.a.valuecopy.def := 'F';
help::pkg.utility.table.objs.table.m.copy.a.valuecopy.a := 'Bool';
help::pkg.utility.table.objs.table.m.copy.a.dminfo := [=];
help::pkg.utility.table.objs.table.m.copy.a.dminfo.d := 'Data manager info for new table';
help::pkg.utility.table.objs.table.m.copy.a.dminfo.def := '[=]';
help::pkg.utility.table.objs.table.m.copy.a.dminfo.a := 'Record';
help::pkg.utility.table.objs.table.m.copy.a.endian := [=];
help::pkg.utility.table.objs.table.m.copy.a.endian.d := 'Endian format of new table';
help::pkg.utility.table.objs.table.m.copy.a.endian.def := 'aipsrc';
help::pkg.utility.table.objs.table.m.copy.a.endian.a := 'String';
help::pkg.utility.table.objs.table.m.copy.a.memorytable := [=];
help::pkg.utility.table.objs.table.m.copy.a.memorytable.d := 'Hold new table in memory?';
help::pkg.utility.table.objs.table.m.copy.a.memorytable.def := 'F';
help::pkg.utility.table.objs.table.m.copy.a.memorytable.a := 'Bool';
help::pkg.utility.table.objs.table.m.copy.a.returnobject := [=];
help::pkg.utility.table.objs.table.m.copy.a.returnobject.d := 'Return a tool object for the new table';
help::pkg.utility.table.objs.table.m.copy.a.returnobject.def := 'F';
help::pkg.utility.table.objs.table.m.copy.a.returnobject.a := 'Bool';
help::pkg.utility.table.objs.table.m.copy.a.copynorows := [=];
help::pkg.utility.table.objs.table.m.copy.a.copynorows.d := 'Make no copy of the rows?';
help::pkg.utility.table.objs.table.m.copy.a.copynorows.def := 'F';
help::pkg.utility.table.objs.table.m.copy.a.copynorows.a := 'Bool';
help::pkg.utility.table.objs.table.m.copy.s := 'copy(newtablename, deep, valuecopy, dminfo, endian, memorytable, returnobject, copynorows)';
help::pkg.utility.table.objs.table.m.copyrows := [=];
help::pkg.utility.table.objs.table.m.copyrows.d := 'copy rows from this table to another';
help::pkg.utility.table.objs.table.m.copyrows.a.outtable := [=];
help::pkg.utility.table.objs.table.m.copyrows.a.outtable.d := 'table object of output table';
help::pkg.utility.table.objs.table.m.copyrows.a.outtable.def := '';
help::pkg.utility.table.objs.table.m.copyrows.a.outtable.a := 'String';
help::pkg.utility.table.objs.table.m.copyrows.a.startrowin := [=];
help::pkg.utility.table.objs.table.m.copyrows.a.startrowin.d := 'First row to take from input table';
help::pkg.utility.table.objs.table.m.copyrows.a.startrowin.def := '1';
help::pkg.utility.table.objs.table.m.copyrows.a.startrowin.a := 'Int';
help::pkg.utility.table.objs.table.m.copyrows.a.startrowout := [=];
help::pkg.utility.table.objs.table.m.copyrows.a.startrowout.d := 'First row to write in output table';
help::pkg.utility.table.objs.table.m.copyrows.a.startrowout.def := '-1 (=end)';
help::pkg.utility.table.objs.table.m.copyrows.a.startrowout.a := 'Int';
help::pkg.utility.table.objs.table.m.copyrows.a.nrow := [=];
help::pkg.utility.table.objs.table.m.copyrows.a.nrow.d := 'Nr of rows to copy';
help::pkg.utility.table.objs.table.m.copyrows.a.nrow.def := '-1 (=all)';
help::pkg.utility.table.objs.table.m.copyrows.a.nrow.a := 'Int';
help::pkg.utility.table.objs.table.m.copyrows.s := 'copyrows(outtable, startrowin, startrowout, nrow)';
help::pkg.utility.table.objs.table.m.done := [=];
help::pkg.utility.table.objs.table.m.done.d := 'end the table tool';
help::pkg.utility.table.objs.table.m.done.s := 'done()';
help::pkg.utility.table.objs.table.m.iswritable := [=];
help::pkg.utility.table.objs.table.m.iswritable.d := 'is the table writable?';
help::pkg.utility.table.objs.table.m.iswritable.s := 'iswritable()';
help::pkg.utility.table.objs.table.m.endianformat := [=];
help::pkg.utility.table.objs.table.m.endianformat.d := 'get the endian format used for this table';
help::pkg.utility.table.objs.table.m.endianformat.s := 'endianformat()';
help::pkg.utility.table.objs.table.m.lock := [=];
help::pkg.utility.table.objs.table.m.lock.d := 'acquire a lock on the table';
help::pkg.utility.table.objs.table.m.lock.a.write := [=];
help::pkg.utility.table.objs.table.m.lock.a.write.d := 'Write lock? (F=read lock)';
help::pkg.utility.table.objs.table.m.lock.a.write.def := 'T';
help::pkg.utility.table.objs.table.m.lock.a.write.a := 'Bool';
help::pkg.utility.table.objs.table.m.lock.a.nattempts := [=];
help::pkg.utility.table.objs.table.m.lock.a.nattempts.d := 'Nr of attempts';
help::pkg.utility.table.objs.table.m.lock.a.nattempts.def := '0';
help::pkg.utility.table.objs.table.m.lock.a.nattempts.a := 'Int';
help::pkg.utility.table.objs.table.m.lock.s := 'lock(write, nattempts)';
help::pkg.utility.table.objs.table.m.unlock := [=];
help::pkg.utility.table.objs.table.m.unlock.d := 'unlock and flush the table';
help::pkg.utility.table.objs.table.m.unlock.s := 'unlock()';
help::pkg.utility.table.objs.table.m.datachanged := [=];
help::pkg.utility.table.objs.table.m.datachanged.d := 'has data changed in table?';
help::pkg.utility.table.objs.table.m.datachanged.s := 'datachanged()';
help::pkg.utility.table.objs.table.m.haslock := [=];
help::pkg.utility.table.objs.table.m.haslock.d := 'has this process a lock on the table?';
help::pkg.utility.table.objs.table.m.haslock.a.write := [=];
help::pkg.utility.table.objs.table.m.haslock.a.write.d := 'Has it a write lock? (F=read lock)';
help::pkg.utility.table.objs.table.m.haslock.a.write.def := 'T';
help::pkg.utility.table.objs.table.m.haslock.a.write.a := 'Bool';
help::pkg.utility.table.objs.table.m.haslock.s := 'haslock(write)';
help::pkg.utility.table.objs.table.m.lockoptions := [=];
help::pkg.utility.table.objs.table.m.lockoptions.d := 'get the lock options used for this table';
help::pkg.utility.table.objs.table.m.lockoptions.s := 'lockoptions()';
help::pkg.utility.table.objs.table.m.ismultiused := [=];
help::pkg.utility.table.objs.table.m.ismultiused.d := 'is the table in use in another process?';
help::pkg.utility.table.objs.table.m.ismultiused.a.checksubtables := [=];
help::pkg.utility.table.objs.table.m.ismultiused.a.checksubtables.d := 'check if subtables are multiused?)';
help::pkg.utility.table.objs.table.m.ismultiused.a.checksubtables.def := 'F';
help::pkg.utility.table.objs.table.m.ismultiused.a.checksubtables.a := 'Bool';
help::pkg.utility.table.objs.table.m.ismultiused.s := 'ismultiused(checksubtables)';
help::pkg.utility.table.objs.table.m.browse := [=];
help::pkg.utility.table.objs.table.m.browse.d := 'browse a table using a graphical browser';
help::pkg.utility.table.objs.table.m.browse.s := 'browse()';
help::pkg.utility.table.objs.table.m.name := [=];
help::pkg.utility.table.objs.table.m.name.d := 'return name on disk';
help::pkg.utility.table.objs.table.m.name.s := 'name()';
help::pkg.utility.table.objs.table.m.toascii := [=];
help::pkg.utility.table.objs.table.m.toascii.d := 'Write AIPS++\ table into an ASCII format';
help::pkg.utility.table.objs.table.m.toascii.a.asciifile := [=];
help::pkg.utility.table.objs.table.m.toascii.a.asciifile.d := 'Name of ASCII file to be written';
help::pkg.utility.table.objs.table.m.toascii.a.asciifile.def := '';
help::pkg.utility.table.objs.table.m.toascii.a.asciifile.a := 'String';
help::pkg.utility.table.objs.table.m.toascii.a.headerfile := [=];
help::pkg.utility.table.objs.table.m.toascii.a.headerfile.d := 'Name of an optional file defining the format';
help::pkg.utility.table.objs.table.m.toascii.a.headerfile.def := '\' \' ';
help::pkg.utility.table.objs.table.m.toascii.a.headerfile.a := 'String';
help::pkg.utility.table.objs.table.m.toascii.a.columns := [=];
help::pkg.utility.table.objs.table.m.toascii.a.columns.d := 'Names of columns to be written';
help::pkg.utility.table.objs.table.m.toascii.a.columns.def := 'All';
help::pkg.utility.table.objs.table.m.toascii.a.columns.a := 'Vector of strings';
help::pkg.utility.table.objs.table.m.toascii.a.sep := [=];
help::pkg.utility.table.objs.table.m.toascii.a.sep.d := 'Value separator';
help::pkg.utility.table.objs.table.m.toascii.a.sep.def := '\'  \' ';
help::pkg.utility.table.objs.table.m.toascii.a.sep.a := 'String';
help::pkg.utility.table.objs.table.m.toascii.s := 'toascii(asciifile, headerfile, columns, sep)';
help::pkg.utility.table.objs.table.m.query := [=];
help::pkg.utility.table.objs.table.m.query.d := 'Make a table from a query';
help::pkg.utility.table.objs.table.m.query.a.query := [=];
help::pkg.utility.table.objs.table.m.query.a.query.d := 'Query string';
help::pkg.utility.table.objs.table.m.query.a.query.def := '\' \' ';
help::pkg.utility.table.objs.table.m.query.a.query.a := 'String';
help::pkg.utility.table.objs.table.m.query.a.name := [=];
help::pkg.utility.table.objs.table.m.query.a.name.d := 'Name of resulting reference table';
help::pkg.utility.table.objs.table.m.query.a.name.def := '\' \' ';
help::pkg.utility.table.objs.table.m.query.a.name.a := 'String';
help::pkg.utility.table.objs.table.m.query.a.sortlist := [=];
help::pkg.utility.table.objs.table.m.query.a.sortlist.d := 'Sort string (one or more expressions separated by commas)';
help::pkg.utility.table.objs.table.m.query.a.sortlist.def := '\' \' ';
help::pkg.utility.table.objs.table.m.query.a.sortlist.a := 'String';
help::pkg.utility.table.objs.table.m.query.a.columns := [=];
help::pkg.utility.table.objs.table.m.query.a.columns.d := 'List of column names separated by commas';
help::pkg.utility.table.objs.table.m.query.a.columns.def := '\' \' ';
help::pkg.utility.table.objs.table.m.query.a.columns.a := 'String';
help::pkg.utility.table.objs.table.m.query.s := 'query(query, name, sortlist, columns)';
help::pkg.utility.table.objs.table.m.calc := [=];
help::pkg.utility.table.objs.table.m.calc.d := 'Calculate an expression on a table';
help::pkg.utility.table.objs.table.m.calc.a.expr := [=];
help::pkg.utility.table.objs.table.m.calc.a.expr.d := 'Expression string';
help::pkg.utility.table.objs.table.m.calc.a.expr.def := '';
help::pkg.utility.table.objs.table.m.calc.a.expr.a := 'String';
help::pkg.utility.table.objs.table.m.calc.s := 'calc(expr)';
help::pkg.utility.table.objs.table.m.selectrows := [=];
help::pkg.utility.table.objs.table.m.selectrows.d := 'Make a table from a selection of rows';
help::pkg.utility.table.objs.table.m.selectrows.a.rownrs := [=];
help::pkg.utility.table.objs.table.m.selectrows.a.rownrs.d := '1-based Row Numbers';
help::pkg.utility.table.objs.table.m.selectrows.a.rownrs.def := '';
help::pkg.utility.table.objs.table.m.selectrows.a.rownrs.a := 'Vector of Ints';
help::pkg.utility.table.objs.table.m.selectrows.a.name := [=];
help::pkg.utility.table.objs.table.m.selectrows.a.name.d := 'Name of resulting table';
help::pkg.utility.table.objs.table.m.selectrows.a.name.def := '\' \' ';
help::pkg.utility.table.objs.table.m.selectrows.a.name.a := 'Any String';
help::pkg.utility.table.objs.table.m.selectrows.s := 'selectrows(rownrs, name)';
help::pkg.utility.table.objs.table.m.putinfo := [=];
help::pkg.utility.table.objs.table.m.putinfo.d := 'set the info record';
help::pkg.utility.table.objs.table.m.putinfo.a.value := [=];
help::pkg.utility.table.objs.table.m.putinfo.a.value.d := 'Info record';
help::pkg.utility.table.objs.table.m.putinfo.a.value.def := '';
help::pkg.utility.table.objs.table.m.putinfo.a.value.a := 'info record';
help::pkg.utility.table.objs.table.m.putinfo.s := 'putinfo(value)';
help::pkg.utility.table.objs.table.m.addreadmeline := [=];
help::pkg.utility.table.objs.table.m.addreadmeline.d := 'add a readme line to the info record';
help::pkg.utility.table.objs.table.m.addreadmeline.a.value := [=];
help::pkg.utility.table.objs.table.m.addreadmeline.a.value.d := 'readme line';
help::pkg.utility.table.objs.table.m.addreadmeline.a.value.def := '';
help::pkg.utility.table.objs.table.m.addreadmeline.a.value.a := 'String';
help::pkg.utility.table.objs.table.m.addreadmeline.s := 'addreadmeline(value)';
help::pkg.utility.table.objs.table.m.summary := [=];
help::pkg.utility.table.objs.table.m.summary.d := 'summarize the contents of the table';
help::pkg.utility.table.objs.table.m.summary.a.recurse := [=];
help::pkg.utility.table.objs.table.m.summary.a.recurse.d := 'Summarize subtables recursively';
help::pkg.utility.table.objs.table.m.summary.a.recurse.def := 'F';
help::pkg.utility.table.objs.table.m.summary.a.recurse.a := 'Bool';
help::pkg.utility.table.objs.table.m.summary.s := 'summary(recurse)';
help::pkg.utility.table.objs.table.m.colnames := [=];
help::pkg.utility.table.objs.table.m.colnames.d := 'return the names of the columns';
help::pkg.utility.table.objs.table.m.colnames.s := 'colnames()';
help::pkg.utility.table.objs.table.m.rownumbers := [=];
help::pkg.utility.table.objs.table.m.rownumbers.d := 'return the row numbers in the (reference) table';
help::pkg.utility.table.objs.table.m.rownumbers.a.tab := [=];
help::pkg.utility.table.objs.table.m.rownumbers.a.tab.d := 'Table to which the row numbers refer';
help::pkg.utility.table.objs.table.m.rownumbers.a.tab.def := 'F';
help::pkg.utility.table.objs.table.m.rownumbers.a.tab.a := 'Record';
help::pkg.utility.table.objs.table.m.rownumbers.a.nbytes := [=];
help::pkg.utility.table.objs.table.m.rownumbers.a.nbytes.d := 'Maximum cache size in bytes';
help::pkg.utility.table.objs.table.m.rownumbers.a.nbytes.def := '';
help::pkg.utility.table.objs.table.m.rownumbers.a.nbytes.a := 'Int';
help::pkg.utility.table.objs.table.m.rownumbers.s := 'rownumbers(tab, nbytes)';
help::pkg.utility.table.objs.table.m.setmaxcachesize := [=];
help::pkg.utility.table.objs.table.m.setmaxcachesize.d := 'set maximum cache size for column in the table';
help::pkg.utility.table.objs.table.m.setmaxcachesize.a.columnname := [=];
help::pkg.utility.table.objs.table.m.setmaxcachesize.a.columnname.d := 'Name of column';
help::pkg.utility.table.objs.table.m.setmaxcachesize.a.columnname.def := '';
help::pkg.utility.table.objs.table.m.setmaxcachesize.a.columnname.a := 'String';
help::pkg.utility.table.objs.table.m.setmaxcachesize.a.nbytes := [=];
help::pkg.utility.table.objs.table.m.setmaxcachesize.a.nbytes.d := 'Maximum cache size in bytes';
help::pkg.utility.table.objs.table.m.setmaxcachesize.a.nbytes.def := '';
help::pkg.utility.table.objs.table.m.setmaxcachesize.a.nbytes.a := 'Int';
help::pkg.utility.table.objs.table.m.setmaxcachesize.s := 'setmaxcachesize(columnname, nbytes)';
help::pkg.utility.table.objs.table.m.isscalarcol := [=];
help::pkg.utility.table.objs.table.m.isscalarcol.d := 'is the specified column scalar?';
help::pkg.utility.table.objs.table.m.isscalarcol.a.columnname := [=];
help::pkg.utility.table.objs.table.m.isscalarcol.a.columnname.d := 'Name of column';
help::pkg.utility.table.objs.table.m.isscalarcol.a.columnname.def := '';
help::pkg.utility.table.objs.table.m.isscalarcol.a.columnname.a := 'String';
help::pkg.utility.table.objs.table.m.isscalarcol.s := 'isscalarcol(columnname)';
help::pkg.utility.table.objs.table.m.isvarcol := [=];
help::pkg.utility.table.objs.table.m.isvarcol.d := 'tell if column contains variable shaped arrays';
help::pkg.utility.table.objs.table.m.isvarcol.a.columnname := [=];
help::pkg.utility.table.objs.table.m.isvarcol.a.columnname.d := 'Name of column';
help::pkg.utility.table.objs.table.m.isvarcol.a.columnname.def := '';
help::pkg.utility.table.objs.table.m.isvarcol.a.columnname.a := 'String';
help::pkg.utility.table.objs.table.m.isvarcol.s := 'isvarcol(columnname)';
help::pkg.utility.table.objs.table.m.coldatatype := [=];
help::pkg.utility.table.objs.table.m.coldatatype.d := 'return the column data type';
help::pkg.utility.table.objs.table.m.coldatatype.a.columnname := [=];
help::pkg.utility.table.objs.table.m.coldatatype.a.columnname.d := 'Name of column';
help::pkg.utility.table.objs.table.m.coldatatype.a.columnname.def := '';
help::pkg.utility.table.objs.table.m.coldatatype.a.columnname.a := 'String';
help::pkg.utility.table.objs.table.m.coldatatype.s := 'coldatatype(columnname)';
help::pkg.utility.table.objs.table.m.colarraytype := [=];
help::pkg.utility.table.objs.table.m.colarraytype.d := 'return the column array type';
help::pkg.utility.table.objs.table.m.colarraytype.a.columnname := [=];
help::pkg.utility.table.objs.table.m.colarraytype.a.columnname.d := 'Name of column';
help::pkg.utility.table.objs.table.m.colarraytype.a.columnname.def := '';
help::pkg.utility.table.objs.table.m.colarraytype.a.columnname.a := 'String';
help::pkg.utility.table.objs.table.m.colarraytype.s := 'colarraytype(columnname)';
help::pkg.utility.table.objs.table.m.ncols := [=];
help::pkg.utility.table.objs.table.m.ncols.d := 'return number of columns';
help::pkg.utility.table.objs.table.m.ncols.s := 'ncols()';
help::pkg.utility.table.objs.table.m.nrows := [=];
help::pkg.utility.table.objs.table.m.nrows.d := 'return number of rows';
help::pkg.utility.table.objs.table.m.nrows.s := 'nrows()';
help::pkg.utility.table.objs.table.m.addrows := [=];
help::pkg.utility.table.objs.table.m.addrows.d := 'add a specified number of rows';
help::pkg.utility.table.objs.table.m.addrows.a.nrow := [=];
help::pkg.utility.table.objs.table.m.addrows.a.nrow.d := 'Number of rows to add';
help::pkg.utility.table.objs.table.m.addrows.a.nrow.def := '1';
help::pkg.utility.table.objs.table.m.addrows.a.nrow.a := 'Int';
help::pkg.utility.table.objs.table.m.addrows.s := 'addrows(nrow)';
help::pkg.utility.table.objs.table.m.removerows := [=];
help::pkg.utility.table.objs.table.m.removerows.d := 'remove the specified rows';
help::pkg.utility.table.objs.table.m.removerows.a.rownrs := [=];
help::pkg.utility.table.objs.table.m.removerows.a.rownrs.d := 'Row numbers to remove';
help::pkg.utility.table.objs.table.m.removerows.a.rownrs.def := '';
help::pkg.utility.table.objs.table.m.removerows.a.rownrs.a := 'Int';
help::pkg.utility.table.objs.table.m.removerows.s := 'removerows(rownrs)';
help::pkg.utility.table.objs.table.m.addcols := [=];
help::pkg.utility.table.objs.table.m.addcols.d := 'add one or more columns';
help::pkg.utility.table.objs.table.m.addcols.a.desc := [=];
help::pkg.utility.table.objs.table.m.addcols.a.desc.d := 'Description of one or more columns';
help::pkg.utility.table.objs.table.m.addcols.a.desc.def := '';
help::pkg.utility.table.objs.table.m.addcols.a.desc.a := 'Descriptor';
help::pkg.utility.table.objs.table.m.addcols.a.dminfo := [=];
help::pkg.utility.table.objs.table.m.addcols.a.dminfo.d := 'Optional description data manager to use';
help::pkg.utility.table.objs.table.m.addcols.a.dminfo.def := 'F';
help::pkg.utility.table.objs.table.m.addcols.a.dminfo.a := 'Record';
help::pkg.utility.table.objs.table.m.addcols.s := 'addcols(desc, dminfo)';
help::pkg.utility.table.objs.table.m.renamecol := [=];
help::pkg.utility.table.objs.table.m.renamecol.d := 'rename a column';
help::pkg.utility.table.objs.table.m.renamecol.a.oldname := [=];
help::pkg.utility.table.objs.table.m.renamecol.a.oldname.d := 'name of column to be renamed';
help::pkg.utility.table.objs.table.m.renamecol.a.oldname.def := '';
help::pkg.utility.table.objs.table.m.renamecol.a.oldname.a := 'String';
help::pkg.utility.table.objs.table.m.renamecol.a.newname := [=];
help::pkg.utility.table.objs.table.m.renamecol.a.newname.d := 'new name of column';
help::pkg.utility.table.objs.table.m.renamecol.a.newname.def := '';
help::pkg.utility.table.objs.table.m.renamecol.a.newname.a := 'String';
help::pkg.utility.table.objs.table.m.renamecol.s := 'renamecol(oldname, newname)';
help::pkg.utility.table.objs.table.m.removecols := [=];
help::pkg.utility.table.objs.table.m.removecols.d := 'remove one or more columns';
help::pkg.utility.table.objs.table.m.removecols.a.columnames := [=];
help::pkg.utility.table.objs.table.m.removecols.a.columnames.d := 'names of columns to be removed';
help::pkg.utility.table.objs.table.m.removecols.a.columnames.def := '';
help::pkg.utility.table.objs.table.m.removecols.a.columnames.a := 'Vector of Strings';
help::pkg.utility.table.objs.table.m.removecols.s := 'removecols(columnames)';
help::pkg.utility.table.objs.table.m.iscelldefined := [=];
help::pkg.utility.table.objs.table.m.iscelldefined.d := 'test if a specific cell contains a value';
help::pkg.utility.table.objs.table.m.iscelldefined.a.columnname := [=];
help::pkg.utility.table.objs.table.m.iscelldefined.a.columnname.d := 'Name of column';
help::pkg.utility.table.objs.table.m.iscelldefined.a.columnname.def := '';
help::pkg.utility.table.objs.table.m.iscelldefined.a.columnname.a := 'String';
help::pkg.utility.table.objs.table.m.iscelldefined.a.rownr := [=];
help::pkg.utility.table.objs.table.m.iscelldefined.a.rownr.d := 'Row number, starting at 1';
help::pkg.utility.table.objs.table.m.iscelldefined.a.rownr.def := '';
help::pkg.utility.table.objs.table.m.iscelldefined.a.rownr.a := 'Int';
help::pkg.utility.table.objs.table.m.iscelldefined.s := 'iscelldefined(columnname, rownr)';
help::pkg.utility.table.objs.table.m.getcell := [=];
help::pkg.utility.table.objs.table.m.getcell.d := 'get a specific cell';
help::pkg.utility.table.objs.table.m.getcell.a.columnname := [=];
help::pkg.utility.table.objs.table.m.getcell.a.columnname.d := 'Name of column';
help::pkg.utility.table.objs.table.m.getcell.a.columnname.def := '';
help::pkg.utility.table.objs.table.m.getcell.a.columnname.a := 'String';
help::pkg.utility.table.objs.table.m.getcell.a.rownr := [=];
help::pkg.utility.table.objs.table.m.getcell.a.rownr.d := 'Row number, starting at 1';
help::pkg.utility.table.objs.table.m.getcell.a.rownr.def := '';
help::pkg.utility.table.objs.table.m.getcell.a.rownr.a := 'Int';
help::pkg.utility.table.objs.table.m.getcell.s := 'getcell(columnname, rownr)';
help::pkg.utility.table.objs.table.m.getcellslice := [=];
help::pkg.utility.table.objs.table.m.getcellslice.d := 'get a slice from a specific cell';
help::pkg.utility.table.objs.table.m.getcellslice.a.columnname := [=];
help::pkg.utility.table.objs.table.m.getcellslice.a.columnname.d := 'Name of column';
help::pkg.utility.table.objs.table.m.getcellslice.a.columnname.def := '';
help::pkg.utility.table.objs.table.m.getcellslice.a.columnname.a := 'String';
help::pkg.utility.table.objs.table.m.getcellslice.a.rownr := [=];
help::pkg.utility.table.objs.table.m.getcellslice.a.rownr.d := 'Row number, starting at 1';
help::pkg.utility.table.objs.table.m.getcellslice.a.rownr.def := '';
help::pkg.utility.table.objs.table.m.getcellslice.a.rownr.a := 'Int';
help::pkg.utility.table.objs.table.m.getcellslice.a.blc := [=];
help::pkg.utility.table.objs.table.m.getcellslice.a.blc.d := 'Bottom left corner (e.g. [1,1,1] is start of 3D array)';
help::pkg.utility.table.objs.table.m.getcellslice.a.blc.def := '';
help::pkg.utility.table.objs.table.m.getcellslice.a.blc.a := 'Vector of Ints';
help::pkg.utility.table.objs.table.m.getcellslice.a.trc := [=];
help::pkg.utility.table.objs.table.m.getcellslice.a.trc.d := 'Top right corner';
help::pkg.utility.table.objs.table.m.getcellslice.a.trc.def := '';
help::pkg.utility.table.objs.table.m.getcellslice.a.trc.a := 'Vector of Ints';
help::pkg.utility.table.objs.table.m.getcellslice.a.incr := [=];
help::pkg.utility.table.objs.table.m.getcellslice.a.incr.d := 'Stride (defaults to 1 for all axes)';
help::pkg.utility.table.objs.table.m.getcellslice.a.incr.def := '';
help::pkg.utility.table.objs.table.m.getcellslice.a.incr.a := 'Vector of Ints';
help::pkg.utility.table.objs.table.m.getcellslice.s := 'getcellslice(columnname, rownr, blc, trc, incr)';
help::pkg.utility.table.objs.table.m.getcol := [=];
help::pkg.utility.table.objs.table.m.getcol.d := 'get a specific column';
help::pkg.utility.table.objs.table.m.getcol.a.columnname := [=];
help::pkg.utility.table.objs.table.m.getcol.a.columnname.d := 'Name of column';
help::pkg.utility.table.objs.table.m.getcol.a.columnname.def := '';
help::pkg.utility.table.objs.table.m.getcol.a.columnname.a := 'String';
help::pkg.utility.table.objs.table.m.getcol.a.startrow := [=];
help::pkg.utility.table.objs.table.m.getcol.a.startrow.d := 'First row to read (default 1)';
help::pkg.utility.table.objs.table.m.getcol.a.startrow.def := '';
help::pkg.utility.table.objs.table.m.getcol.a.startrow.a := 'Int';
help::pkg.utility.table.objs.table.m.getcol.a.nrow := [=];
help::pkg.utility.table.objs.table.m.getcol.a.nrow.d := 'Number of rows to read (default -1 means till the end)';
help::pkg.utility.table.objs.table.m.getcol.a.nrow.def := '';
help::pkg.utility.table.objs.table.m.getcol.a.nrow.a := 'Int';
help::pkg.utility.table.objs.table.m.getcol.a.rowincr := [=];
help::pkg.utility.table.objs.table.m.getcol.a.rowincr.d := 'Increment in rows to read (default 1)';
help::pkg.utility.table.objs.table.m.getcol.a.rowincr.def := '';
help::pkg.utility.table.objs.table.m.getcol.a.rowincr.a := 'Int';
help::pkg.utility.table.objs.table.m.getcol.s := 'getcol(columnname, startrow, nrow, rowincr)';
help::pkg.utility.table.objs.table.m.getvarcol := [=];
help::pkg.utility.table.objs.table.m.getvarcol.d := 'get a specific column (for variable arrays)';
help::pkg.utility.table.objs.table.m.getvarcol.a.columnname := [=];
help::pkg.utility.table.objs.table.m.getvarcol.a.columnname.d := 'Name of column';
help::pkg.utility.table.objs.table.m.getvarcol.a.columnname.def := '';
help::pkg.utility.table.objs.table.m.getvarcol.a.columnname.a := 'String';
help::pkg.utility.table.objs.table.m.getvarcol.a.startrow := [=];
help::pkg.utility.table.objs.table.m.getvarcol.a.startrow.d := 'First row to read (default 1)';
help::pkg.utility.table.objs.table.m.getvarcol.a.startrow.def := '';
help::pkg.utility.table.objs.table.m.getvarcol.a.startrow.a := 'Int';
help::pkg.utility.table.objs.table.m.getvarcol.a.nrow := [=];
help::pkg.utility.table.objs.table.m.getvarcol.a.nrow.d := 'Number of rows to read (default -1 means till the end)';
help::pkg.utility.table.objs.table.m.getvarcol.a.nrow.def := '';
help::pkg.utility.table.objs.table.m.getvarcol.a.nrow.a := 'Int';
help::pkg.utility.table.objs.table.m.getvarcol.a.rowincr := [=];
help::pkg.utility.table.objs.table.m.getvarcol.a.rowincr.d := 'Increment in rows to read (default 1)';
help::pkg.utility.table.objs.table.m.getvarcol.a.rowincr.def := '';
help::pkg.utility.table.objs.table.m.getvarcol.a.rowincr.a := 'Int';
help::pkg.utility.table.objs.table.m.getvarcol.s := 'getvarcol(columnname, startrow, nrow, rowincr)';
help::pkg.utility.table.objs.table.m.getcolslice := [=];
help::pkg.utility.table.objs.table.m.getcolslice.d := 'get a slice from a specific column';
help::pkg.utility.table.objs.table.m.getcolslice.a.columnname := [=];
help::pkg.utility.table.objs.table.m.getcolslice.a.columnname.d := 'Name of column';
help::pkg.utility.table.objs.table.m.getcolslice.a.columnname.def := '';
help::pkg.utility.table.objs.table.m.getcolslice.a.columnname.a := 'String';
help::pkg.utility.table.objs.table.m.getcolslice.a.blc := [=];
help::pkg.utility.table.objs.table.m.getcolslice.a.blc.d := 'Bottom left corner (e.g. [1,1,1] is start of 3D array)';
help::pkg.utility.table.objs.table.m.getcolslice.a.blc.def := '';
help::pkg.utility.table.objs.table.m.getcolslice.a.blc.a := 'Vector of Ints';
help::pkg.utility.table.objs.table.m.getcolslice.a.trc := [=];
help::pkg.utility.table.objs.table.m.getcolslice.a.trc.d := 'Top right corner';
help::pkg.utility.table.objs.table.m.getcolslice.a.trc.def := '';
help::pkg.utility.table.objs.table.m.getcolslice.a.trc.a := 'Vector of Ints';
help::pkg.utility.table.objs.table.m.getcolslice.a.incr := [=];
help::pkg.utility.table.objs.table.m.getcolslice.a.incr.d := 'Stride (defaults to 1 for all axes)';
help::pkg.utility.table.objs.table.m.getcolslice.a.incr.def := '';
help::pkg.utility.table.objs.table.m.getcolslice.a.incr.a := 'Vector of Ints';
help::pkg.utility.table.objs.table.m.getcolslice.a.startrow := [=];
help::pkg.utility.table.objs.table.m.getcolslice.a.startrow.d := 'First row to read (default 1)';
help::pkg.utility.table.objs.table.m.getcolslice.a.startrow.def := '';
help::pkg.utility.table.objs.table.m.getcolslice.a.startrow.a := 'Int';
help::pkg.utility.table.objs.table.m.getcolslice.a.nrow := [=];
help::pkg.utility.table.objs.table.m.getcolslice.a.nrow.d := 'Number of rows to read (default -1 means till the end)';
help::pkg.utility.table.objs.table.m.getcolslice.a.nrow.def := '';
help::pkg.utility.table.objs.table.m.getcolslice.a.nrow.a := 'Int';
help::pkg.utility.table.objs.table.m.getcolslice.a.rowincr := [=];
help::pkg.utility.table.objs.table.m.getcolslice.a.rowincr.d := 'Increment in rows to read (default 1)';
help::pkg.utility.table.objs.table.m.getcolslice.a.rowincr.def := '';
help::pkg.utility.table.objs.table.m.getcolslice.a.rowincr.a := 'Int';
help::pkg.utility.table.objs.table.m.getcolslice.s := 'getcolslice(columnname, blc, trc, incr, startrow, nrow, rowincr)';
help::pkg.utility.table.objs.table.m.putcell := [=];
help::pkg.utility.table.objs.table.m.putcell.d := 'put a specific cell';
help::pkg.utility.table.objs.table.m.putcell.a.columnname := [=];
help::pkg.utility.table.objs.table.m.putcell.a.columnname.d := 'Name of column';
help::pkg.utility.table.objs.table.m.putcell.a.columnname.def := '';
help::pkg.utility.table.objs.table.m.putcell.a.columnname.a := 'String';
help::pkg.utility.table.objs.table.m.putcell.a.rownr := [=];
help::pkg.utility.table.objs.table.m.putcell.a.rownr.d := 'Row number(s) (1-relative)';
help::pkg.utility.table.objs.table.m.putcell.a.rownr.def := '';
help::pkg.utility.table.objs.table.m.putcell.a.rownr.a := 'Vector of Ints';
help::pkg.utility.table.objs.table.m.putcell.a.value := [=];
help::pkg.utility.table.objs.table.m.putcell.a.value.d := 'Value';
help::pkg.utility.table.objs.table.m.putcell.a.value.def := '';
help::pkg.utility.table.objs.table.m.putcell.a.value.a := '';
help::pkg.utility.table.objs.table.m.putcell.s := 'putcell(columnname, rownr, value)';
help::pkg.utility.table.objs.table.m.putcellslice := [=];
help::pkg.utility.table.objs.table.m.putcellslice.d := 'put a slice into a specific cell';
help::pkg.utility.table.objs.table.m.putcellslice.a.columnname := [=];
help::pkg.utility.table.objs.table.m.putcellslice.a.columnname.d := 'Name of column';
help::pkg.utility.table.objs.table.m.putcellslice.a.columnname.def := '';
help::pkg.utility.table.objs.table.m.putcellslice.a.columnname.a := 'String';
help::pkg.utility.table.objs.table.m.putcellslice.a.rownr := [=];
help::pkg.utility.table.objs.table.m.putcellslice.a.rownr.d := 'Row number, starting at 1';
help::pkg.utility.table.objs.table.m.putcellslice.a.rownr.def := '';
help::pkg.utility.table.objs.table.m.putcellslice.a.rownr.a := 'Int';
help::pkg.utility.table.objs.table.m.putcellslice.a.value := [=];
help::pkg.utility.table.objs.table.m.putcellslice.a.value.d := 'Value';
help::pkg.utility.table.objs.table.m.putcellslice.a.value.def := '';
help::pkg.utility.table.objs.table.m.putcellslice.a.value.a := '';
help::pkg.utility.table.objs.table.m.putcellslice.a.blc := [=];
help::pkg.utility.table.objs.table.m.putcellslice.a.blc.d := 'Bottom left corner (e.g. [1,1,1] is start of 3D array)';
help::pkg.utility.table.objs.table.m.putcellslice.a.blc.def := '';
help::pkg.utility.table.objs.table.m.putcellslice.a.blc.a := 'Vector of Ints';
help::pkg.utility.table.objs.table.m.putcellslice.a.trc := [=];
help::pkg.utility.table.objs.table.m.putcellslice.a.trc.d := 'Top right corner';
help::pkg.utility.table.objs.table.m.putcellslice.a.trc.def := '';
help::pkg.utility.table.objs.table.m.putcellslice.a.trc.a := 'Vector of Ints';
help::pkg.utility.table.objs.table.m.putcellslice.a.incr := [=];
help::pkg.utility.table.objs.table.m.putcellslice.a.incr.d := 'Stride (defaults to 1 for all axes)';
help::pkg.utility.table.objs.table.m.putcellslice.a.incr.def := '';
help::pkg.utility.table.objs.table.m.putcellslice.a.incr.a := 'Vector of Ints';
help::pkg.utility.table.objs.table.m.putcellslice.s := 'putcellslice(columnname, rownr, value, blc, trc, incr)';
help::pkg.utility.table.objs.table.m.putcol := [=];
help::pkg.utility.table.objs.table.m.putcol.d := 'put a specific column';
help::pkg.utility.table.objs.table.m.putcol.a.columnname := [=];
help::pkg.utility.table.objs.table.m.putcol.a.columnname.d := 'Name of column';
help::pkg.utility.table.objs.table.m.putcol.a.columnname.def := '';
help::pkg.utility.table.objs.table.m.putcol.a.columnname.a := 'String';
help::pkg.utility.table.objs.table.m.putcol.a.value := [=];
help::pkg.utility.table.objs.table.m.putcol.a.value.d := 'Array';
help::pkg.utility.table.objs.table.m.putcol.a.value.def := '';
help::pkg.utility.table.objs.table.m.putcol.a.value.a := '';
help::pkg.utility.table.objs.table.m.putcol.a.startrow := [=];
help::pkg.utility.table.objs.table.m.putcol.a.startrow.d := 'First row to put (default 1)';
help::pkg.utility.table.objs.table.m.putcol.a.startrow.def := '';
help::pkg.utility.table.objs.table.m.putcol.a.startrow.a := 'Int';
help::pkg.utility.table.objs.table.m.putcol.a.nrow := [=];
help::pkg.utility.table.objs.table.m.putcol.a.nrow.d := 'Number of rows to put (default -1 means till the end)';
help::pkg.utility.table.objs.table.m.putcol.a.nrow.def := '';
help::pkg.utility.table.objs.table.m.putcol.a.nrow.a := 'Int';
help::pkg.utility.table.objs.table.m.putcol.a.rowincr := [=];
help::pkg.utility.table.objs.table.m.putcol.a.rowincr.d := 'Increment in rows to put (default 1)';
help::pkg.utility.table.objs.table.m.putcol.a.rowincr.def := '';
help::pkg.utility.table.objs.table.m.putcol.a.rowincr.a := 'Int';
help::pkg.utility.table.objs.table.m.putcol.s := 'putcol(columnname, value, startrow, nrow, rowincr)';
help::pkg.utility.table.objs.table.m.putvarcol := [=];
help::pkg.utility.table.objs.table.m.putvarcol.d := 'put a specific column (for variable arrays)';
help::pkg.utility.table.objs.table.m.putvarcol.a.columnname := [=];
help::pkg.utility.table.objs.table.m.putvarcol.a.columnname.d := 'Name of column';
help::pkg.utility.table.objs.table.m.putvarcol.a.columnname.def := '';
help::pkg.utility.table.objs.table.m.putvarcol.a.columnname.a := 'String';
help::pkg.utility.table.objs.table.m.putvarcol.a.value := [=];
help::pkg.utility.table.objs.table.m.putvarcol.a.value.d := 'Record with values';
help::pkg.utility.table.objs.table.m.putvarcol.a.value.def := '';
help::pkg.utility.table.objs.table.m.putvarcol.a.value.a := '';
help::pkg.utility.table.objs.table.m.putvarcol.a.startrow := [=];
help::pkg.utility.table.objs.table.m.putvarcol.a.startrow.d := 'First row to put (default 1)';
help::pkg.utility.table.objs.table.m.putvarcol.a.startrow.def := '';
help::pkg.utility.table.objs.table.m.putvarcol.a.startrow.a := 'Int';
help::pkg.utility.table.objs.table.m.putvarcol.a.nrow := [=];
help::pkg.utility.table.objs.table.m.putvarcol.a.nrow.d := 'Number of rows to put (default -1 means till the end)';
help::pkg.utility.table.objs.table.m.putvarcol.a.nrow.def := '';
help::pkg.utility.table.objs.table.m.putvarcol.a.nrow.a := 'Int';
help::pkg.utility.table.objs.table.m.putvarcol.a.rowincr := [=];
help::pkg.utility.table.objs.table.m.putvarcol.a.rowincr.d := 'Increment in rows to put (default 1)';
help::pkg.utility.table.objs.table.m.putvarcol.a.rowincr.def := '';
help::pkg.utility.table.objs.table.m.putvarcol.a.rowincr.a := 'Int';
help::pkg.utility.table.objs.table.m.putvarcol.s := 'putvarcol(columnname, value, startrow, nrow, rowincr)';
help::pkg.utility.table.objs.table.m.putcolslice := [=];
help::pkg.utility.table.objs.table.m.putcolslice.d := 'put a slice into a specific column';
help::pkg.utility.table.objs.table.m.putcolslice.a.columnname := [=];
help::pkg.utility.table.objs.table.m.putcolslice.a.columnname.d := 'Name of column';
help::pkg.utility.table.objs.table.m.putcolslice.a.columnname.def := '';
help::pkg.utility.table.objs.table.m.putcolslice.a.columnname.a := 'String';
help::pkg.utility.table.objs.table.m.putcolslice.a.value := [=];
help::pkg.utility.table.objs.table.m.putcolslice.a.value.d := 'Array';
help::pkg.utility.table.objs.table.m.putcolslice.a.value.def := '';
help::pkg.utility.table.objs.table.m.putcolslice.a.value.a := '';
help::pkg.utility.table.objs.table.m.putcolslice.a.blc := [=];
help::pkg.utility.table.objs.table.m.putcolslice.a.blc.d := 'Bottom left corner (e.g. [1,1,1] is start of 3D array)';
help::pkg.utility.table.objs.table.m.putcolslice.a.blc.def := '';
help::pkg.utility.table.objs.table.m.putcolslice.a.blc.a := 'Vector of Ints';
help::pkg.utility.table.objs.table.m.putcolslice.a.trc := [=];
help::pkg.utility.table.objs.table.m.putcolslice.a.trc.d := 'Top right corner';
help::pkg.utility.table.objs.table.m.putcolslice.a.trc.def := '';
help::pkg.utility.table.objs.table.m.putcolslice.a.trc.a := 'Vector of Ints';
help::pkg.utility.table.objs.table.m.putcolslice.a.incr := [=];
help::pkg.utility.table.objs.table.m.putcolslice.a.incr.d := 'Stride (defaults to 1 for all axes)';
help::pkg.utility.table.objs.table.m.putcolslice.a.incr.def := '';
help::pkg.utility.table.objs.table.m.putcolslice.a.incr.a := 'Vector of Ints';
help::pkg.utility.table.objs.table.m.putcolslice.a.startrow := [=];
help::pkg.utility.table.objs.table.m.putcolslice.a.startrow.d := 'First row to put (default 1)';
help::pkg.utility.table.objs.table.m.putcolslice.a.startrow.def := '';
help::pkg.utility.table.objs.table.m.putcolslice.a.startrow.a := 'Int';
help::pkg.utility.table.objs.table.m.putcolslice.a.nrow := [=];
help::pkg.utility.table.objs.table.m.putcolslice.a.nrow.d := 'Number of rows to put (default -1 means till the end)';
help::pkg.utility.table.objs.table.m.putcolslice.a.nrow.def := '';
help::pkg.utility.table.objs.table.m.putcolslice.a.nrow.a := 'Int';
help::pkg.utility.table.objs.table.m.putcolslice.a.rowincr := [=];
help::pkg.utility.table.objs.table.m.putcolslice.a.rowincr.d := 'Increment in rows to put (default 1)';
help::pkg.utility.table.objs.table.m.putcolslice.a.rowincr.def := '';
help::pkg.utility.table.objs.table.m.putcolslice.a.rowincr.a := 'Int';
help::pkg.utility.table.objs.table.m.putcolslice.s := 'putcolslice(columnname, value, blc, trc, incr, startrow, nrow, rowincr)';
help::pkg.utility.table.objs.table.m.getcolshapestring := [=];
help::pkg.utility.table.objs.table.m.getcolshapestring.d := 'get shape of arrays in a specific column';
help::pkg.utility.table.objs.table.m.getcolshapestring.a.columnname := [=];
help::pkg.utility.table.objs.table.m.getcolshapestring.a.columnname.d := 'Name of column';
help::pkg.utility.table.objs.table.m.getcolshapestring.a.columnname.def := '';
help::pkg.utility.table.objs.table.m.getcolshapestring.a.columnname.a := 'String';
help::pkg.utility.table.objs.table.m.getcolshapestring.a.startrow := [=];
help::pkg.utility.table.objs.table.m.getcolshapestring.a.startrow.d := 'First row to read (default 1)';
help::pkg.utility.table.objs.table.m.getcolshapestring.a.startrow.def := '';
help::pkg.utility.table.objs.table.m.getcolshapestring.a.startrow.a := 'Int';
help::pkg.utility.table.objs.table.m.getcolshapestring.a.nrow := [=];
help::pkg.utility.table.objs.table.m.getcolshapestring.a.nrow.d := 'Number of rows to read (default -1 means till the end)';
help::pkg.utility.table.objs.table.m.getcolshapestring.a.nrow.def := '';
help::pkg.utility.table.objs.table.m.getcolshapestring.a.nrow.a := 'Int';
help::pkg.utility.table.objs.table.m.getcolshapestring.a.rowincr := [=];
help::pkg.utility.table.objs.table.m.getcolshapestring.a.rowincr.d := 'Increment in rows to read (default 1)';
help::pkg.utility.table.objs.table.m.getcolshapestring.a.rowincr.def := '';
help::pkg.utility.table.objs.table.m.getcolshapestring.a.rowincr.a := 'Int';
help::pkg.utility.table.objs.table.m.getcolshapestring.s := 'getcolshapestring(columnname, startrow, nrow, rowincr)';
help::pkg.utility.table.objs.table.m.getkeyword := [=];
help::pkg.utility.table.objs.table.m.getkeyword.d := 'get value of specific table keyword';
help::pkg.utility.table.objs.table.m.getkeyword.a.keyword := [=];
help::pkg.utility.table.objs.table.m.getkeyword.a.keyword.d := 'Name or seqnr of keyword';
help::pkg.utility.table.objs.table.m.getkeyword.a.keyword.def := '';
help::pkg.utility.table.objs.table.m.getkeyword.a.keyword.a := 'String|Int';
help::pkg.utility.table.objs.table.m.getkeyword.s := 'getkeyword(keyword)';
help::pkg.utility.table.objs.table.m.getkeywords := [=];
help::pkg.utility.table.objs.table.m.getkeywords.d := 'get values of all table keywords';
help::pkg.utility.table.objs.table.m.getkeywords.s := 'getkeywords()';
help::pkg.utility.table.objs.table.m.getcolkeyword := [=];
help::pkg.utility.table.objs.table.m.getcolkeyword.d := 'get value of specific column keyword';
help::pkg.utility.table.objs.table.m.getcolkeyword.a.columnname := [=];
help::pkg.utility.table.objs.table.m.getcolkeyword.a.columnname.d := 'Name of column';
help::pkg.utility.table.objs.table.m.getcolkeyword.a.columnname.def := '';
help::pkg.utility.table.objs.table.m.getcolkeyword.a.columnname.a := 'String';
help::pkg.utility.table.objs.table.m.getcolkeyword.a.keyword := [=];
help::pkg.utility.table.objs.table.m.getcolkeyword.a.keyword.d := 'Name or seqnr of keyword';
help::pkg.utility.table.objs.table.m.getcolkeyword.a.keyword.def := '';
help::pkg.utility.table.objs.table.m.getcolkeyword.a.keyword.a := 'String|Int';
help::pkg.utility.table.objs.table.m.getcolkeyword.s := 'getcolkeyword(columnname, keyword)';
help::pkg.utility.table.objs.table.m.getcolkeywords := [=];
help::pkg.utility.table.objs.table.m.getcolkeywords.d := 'get values of all keywords for a column';
help::pkg.utility.table.objs.table.m.getcolkeywords.a.columnname := [=];
help::pkg.utility.table.objs.table.m.getcolkeywords.a.columnname.d := 'Name of column';
help::pkg.utility.table.objs.table.m.getcolkeywords.a.columnname.def := '';
help::pkg.utility.table.objs.table.m.getcolkeywords.a.columnname.a := 'String';
help::pkg.utility.table.objs.table.m.getcolkeywords.s := 'getcolkeywords(columnname)';
help::pkg.utility.table.objs.table.m.putkeyword := [=];
help::pkg.utility.table.objs.table.m.putkeyword.d := 'put a specific table keyword';
help::pkg.utility.table.objs.table.m.putkeyword.a.keyword := [=];
help::pkg.utility.table.objs.table.m.putkeyword.a.keyword.d := 'Name or seqnr of keyword';
help::pkg.utility.table.objs.table.m.putkeyword.a.keyword.def := '';
help::pkg.utility.table.objs.table.m.putkeyword.a.keyword.a := 'String|Int';
help::pkg.utility.table.objs.table.m.putkeyword.a.value := [=];
help::pkg.utility.table.objs.table.m.putkeyword.a.value.d := 'Value of keyword';
help::pkg.utility.table.objs.table.m.putkeyword.a.value.def := '';
help::pkg.utility.table.objs.table.m.putkeyword.a.value.a := '';
help::pkg.utility.table.objs.table.m.putkeyword.a.makesubrecord := [=];
help::pkg.utility.table.objs.table.m.putkeyword.a.makesubrecord.d := 'Create intermediate records';
help::pkg.utility.table.objs.table.m.putkeyword.a.makesubrecord.def := 'F';
help::pkg.utility.table.objs.table.m.putkeyword.a.makesubrecord.a := 'Bool';
help::pkg.utility.table.objs.table.m.putkeyword.s := 'putkeyword(keyword, value, makesubrecord)';
help::pkg.utility.table.objs.table.m.putkeywords := [=];
help::pkg.utility.table.objs.table.m.putkeywords.d := 'put multiple table keywords';
help::pkg.utility.table.objs.table.m.putkeywords.a.value := [=];
help::pkg.utility.table.objs.table.m.putkeywords.a.value.d := 'Record of keyword=value pairs';
help::pkg.utility.table.objs.table.m.putkeywords.a.value.def := '';
help::pkg.utility.table.objs.table.m.putkeywords.a.value.a := '';
help::pkg.utility.table.objs.table.m.putkeywords.s := 'putkeywords(value)';
help::pkg.utility.table.objs.table.m.putcolkeyword := [=];
help::pkg.utility.table.objs.table.m.putcolkeyword.d := 'put a specific keyword for a column';
help::pkg.utility.table.objs.table.m.putcolkeyword.a.columnname := [=];
help::pkg.utility.table.objs.table.m.putcolkeyword.a.columnname.d := 'Name of column';
help::pkg.utility.table.objs.table.m.putcolkeyword.a.columnname.def := '';
help::pkg.utility.table.objs.table.m.putcolkeyword.a.columnname.a := 'String';
help::pkg.utility.table.objs.table.m.putcolkeyword.a.keyword := [=];
help::pkg.utility.table.objs.table.m.putcolkeyword.a.keyword.d := 'Name or seqnr of keyword';
help::pkg.utility.table.objs.table.m.putcolkeyword.a.keyword.def := '';
help::pkg.utility.table.objs.table.m.putcolkeyword.a.keyword.a := 'String|Int';
help::pkg.utility.table.objs.table.m.putcolkeyword.a.value := [=];
help::pkg.utility.table.objs.table.m.putcolkeyword.a.value.d := 'Value of keyword';
help::pkg.utility.table.objs.table.m.putcolkeyword.a.value.def := '';
help::pkg.utility.table.objs.table.m.putcolkeyword.a.value.a := '';
help::pkg.utility.table.objs.table.m.putcolkeyword.s := 'putcolkeyword(columnname, keyword, value)';
help::pkg.utility.table.objs.table.m.putcolkeywords := [=];
help::pkg.utility.table.objs.table.m.putcolkeywords.d := 'put multiple keywords for a column';
help::pkg.utility.table.objs.table.m.putcolkeywords.a.columnname := [=];
help::pkg.utility.table.objs.table.m.putcolkeywords.a.columnname.d := 'Name of column';
help::pkg.utility.table.objs.table.m.putcolkeywords.a.columnname.def := '';
help::pkg.utility.table.objs.table.m.putcolkeywords.a.columnname.a := 'String';
help::pkg.utility.table.objs.table.m.putcolkeywords.a.value := [=];
help::pkg.utility.table.objs.table.m.putcolkeywords.a.value.d := 'Record of keyword=value pairs';
help::pkg.utility.table.objs.table.m.putcolkeywords.a.value.def := '';
help::pkg.utility.table.objs.table.m.putcolkeywords.a.value.a := '';
help::pkg.utility.table.objs.table.m.putcolkeywords.s := 'putcolkeywords(columnname, value)';
help::pkg.utility.table.objs.table.m.removekeyword := [=];
help::pkg.utility.table.objs.table.m.removekeyword.d := 'remove a specific table keyword';
help::pkg.utility.table.objs.table.m.removekeyword.a.keyword := [=];
help::pkg.utility.table.objs.table.m.removekeyword.a.keyword.d := 'Name or seqnr of keyword';
help::pkg.utility.table.objs.table.m.removekeyword.a.keyword.def := '';
help::pkg.utility.table.objs.table.m.removekeyword.a.keyword.a := 'String|Int';
help::pkg.utility.table.objs.table.m.removekeyword.s := 'removekeyword(keyword)';
help::pkg.utility.table.objs.table.m.removecolkeyword := [=];
help::pkg.utility.table.objs.table.m.removecolkeyword.d := 'remove a specific keyword for a column';
help::pkg.utility.table.objs.table.m.removecolkeyword.a.columnname := [=];
help::pkg.utility.table.objs.table.m.removecolkeyword.a.columnname.d := 'Name of column';
help::pkg.utility.table.objs.table.m.removecolkeyword.a.columnname.def := '';
help::pkg.utility.table.objs.table.m.removecolkeyword.a.columnname.a := 'String';
help::pkg.utility.table.objs.table.m.removecolkeyword.a.keyword := [=];
help::pkg.utility.table.objs.table.m.removecolkeyword.a.keyword.d := 'Name or seqnr of keyword';
help::pkg.utility.table.objs.table.m.removecolkeyword.a.keyword.def := '';
help::pkg.utility.table.objs.table.m.removecolkeyword.a.keyword.a := 'String|Int';
help::pkg.utility.table.objs.table.m.removecolkeyword.s := 'removecolkeyword(columnname, keyword)';
help::pkg.utility.table.objs.table.m.getdminfo := [=];
help::pkg.utility.table.objs.table.m.getdminfo.d := 'get the info about data managers';
help::pkg.utility.table.objs.table.m.getdminfo.s := 'getdminfo()';
help::pkg.utility.table.objs.table.m.keywordnames := [=];
help::pkg.utility.table.objs.table.m.keywordnames.d := 'get the names of all table keywords';
help::pkg.utility.table.objs.table.m.keywordnames.s := 'keywordnames()';
help::pkg.utility.table.objs.table.m.fieldnames := [=];
help::pkg.utility.table.objs.table.m.fieldnames.d := 'get the names of fields in a table keyword';
help::pkg.utility.table.objs.table.m.fieldnames.a.keyword := [=];
help::pkg.utility.table.objs.table.m.fieldnames.a.keyword.d := 'keyword name';
help::pkg.utility.table.objs.table.m.fieldnames.a.keyword.def := '\' \' ';
help::pkg.utility.table.objs.table.m.fieldnames.a.keyword.a := 'String';
help::pkg.utility.table.objs.table.m.fieldnames.s := 'fieldnames(keyword)';
help::pkg.utility.table.objs.table.m.colkeywordnames := [=];
help::pkg.utility.table.objs.table.m.colkeywordnames.d := 'get the names of all keywords in a column';
help::pkg.utility.table.objs.table.m.colkeywordnames.a.columnname := [=];
help::pkg.utility.table.objs.table.m.colkeywordnames.a.columnname.d := 'column name';
help::pkg.utility.table.objs.table.m.colkeywordnames.a.columnname.def := '';
help::pkg.utility.table.objs.table.m.colkeywordnames.a.columnname.a := 'String';
help::pkg.utility.table.objs.table.m.colkeywordnames.s := 'colkeywordnames(columnname)';
help::pkg.utility.table.objs.table.m.colfieldnames := [=];
help::pkg.utility.table.objs.table.m.colfieldnames.d := 'get the names of fields in a keyword in a column';
help::pkg.utility.table.objs.table.m.colfieldnames.a.columnname := [=];
help::pkg.utility.table.objs.table.m.colfieldnames.a.columnname.d := 'column name';
help::pkg.utility.table.objs.table.m.colfieldnames.a.columnname.def := '';
help::pkg.utility.table.objs.table.m.colfieldnames.a.columnname.a := 'String';
help::pkg.utility.table.objs.table.m.colfieldnames.a.keyword := [=];
help::pkg.utility.table.objs.table.m.colfieldnames.a.keyword.d := 'keyword name';
help::pkg.utility.table.objs.table.m.colfieldnames.a.keyword.def := '\' \' ';
help::pkg.utility.table.objs.table.m.colfieldnames.a.keyword.a := 'String';
help::pkg.utility.table.objs.table.m.colfieldnames.s := 'colfieldnames(columnname, keyword)';
help::pkg.utility.table.objs.table.m.getdesc := [=];
help::pkg.utility.table.objs.table.m.getdesc.d := 'get the table description';
help::pkg.utility.table.objs.table.m.getdesc.a.actual := [=];
help::pkg.utility.table.objs.table.m.getdesc.a.actual.d := 'actual table description?';
help::pkg.utility.table.objs.table.m.getdesc.a.actual.def := 'T';
help::pkg.utility.table.objs.table.m.getdesc.a.actual.a := 'Bool';
help::pkg.utility.table.objs.table.m.getdesc.s := 'getdesc(actual)';
help::pkg.utility.table.objs.table.m.getcoldesc := [=];
help::pkg.utility.table.objs.table.m.getcoldesc.d := 'get the description of a specific column';
help::pkg.utility.table.objs.table.m.getcoldesc.a.columnname := [=];
help::pkg.utility.table.objs.table.m.getcoldesc.a.columnname.d := 'Name of column';
help::pkg.utility.table.objs.table.m.getcoldesc.a.columnname.def := '';
help::pkg.utility.table.objs.table.m.getcoldesc.a.columnname.a := 'String';
help::pkg.utility.table.objs.table.m.getcoldesc.s := 'getcoldesc(columnname)';
help::pkg.utility.table.objs.table.m.ok := [=];
help::pkg.utility.table.objs.table.m.ok.d := 'Is the table tool ok?';
help::pkg.utility.table.objs.table.m.ok.s := 'ok()';
help::pkg.utility.table.objs.tablerow := [=];
help::pkg.utility.table.objs.tablerow.m := [=];
help::pkg.utility.table.objs.tablerow.c := [=];
help::pkg.utility.table.objs.tablerow.d := 'Allows access to rows of a table tool';
help::pkg.utility.table.objs.tablerow.c.tablerow := [=];
help::pkg.utility.table.objs.tablerow.c.tablerow.d := 'Construct table row tool';
help::pkg.utility.table.objs.tablerow.c.tablerow.a.tab := [=];
help::pkg.utility.table.objs.tablerow.c.tablerow.a.tab.d := 'table to be accessed';
help::pkg.utility.table.objs.tablerow.c.tablerow.a.tab.def := '';
help::pkg.utility.table.objs.tablerow.c.tablerow.a.tab.a := 'table tool';
help::pkg.utility.table.objs.tablerow.c.tablerow.a.columns := [=];
help::pkg.utility.table.objs.tablerow.c.tablerow.a.columns.d := 'Array of column names';
help::pkg.utility.table.objs.tablerow.c.tablerow.a.columns.def := 'All';
help::pkg.utility.table.objs.tablerow.c.tablerow.a.columns.a := 'Vector of Strings';
help::pkg.utility.table.objs.tablerow.c.tablerow.a.exclude := [=];
help::pkg.utility.table.objs.tablerow.c.tablerow.a.exclude.d := 'Exclude instead of include the named columns?';
help::pkg.utility.table.objs.tablerow.c.tablerow.a.exclude.def := 'F';
help::pkg.utility.table.objs.tablerow.c.tablerow.a.exclude.a := 'Bool';
help::pkg.utility.table.objs.tablerow.c.tablerow.s := 'tablerow(tab, columns, exclude)';
help::pkg.utility.table.objs.tablerow.m.set := [=];
help::pkg.utility.table.objs.tablerow.m.set.d := 'Set table and columns to be accessed';
help::pkg.utility.table.objs.tablerow.m.set.a.tab := [=];
help::pkg.utility.table.objs.tablerow.m.set.a.tab.d := 'table to be accessed';
help::pkg.utility.table.objs.tablerow.m.set.a.tab.def := '';
help::pkg.utility.table.objs.tablerow.m.set.a.tab.a := 'table tool';
help::pkg.utility.table.objs.tablerow.m.set.a.columns := [=];
help::pkg.utility.table.objs.tablerow.m.set.a.columns.d := 'Array of column names';
help::pkg.utility.table.objs.tablerow.m.set.a.columns.def := 'All';
help::pkg.utility.table.objs.tablerow.m.set.a.columns.a := 'Vector of Strings';
help::pkg.utility.table.objs.tablerow.m.set.a.exclude := [=];
help::pkg.utility.table.objs.tablerow.m.set.a.exclude.d := 'Exclude instead of include the named columns?';
help::pkg.utility.table.objs.tablerow.m.set.a.exclude.def := 'F';
help::pkg.utility.table.objs.tablerow.m.set.a.exclude.a := 'Bool';
help::pkg.utility.table.objs.tablerow.m.set.s := 'set(tab, columns, exclude)';
help::pkg.utility.table.objs.tablerow.m.get := [=];
help::pkg.utility.table.objs.tablerow.m.get.d := 'Get a table row';
help::pkg.utility.table.objs.tablerow.m.get.a.rownr := [=];
help::pkg.utility.table.objs.tablerow.m.get.a.rownr.d := 'Row number';
help::pkg.utility.table.objs.tablerow.m.get.a.rownr.def := '';
help::pkg.utility.table.objs.tablerow.m.get.a.rownr.a := 'Int';
help::pkg.utility.table.objs.tablerow.m.get.s := 'get(rownr)';
help::pkg.utility.table.objs.tablerow.m.put := [=];
help::pkg.utility.table.objs.tablerow.m.put.d := 'Put a table row';
help::pkg.utility.table.objs.tablerow.m.put.a.rownr := [=];
help::pkg.utility.table.objs.tablerow.m.put.a.rownr.d := 'Row number';
help::pkg.utility.table.objs.tablerow.m.put.a.rownr.def := '';
help::pkg.utility.table.objs.tablerow.m.put.a.rownr.a := 'Int';
help::pkg.utility.table.objs.tablerow.m.put.a.value := [=];
help::pkg.utility.table.objs.tablerow.m.put.a.value.d := 'Values to put';
help::pkg.utility.table.objs.tablerow.m.put.a.value.def := '';
help::pkg.utility.table.objs.tablerow.m.put.a.value.a := 'Record';
help::pkg.utility.table.objs.tablerow.m.put.a.matchingfields := [=];
help::pkg.utility.table.objs.tablerow.m.put.a.matchingfields.d := 'F=value record must match tablerow layout';
help::pkg.utility.table.objs.tablerow.m.put.a.matchingfields.def := 'T';
help::pkg.utility.table.objs.tablerow.m.put.a.matchingfields.a := 'Bool';
help::pkg.utility.table.objs.tablerow.m.put.s := 'put(rownr, value, matchingfields)';
help::pkg.utility.table.objs.tablerow.m.close := [=];
help::pkg.utility.table.objs.tablerow.m.close.d := 'Close the tablerow';
help::pkg.utility.table.objs.tablerow.m.close.s := 'close()';
help::pkg.utility.table.objs.tablerow.m.done := [=];
help::pkg.utility.table.objs.tablerow.m.done.d := 'End the tablerow tool';
help::pkg.utility.table.objs.tablerow.m.done.s := 'done()';
help::pkg.utility.table.objs.tableiterator := [=];
help::pkg.utility.table.objs.tableiterator.m := [=];
help::pkg.utility.table.objs.tableiterator.c := [=];
help::pkg.utility.table.objs.tableiterator.d := 'Allows iteration through a table tool';
help::pkg.utility.table.objs.tableiterator.c.tableiterator := [=];
help::pkg.utility.table.objs.tableiterator.c.tableiterator.d := 'Construct a tableiterator';
help::pkg.utility.table.objs.tableiterator.c.tableiterator.a.tab := [=];
help::pkg.utility.table.objs.tableiterator.c.tableiterator.a.tab.d := 'table to be iterated';
help::pkg.utility.table.objs.tableiterator.c.tableiterator.a.tab.def := '';
help::pkg.utility.table.objs.tableiterator.c.tableiterator.a.tab.a := 'table tool';
help::pkg.utility.table.objs.tableiterator.c.tableiterator.a.columns := [=];
help::pkg.utility.table.objs.tableiterator.c.tableiterator.a.columns.d := 'Array of column names';
help::pkg.utility.table.objs.tableiterator.c.tableiterator.a.columns.def := '';
help::pkg.utility.table.objs.tableiterator.c.tableiterator.a.columns.a := 'Vector of Strings';
help::pkg.utility.table.objs.tableiterator.c.tableiterator.a.order := [=];
help::pkg.utility.table.objs.tableiterator.c.tableiterator.a.order.d := 'Order when sorting the table';
help::pkg.utility.table.objs.tableiterator.c.tableiterator.a.order.def := '\' \' ';
help::pkg.utility.table.objs.tableiterator.c.tableiterator.a.order.a := 'String';
help::pkg.utility.table.objs.tableiterator.c.tableiterator.a.sort := [=];
help::pkg.utility.table.objs.tableiterator.c.tableiterator.a.sort.d := 'Sort the table first?';
help::pkg.utility.table.objs.tableiterator.c.tableiterator.a.sort.def := 'T';
help::pkg.utility.table.objs.tableiterator.c.tableiterator.a.sort.a := 'Bool,String';
help::pkg.utility.table.objs.tableiterator.c.tableiterator.s := 'tableiterator(tab, columns, order, sort)';
help::pkg.utility.table.objs.tableiterator.m.table := [=];
help::pkg.utility.table.objs.tableiterator.m.table.d := 'Return the current table subset';
help::pkg.utility.table.objs.tableiterator.m.table.s := 'table()';
help::pkg.utility.table.objs.tableiterator.m.reset := [=];
help::pkg.utility.table.objs.tableiterator.m.reset.d := 'Reset iteration to the beginning';
help::pkg.utility.table.objs.tableiterator.m.reset.s := 'reset()';
help::pkg.utility.table.objs.tableiterator.m.next := [=];
help::pkg.utility.table.objs.tableiterator.m.next.d := 'Advance to the next table subset';
help::pkg.utility.table.objs.tableiterator.m.next.s := 'next()';
help::pkg.utility.table.objs.tableiterator.m.terminate := [=];
help::pkg.utility.table.objs.tableiterator.m.terminate.d := 'Terminate the iteration and clean up memory';
help::pkg.utility.table.objs.tableiterator.m.terminate.s := 'terminate()';
help::pkg.utility.table.objs.tableiterator.m.done := [=];
help::pkg.utility.table.objs.tableiterator.m.done.d := 'End the tableiterator tool';
help::pkg.utility.table.objs.tableiterator.m.done.s := 'done()';
help::pkg.utility.table.objs.tableindex := [=];
help::pkg.utility.table.objs.tableindex.m := [=];
help::pkg.utility.table.objs.tableindex.c := [=];
help::pkg.utility.table.objs.tableindex.d := 'Allows value based table access';
help::pkg.utility.table.objs.tableindex.c.tableindex := [=];
help::pkg.utility.table.objs.tableindex.c.tableindex.d := 'Construct a tableindex';
help::pkg.utility.table.objs.tableindex.c.tableindex.a.tab := [=];
help::pkg.utility.table.objs.tableindex.c.tableindex.a.tab.d := 'table to be indexed';
help::pkg.utility.table.objs.tableindex.c.tableindex.a.tab.def := '';
help::pkg.utility.table.objs.tableindex.c.tableindex.a.tab.a := 'table tool';
help::pkg.utility.table.objs.tableindex.c.tableindex.a.columns := [=];
help::pkg.utility.table.objs.tableindex.c.tableindex.a.columns.d := 'column names';
help::pkg.utility.table.objs.tableindex.c.tableindex.a.columns.def := '';
help::pkg.utility.table.objs.tableindex.c.tableindex.a.columns.a := 'Vector of Strings';
help::pkg.utility.table.objs.tableindex.c.tableindex.a.sort := [=];
help::pkg.utility.table.objs.tableindex.c.tableindex.a.sort.d := 'is a sort of the key values needed?';
help::pkg.utility.table.objs.tableindex.c.tableindex.a.sort.def := 'T';
help::pkg.utility.table.objs.tableindex.c.tableindex.a.sort.a := 'Bool';
help::pkg.utility.table.objs.tableindex.c.tableindex.s := 'tableindex(tab, columns, sort)';
help::pkg.utility.table.objs.tableindex.m.set := [=];
help::pkg.utility.table.objs.tableindex.m.set.d := 'Set table and columns to be indexed';
help::pkg.utility.table.objs.tableindex.m.set.a.tab := [=];
help::pkg.utility.table.objs.tableindex.m.set.a.tab.d := 'table to be indexed';
help::pkg.utility.table.objs.tableindex.m.set.a.tab.def := '';
help::pkg.utility.table.objs.tableindex.m.set.a.tab.a := 'table tool';
help::pkg.utility.table.objs.tableindex.m.set.a.columns := [=];
help::pkg.utility.table.objs.tableindex.m.set.a.columns.d := 'column names';
help::pkg.utility.table.objs.tableindex.m.set.a.columns.def := '';
help::pkg.utility.table.objs.tableindex.m.set.a.columns.a := 'Vector of Strings';
help::pkg.utility.table.objs.tableindex.m.set.a.sort := [=];
help::pkg.utility.table.objs.tableindex.m.set.a.sort.d := 'is a sort of the key values needed?';
help::pkg.utility.table.objs.tableindex.m.set.a.sort.def := 'T';
help::pkg.utility.table.objs.tableindex.m.set.a.sort.a := 'Bool';
help::pkg.utility.table.objs.tableindex.m.set.s := 'set(tab, columns, sort)';
help::pkg.utility.table.objs.tableindex.m.isunique := [=];
help::pkg.utility.table.objs.tableindex.m.isunique.d := 'Are all key values in the index unique?';
help::pkg.utility.table.objs.tableindex.m.isunique.s := 'isunique()';
help::pkg.utility.table.objs.tableindex.m.setchanged := [=];
help::pkg.utility.table.objs.tableindex.m.setchanged.d := 'Tell the index that columns have changed';
help::pkg.utility.table.objs.tableindex.m.setchanged.a.columns := [=];
help::pkg.utility.table.objs.tableindex.m.setchanged.a.columns.d := 'names of changed columns';
help::pkg.utility.table.objs.tableindex.m.setchanged.a.columns.def := 'All';
help::pkg.utility.table.objs.tableindex.m.setchanged.a.columns.a := 'Vector of Strings';
help::pkg.utility.table.objs.tableindex.m.setchanged.s := 'setchanged(columns)';
help::pkg.utility.table.objs.tableindex.m.rownr := [=];
help::pkg.utility.table.objs.tableindex.m.rownr.d := 'Find the row number matching the search value';
help::pkg.utility.table.objs.tableindex.m.rownr.a.key := [=];
help::pkg.utility.table.objs.tableindex.m.rownr.a.key.d := 'search value';
help::pkg.utility.table.objs.tableindex.m.rownr.a.key.def := '';
help::pkg.utility.table.objs.tableindex.m.rownr.a.key.a := 'Record';
help::pkg.utility.table.objs.tableindex.m.rownr.s := 'rownr(key)';
help::pkg.utility.table.objs.tableindex.m.rownrs := [=];
help::pkg.utility.table.objs.tableindex.m.rownrs.d := 'Find the row numbers matching search values';
help::pkg.utility.table.objs.tableindex.m.rownrs.a.key := [=];
help::pkg.utility.table.objs.tableindex.m.rownrs.a.key.d := 'search value';
help::pkg.utility.table.objs.tableindex.m.rownrs.a.key.def := '';
help::pkg.utility.table.objs.tableindex.m.rownrs.a.key.a := 'Record';
help::pkg.utility.table.objs.tableindex.m.rownrs.a.upperkey := [=];
help::pkg.utility.table.objs.tableindex.m.rownrs.a.upperkey.d := 'end of search interval';
help::pkg.utility.table.objs.tableindex.m.rownrs.a.upperkey.def := 'unset';
help::pkg.utility.table.objs.tableindex.m.rownrs.a.upperkey.a := 'Record';
help::pkg.utility.table.objs.tableindex.m.rownrs.a.lowerincl := [=];
help::pkg.utility.table.objs.tableindex.m.rownrs.a.lowerincl.d := 'include lower boundary';
help::pkg.utility.table.objs.tableindex.m.rownrs.a.lowerincl.def := 'T';
help::pkg.utility.table.objs.tableindex.m.rownrs.a.lowerincl.a := 'Bool';
help::pkg.utility.table.objs.tableindex.m.rownrs.a.upperincl := [=];
help::pkg.utility.table.objs.tableindex.m.rownrs.a.upperincl.d := 'include upper boundary?';
help::pkg.utility.table.objs.tableindex.m.rownrs.a.upperincl.def := 'T';
help::pkg.utility.table.objs.tableindex.m.rownrs.a.upperincl.a := 'Bool';
help::pkg.utility.table.objs.tableindex.m.rownrs.s := 'rownrs(key, upperkey, lowerincl, upperincl)';
help::pkg.utility.table.objs.tableindex.m.close := [=];
help::pkg.utility.table.objs.tableindex.m.close.d := 'Close the tableindex';
help::pkg.utility.table.objs.tableindex.m.close.s := 'close()';
help::pkg.utility.table.objs.tableindex.m.done := [=];
help::pkg.utility.table.objs.tableindex.m.done.d := 'End the tableindex tool';
help::pkg.utility.table.objs.tableindex.m.done.s := 'done()';
help::pkg.utility.table.funs.is_table := [=];
help::pkg.utility.table.funs.is_table.a := [=];
help::pkg.utility.table.funs.is_table.d := 'Is this a valid table tool?';
help::pkg.utility.table.funs.is_table.a.tab := [=];
help::pkg.utility.table.funs.is_table.a.tab.d := 'Putative table tool';
help::pkg.utility.table.funs.is_table.a.tab.def := '';
help::pkg.utility.table.funs.is_table.a.tab.a := 'Any value';
help::pkg.utility.table.funs.is_table.s := 'is_table(tab)';
help::pkg.utility.table.funs.tableopentables := [=];
help::pkg.utility.table.funs.tableopentables.a := [=];
help::pkg.utility.table.funs.tableopentables.d := 'return names of open tables';
help::pkg.utility.table.funs.tableopentables.a.tableserver := [=];
help::pkg.utility.table.funs.tableopentables.a.tableserver.d := 'Table server to be used';
help::pkg.utility.table.funs.tableopentables.a.tableserver.def := 'defaulttableserver';
help::pkg.utility.table.funs.tableopentables.a.tableserver.a := 'Any tableserver';
help::pkg.utility.table.funs.tableopentables.s := 'tableopentables(tableserver)';
help::pkg.utility.table.funs.tableexists := [=];
help::pkg.utility.table.funs.tableexists.a := [=];
help::pkg.utility.table.funs.tableexists.d := 'does this table exist on disk?';
help::pkg.utility.table.funs.tableexists.a.tablename := [=];
help::pkg.utility.table.funs.tableexists.a.tablename.d := 'Name of table on disk';
help::pkg.utility.table.funs.tableexists.a.tablename.def := '';
help::pkg.utility.table.funs.tableexists.a.tablename.a := 'String';
help::pkg.utility.table.funs.tableexists.a.tableserver := [=];
help::pkg.utility.table.funs.tableexists.a.tableserver.d := 'Table server to be used';
help::pkg.utility.table.funs.tableexists.a.tableserver.def := 'defaulttableserver';
help::pkg.utility.table.funs.tableexists.a.tableserver.a := 'Any tableserver';
help::pkg.utility.table.funs.tableexists.s := 'tableexists(tablename, tableserver)';
help::pkg.utility.table.funs.tableiswritable := [=];
help::pkg.utility.table.funs.tableiswritable.a := [=];
help::pkg.utility.table.funs.tableiswritable.d := 'is this table writable?';
help::pkg.utility.table.funs.tableiswritable.a.tablename := [=];
help::pkg.utility.table.funs.tableiswritable.a.tablename.d := 'Name of table on disk';
help::pkg.utility.table.funs.tableiswritable.a.tablename.def := '';
help::pkg.utility.table.funs.tableiswritable.a.tablename.a := 'String';
help::pkg.utility.table.funs.tableiswritable.a.tableserver := [=];
help::pkg.utility.table.funs.tableiswritable.a.tableserver.d := 'Table server to be used';
help::pkg.utility.table.funs.tableiswritable.a.tableserver.def := 'defaulttableserver';
help::pkg.utility.table.funs.tableiswritable.a.tableserver.a := 'Any tableserver';
help::pkg.utility.table.funs.tableiswritable.s := 'tableiswritable(tablename, tableserver)';
help::pkg.utility.table.funs.tableinfo := [=];
help::pkg.utility.table.funs.tableinfo.a := [=];
help::pkg.utility.table.funs.tableinfo.d := 'return the info record';
help::pkg.utility.table.funs.tableinfo.a.tablename := [=];
help::pkg.utility.table.funs.tableinfo.a.tablename.d := 'Name of table on disk';
help::pkg.utility.table.funs.tableinfo.a.tablename.def := '';
help::pkg.utility.table.funs.tableinfo.a.tablename.a := 'String';
help::pkg.utility.table.funs.tableinfo.a.tableserver := [=];
help::pkg.utility.table.funs.tableinfo.a.tableserver.d := 'Table server to be used';
help::pkg.utility.table.funs.tableinfo.a.tableserver.def := 'defaulttableserver';
help::pkg.utility.table.funs.tableinfo.a.tableserver.a := 'Any tableserver';
help::pkg.utility.table.funs.tableinfo.s := 'tableinfo(tablename, tableserver)';
help::pkg.utility.table.funs.tabledemo := [=];
help::pkg.utility.table.funs.tabledemo.a := [=];
help::pkg.utility.table.funs.tabledemo.d := 'Perform a demonstration: Not yet implemented';
help::pkg.utility.table.funs.tabledemo.s := 'tabledemo()';
help::pkg.utility.table.funs.tabletest := [=];
help::pkg.utility.table.funs.tabletest.a := [=];
help::pkg.utility.table.funs.tabletest.d := 'Perform a test';
help::pkg.utility.table.funs.tabletest.s := 'tabletest()';
help::pkg.utility.table.funs.tablecommand := [=];
help::pkg.utility.table.funs.tablecommand.a := [=];
help::pkg.utility.table.funs.tablecommand.d := 'Execute a table command';
help::pkg.utility.table.funs.tablecommand.a.comm := [=];
help::pkg.utility.table.funs.tablecommand.a.comm.d := 'Command string';
help::pkg.utility.table.funs.tablecommand.a.comm.def := '';
help::pkg.utility.table.funs.tablecommand.a.comm.a := 'String containing any valid table command';
help::pkg.utility.table.funs.tablecommand.a.handle := [=];
help::pkg.utility.table.funs.tablecommand.a.handle.d := 'Table handle';
help::pkg.utility.table.funs.tablecommand.a.handle.def := 'F';
help::pkg.utility.table.funs.tablecommand.a.handle.a := 'Is meant for internal use only';
help::pkg.utility.table.funs.tablecommand.a.tableserver := [=];
help::pkg.utility.table.funs.tablecommand.a.tableserver.d := 'Table server to be used';
help::pkg.utility.table.funs.tablecommand.a.tableserver.def := 'defaulttableserver';
help::pkg.utility.table.funs.tablecommand.a.tableserver.a := 'Any tableserver';
help::pkg.utility.table.funs.tablecommand.s := 'tablecommand(comm, handle, tableserver)';
help::pkg.utility.table.funs.tablecopy := [=];
help::pkg.utility.table.funs.tablecopy.a := [=];
help::pkg.utility.table.funs.tablecopy.d := 'copy a table';
help::pkg.utility.table.funs.tablecopy.a.tablename := [=];
help::pkg.utility.table.funs.tablecopy.a.tablename.d := 'Name of existing table on disk';
help::pkg.utility.table.funs.tablecopy.a.tablename.def := '';
help::pkg.utility.table.funs.tablecopy.a.tablename.a := 'String';
help::pkg.utility.table.funs.tablecopy.a.newtablename := [=];
help::pkg.utility.table.funs.tablecopy.a.newtablename.d := 'Name of newtable on disk';
help::pkg.utility.table.funs.tablecopy.a.newtablename.def := '';
help::pkg.utility.table.funs.tablecopy.a.newtablename.a := 'String';
help::pkg.utility.table.funs.tablecopy.a.deep := [=];
help::pkg.utility.table.funs.tablecopy.a.deep.d := 'Make a deep copy of a reference table?';
help::pkg.utility.table.funs.tablecopy.a.deep.def := 'F';
help::pkg.utility.table.funs.tablecopy.a.deep.a := 'Bool';
help::pkg.utility.table.funs.tablecopy.a.tableserver := [=];
help::pkg.utility.table.funs.tablecopy.a.tableserver.d := 'Table server to be used';
help::pkg.utility.table.funs.tablecopy.a.tableserver.def := 'defaulttableserver';
help::pkg.utility.table.funs.tablecopy.a.tableserver.a := 'Any tableserver';
help::pkg.utility.table.funs.tablecopy.s := 'tablecopy(tablename, newtablename, deep, tableserver)';
help::pkg.utility.table.funs.tablerename := [=];
help::pkg.utility.table.funs.tablerename.a := [=];
help::pkg.utility.table.funs.tablerename.d := 'rename a table';
help::pkg.utility.table.funs.tablerename.a.tablename := [=];
help::pkg.utility.table.funs.tablerename.a.tablename.d := 'Name of existing table on disk';
help::pkg.utility.table.funs.tablerename.a.tablename.def := '';
help::pkg.utility.table.funs.tablerename.a.tablename.a := 'String';
help::pkg.utility.table.funs.tablerename.a.newtablename := [=];
help::pkg.utility.table.funs.tablerename.a.newtablename.d := 'Name of newtable on disk';
help::pkg.utility.table.funs.tablerename.a.newtablename.def := '';
help::pkg.utility.table.funs.tablerename.a.newtablename.a := 'String';
help::pkg.utility.table.funs.tablerename.a.tableserver := [=];
help::pkg.utility.table.funs.tablerename.a.tableserver.d := 'Table server to be used';
help::pkg.utility.table.funs.tablerename.a.tableserver.def := 'defaulttableserver';
help::pkg.utility.table.funs.tablerename.a.tableserver.a := 'Any tableserver';
help::pkg.utility.table.funs.tablerename.s := 'tablerename(tablename, newtablename, tableserver)';
help::pkg.utility.table.funs.tabledelete := [=];
help::pkg.utility.table.funs.tabledelete.a := [=];
help::pkg.utility.table.funs.tabledelete.d := 'delete a table';
help::pkg.utility.table.funs.tabledelete.a.tablename := [=];
help::pkg.utility.table.funs.tabledelete.a.tablename.d := 'Name of table on disk';
help::pkg.utility.table.funs.tabledelete.a.tablename.def := '';
help::pkg.utility.table.funs.tabledelete.a.tablename.a := 'String';
help::pkg.utility.table.funs.tabledelete.a.checksubtables := [=];
help::pkg.utility.table.funs.tabledelete.a.checksubtables.d := 'Check if subtables are multiused?)';
help::pkg.utility.table.funs.tabledelete.a.checksubtables.def := 'T';
help::pkg.utility.table.funs.tabledelete.a.checksubtables.a := 'Bool';
help::pkg.utility.table.funs.tabledelete.a.ack := [=];
help::pkg.utility.table.funs.tabledelete.a.ack.d := 'Acknowledge deletion of table)';
help::pkg.utility.table.funs.tabledelete.a.ack.def := 'T';
help::pkg.utility.table.funs.tabledelete.a.ack.a := 'Bool';
help::pkg.utility.table.funs.tabledelete.a.tableserver := [=];
help::pkg.utility.table.funs.tabledelete.a.tableserver.d := 'Table server to be used';
help::pkg.utility.table.funs.tabledelete.a.tableserver.def := 'defaulttableserver';
help::pkg.utility.table.funs.tabledelete.a.tableserver.a := 'Any tableserver';
help::pkg.utility.table.funs.tabledelete.s := 'tabledelete(tablename, checksubtables, ack, tableserver)';
help::pkg.utility.table.funs.tablecloseall := [=];
help::pkg.utility.table.funs.tablecloseall.a := [=];
help::pkg.utility.table.funs.tablecloseall.d := 'close all open table tool objects';
help::pkg.utility.table.funs.tablecloseall.s := 'tablecloseall()';
help::pkg.utility.table.funs.tablecreatedesc := [=];
help::pkg.utility.table.funs.tablecreatedesc.a := [=];
help::pkg.utility.table.funs.tablecreatedesc.d := 'create a table descriptor';
help::pkg.utility.table.funs.tablecreatedesc.a.columndesc := [=];
help::pkg.utility.table.funs.tablecreatedesc.a.columndesc.d := 'Column descriptor';
help::pkg.utility.table.funs.tablecreatedesc.a.columndesc.def := '';
help::pkg.utility.table.funs.tablecreatedesc.a.columndesc.a := 'Any valid column descriptor';
help::pkg.utility.table.funs.tablecreatedesc.s := 'tablecreatedesc(columndesc)';
help::pkg.utility.table.funs.tablecreatescalarcoldesc := [=];
help::pkg.utility.table.funs.tablecreatescalarcoldesc.a := [=];
help::pkg.utility.table.funs.tablecreatescalarcoldesc.d := 'create descriptor of a scalar column';
help::pkg.utility.table.funs.tablecreatescalarcoldesc.a.columname := [=];
help::pkg.utility.table.funs.tablecreatescalarcoldesc.a.columname.d := 'Name of column';
help::pkg.utility.table.funs.tablecreatescalarcoldesc.a.columname.def := '';
help::pkg.utility.table.funs.tablecreatescalarcoldesc.a.columname.a := 'String';
help::pkg.utility.table.funs.tablecreatescalarcoldesc.a.value := [=];
help::pkg.utility.table.funs.tablecreatescalarcoldesc.a.value.d := 'Example data value';
help::pkg.utility.table.funs.tablecreatescalarcoldesc.a.value.def := '';
help::pkg.utility.table.funs.tablecreatescalarcoldesc.a.value.a := 'Any type';
help::pkg.utility.table.funs.tablecreatescalarcoldesc.a.datamanagertype := [=];
help::pkg.utility.table.funs.tablecreatescalarcoldesc.a.datamanagertype.d := 'Type of data manager';
help::pkg.utility.table.funs.tablecreatescalarcoldesc.a.datamanagertype.def := '\' \' ';
help::pkg.utility.table.funs.tablecreatescalarcoldesc.a.datamanagertype.a := 'String: StandardStMan|IncrementalStMan|TiledColumnStMan|TiledCellStMan|StManAipsIO';
help::pkg.utility.table.funs.tablecreatescalarcoldesc.a.datamanagergroup := [=];
help::pkg.utility.table.funs.tablecreatescalarcoldesc.a.datamanagergroup.d := 'Group of data manager';
help::pkg.utility.table.funs.tablecreatescalarcoldesc.a.datamanagergroup.def := '\' \' ';
help::pkg.utility.table.funs.tablecreatescalarcoldesc.a.datamanagergroup.a := 'String';
help::pkg.utility.table.funs.tablecreatescalarcoldesc.a.options := [=];
help::pkg.utility.table.funs.tablecreatescalarcoldesc.a.options.d := 'Options';
help::pkg.utility.table.funs.tablecreatescalarcoldesc.a.options.def := '0';
help::pkg.utility.table.funs.tablecreatescalarcoldesc.a.options.a := 'Int';
help::pkg.utility.table.funs.tablecreatescalarcoldesc.a.maxlen := [=];
help::pkg.utility.table.funs.tablecreatescalarcoldesc.a.maxlen.d := 'Maximum string length';
help::pkg.utility.table.funs.tablecreatescalarcoldesc.a.maxlen.def := '0';
help::pkg.utility.table.funs.tablecreatescalarcoldesc.a.maxlen.a := 'Int';
help::pkg.utility.table.funs.tablecreatescalarcoldesc.a.comment := [=];
help::pkg.utility.table.funs.tablecreatescalarcoldesc.a.comment.d := 'Comment: informational for user';
help::pkg.utility.table.funs.tablecreatescalarcoldesc.a.comment.def := '\' \' ';
help::pkg.utility.table.funs.tablecreatescalarcoldesc.a.comment.a := 'String';
help::pkg.utility.table.funs.tablecreatescalarcoldesc.a.tableserver := [=];
help::pkg.utility.table.funs.tablecreatescalarcoldesc.a.tableserver.d := 'Table server to be used';
help::pkg.utility.table.funs.tablecreatescalarcoldesc.a.tableserver.def := 'defaulttableserver';
help::pkg.utility.table.funs.tablecreatescalarcoldesc.a.tableserver.a := 'Any tableserver';
help::pkg.utility.table.funs.tablecreatescalarcoldesc.s := 'tablecreatescalarcoldesc(columname, value, datamanagertype, datamanagergroup, options, maxlen, comment, tableserver)';
help::pkg.utility.table.funs.tablecreatearraycoldesc := [=];
help::pkg.utility.table.funs.tablecreatearraycoldesc.a := [=];
help::pkg.utility.table.funs.tablecreatearraycoldesc.d := 'create descriptor of  an array column';
help::pkg.utility.table.funs.tablecreatearraycoldesc.a.columname := [=];
help::pkg.utility.table.funs.tablecreatearraycoldesc.a.columname.d := 'Name of column';
help::pkg.utility.table.funs.tablecreatearraycoldesc.a.columname.def := '';
help::pkg.utility.table.funs.tablecreatearraycoldesc.a.columname.a := 'String';
help::pkg.utility.table.funs.tablecreatearraycoldesc.a.value := [=];
help::pkg.utility.table.funs.tablecreatearraycoldesc.a.value.d := 'Example data value';
help::pkg.utility.table.funs.tablecreatearraycoldesc.a.value.def := '';
help::pkg.utility.table.funs.tablecreatearraycoldesc.a.value.a := 'Any type';
help::pkg.utility.table.funs.tablecreatearraycoldesc.a.ndim := [=];
help::pkg.utility.table.funs.tablecreatearraycoldesc.a.ndim.d := 'Number of dimensions for a cell';
help::pkg.utility.table.funs.tablecreatearraycoldesc.a.ndim.def := 'Length of shape';
help::pkg.utility.table.funs.tablecreatearraycoldesc.a.ndim.a := 'Int';
help::pkg.utility.table.funs.tablecreatearraycoldesc.a.shape := [=];
help::pkg.utility.table.funs.tablecreatearraycoldesc.a.shape.d := 'Length of each axis for a cell';
help::pkg.utility.table.funs.tablecreatearraycoldesc.a.shape.def := '[]';
help::pkg.utility.table.funs.tablecreatearraycoldesc.a.shape.a := 'Vector of Int';
help::pkg.utility.table.funs.tablecreatearraycoldesc.a.datamanagertype := [=];
help::pkg.utility.table.funs.tablecreatearraycoldesc.a.datamanagertype.d := 'Type of data manager';
help::pkg.utility.table.funs.tablecreatearraycoldesc.a.datamanagertype.def := '\' \' ';
help::pkg.utility.table.funs.tablecreatearraycoldesc.a.datamanagertype.a := 'String: StandardStMan|IncrementalStMan|TiledColumnStMan|TiledCellStMan|TiledShapeStMan|StManAipsIO';
help::pkg.utility.table.funs.tablecreatearraycoldesc.a.datamanagergroup := [=];
help::pkg.utility.table.funs.tablecreatearraycoldesc.a.datamanagergroup.d := 'Group of data manager';
help::pkg.utility.table.funs.tablecreatearraycoldesc.a.datamanagergroup.def := '\' \' ';
help::pkg.utility.table.funs.tablecreatearraycoldesc.a.datamanagergroup.a := 'String';
help::pkg.utility.table.funs.tablecreatearraycoldesc.a.options := [=];
help::pkg.utility.table.funs.tablecreatearraycoldesc.a.options.d := 'Options';
help::pkg.utility.table.funs.tablecreatearraycoldesc.a.options.def := '0';
help::pkg.utility.table.funs.tablecreatearraycoldesc.a.options.a := 'Int';
help::pkg.utility.table.funs.tablecreatearraycoldesc.a.maxlen := [=];
help::pkg.utility.table.funs.tablecreatearraycoldesc.a.maxlen.d := 'Maximum string length';
help::pkg.utility.table.funs.tablecreatearraycoldesc.a.maxlen.def := '0';
help::pkg.utility.table.funs.tablecreatearraycoldesc.a.maxlen.a := 'Int';
help::pkg.utility.table.funs.tablecreatearraycoldesc.a.comment := [=];
help::pkg.utility.table.funs.tablecreatearraycoldesc.a.comment.d := 'Comment: informational for user';
help::pkg.utility.table.funs.tablecreatearraycoldesc.a.comment.def := '\' \' ';
help::pkg.utility.table.funs.tablecreatearraycoldesc.a.comment.a := 'String';
help::pkg.utility.table.funs.tablecreatearraycoldesc.a.tableserver := [=];
help::pkg.utility.table.funs.tablecreatearraycoldesc.a.tableserver.d := 'Table server to be used';
help::pkg.utility.table.funs.tablecreatearraycoldesc.a.tableserver.def := 'defaulttableserver';
help::pkg.utility.table.funs.tablecreatearraycoldesc.a.tableserver.a := 'Any tableserver';
help::pkg.utility.table.funs.tablecreatearraycoldesc.s := 'tablecreatearraycoldesc(columname, value, ndim, shape, datamanagertype, datamanagergroup, options, maxlen, comment, tableserver)';
help::pkg.utility.table.funs.tabledefinehypercolumn := [=];
help::pkg.utility.table.funs.tabledefinehypercolumn.a := [=];
help::pkg.utility.table.funs.tabledefinehypercolumn.d := 'define a hypercolumn in a table descriptor';
help::pkg.utility.table.funs.tabledefinehypercolumn.a.tabledesc := [=];
help::pkg.utility.table.funs.tabledefinehypercolumn.a.tabledesc.d := 'Table descriptor';
help::pkg.utility.table.funs.tabledefinehypercolumn.a.tabledesc.def := '';
help::pkg.utility.table.funs.tabledefinehypercolumn.a.tabledesc.a := 'Any valid table descriptor';
help::pkg.utility.table.funs.tabledefinehypercolumn.a.name := [=];
help::pkg.utility.table.funs.tabledefinehypercolumn.a.name.d := 'Name of hypercolumn';
help::pkg.utility.table.funs.tabledefinehypercolumn.a.name.def := '';
help::pkg.utility.table.funs.tabledefinehypercolumn.a.name.a := 'String';
help::pkg.utility.table.funs.tabledefinehypercolumn.a.ndim := [=];
help::pkg.utility.table.funs.tabledefinehypercolumn.a.ndim.d := 'Dimensionality of hypercolumn';
help::pkg.utility.table.funs.tabledefinehypercolumn.a.ndim.def := '';
help::pkg.utility.table.funs.tabledefinehypercolumn.a.ndim.a := 'Int';
help::pkg.utility.table.funs.tabledefinehypercolumn.a.datacolumns := [=];
help::pkg.utility.table.funs.tabledefinehypercolumn.a.datacolumns.d := 'Data columns to be stored with TSM';
help::pkg.utility.table.funs.tabledefinehypercolumn.a.datacolumns.def := '';
help::pkg.utility.table.funs.tabledefinehypercolumn.a.datacolumns.a := 'Vector of strings';
help::pkg.utility.table.funs.tabledefinehypercolumn.a.coordcolumns := [=];
help::pkg.utility.table.funs.tabledefinehypercolumn.a.coordcolumns.d := 'Coordinate columns to be stored with TSM';
help::pkg.utility.table.funs.tabledefinehypercolumn.a.coordcolumns.def := 'none';
help::pkg.utility.table.funs.tabledefinehypercolumn.a.coordcolumns.a := 'Vector of strings';
help::pkg.utility.table.funs.tabledefinehypercolumn.a.idcolumns := [=];
help::pkg.utility.table.funs.tabledefinehypercolumn.a.idcolumns.d := 'Id columns to be stored with TSM';
help::pkg.utility.table.funs.tabledefinehypercolumn.a.idcolumns.def := 'none';
help::pkg.utility.table.funs.tabledefinehypercolumn.a.idcolumns.a := 'Vector of strings';
help::pkg.utility.table.funs.tabledefinehypercolumn.s := 'tabledefinehypercolumn(tabledesc, name, ndim, datacolumns, coordcolumns, idcolumns)';
help::pkg.utility.table.funs.tablebrowser := [=];
help::pkg.utility.table.funs.tablebrowser.a := [=];
help::pkg.utility.table.funs.tablebrowser.d := '"Table browser"';
help::pkg.utility.table.funs.tablebrowser.a.table := [=];
help::pkg.utility.table.funs.tablebrowser.a.table.d := 'Table name or handle';
help::pkg.utility.table.funs.tablebrowser.a.table.def := '';
help::pkg.utility.table.funs.tablebrowser.a.table.a := 'Any valid table name or handle';
help::pkg.utility.table.funs.tablebrowser.a.readonly := [=];
help::pkg.utility.table.funs.tablebrowser.a.readonly.d := 'Flag to open the table readonly or not';
help::pkg.utility.table.funs.tablebrowser.a.readonly.def := 'T';
help::pkg.utility.table.funs.tablebrowser.a.readonly.a := 'Boolean T or F';
help::pkg.utility.table.funs.tablebrowser.a.rows2read := [=];
help::pkg.utility.table.funs.tablebrowser.a.rows2read.d := 'Then number of rows to cache in memory (set to -1 to read all rows)';
help::pkg.utility.table.funs.tablebrowser.a.rows2read.def := '1000';
help::pkg.utility.table.funs.tablebrowser.a.rows2read.a := 'integer';
help::pkg.utility.table.funs.tablebrowser.a.show := [=];
help::pkg.utility.table.funs.tablebrowser.a.show.d := 'Array of columns to display (case insensitive)';
help::pkg.utility.table.funs.tablebrowser.a.show.def := 'T';
help::pkg.utility.table.funs.tablebrowser.a.show.a := 'Array of Strings';
help::pkg.utility.table.funs.tablebrowser.a.hide := [=];
help::pkg.utility.table.funs.tablebrowser.a.hide.d := 'Array of columns to hide from display (case insensitive)';
help::pkg.utility.table.funs.tablebrowser.a.hide.def := 'T';
help::pkg.utility.table.funs.tablebrowser.a.hide.a := 'Array of Strings';
help::pkg.utility.table.funs.tablebrowser.s := 'tablebrowser(table, readonly, rows2read, show, hide)';
help::pkg.utility.table.objs.tablecomparer := [=];
help::pkg.utility.table.objs.tablecomparer.m := [=];
help::pkg.utility.table.objs.tablecomparer.c := [=];
help::pkg.utility.table.objs.tablecomparer.d := 'Compare various aspects of two tables to see if they are equivalent';
help::pkg.utility.table.objs.tablecomparer.c.tablecomparer := [=];
help::pkg.utility.table.objs.tablecomparer.c.tablecomparer.d := 'Construct a tablecomparer tool';
help::pkg.utility.table.objs.tablecomparer.c.tablecomparer.a.test := [=];
help::pkg.utility.table.objs.tablecomparer.c.tablecomparer.a.test.d := 'Name of the test table';
help::pkg.utility.table.objs.tablecomparer.c.tablecomparer.a.test.def := 'None';
help::pkg.utility.table.objs.tablecomparer.c.tablecomparer.a.test.a := 'Any valid table name';
help::pkg.utility.table.objs.tablecomparer.c.tablecomparer.a.model := [=];
help::pkg.utility.table.objs.tablecomparer.c.tablecomparer.a.model.d := 'Name of the model (fiducial) table to compare the test table against';
help::pkg.utility.table.objs.tablecomparer.c.tablecomparer.a.model.def := 'None';
help::pkg.utility.table.objs.tablecomparer.c.tablecomparer.a.model.a := 'Any valid table name';
help::pkg.utility.table.objs.tablecomparer.c.tablecomparer.a.label := [=];
help::pkg.utility.table.objs.tablecomparer.c.tablecomparer.a.label.d := 'Label for the (top level) table';
help::pkg.utility.table.objs.tablecomparer.c.tablecomparer.a.label.def := '\' TABLE\' ';
help::pkg.utility.table.objs.tablecomparer.c.tablecomparer.a.label.a := 'String';
help::pkg.utility.table.objs.tablecomparer.c.tablecomparer.a.verbose := [=];
help::pkg.utility.table.objs.tablecomparer.c.tablecomparer.a.verbose.d := 'Controls the volume of output, 0 no log messages, higher numbers mean more';
help::pkg.utility.table.objs.tablecomparer.c.tablecomparer.a.verbose.def := '1';
help::pkg.utility.table.objs.tablecomparer.c.tablecomparer.a.verbose.a := 'Int';
help::pkg.utility.table.objs.tablecomparer.c.tablecomparer.s := 'tablecomparer(test, model, label, verbose)';
help::pkg.utility.table.objs.tablecomparer.m.checkcolnames := [=];
help::pkg.utility.table.objs.tablecomparer.m.checkcolnames.d := 'Check column names';
help::pkg.utility.table.objs.tablecomparer.m.checkcolnames.a.checksubtables := [=];
help::pkg.utility.table.objs.tablecomparer.m.checkcolnames.a.checksubtables.d := 'Check column names of subtables as well?';
help::pkg.utility.table.objs.tablecomparer.m.checkcolnames.a.checksubtables.def := 'T';
help::pkg.utility.table.objs.tablecomparer.m.checkcolnames.a.checksubtables.a := 'Boolean';
help::pkg.utility.table.objs.tablecomparer.m.checkcolnames.s := 'checkcolnames(checksubtables)';
help::pkg.utility.table.objs.tablecomparer.m.checkcolkeywordnames := [=];
help::pkg.utility.table.objs.tablecomparer.m.checkcolkeywordnames.d := 'Compare column keyword names';
help::pkg.utility.table.objs.tablecomparer.m.checkcolkeywordnames.a.checksubtables := [=];
help::pkg.utility.table.objs.tablecomparer.m.checkcolkeywordnames.a.checksubtables.d := 'Check column names of subtables as well?';
help::pkg.utility.table.objs.tablecomparer.m.checkcolkeywordnames.a.checksubtables.def := 'T';
help::pkg.utility.table.objs.tablecomparer.m.checkcolkeywordnames.a.checksubtables.a := 'Boolean';
help::pkg.utility.table.objs.tablecomparer.m.checkcolkeywordnames.s := 'checkcolkeywordnames(checksubtables)';
help::pkg.utility.table.objs.tablecomparer.m.checkcoldata := [=];
help::pkg.utility.table.objs.tablecomparer.m.checkcoldata.d := 'Compare column data';
help::pkg.utility.table.objs.tablecomparer.m.checkcoldata.a.checksubtables := [=];
help::pkg.utility.table.objs.tablecomparer.m.checkcoldata.a.checksubtables.d := 'Check column names of subtables as well?';
help::pkg.utility.table.objs.tablecomparer.m.checkcoldata.a.checksubtables.def := 'T';
help::pkg.utility.table.objs.tablecomparer.m.checkcoldata.a.checksubtables.a := 'Boolean';
help::pkg.utility.table.objs.tablecomparer.m.checkcoldata.s := 'checkcoldata(checksubtables)';
help::pkg.utility.table.objs.tablecomparer.m.checkkeywordnames := [=];
help::pkg.utility.table.objs.tablecomparer.m.checkkeywordnames.d := 'Compare table keyword names';
help::pkg.utility.table.objs.tablecomparer.m.checkkeywordnames.a.checksubtables := [=];
help::pkg.utility.table.objs.tablecomparer.m.checkkeywordnames.a.checksubtables.d := 'Check column names of subtables as well?';
help::pkg.utility.table.objs.tablecomparer.m.checkkeywordnames.a.checksubtables.def := 'T';
help::pkg.utility.table.objs.tablecomparer.m.checkkeywordnames.a.checksubtables.a := 'Boolean';
help::pkg.utility.table.objs.tablecomparer.m.checkkeywordnames.s := 'checkkeywordnames(checksubtables)';
help::pkg.utility.table.objs.tablecomparer.m.settolerance := [=];
help::pkg.utility.table.objs.tablecomparer.m.settolerance.d := 'Set tolerances when comparing column data';
help::pkg.utility.table.objs.tablecomparer.m.settolerance.a.float := [=];
help::pkg.utility.table.objs.tablecomparer.m.settolerance.a.float.d := 'Default tolerance for all columns of type float';
help::pkg.utility.table.objs.tablecomparer.m.settolerance.a.float.def := '0';
help::pkg.utility.table.objs.tablecomparer.m.settolerance.a.float.a := 'Float';
help::pkg.utility.table.objs.tablecomparer.m.settolerance.a.double := [=];
help::pkg.utility.table.objs.tablecomparer.m.settolerance.a.double.d := 'Default tolerance for all columns of type double';
help::pkg.utility.table.objs.tablecomparer.m.settolerance.a.double.def := '0';
help::pkg.utility.table.objs.tablecomparer.m.settolerance.a.double.a := 'Double';
help::pkg.utility.table.objs.tablecomparer.m.settolerance.a.complex := [=];
help::pkg.utility.table.objs.tablecomparer.m.settolerance.a.complex.d := 'Default tolerance for all columns of type complex';
help::pkg.utility.table.objs.tablecomparer.m.settolerance.a.complex.def := '0';
help::pkg.utility.table.objs.tablecomparer.m.settolerance.a.complex.a := 'Float';
help::pkg.utility.table.objs.tablecomparer.m.settolerance.a.dcomplex := [=];
help::pkg.utility.table.objs.tablecomparer.m.settolerance.a.dcomplex.d := 'Default tolerance for all columns of type complex';
help::pkg.utility.table.objs.tablecomparer.m.settolerance.a.dcomplex.def := '0';
help::pkg.utility.table.objs.tablecomparer.m.settolerance.a.dcomplex.a := 'Double';
help::pkg.utility.table.objs.tablecomparer.m.settolerance.a.cols := [=];
help::pkg.utility.table.objs.tablecomparer.m.settolerance.a.cols.d := 'Column specific tolerances (see above for examples';
help::pkg.utility.table.objs.tablecomparer.m.settolerance.a.cols.def := '[=]';
help::pkg.utility.table.objs.tablecomparer.m.settolerance.a.cols.a := 'Record containing real values';
help::pkg.utility.table.objs.tablecomparer.m.settolerance.s := 'settolerance(float, double, complex, dcomplex, cols)';
help::pkg.utility.table.objs.tablecomparer.m.select := [=];
help::pkg.utility.table.objs.tablecomparer.m.select.d := 'Specify which columns to check (or not to check)';
help::pkg.utility.table.objs.tablecomparer.m.select.a.checkonlycols := [=];
help::pkg.utility.table.objs.tablecomparer.m.select.a.checkonlycols.d := 'Check only these columns';
help::pkg.utility.table.objs.tablecomparer.m.select.a.checkonlycols.def := '[]';
help::pkg.utility.table.objs.tablecomparer.m.select.a.checkonlycols.a := 'Array or record';
help::pkg.utility.table.objs.tablecomparer.m.select.a.nocheckcols := [=];
help::pkg.utility.table.objs.tablecomparer.m.select.a.nocheckcols.d := 'Do not check these columns (not used if checkonlycols is specified)';
help::pkg.utility.table.objs.tablecomparer.m.select.a.nocheckcols.def := '[]';
help::pkg.utility.table.objs.tablecomparer.m.select.a.nocheckcols.a := 'Array or record';
help::pkg.utility.table.objs.tablecomparer.m.select.s := 'select(checkonlycols, nocheckcols)';
help::pkg.utility.table.objs.tablecomparer.m.tolerance := [=];
help::pkg.utility.table.objs.tablecomparer.m.tolerance.d := 'Get the tolerance of the specified column';
help::pkg.utility.table.objs.tablecomparer.m.tolerance.a.col := [=];
help::pkg.utility.table.objs.tablecomparer.m.tolerance.a.col.d := 'The name of the column to get the tolerance of';
help::pkg.utility.table.objs.tablecomparer.m.tolerance.a.col.def := 'None';
help::pkg.utility.table.objs.tablecomparer.m.tolerance.a.col.a := 'A valid column name';
help::pkg.utility.table.objs.tablecomparer.m.tolerance.a.tlabel := [=];
help::pkg.utility.table.objs.tablecomparer.m.tolerance.a.tlabel.d := 'The label of the table or subtable in which this column is';
help::pkg.utility.table.objs.tablecomparer.m.tolerance.a.tlabel.def := '\' \'  (the top level table)';
help::pkg.utility.table.objs.tablecomparer.m.tolerance.a.tlabel.a := 'A valid table label';
help::pkg.utility.table.objs.tablecomparer.m.tolerance.s := 'tolerance(col, tlabel)';
help::pkg.utility.table.objs.tablecomparer.m.compare := [=];
help::pkg.utility.table.objs.tablecomparer.m.compare.d := 'Compare tables by running one or more tests';
help::pkg.utility.table.objs.tablecomparer.m.compare.a.checksubtables := [=];
help::pkg.utility.table.objs.tablecomparer.m.compare.a.checksubtables.d := 'Check subtables as well?';
help::pkg.utility.table.objs.tablecomparer.m.compare.a.checksubtables.def := 'T';
help::pkg.utility.table.objs.tablecomparer.m.compare.a.checksubtables.a := 'Boolean';
help::pkg.utility.table.objs.tablecomparer.m.compare.a.checkcolnames := [=];
help::pkg.utility.table.objs.tablecomparer.m.compare.a.checkcolnames.d := 'Run the column names test?';
help::pkg.utility.table.objs.tablecomparer.m.compare.a.checkcolnames.def := 'T';
help::pkg.utility.table.objs.tablecomparer.m.compare.a.checkcolnames.a := 'Boolean';
help::pkg.utility.table.objs.tablecomparer.m.compare.a.checkcolkeywordnames := [=];
help::pkg.utility.table.objs.tablecomparer.m.compare.a.checkcolkeywordnames.d := 'Run the column keyword names test?';
help::pkg.utility.table.objs.tablecomparer.m.compare.a.checkcolkeywordnames.def := 'T';
help::pkg.utility.table.objs.tablecomparer.m.compare.a.checkcolkeywordnames.a := 'Boolean';
help::pkg.utility.table.objs.tablecomparer.m.compare.a.checkcoldata := [=];
help::pkg.utility.table.objs.tablecomparer.m.compare.a.checkcoldata.d := 'Run the column data test?';
help::pkg.utility.table.objs.tablecomparer.m.compare.a.checkcoldata.def := 'T';
help::pkg.utility.table.objs.tablecomparer.m.compare.a.checkcoldata.a := 'Boolean';
help::pkg.utility.table.objs.tablecomparer.m.compare.a.checktablekeywordnames := [=];
help::pkg.utility.table.objs.tablecomparer.m.compare.a.checktablekeywordnames.d := 'Run the table keyword names test?';
help::pkg.utility.table.objs.tablecomparer.m.compare.a.checktablekeywordnames.def := 'T';
help::pkg.utility.table.objs.tablecomparer.m.compare.a.checktablekeywordnames.a := 'Boolean';
help::pkg.utility.table.objs.tablecomparer.m.compare.s := 'compare(checksubtables, checkcolnames, checkcolkeywordnames, checkcoldata, checktablekeywordnames)';
help::pkg.utility.table.objs.tablecomparer.m.details := [=];
help::pkg.utility.table.objs.tablecomparer.m.details.d := 'Get details regarding failed tests';
help::pkg.utility.table.objs.tablecomparer.m.details.s := 'details()';
help::pkg.utility.table.objs.tablecomparer.m.summary := [=];
help::pkg.utility.table.objs.tablecomparer.m.summary.d := 'Summarize the comparisons';
help::pkg.utility.table.objs.tablecomparer.m.summary.a.dolog := [=];
help::pkg.utility.table.objs.tablecomparer.m.summary.a.dolog.d := 'Write summary to logger?';
help::pkg.utility.table.objs.tablecomparer.m.summary.a.dolog.def := 'F';
help::pkg.utility.table.objs.tablecomparer.m.summary.a.dolog.a := 'Boolean';
help::pkg.utility.table.objs.tablecomparer.m.summary.s := 'summary(dolog)';
help::pkg.utility.table.objs.tableplot := [=];
help::pkg.utility.table.objs.tableplot.m := [=];
help::pkg.utility.table.objs.tableplot.c := [=];
help::pkg.utility.table.objs.tableplot.d := 'Plot data from tables via Glish';
help::pkg.utility.table.objs.tableplot.c.tableplot := [=];
help::pkg.utility.table.objs.tableplot.c.tableplot.d := 'Construct a tableplot tool';
help::pkg.utility.table.objs.tableplot.c.tableplot.s := 'tableplot()';
help::pkg.utility.table.objs.tableplot.m.settables := [=];
help::pkg.utility.table.objs.tableplot.m.settables.d := 'Specify list of tables to operate on';
help::pkg.utility.table.objs.tableplot.m.settables.a.tabnames := [=];
help::pkg.utility.table.objs.tableplot.m.settables.a.tabnames.d := 'List of strings : Table names';
help::pkg.utility.table.objs.tableplot.m.settables.a.tabnames.def := 'no default';
help::pkg.utility.table.objs.tableplot.m.settables.a.tabnames.a := 'Vector of Strings';
help::pkg.utility.table.objs.tableplot.m.settables.s := 'settables(tabnames)';
help::pkg.utility.table.objs.tableplot.m.plotdata := [=];
help::pkg.utility.table.objs.tableplot.m.plotdata.d := 'Plot the result of a general TaQL expression';
help::pkg.utility.table.objs.tableplot.m.plotdata.a.poption := [=];
help::pkg.utility.table.objs.tableplot.m.plotdata.a.poption.d := 'Record of plot options';
help::pkg.utility.table.objs.tableplot.m.plotdata.a.poption.def := 'nxpanels=1,nypanels=1,windowsize=6, aspectratio=0.8,fontsize=1.0, plotcolour=10, plotsymbol=1, linewidth=2, plotrange=[-1e+30,1e+30,-1e+30,1e+30],useflags=0';
help::pkg.utility.table.objs.tableplot.m.plotdata.a.poption.a := 'Record';
help::pkg.utility.table.objs.tableplot.m.plotdata.a.labels := [=];
help::pkg.utility.table.objs.tableplot.m.plotdata.a.labels.d := 'List of strings : Title,Xlabel,Ylabel';
help::pkg.utility.table.objs.tableplot.m.plotdata.a.labels.def := 'no default';
help::pkg.utility.table.objs.tableplot.m.plotdata.a.labels.a := 'Vector of Strings';
help::pkg.utility.table.objs.tableplot.m.plotdata.a.datastr := [=];
help::pkg.utility.table.objs.tableplot.m.plotdata.a.datastr.d := 'List of TaQL strings : X,Y';
help::pkg.utility.table.objs.tableplot.m.plotdata.a.datastr.def := 'no default';
help::pkg.utility.table.objs.tableplot.m.plotdata.a.datastr.a := 'Vector of Strings';
help::pkg.utility.table.objs.tableplot.m.plotdata.s := 'plotdata(poption, labels, datastr)';
help::pkg.utility.table.objs.tableplot.m.iterplotstart := [=];
help::pkg.utility.table.objs.tableplot.m.iterplotstart.d := 'Initialize plotting with an iteration axis';
help::pkg.utility.table.objs.tableplot.m.iterplotstart.a.poption := [=];
help::pkg.utility.table.objs.tableplot.m.iterplotstart.a.poption.d := 'Record of plot options';
help::pkg.utility.table.objs.tableplot.m.iterplotstart.a.poption.def := 'nxpanels=1,nypanels=1,windowsize=6, aspectratio=0.8,fontsize=1.0';
help::pkg.utility.table.objs.tableplot.m.iterplotstart.a.poption.a := 'Record';
help::pkg.utility.table.objs.tableplot.m.iterplotstart.a.labels := [=];
help::pkg.utility.table.objs.tableplot.m.iterplotstart.a.labels.d := 'List of strings : Title,Xlabel,Ylabel';
help::pkg.utility.table.objs.tableplot.m.iterplotstart.a.labels.def := 'no default';
help::pkg.utility.table.objs.tableplot.m.iterplotstart.a.labels.a := 'Vector of Strings';
help::pkg.utility.table.objs.tableplot.m.iterplotstart.a.datastr := [=];
help::pkg.utility.table.objs.tableplot.m.iterplotstart.a.datastr.d := 'List of TaQL strings : X,Y';
help::pkg.utility.table.objs.tableplot.m.iterplotstart.a.datastr.def := 'no default';
help::pkg.utility.table.objs.tableplot.m.iterplotstart.a.datastr.a := 'Vector of Strings';
help::pkg.utility.table.objs.tableplot.m.iterplotstart.a.iteraxes := [=];
help::pkg.utility.table.objs.tableplot.m.iterplotstart.a.iteraxes.d := 'List of strings : Iteration axes';
help::pkg.utility.table.objs.tableplot.m.iterplotstart.a.iteraxes.def := 'no default';
help::pkg.utility.table.objs.tableplot.m.iterplotstart.a.iteraxes.a := 'Vector of Strings';
help::pkg.utility.table.objs.tableplot.m.iterplotstart.s := 'iterplotstart(poption, labels, datastr, iteraxes)';
help::pkg.utility.table.objs.tableplot.m.iterplotnext := [=];
help::pkg.utility.table.objs.tableplot.m.iterplotnext.d := 'Start/Continue plotting';
help::pkg.utility.table.objs.tableplot.m.iterplotnext.s := 'iterplotnext()';
help::pkg.utility.table.objs.tableplot.m.iterplotstop := [=];
help::pkg.utility.table.objs.tableplot.m.iterplotstop.d := 'Stop plot iterations.';
help::pkg.utility.table.objs.tableplot.m.iterplotstop.s := 'iterplotstop()';
help::pkg.utility.table.objs.tableplot.m.markflags := [=];
help::pkg.utility.table.objs.tableplot.m.markflags.d := 'Mark a rectangular region to flag';
help::pkg.utility.table.objs.tableplot.m.markflags.a.panel := [=];
help::pkg.utility.table.objs.tableplot.m.markflags.a.panel.d := 'Panel number';
help::pkg.utility.table.objs.tableplot.m.markflags.a.panel.def := '1';
help::pkg.utility.table.objs.tableplot.m.markflags.a.panel.a := 'Integer';
help::pkg.utility.table.objs.tableplot.m.markflags.s := 'markflags(panel)';
help::pkg.utility.table.objs.tableplot.m.flagdata := [=];
help::pkg.utility.table.objs.tableplot.m.flagdata.d := 'Flag Data for selected flag regions';
help::pkg.utility.table.objs.tableplot.m.flagdata.a.diskwrite := [=];
help::pkg.utility.table.objs.tableplot.m.flagdata.a.diskwrite.d := '1 to write flags to the table on disk, 0 to set dummy flags';
help::pkg.utility.table.objs.tableplot.m.flagdata.a.diskwrite.def := '0';
help::pkg.utility.table.objs.tableplot.m.flagdata.a.diskwrite.a := 'Integer';
help::pkg.utility.table.objs.tableplot.m.flagdata.a.rowflag := [=];
help::pkg.utility.table.objs.tableplot.m.flagdata.a.rowflag.d := '1 to set a row-flag in addition to individual data flags, 0 to ignore row flags if individual flags exist';
help::pkg.utility.table.objs.tableplot.m.flagdata.a.rowflag.def := '0';
help::pkg.utility.table.objs.tableplot.m.flagdata.a.rowflag.a := 'Integer';
help::pkg.utility.table.objs.tableplot.m.flagdata.s := 'flagdata(diskwrite, rowflag)';
help::pkg.utility.table.objs.tableplot.m.zoomplot := [=];
help::pkg.utility.table.objs.tableplot.m.zoomplot.d := 'Zoom/Unzoom on marked regions';
help::pkg.utility.table.objs.tableplot.m.zoomplot.a.panel := [=];
help::pkg.utility.table.objs.tableplot.m.zoomplot.a.panel.d := 'Panel number';
help::pkg.utility.table.objs.tableplot.m.zoomplot.a.panel.def := '1';
help::pkg.utility.table.objs.tableplot.m.zoomplot.a.panel.a := 'Integer';
help::pkg.utility.table.objs.tableplot.m.zoomplot.a.direction := [=];
help::pkg.utility.table.objs.tableplot.m.zoomplot.a.direction.d := '1 to zoom, 0 to unzoom';
help::pkg.utility.table.objs.tableplot.m.zoomplot.a.direction.def := '1';
help::pkg.utility.table.objs.tableplot.m.zoomplot.a.direction.a := 'Integer';
help::pkg.utility.table.objs.tableplot.m.zoomplot.s := 'zoomplot(panel, direction)';
help::pkg.utility.table.objs.tableplot.m.clearflags := [=];
help::pkg.utility.table.objs.tableplot.m.clearflags.d := 'Clear all flags in the table';
help::pkg.utility.table.objs.tableplot.m.clearflags.s := 'clearflags()';
help::pkg.utility.table.objs.tableplot.m.done := [=];
help::pkg.utility.table.objs.tableplot.m.done.d := 'end the tableplot tool';
help::pkg.utility.table.objs.tableplot.m.done.s := 'done()';

help::pkg.utility.tasking := [=];
help::pkg.utility.tasking.objs := [=];
help::pkg.utility.tasking.funs := [=];
help::pkg.utility.tasking.d := 'Running tools and functions within AIPS++';
help::pkg.utility.tasking.objs.toolmanager := [=];
help::pkg.utility.tasking.objs.toolmanager.m := [=];
help::pkg.utility.tasking.objs.toolmanager.c := [=];
help::pkg.utility.tasking.objs.toolmanager.d := 'Tool for using AIPS++\ tools and functions';
help::pkg.utility.tasking.objs.toolmanager.m.usegui := [=];
help::pkg.utility.tasking.objs.toolmanager.m.usegui.d := 'Use GUIs if possible';
help::pkg.utility.tasking.objs.toolmanager.m.usegui.s := 'usegui()';
help::pkg.utility.tasking.objs.toolmanager.m.usecli := [=];
help::pkg.utility.tasking.objs.toolmanager.m.usecli.d := 'Use CLI';
help::pkg.utility.tasking.objs.toolmanager.m.usecli.s := 'usecli()';
help::pkg.utility.tasking.objs.toolmanager.m.show := [=];
help::pkg.utility.tasking.objs.toolmanager.m.show.d := 'Show one of: the toolmanager, a tool or function';
help::pkg.utility.tasking.objs.toolmanager.m.show.a.what := [=];
help::pkg.utility.tasking.objs.toolmanager.m.show.a.what.d := 'Name of thing to be displayed';
help::pkg.utility.tasking.objs.toolmanager.m.show.a.what.def := '\' \' ';
help::pkg.utility.tasking.objs.toolmanager.m.show.a.what.a := 'String';
help::pkg.utility.tasking.objs.toolmanager.m.show.a.prefergui := [=];
help::pkg.utility.tasking.objs.toolmanager.m.show.a.prefergui.d := 'Use a GUI if possible';
help::pkg.utility.tasking.objs.toolmanager.m.show.a.prefergui.def := 'T';
help::pkg.utility.tasking.objs.toolmanager.m.show.a.prefergui.a := 'Bool';
help::pkg.utility.tasking.objs.toolmanager.m.show.s := 'show(what, prefergui)';
help::pkg.utility.tasking.objs.toolmanager.m.showconstructor := [=];
help::pkg.utility.tasking.objs.toolmanager.m.showconstructor.d := 'Show the constructors of a tool';
help::pkg.utility.tasking.objs.toolmanager.m.showconstructor.a.type := [=];
help::pkg.utility.tasking.objs.toolmanager.m.showconstructor.a.type.d := 'Type of the tool to be constructed';
help::pkg.utility.tasking.objs.toolmanager.m.showconstructor.a.type.def := '\' \' ';
help::pkg.utility.tasking.objs.toolmanager.m.showconstructor.a.type.a := 'String';
help::pkg.utility.tasking.objs.toolmanager.m.showconstructor.a.prefergui := [=];
help::pkg.utility.tasking.objs.toolmanager.m.showconstructor.a.prefergui.d := 'Use a GUI if possible';
help::pkg.utility.tasking.objs.toolmanager.m.showconstructor.a.prefergui.def := 'T';
help::pkg.utility.tasking.objs.toolmanager.m.showconstructor.a.prefergui.a := 'Bool';
help::pkg.utility.tasking.objs.toolmanager.m.showconstructor.s := 'showconstructor(type, prefergui)';
help::pkg.utility.tasking.objs.toolmanager.m.showtool := [=];
help::pkg.utility.tasking.objs.toolmanager.m.showtool.d := 'Show a user interface for a tool';
help::pkg.utility.tasking.objs.toolmanager.m.showtool.a.type := [=];
help::pkg.utility.tasking.objs.toolmanager.m.showtool.a.type.d := 'Type of the tool to be constructed';
help::pkg.utility.tasking.objs.toolmanager.m.showtool.a.type.def := '\' \' ';
help::pkg.utility.tasking.objs.toolmanager.m.showtool.a.type.a := 'String';
help::pkg.utility.tasking.objs.toolmanager.m.showtool.a.prefergui := [=];
help::pkg.utility.tasking.objs.toolmanager.m.showtool.a.prefergui.d := 'Use a GUI if possible';
help::pkg.utility.tasking.objs.toolmanager.m.showtool.a.prefergui.def := 'T';
help::pkg.utility.tasking.objs.toolmanager.m.showtool.a.prefergui.a := 'Bool';
help::pkg.utility.tasking.objs.toolmanager.m.showtool.a.forceauto := [=];
help::pkg.utility.tasking.objs.toolmanager.m.showtool.a.forceauto.d := 'Force use of the auto GUI';
help::pkg.utility.tasking.objs.toolmanager.m.showtool.a.forceauto.def := 'F';
help::pkg.utility.tasking.objs.toolmanager.m.showtool.a.forceauto.a := 'Bool';
help::pkg.utility.tasking.objs.toolmanager.m.showtool.s := 'showtool(type, prefergui, forceauto)';
help::pkg.utility.tasking.objs.toolmanager.m.showglobalfunction := [=];
help::pkg.utility.tasking.objs.toolmanager.m.showglobalfunction.d := 'Show a user interface for a global function';
help::pkg.utility.tasking.objs.toolmanager.m.showglobalfunction.a.ofn := [=];
help::pkg.utility.tasking.objs.toolmanager.m.showglobalfunction.a.ofn.d := 'Type of the tool to be constructed';
help::pkg.utility.tasking.objs.toolmanager.m.showglobalfunction.a.ofn.def := '\' \' ';
help::pkg.utility.tasking.objs.toolmanager.m.showglobalfunction.a.ofn.a := 'String';
help::pkg.utility.tasking.objs.toolmanager.m.showglobalfunction.a.prefergui := [=];
help::pkg.utility.tasking.objs.toolmanager.m.showglobalfunction.a.prefergui.d := 'Use a GUI if possible';
help::pkg.utility.tasking.objs.toolmanager.m.showglobalfunction.a.prefergui.def := 'T';
help::pkg.utility.tasking.objs.toolmanager.m.showglobalfunction.a.prefergui.a := 'Bool';
help::pkg.utility.tasking.objs.toolmanager.m.showglobalfunction.a.forceauto := [=];
help::pkg.utility.tasking.objs.toolmanager.m.showglobalfunction.a.forceauto.d := 'Force use of the auot GUI';
help::pkg.utility.tasking.objs.toolmanager.m.showglobalfunction.a.forceauto.def := 'F';
help::pkg.utility.tasking.objs.toolmanager.m.showglobalfunction.a.forceauto.a := 'Bool';
help::pkg.utility.tasking.objs.toolmanager.m.showglobalfunction.s := 'showglobalfunction(ofn, prefergui, forceauto)';
help::pkg.utility.tasking.objs.toolmanager.m.showitemmanager := [=];
help::pkg.utility.tasking.objs.toolmanager.m.showitemmanager.d := 'Show a user interface for a tool function';
help::pkg.utility.tasking.objs.toolmanager.m.showitemmanager.a.ofn := [=];
help::pkg.utility.tasking.objs.toolmanager.m.showitemmanager.a.ofn.d := 'Type of the tool to be constructed';
help::pkg.utility.tasking.objs.toolmanager.m.showitemmanager.a.ofn.def := '\' \' ';
help::pkg.utility.tasking.objs.toolmanager.m.showitemmanager.a.ofn.a := 'String';
help::pkg.utility.tasking.objs.toolmanager.m.showitemmanager.a.prefergui := [=];
help::pkg.utility.tasking.objs.toolmanager.m.showitemmanager.a.prefergui.d := 'Use a GUI if possible';
help::pkg.utility.tasking.objs.toolmanager.m.showitemmanager.a.prefergui.def := 'T';
help::pkg.utility.tasking.objs.toolmanager.m.showitemmanager.a.prefergui.a := 'Bool';
help::pkg.utility.tasking.objs.toolmanager.m.showitemmanager.a.forceauto := [=];
help::pkg.utility.tasking.objs.toolmanager.m.showitemmanager.a.forceauto.d := 'Force use of the auot GUI';
help::pkg.utility.tasking.objs.toolmanager.m.showitemmanager.a.forceauto.def := 'F';
help::pkg.utility.tasking.objs.toolmanager.m.showitemmanager.a.forceauto.a := 'Bool';
help::pkg.utility.tasking.objs.toolmanager.m.showitemmanager.s := 'showitemmanager(ofn, prefergui, forceauto)';
help::pkg.utility.tasking.objs.toolmanager.m.where := [=];
help::pkg.utility.tasking.objs.toolmanager.m.where.d := 'Find package, module and description of a type of tool';
help::pkg.utility.tasking.objs.toolmanager.m.where.a.type := [=];
help::pkg.utility.tasking.objs.toolmanager.m.where.a.type.d := 'Type of tool';
help::pkg.utility.tasking.objs.toolmanager.m.where.a.type.def := '\' \' ';
help::pkg.utility.tasking.objs.toolmanager.m.where.a.type.a := 'String';
help::pkg.utility.tasking.objs.toolmanager.m.where.s := 'where(type)';
help::pkg.utility.tasking.objs.toolmanager.m.istool := [=];
help::pkg.utility.tasking.objs.toolmanager.m.istool.d := 'Is this a tool?';
help::pkg.utility.tasking.objs.toolmanager.m.istool.a.tool := [=];
help::pkg.utility.tasking.objs.toolmanager.m.istool.a.tool.d := 'Name of candidate';
help::pkg.utility.tasking.objs.toolmanager.m.istool.a.tool.def := '\' \' ';
help::pkg.utility.tasking.objs.toolmanager.m.istool.a.tool.a := 'String';
help::pkg.utility.tasking.objs.toolmanager.m.istool.s := 'istool(tool)';
help::pkg.utility.tasking.objs.toolmanager.m.istooltype := [=];
help::pkg.utility.tasking.objs.toolmanager.m.istooltype.d := 'Is this a tool type?';
help::pkg.utility.tasking.objs.toolmanager.m.istooltype.a.tool := [=];
help::pkg.utility.tasking.objs.toolmanager.m.istooltype.a.tool.d := 'Name of candidate';
help::pkg.utility.tasking.objs.toolmanager.m.istooltype.a.tool.def := '\' \' ';
help::pkg.utility.tasking.objs.toolmanager.m.istooltype.a.tool.a := 'String';
help::pkg.utility.tasking.objs.toolmanager.m.istooltype.s := 'istooltype(tool)';
help::pkg.utility.tasking.objs.toolmanager.m.tooltype := [=];
help::pkg.utility.tasking.objs.toolmanager.m.tooltype.d := 'Return tool type';
help::pkg.utility.tasking.objs.toolmanager.m.tooltype.a.tool := [=];
help::pkg.utility.tasking.objs.toolmanager.m.tooltype.a.tool.d := 'Name of candidate';
help::pkg.utility.tasking.objs.toolmanager.m.tooltype.a.tool.def := '\' \' ';
help::pkg.utility.tasking.objs.toolmanager.m.tooltype.a.tool.a := 'String';
help::pkg.utility.tasking.objs.toolmanager.m.tooltype.s := 'tooltype(tool)';
help::pkg.utility.tasking.objs.toolmanager.m.registertool := [=];
help::pkg.utility.tasking.objs.toolmanager.m.registertool.d := 'Register a tool';
help::pkg.utility.tasking.objs.toolmanager.m.registertool.a.tool := [=];
help::pkg.utility.tasking.objs.toolmanager.m.registertool.a.tool.d := 'Name of tool';
help::pkg.utility.tasking.objs.toolmanager.m.registertool.a.tool.def := 'None';
help::pkg.utility.tasking.objs.toolmanager.m.registertool.a.tool.a := 'String';
help::pkg.utility.tasking.objs.toolmanager.m.registertool.a.status := [=];
help::pkg.utility.tasking.objs.toolmanager.m.registertool.a.status.d := 'Status of tool';
help::pkg.utility.tasking.objs.toolmanager.m.registertool.a.status.def := '\' -\' ';
help::pkg.utility.tasking.objs.toolmanager.m.registertool.a.status.a := 'String';
help::pkg.utility.tasking.objs.toolmanager.m.registertool.a.description := [=];
help::pkg.utility.tasking.objs.toolmanager.m.registertool.a.description.d := 'Description of tool';
help::pkg.utility.tasking.objs.toolmanager.m.registertool.a.description.def := 'unset';
help::pkg.utility.tasking.objs.toolmanager.m.registertool.a.description.a := 'String';
help::pkg.utility.tasking.objs.toolmanager.m.registertool.s := 'registertool(tool, status, description)';
help::pkg.utility.tasking.objs.toolmanager.m.settoolstatus := [=];
help::pkg.utility.tasking.objs.toolmanager.m.settoolstatus.d := 'Set the tool status';
help::pkg.utility.tasking.objs.toolmanager.m.settoolstatus.a.tool := [=];
help::pkg.utility.tasking.objs.toolmanager.m.settoolstatus.a.tool.d := 'Name of tool';
help::pkg.utility.tasking.objs.toolmanager.m.settoolstatus.a.tool.def := 'None';
help::pkg.utility.tasking.objs.toolmanager.m.settoolstatus.a.tool.a := 'String';
help::pkg.utility.tasking.objs.toolmanager.m.settoolstatus.a.status := [=];
help::pkg.utility.tasking.objs.toolmanager.m.settoolstatus.a.status.d := 'Status of tool';
help::pkg.utility.tasking.objs.toolmanager.m.settoolstatus.a.status.def := '\' -\' ';
help::pkg.utility.tasking.objs.toolmanager.m.settoolstatus.a.status.a := 'String';
help::pkg.utility.tasking.objs.toolmanager.m.settoolstatus.s := 'settoolstatus(tool, status)';
help::pkg.utility.tasking.objs.toolmanager.m.deletetool := [=];
help::pkg.utility.tasking.objs.toolmanager.m.deletetool.d := 'Delete a tool';
help::pkg.utility.tasking.objs.toolmanager.m.deletetool.a.tool := [=];
help::pkg.utility.tasking.objs.toolmanager.m.deletetool.a.tool.d := 'Name of tool';
help::pkg.utility.tasking.objs.toolmanager.m.deletetool.a.tool.def := 'None';
help::pkg.utility.tasking.objs.toolmanager.m.deletetool.a.tool.a := 'String';
help::pkg.utility.tasking.objs.toolmanager.m.deletetool.s := 'deletetool(tool)';
help::pkg.utility.tasking.objs.toolmanager.m.killtool := [=];
help::pkg.utility.tasking.objs.toolmanager.m.killtool.d := 'Kill a tool';
help::pkg.utility.tasking.objs.toolmanager.m.killtool.a.tool := [=];
help::pkg.utility.tasking.objs.toolmanager.m.killtool.a.tool.d := 'Name of tool';
help::pkg.utility.tasking.objs.toolmanager.m.killtool.a.tool.def := 'None';
help::pkg.utility.tasking.objs.toolmanager.m.killtool.a.tool.a := 'String';
help::pkg.utility.tasking.objs.toolmanager.m.killtool.s := 'killtool(tool)';
help::pkg.utility.tasking.objs.toolmanager.m.unregistertool := [=];
help::pkg.utility.tasking.objs.toolmanager.m.unregistertool.d := 'Unregister a tool';
help::pkg.utility.tasking.objs.toolmanager.m.unregistertool.a.tool := [=];
help::pkg.utility.tasking.objs.toolmanager.m.unregistertool.a.tool.d := 'Name of tool';
help::pkg.utility.tasking.objs.toolmanager.m.unregistertool.a.tool.def := 'None';
help::pkg.utility.tasking.objs.toolmanager.m.unregistertool.a.tool.a := 'String';
help::pkg.utility.tasking.objs.toolmanager.m.unregistertool.s := 'unregistertool(tool)';
help::pkg.utility.tasking.objs.toolmanager.m.isregistered := [=];
help::pkg.utility.tasking.objs.toolmanager.m.isregistered.d := 'Is this tool registered?';
help::pkg.utility.tasking.objs.toolmanager.m.isregistered.a.tool := [=];
help::pkg.utility.tasking.objs.toolmanager.m.isregistered.a.tool.d := 'Name of tool';
help::pkg.utility.tasking.objs.toolmanager.m.isregistered.a.tool.def := 'None';
help::pkg.utility.tasking.objs.toolmanager.m.isregistered.a.tool.a := 'String';
help::pkg.utility.tasking.objs.toolmanager.m.isregistered.s := 'isregistered(tool)';
help::pkg.utility.tasking.objs.toolmanager.m.toolinfo := [=];
help::pkg.utility.tasking.objs.toolmanager.m.toolinfo.d := 'Show information about a registered tool';
help::pkg.utility.tasking.objs.toolmanager.m.toolinfo.a.tool := [=];
help::pkg.utility.tasking.objs.toolmanager.m.toolinfo.a.tool.d := 'Name of tool';
help::pkg.utility.tasking.objs.toolmanager.m.toolinfo.a.tool.def := 'None';
help::pkg.utility.tasking.objs.toolmanager.m.toolinfo.a.tool.a := 'String';
help::pkg.utility.tasking.objs.toolmanager.m.toolinfo.s := 'toolinfo(tool)';
help::pkg.utility.tasking.funs.is_tool := [=];
help::pkg.utility.tasking.funs.is_tool.a := [=];
help::pkg.utility.tasking.funs.is_tool.d := 'Is this a tool';
help::pkg.utility.tasking.funs.is_tool.a.tool := [=];
help::pkg.utility.tasking.funs.is_tool.a.tool.d := 'Variable to be tested';
help::pkg.utility.tasking.funs.is_tool.a.tool.def := 'None';
help::pkg.utility.tasking.funs.is_tool.a.tool.a := 'Glish variable';
help::pkg.utility.tasking.funs.is_tool.s := 'is_tool(tool)';
help::pkg.utility.tasking.funs.toolmanagertest := [=];
help::pkg.utility.tasking.funs.toolmanagertest.a := [=];
help::pkg.utility.tasking.funs.toolmanagertest.d := 'Test the tool manager';
help::pkg.utility.tasking.funs.toolmanagertest.s := 'toolmanagertest()';
help::pkg.utility.tasking.objs.inputsmanager := [=];
help::pkg.utility.tasking.objs.inputsmanager.m := [=];
help::pkg.utility.tasking.objs.inputsmanager.c := [=];
help::pkg.utility.tasking.objs.inputsmanager.d := 'Tool for handling inputs for other tools';
help::pkg.utility.tasking.objs.inputsmanager.c.inputsmanager := [=];
help::pkg.utility.tasking.objs.inputsmanager.c.inputsmanager.d := 'Construct inputsmanager tool';
help::pkg.utility.tasking.objs.inputsmanager.c.inputsmanager.s := 'inputsmanager()';
help::pkg.utility.tasking.objs.inputsmanager.m.getvalues := [=];
help::pkg.utility.tasking.objs.inputsmanager.m.getvalues.d := 'Get inputs for a tool and function';
help::pkg.utility.tasking.objs.inputsmanager.m.getvalues.a.tool := [=];
help::pkg.utility.tasking.objs.inputsmanager.m.getvalues.a.tool.d := 'Name of tool';
help::pkg.utility.tasking.objs.inputsmanager.m.getvalues.a.tool.def := 'None';
help::pkg.utility.tasking.objs.inputsmanager.m.getvalues.a.tool.a := 'String';
help::pkg.utility.tasking.objs.inputsmanager.m.getvalues.a.method := [=];
help::pkg.utility.tasking.objs.inputsmanager.m.getvalues.a.method.d := 'Name of function';
help::pkg.utility.tasking.objs.inputsmanager.m.getvalues.a.method.def := 'None';
help::pkg.utility.tasking.objs.inputsmanager.m.getvalues.a.method.a := 'String';
help::pkg.utility.tasking.objs.inputsmanager.m.getvalues.a.keyword := [=];
help::pkg.utility.tasking.objs.inputsmanager.m.getvalues.a.keyword.d := 'Name of keyword';
help::pkg.utility.tasking.objs.inputsmanager.m.getvalues.a.keyword.def := '\' lastsave\' ';
help::pkg.utility.tasking.objs.inputsmanager.m.getvalues.a.keyword.a := 'String';
help::pkg.utility.tasking.objs.inputsmanager.m.getvalues.s := 'getvalues(tool, method, keyword)';
help::pkg.utility.tasking.objs.inputsmanager.m.savevalues := [=];
help::pkg.utility.tasking.objs.inputsmanager.m.savevalues.d := 'Save inputs for a tool and function';
help::pkg.utility.tasking.objs.inputsmanager.m.savevalues.a.tool := [=];
help::pkg.utility.tasking.objs.inputsmanager.m.savevalues.a.tool.d := 'Name of tool';
help::pkg.utility.tasking.objs.inputsmanager.m.savevalues.a.tool.def := 'None';
help::pkg.utility.tasking.objs.inputsmanager.m.savevalues.a.tool.a := 'String';
help::pkg.utility.tasking.objs.inputsmanager.m.savevalues.a.method := [=];
help::pkg.utility.tasking.objs.inputsmanager.m.savevalues.a.method.d := 'Name of function';
help::pkg.utility.tasking.objs.inputsmanager.m.savevalues.a.method.def := 'None';
help::pkg.utility.tasking.objs.inputsmanager.m.savevalues.a.method.a := 'String';
help::pkg.utility.tasking.objs.inputsmanager.m.savevalues.a.values := [=];
help::pkg.utility.tasking.objs.inputsmanager.m.savevalues.a.values.d := 'Record of inputs';
help::pkg.utility.tasking.objs.inputsmanager.m.savevalues.a.values.def := '[=]';
help::pkg.utility.tasking.objs.inputsmanager.m.savevalues.a.values.a := 'Record';
help::pkg.utility.tasking.objs.inputsmanager.m.savevalues.a.keyword := [=];
help::pkg.utility.tasking.objs.inputsmanager.m.savevalues.a.keyword.d := 'Name of keyword';
help::pkg.utility.tasking.objs.inputsmanager.m.savevalues.a.keyword.def := '\' lastsave\' ';
help::pkg.utility.tasking.objs.inputsmanager.m.savevalues.a.keyword.a := 'String';
help::pkg.utility.tasking.objs.inputsmanager.m.savevalues.a.dosave := [=];
help::pkg.utility.tasking.objs.inputsmanager.m.savevalues.a.dosave.d := 'Force a save to disk-based table';
help::pkg.utility.tasking.objs.inputsmanager.m.savevalues.a.dosave.def := 'F';
help::pkg.utility.tasking.objs.inputsmanager.m.savevalues.a.dosave.a := 'Bool';
help::pkg.utility.tasking.objs.inputsmanager.m.savevalues.s := 'savevalues(tool, method, values, keyword, dosave)';
help::pkg.utility.tasking.objs.inputsmanager.m.show := [=];
help::pkg.utility.tasking.objs.inputsmanager.m.show.d := 'Show all sets of available inputs';
help::pkg.utility.tasking.objs.inputsmanager.m.show.a.keyword := [=];
help::pkg.utility.tasking.objs.inputsmanager.m.show.a.keyword.d := 'Name of keyword';
help::pkg.utility.tasking.objs.inputsmanager.m.show.a.keyword.def := '\' default\' ';
help::pkg.utility.tasking.objs.inputsmanager.m.show.a.keyword.a := 'String';
help::pkg.utility.tasking.objs.inputsmanager.m.show.s := 'show(keyword)';
help::pkg.utility.tasking.objs.inputsmanager.m.list := [=];
help::pkg.utility.tasking.objs.inputsmanager.m.list.d := 'List all sets of available inputs';
help::pkg.utility.tasking.objs.inputsmanager.m.list.a.keyword := [=];
help::pkg.utility.tasking.objs.inputsmanager.m.list.a.keyword.d := 'Name of keyword';
help::pkg.utility.tasking.objs.inputsmanager.m.list.a.keyword.def := '\' default\' ';
help::pkg.utility.tasking.objs.inputsmanager.m.list.a.keyword.a := 'String';
help::pkg.utility.tasking.objs.inputsmanager.m.list.s := 'list(keyword)';
help::pkg.utility.tasking.objs.inputsmanager.m.delete := [=];
help::pkg.utility.tasking.objs.inputsmanager.m.delete.d := 'Delete rows from the table';
help::pkg.utility.tasking.objs.inputsmanager.m.delete.a.rows := [=];
help::pkg.utility.tasking.objs.inputsmanager.m.delete.a.rows.d := 'Vector of row numbers';
help::pkg.utility.tasking.objs.inputsmanager.m.delete.a.rows.def := 'None';
help::pkg.utility.tasking.objs.inputsmanager.m.delete.a.rows.a := 'Vector of Ints';
help::pkg.utility.tasking.objs.inputsmanager.m.delete.s := 'delete(rows)';
help::pkg.utility.tasking.objs.inputsmanager.m.deletetable := [=];
help::pkg.utility.tasking.objs.inputsmanager.m.deletetable.d := 'Delete the inputs table';
help::pkg.utility.tasking.objs.inputsmanager.m.deletetable.s := 'deletetable()';
help::pkg.utility.tasking.objs.inputsmanager.m.get := [=];
help::pkg.utility.tasking.objs.inputsmanager.m.get.d := 'Get all inputs for a given keyword';
help::pkg.utility.tasking.objs.inputsmanager.m.get.a.keyword := [=];
help::pkg.utility.tasking.objs.inputsmanager.m.get.a.keyword.d := 'Name of keyword';
help::pkg.utility.tasking.objs.inputsmanager.m.get.a.keyword.def := '\' lastsave\' ';
help::pkg.utility.tasking.objs.inputsmanager.m.get.a.keyword.a := 'String';
help::pkg.utility.tasking.objs.inputsmanager.m.get.s := 'get(keyword)';
help::pkg.utility.tasking.objs.inputsmanager.m.save := [=];
help::pkg.utility.tasking.objs.inputsmanager.m.save.d := 'Save all inputs for a given keyword';
help::pkg.utility.tasking.objs.inputsmanager.m.save.a.keyword := [=];
help::pkg.utility.tasking.objs.inputsmanager.m.save.a.keyword.d := 'Name of keyword';
help::pkg.utility.tasking.objs.inputsmanager.m.save.a.keyword.def := '\' lastsave\' ';
help::pkg.utility.tasking.objs.inputsmanager.m.save.a.keyword.a := 'String';
help::pkg.utility.tasking.objs.inputsmanager.m.save.s := 'save(keyword)';
help::pkg.utility.tasking.objs.clipboard := [=];
help::pkg.utility.tasking.objs.clipboard.m := [=];
help::pkg.utility.tasking.objs.clipboard.c := [=];
help::pkg.utility.tasking.objs.clipboard.d := 'clipboard object';
help::pkg.utility.tasking.objs.clipboard.c.clipboard := [=];
help::pkg.utility.tasking.objs.clipboard.c.clipboard.d := 'Construct clipboard tool';
help::pkg.utility.tasking.objs.clipboard.c.clipboard.s := 'clipboard()';
help::pkg.utility.tasking.objs.clipboard.m.copy := [=];
help::pkg.utility.tasking.objs.clipboard.m.copy.d := 'Copy something to the clipboard';
help::pkg.utility.tasking.objs.clipboard.m.copy.a.parameter := [=];
help::pkg.utility.tasking.objs.clipboard.m.copy.a.parameter.d := 'Name of Glish parameter';
help::pkg.utility.tasking.objs.clipboard.m.copy.a.parameter.def := 'None';
help::pkg.utility.tasking.objs.clipboard.m.copy.a.parameter.a := 'Any glish variable';
help::pkg.utility.tasking.objs.clipboard.m.copy.s := 'copy(parameter)';
help::pkg.utility.tasking.objs.clipboard.m.paste := [=];
help::pkg.utility.tasking.objs.clipboard.m.paste.d := 'Paste the clipboard value';
help::pkg.utility.tasking.objs.clipboard.m.paste.s := 'paste()';
help::pkg.utility.tasking.objs.scripter := [=];
help::pkg.utility.tasking.objs.scripter.m := [=];
help::pkg.utility.tasking.objs.scripter.c := [=];
help::pkg.utility.tasking.objs.scripter.d := 'scripter tool';
help::pkg.utility.tasking.objs.scripter.c.scripter := [=];
help::pkg.utility.tasking.objs.scripter.c.scripter.d := 'Construct scripter tool';
help::pkg.utility.tasking.objs.scripter.c.scripter.a.logfile := [=];
help::pkg.utility.tasking.objs.scripter.c.scripter.a.logfile.d := 'File containing logged commands';
help::pkg.utility.tasking.objs.scripter.c.scripter.a.logfile.def := 'scripter.log\_PID';
help::pkg.utility.tasking.objs.scripter.c.scripter.a.logfile.a := 'String';
help::pkg.utility.tasking.objs.scripter.c.scripter.a.run := [=];
help::pkg.utility.tasking.objs.scripter.c.scripter.a.run.d := 'Flag to determine whether commands are "eval\' ed"';
help::pkg.utility.tasking.objs.scripter.c.scripter.a.run.def := 'F';
help::pkg.utility.tasking.objs.scripter.c.scripter.a.run.a := 'Boolean';
help::pkg.utility.tasking.objs.scripter.c.scripter.a.guititle := [=];
help::pkg.utility.tasking.objs.scripter.c.scripter.a.guititle.d := 'Title for the scripter';
help::pkg.utility.tasking.objs.scripter.c.scripter.a.guititle.def := '\' Scripter gui (AIPS++)\' ';
help::pkg.utility.tasking.objs.scripter.c.scripter.a.guititle.a := 'String';
help::pkg.utility.tasking.objs.scripter.c.scripter.a.widgetset := [=];
help::pkg.utility.tasking.objs.scripter.c.scripter.a.widgetset.d := 'Widget set to be used';
help::pkg.utility.tasking.objs.scripter.c.scripter.a.widgetset.def := 'dws';
help::pkg.utility.tasking.objs.scripter.c.scripter.a.widgetset.a := 'Any valid widgetset';
help::pkg.utility.tasking.objs.scripter.c.scripter.s := 'scripter(logfile, run, guititle, widgetset)';
help::pkg.utility.tasking.objs.scripter.m.gui := [=];
help::pkg.utility.tasking.objs.scripter.m.gui.d := 'Display logged commands in a text pane';
help::pkg.utility.tasking.objs.scripter.m.gui.s := 'gui()';
help::pkg.utility.tasking.objs.scripter.m.log := [=];
help::pkg.utility.tasking.objs.scripter.m.log.d := 'Log one or more commands';
help::pkg.utility.tasking.objs.scripter.m.log.a.command := [=];
help::pkg.utility.tasking.objs.scripter.m.log.a.command.d := 'Command(s) to be logged';
help::pkg.utility.tasking.objs.scripter.m.log.a.command.def := '';
help::pkg.utility.tasking.objs.scripter.m.log.a.command.a := 'String';
help::pkg.utility.tasking.objs.scripter.m.log.a.run := [=];
help::pkg.utility.tasking.objs.scripter.m.log.a.run.d := 'Flag to determine if command(s) are run immediately';
help::pkg.utility.tasking.objs.scripter.m.log.a.run.def := 'F';
help::pkg.utility.tasking.objs.scripter.m.log.a.run.a := 'Boolean';
help::pkg.utility.tasking.objs.scripter.m.log.s := 'log(command, run)';
help::pkg.utility.tasking.objs.scripter.m.save := [=];
help::pkg.utility.tasking.objs.scripter.m.save.d := 'Save the logged command(s) to a file.';
help::pkg.utility.tasking.objs.scripter.m.save.a.filename := [=];
help::pkg.utility.tasking.objs.scripter.m.save.a.filename.d := 'File to save commands';
help::pkg.utility.tasking.objs.scripter.m.save.a.filename.def := 'F';
help::pkg.utility.tasking.objs.scripter.m.save.a.filename.a := 'Any valid file name or F';
help::pkg.utility.tasking.objs.scripter.m.save.s := 'save(filename)';
help::pkg.utility.tasking.objs.scripter.m.load := [=];
help::pkg.utility.tasking.objs.scripter.m.load.d := 'Load command(s) from a file.';
help::pkg.utility.tasking.objs.scripter.m.load.a.filename := [=];
help::pkg.utility.tasking.objs.scripter.m.load.a.filename.d := 'File from which to load commands';
help::pkg.utility.tasking.objs.scripter.m.load.a.filename.def := '';
help::pkg.utility.tasking.objs.scripter.m.load.a.filename.a := 'Any valid file name';
help::pkg.utility.tasking.objs.scripter.m.load.a.append := [=];
help::pkg.utility.tasking.objs.scripter.m.load.a.append.d := 'Flag to determine whether to append commands to exsisting command list';
help::pkg.utility.tasking.objs.scripter.m.load.a.append.def := 'F';
help::pkg.utility.tasking.objs.scripter.m.load.a.append.a := 'Boolean';
help::pkg.utility.tasking.objs.scripter.m.load.a.run := [=];
help::pkg.utility.tasking.objs.scripter.m.load.a.run.d := 'Flag to determine whether commands are executed';
help::pkg.utility.tasking.objs.scripter.m.load.a.run.def := 'F';
help::pkg.utility.tasking.objs.scripter.m.load.a.run.a := 'Boolean';
help::pkg.utility.tasking.objs.scripter.m.load.s := 'load(filename, append, run)';
help::pkg.utility.tasking.objs.scripter.m.getcommands := [=];
help::pkg.utility.tasking.objs.scripter.m.getcommands.d := 'Returns a record containing the commands';
help::pkg.utility.tasking.objs.scripter.m.getcommands.s := 'getcommands()';
help::pkg.utility.tasking.objs.scripter.m.reset := [=];
help::pkg.utility.tasking.objs.scripter.m.reset.d := 'Removes all the logged commands';
help::pkg.utility.tasking.objs.scripter.m.reset.s := 'reset()';
help::pkg.utility.tasking.objs.logger := [=];
help::pkg.utility.tasking.objs.logger.m := [=];
help::pkg.utility.tasking.objs.logger.c := [=];
help::pkg.utility.tasking.objs.logger.d := 'Tool for logging';
help::pkg.utility.tasking.objs.logger.c.a.userdotaipsdir := [=];
help::pkg.utility.tasking.objs.logger.c.a.userdotaipsdir.d := 'AIPS++ info directory';
help::pkg.utility.tasking.objs.logger.c.a.userdotaipsdir.def := '$\sim$/aips++';
help::pkg.utility.tasking.objs.logger.c.a.userdotaipsdir.a := 'Any writable directory. If it doesn\' t exist it will be created';
help::pkg.utility.tasking.objs.logger.c.a.tzoffset := [=];
help::pkg.utility.tasking.objs.logger.c.a.tzoffset.d := 'Timezone offset in hours';
help::pkg.utility.tasking.objs.logger.c.a.tzoffset.def := '0';
help::pkg.utility.tasking.objs.logger.c.a.tzoffset.a := 'e.g., Socorro is -7';
help::pkg.utility.tasking.objs.logger.c.a.loggerdotfile := [=];
help::pkg.utility.tasking.objs.logger.c.a.loggerdotfile.d := 'Log file name (no path!)';
help::pkg.utility.tasking.objs.logger.c.a.loggerdotfile.def := 'aips++.log';
help::pkg.utility.tasking.objs.logger.c.a.loggerdotfile.a := 'any (none means temporary log file is used)';
help::pkg.utility.tasking.objs.logger.c.a.loggerdotdefault := [=];
help::pkg.utility.tasking.objs.logger.c.a.loggerdotdefault.d := 'Where to write log messages';
help::pkg.utility.tasking.objs.logger.c.a.loggerdotdefault.def := 'gui';
help::pkg.utility.tasking.objs.logger.c.a.loggerdotdefault.a := 'gui or screen';
help::pkg.utility.tasking.objs.logger.c.a.loggerdotshowbuttons := [=];
help::pkg.utility.tasking.objs.logger.c.a.loggerdotshowbuttons.d := 'Show buttons at bottom of the GUI?';
help::pkg.utility.tasking.objs.logger.c.a.loggerdotshowbuttons.def := 'T';
help::pkg.utility.tasking.objs.logger.c.a.loggerdotshowbuttons.a := 'Bool';
help::pkg.utility.tasking.objs.logger.c.a.loggerdotglish := [=];
help::pkg.utility.tasking.objs.logger.c.a.loggerdotglish.d := 'What to log from Glish';
help::pkg.utility.tasking.objs.logger.c.a.loggerdotglish.def := 'input';
help::pkg.utility.tasking.objs.logger.c.a.loggerdotglish.a := 'input, output, both, or none';
help::pkg.utility.tasking.objs.logger.c.a.loggerdotguishow := [=];
help::pkg.utility.tasking.objs.logger.c.a.loggerdotguishow.d := 'Which panels to show in GUI and in which order';
help::pkg.utility.tasking.objs.logger.c.a.loggerdotguishow.def := 'time,priority,message';
help::pkg.utility.tasking.objs.logger.c.a.loggerdotguishow.a := 'any of time,priority,message,origin';
help::pkg.utility.tasking.objs.logger.c.a.loggerdotheight := [=];
help::pkg.utility.tasking.objs.logger.c.a.loggerdotheight.d := 'Height of GUI panels';
help::pkg.utility.tasking.objs.logger.c.a.loggerdotheight.def := '8';
help::pkg.utility.tasking.objs.logger.c.a.loggerdotheight.a := 'Integer';
help::pkg.utility.tasking.objs.logger.c.a.loggerdottimewidth := [=];
help::pkg.utility.tasking.objs.logger.c.a.loggerdottimewidth.d := 'Width of time panel (if shown)';
help::pkg.utility.tasking.objs.logger.c.a.loggerdottimewidth.def := '20';
help::pkg.utility.tasking.objs.logger.c.a.loggerdottimewidth.a := 'Integer';
help::pkg.utility.tasking.objs.logger.c.a.loggerdotprioritywidth := [=];
help::pkg.utility.tasking.objs.logger.c.a.loggerdotprioritywidth.d := 'Width of priority panel (if shown)';
help::pkg.utility.tasking.objs.logger.c.a.loggerdotprioritywidth.def := '6';
help::pkg.utility.tasking.objs.logger.c.a.loggerdotprioritywidth.a := 'Integer';
help::pkg.utility.tasking.objs.logger.c.a.loggerdotmessagewidth := [=];
help::pkg.utility.tasking.objs.logger.c.a.loggerdotmessagewidth.d := 'Width of message panel (if shown)';
help::pkg.utility.tasking.objs.logger.c.a.loggerdotmessagewidth.def := '75';
help::pkg.utility.tasking.objs.logger.c.a.loggerdotmessagewidth.a := 'Integer';
help::pkg.utility.tasking.objs.logger.c.a.loggerdotoriginwidth := [=];
help::pkg.utility.tasking.objs.logger.c.a.loggerdotoriginwidth.d := 'Width of origin panel (if shown)';
help::pkg.utility.tasking.objs.logger.c.a.loggerdotoriginwidth.def := '25';
help::pkg.utility.tasking.objs.logger.c.a.loggerdotoriginwidth.a := 'Integer';
help::pkg.utility.tasking.objs.logger.c.a.loggerdotautoscroll := [=];
help::pkg.utility.tasking.objs.logger.c.a.loggerdotautoscroll.d := 'Scroll GUI to the end after appending a message';
help::pkg.utility.tasking.objs.logger.c.a.loggerdotautoscroll.def := 'T';
help::pkg.utility.tasking.objs.logger.c.a.loggerdotautoscroll.a := 'Bool';
help::pkg.utility.tasking.objs.logger.c.a.loggerdotbackground := [=];
help::pkg.utility.tasking.objs.logger.c.a.loggerdotbackground.d := 'Normal background color of the GUI';
help::pkg.utility.tasking.objs.logger.c.a.loggerdotbackground.def := 'xing';
help::pkg.utility.tasking.objs.logger.c.a.loggerdotbackground.a := 'String';
help::pkg.utility.tasking.objs.logger.c.logger := [=];
help::pkg.utility.tasking.objs.logger.c.logger.d := 'Construct logger tool';
help::pkg.utility.tasking.objs.logger.c.logger.a.use_gui := [=];
help::pkg.utility.tasking.objs.logger.c.logger.a.use_gui.d := 'Use GUI for logging messages';
help::pkg.utility.tasking.objs.logger.c.logger.a.use_gui.def := 'global\_use\_gui';
help::pkg.utility.tasking.objs.logger.c.logger.a.use_gui.a := 'Bool';
help::pkg.utility.tasking.objs.logger.c.logger.s := 'logger(use_gui)';
help::pkg.utility.tasking.objs.logger.m.gui := [=];
help::pkg.utility.tasking.objs.logger.m.gui.d := 'Use the GUI';
help::pkg.utility.tasking.objs.logger.m.gui.s := 'gui()';
help::pkg.utility.tasking.objs.logger.m.screen := [=];
help::pkg.utility.tasking.objs.logger.m.screen.d := 'Use the screen for logging messages';
help::pkg.utility.tasking.objs.logger.m.screen.s := 'screen()';
help::pkg.utility.tasking.objs.logger.m.attach := [=];
help::pkg.utility.tasking.objs.logger.m.attach.d := 'Attach to another log table';
help::pkg.utility.tasking.objs.logger.m.attach.a.logfile := [=];
help::pkg.utility.tasking.objs.logger.m.attach.a.logfile.d := 'Name of new log table';
help::pkg.utility.tasking.objs.logger.m.attach.a.logfile.def := 'unset';
help::pkg.utility.tasking.objs.logger.m.attach.a.logfile.a := 'String';
help::pkg.utility.tasking.objs.logger.m.attach.s := 'attach(logfile)';
help::pkg.utility.tasking.objs.logger.m.note := [=];
help::pkg.utility.tasking.objs.logger.m.note.d := 'Add a note to the logging messages';
help::pkg.utility.tasking.objs.logger.m.note.a.dots := [=];
help::pkg.utility.tasking.objs.logger.m.note.a.dots.d := 'Strings to be logged';
help::pkg.utility.tasking.objs.logger.m.note.a.dots.def := 'Empty string';
help::pkg.utility.tasking.objs.logger.m.note.a.dots.a := 'Any strings';
help::pkg.utility.tasking.objs.logger.m.note.a.origin := [=];
help::pkg.utility.tasking.objs.logger.m.note.a.origin.d := 'Origin of note';
help::pkg.utility.tasking.objs.logger.m.note.a.origin.def := '\' logger::note()\' ';
help::pkg.utility.tasking.objs.logger.m.note.a.origin.a := 'String';
help::pkg.utility.tasking.objs.logger.m.note.a.postglobally := [=];
help::pkg.utility.tasking.objs.logger.m.note.a.postglobally.d := 'Write into log table?';
help::pkg.utility.tasking.objs.logger.m.note.a.postglobally.def := 'T';
help::pkg.utility.tasking.objs.logger.m.note.a.postglobally.a := 'Bool';
help::pkg.utility.tasking.objs.logger.m.note.a.postlocally := [=];
help::pkg.utility.tasking.objs.logger.m.note.a.postlocally.d := 'Write to screen?';
help::pkg.utility.tasking.objs.logger.m.note.a.postlocally.def := 'T';
help::pkg.utility.tasking.objs.logger.m.note.a.postlocally.a := 'Bool';
help::pkg.utility.tasking.objs.logger.m.note.a.postcli := [=];
help::pkg.utility.tasking.objs.logger.m.note.a.postcli.d := 'Show message in CLI window too?';
help::pkg.utility.tasking.objs.logger.m.note.a.postcli.def := 'F';
help::pkg.utility.tasking.objs.logger.m.note.a.postcli.a := 'Bool';
help::pkg.utility.tasking.objs.logger.m.note.s := 'note(..., origin, postglobally, postlocally, postcli)';
help::pkg.utility.tasking.objs.logger.m.log := [=];
help::pkg.utility.tasking.objs.logger.m.log.d := 'Add a message to the logging system';
help::pkg.utility.tasking.objs.logger.m.log.a.timeString := [=];
help::pkg.utility.tasking.objs.logger.m.log.a.timeString.d := 'time';
help::pkg.utility.tasking.objs.logger.m.log.a.timeString.def := 'Current time';
help::pkg.utility.tasking.objs.logger.m.log.a.timeString.a := 'String';
help::pkg.utility.tasking.objs.logger.m.log.a.priority := [=];
help::pkg.utility.tasking.objs.logger.m.log.a.priority.d := 'Priority of message';
help::pkg.utility.tasking.objs.logger.m.log.a.priority.def := '';
help::pkg.utility.tasking.objs.logger.m.log.a.priority.a := 'NORMAL|DEBUGGING|WARN|SEVERE';
help::pkg.utility.tasking.objs.logger.m.log.a.message := [=];
help::pkg.utility.tasking.objs.logger.m.log.a.message.d := 'Message';
help::pkg.utility.tasking.objs.logger.m.log.a.message.def := '';
help::pkg.utility.tasking.objs.logger.m.log.a.message.a := 'String';
help::pkg.utility.tasking.objs.logger.m.log.a.origin := [=];
help::pkg.utility.tasking.objs.logger.m.log.a.origin.d := 'source of the message';
help::pkg.utility.tasking.objs.logger.m.log.a.origin.def := '[=]';
help::pkg.utility.tasking.objs.logger.m.log.a.origin.a := 'string';
help::pkg.utility.tasking.objs.logger.m.log.a.postglobally := [=];
help::pkg.utility.tasking.objs.logger.m.log.a.postglobally.d := 'Write into log table?';
help::pkg.utility.tasking.objs.logger.m.log.a.postglobally.def := 'T';
help::pkg.utility.tasking.objs.logger.m.log.a.postglobally.a := 'Bool';
help::pkg.utility.tasking.objs.logger.m.log.a.postlocally := [=];
help::pkg.utility.tasking.objs.logger.m.log.a.postlocally.d := 'Write to screen?';
help::pkg.utility.tasking.objs.logger.m.log.a.postlocally.def := 'T';
help::pkg.utility.tasking.objs.logger.m.log.a.postlocally.a := 'Bool';
help::pkg.utility.tasking.objs.logger.m.log.a.postcli := [=];
help::pkg.utility.tasking.objs.logger.m.log.a.postcli.d := 'Show message in CLI window too?';
help::pkg.utility.tasking.objs.logger.m.log.a.postcli.def := 'F';
help::pkg.utility.tasking.objs.logger.m.log.a.postcli.a := 'Bool';
help::pkg.utility.tasking.objs.logger.m.log.s := 'log(timeString, priority, message, origin, postglobally, postlocally, postcli)';
help::pkg.utility.tasking.objs.logger.m.loginput := [=];
help::pkg.utility.tasking.objs.logger.m.loginput.d := 'Log input to Glish?';
help::pkg.utility.tasking.objs.logger.m.loginput.a.dolog := [=];
help::pkg.utility.tasking.objs.logger.m.loginput.a.dolog.d := 'Do logging?';
help::pkg.utility.tasking.objs.logger.m.loginput.a.dolog.def := 'T';
help::pkg.utility.tasking.objs.logger.m.loginput.a.dolog.a := 'Bool';
help::pkg.utility.tasking.objs.logger.m.loginput.s := 'loginput(dolog)';
help::pkg.utility.tasking.objs.logger.m.logoutput := [=];
help::pkg.utility.tasking.objs.logger.m.logoutput.d := 'Log output from Glish?';
help::pkg.utility.tasking.objs.logger.m.logoutput.a.dolog := [=];
help::pkg.utility.tasking.objs.logger.m.logoutput.a.dolog.d := 'Do logging?';
help::pkg.utility.tasking.objs.logger.m.logoutput.a.dolog.def := 'T';
help::pkg.utility.tasking.objs.logger.m.logoutput.a.dolog.a := 'Bool';
help::pkg.utility.tasking.objs.logger.m.logoutput.s := 'logoutput(dolog)';
help::pkg.utility.tasking.objs.logger.m.nmessages := [=];
help::pkg.utility.tasking.objs.logger.m.nmessages.d := 'How many log messages are in the file';
help::pkg.utility.tasking.objs.logger.m.nmessages.s := 'nmessages()';
help::pkg.utility.tasking.objs.logger.m.purge := [=];
help::pkg.utility.tasking.objs.logger.m.purge.d := 'Delete some or all messages from the log file.';
help::pkg.utility.tasking.objs.logger.m.purge.a.keeplast := [=];
help::pkg.utility.tasking.objs.logger.m.purge.a.keeplast.d := 'How many messages to keep (from end)';
help::pkg.utility.tasking.objs.logger.m.purge.a.keeplast.def := '500';
help::pkg.utility.tasking.objs.logger.m.purge.a.keeplast.a := 'Int';
help::pkg.utility.tasking.objs.logger.m.purge.a.expr := [=];
help::pkg.utility.tasking.objs.logger.m.purge.a.expr.d := 'Delete messages matching this TaQL expression';
help::pkg.utility.tasking.objs.logger.m.purge.a.expr.def := '\' \' ';
help::pkg.utility.tasking.objs.logger.m.purge.a.expr.a := 'String';
help::pkg.utility.tasking.objs.logger.m.purge.s := 'purge(keeplast, expr)';
help::pkg.utility.tasking.objs.logger.m.printtofile := [=];
help::pkg.utility.tasking.objs.logger.m.printtofile.d := 'Write some or all of the log file to a text file';
help::pkg.utility.tasking.objs.logger.m.printtofile.a.num := [=];
help::pkg.utility.tasking.objs.logger.m.printtofile.a.num.d := 'How many messages to write (from end)';
help::pkg.utility.tasking.objs.logger.m.printtofile.a.num.def := '-1 (all)';
help::pkg.utility.tasking.objs.logger.m.printtofile.a.num.a := 'Int';
help::pkg.utility.tasking.objs.logger.m.printtofile.a.filename := [=];
help::pkg.utility.tasking.objs.logger.m.printtofile.a.filename.d := 'Name of the output file';
help::pkg.utility.tasking.objs.logger.m.printtofile.a.filename.def := '\' \' ';
help::pkg.utility.tasking.objs.logger.m.printtofile.a.filename.a := 'String';
help::pkg.utility.tasking.objs.logger.m.printtofile.a.colwidth := [=];
help::pkg.utility.tasking.objs.logger.m.printtofile.a.colwidth.d := 'Width of each column (0 = do not print; -1 = use default)';
help::pkg.utility.tasking.objs.logger.m.printtofile.a.colwidth.def := '[-1,-1,-1,-1]';
help::pkg.utility.tasking.objs.logger.m.printtofile.a.colwidth.a := 'Int vector';
help::pkg.utility.tasking.objs.logger.m.printtofile.a.expr := [=];
help::pkg.utility.tasking.objs.logger.m.printtofile.a.expr.d := 'select and/or sort command';
help::pkg.utility.tasking.objs.logger.m.printtofile.a.expr.def := '\' \' ';
help::pkg.utility.tasking.objs.logger.m.printtofile.a.expr.a := 'String vector';
help::pkg.utility.tasking.objs.logger.m.printtofile.a.ascommand := [=];
help::pkg.utility.tasking.objs.logger.m.printtofile.a.ascommand.d := 'Only write logged glish commands';
help::pkg.utility.tasking.objs.logger.m.printtofile.a.ascommand.def := 'F)';
help::pkg.utility.tasking.objs.logger.m.printtofile.a.ascommand.a := 'Int';
help::pkg.utility.tasking.objs.logger.m.printtofile.s := 'printtofile(num, filename, colwidth, expr, ascommand)';
help::pkg.utility.tasking.objs.logger.m.getformatted := [=];
help::pkg.utility.tasking.objs.logger.m.getformatted.d := 'Get a formatted representation of the log file';
help::pkg.utility.tasking.objs.logger.m.getformatted.a.time := [=];
help::pkg.utility.tasking.objs.logger.m.getformatted.a.time.d := '';
help::pkg.utility.tasking.objs.logger.m.getformatted.a.time.def := '';
help::pkg.utility.tasking.objs.logger.m.getformatted.a.time.a := 'String vector';
help::pkg.utility.tasking.objs.logger.m.getformatted.a.priority := [=];
help::pkg.utility.tasking.objs.logger.m.getformatted.a.priority.d := '';
help::pkg.utility.tasking.objs.logger.m.getformatted.a.priority.def := '';
help::pkg.utility.tasking.objs.logger.m.getformatted.a.priority.a := 'String vector';
help::pkg.utility.tasking.objs.logger.m.getformatted.a.messages := [=];
help::pkg.utility.tasking.objs.logger.m.getformatted.a.messages.d := '';
help::pkg.utility.tasking.objs.logger.m.getformatted.a.messages.def := '';
help::pkg.utility.tasking.objs.logger.m.getformatted.a.messages.a := 'String vector';
help::pkg.utility.tasking.objs.logger.m.getformatted.a.origin := [=];
help::pkg.utility.tasking.objs.logger.m.getformatted.a.origin.d := '';
help::pkg.utility.tasking.objs.logger.m.getformatted.a.origin.def := '';
help::pkg.utility.tasking.objs.logger.m.getformatted.a.origin.a := 'String vector';
help::pkg.utility.tasking.objs.logger.m.getformatted.a.howmany := [=];
help::pkg.utility.tasking.objs.logger.m.getformatted.a.howmany.d := 'How many to get (from end)';
help::pkg.utility.tasking.objs.logger.m.getformatted.a.howmany.def := '-1 (all)';
help::pkg.utility.tasking.objs.logger.m.getformatted.a.howmany.a := 'Int';
help::pkg.utility.tasking.objs.logger.m.getformatted.a.expr := [=];
help::pkg.utility.tasking.objs.logger.m.getformatted.a.expr.d := 'select and/or sort command (see printtofile)';
help::pkg.utility.tasking.objs.logger.m.getformatted.a.expr.def := '\' \' ';
help::pkg.utility.tasking.objs.logger.m.getformatted.a.expr.a := 'String vector';
help::pkg.utility.tasking.objs.logger.m.getformatted.a.concat := [=];
help::pkg.utility.tasking.objs.logger.m.getformatted.a.concat.d := 'Concatenate consecutive messages with the same priority into one String?';
help::pkg.utility.tasking.objs.logger.m.getformatted.a.concat.def := 'F';
help::pkg.utility.tasking.objs.logger.m.getformatted.a.concat.a := 'Bool';
help::pkg.utility.tasking.objs.logger.m.getformatted.s := 'getformatted(time, priority, messages, origin, howmany, expr, concat)';
help::pkg.utility.tasking.objs.logger.m.verbose := [=];
help::pkg.utility.tasking.objs.logger.m.verbose.d := 'Write more fields in log messages';
help::pkg.utility.tasking.objs.logger.m.verbose.a.show_time := [=];
help::pkg.utility.tasking.objs.logger.m.verbose.a.show_time.d := '';
help::pkg.utility.tasking.objs.logger.m.verbose.a.show_time.def := 'T';
help::pkg.utility.tasking.objs.logger.m.verbose.a.show_time.a := 'boolean';
help::pkg.utility.tasking.objs.logger.m.verbose.a.show_priority := [=];
help::pkg.utility.tasking.objs.logger.m.verbose.a.show_priority.d := '';
help::pkg.utility.tasking.objs.logger.m.verbose.a.show_priority.def := 'T';
help::pkg.utility.tasking.objs.logger.m.verbose.a.show_priority.a := 'boolean';
help::pkg.utility.tasking.objs.logger.m.verbose.a.show_origin := [=];
help::pkg.utility.tasking.objs.logger.m.verbose.a.show_origin.d := '';
help::pkg.utility.tasking.objs.logger.m.verbose.a.show_origin.def := 'T';
help::pkg.utility.tasking.objs.logger.m.verbose.a.show_origin.a := 'boolean';
help::pkg.utility.tasking.objs.logger.m.verbose.s := 'verbose(show_time, show_priority, show_origin)';
help::pkg.utility.tasking.objs.logger.m.brief := [=];
help::pkg.utility.tasking.objs.logger.m.brief.d := 'Write fewer fields in log messages';
help::pkg.utility.tasking.objs.logger.m.brief.a.show_time := [=];
help::pkg.utility.tasking.objs.logger.m.brief.a.show_time.d := '';
help::pkg.utility.tasking.objs.logger.m.brief.a.show_time.def := 'F';
help::pkg.utility.tasking.objs.logger.m.brief.a.show_time.a := 'boolean';
help::pkg.utility.tasking.objs.logger.m.brief.a.show_priority := [=];
help::pkg.utility.tasking.objs.logger.m.brief.a.show_priority.d := '';
help::pkg.utility.tasking.objs.logger.m.brief.a.show_priority.def := 'F';
help::pkg.utility.tasking.objs.logger.m.brief.a.show_priority.a := 'boolean';
help::pkg.utility.tasking.objs.logger.m.brief.a.show_origin := [=];
help::pkg.utility.tasking.objs.logger.m.brief.a.show_origin.d := '';
help::pkg.utility.tasking.objs.logger.m.brief.a.show_origin.def := 'F';
help::pkg.utility.tasking.objs.logger.m.brief.a.show_origin.a := 'boolean';
help::pkg.utility.tasking.objs.logger.m.brief.s := 'brief(show_time, show_priority, show_origin)';
help::pkg.utility.tasking.objs.types := [=];
help::pkg.utility.tasking.objs.types.m := [=];
help::pkg.utility.tasking.objs.types.c := [=];
help::pkg.utility.tasking.objs.types.d := 'Tool for defining types known to the tasking system';
help::pkg.utility.tasking.objs.types.m.exists := [=];
help::pkg.utility.tasking.objs.types.m.exists.d := 'Does the class, method, arg exist?';
help::pkg.utility.tasking.objs.types.m.exists.a.class := [=];
help::pkg.utility.tasking.objs.types.m.exists.a.class.d := 'Class or type of tool';
help::pkg.utility.tasking.objs.types.m.exists.a.class.def := '';
help::pkg.utility.tasking.objs.types.m.exists.a.class.a := 'String';
help::pkg.utility.tasking.objs.types.m.exists.a.method := [=];
help::pkg.utility.tasking.objs.types.m.exists.a.method.d := 'Method';
help::pkg.utility.tasking.objs.types.m.exists.a.method.def := 'unset';
help::pkg.utility.tasking.objs.types.m.exists.a.method.a := 'String';
help::pkg.utility.tasking.objs.types.m.exists.a.arg := [=];
help::pkg.utility.tasking.objs.types.m.exists.a.arg.d := 'Argument';
help::pkg.utility.tasking.objs.types.m.exists.a.arg.def := 'unset';
help::pkg.utility.tasking.objs.types.m.exists.a.arg.a := 'String';
help::pkg.utility.tasking.objs.types.m.exists.s := 'exists(class, method, arg)';
help::pkg.utility.tasking.objs.types.m.classes := [=];
help::pkg.utility.tasking.objs.types.m.classes.d := 'Return names of the classes';
help::pkg.utility.tasking.objs.types.m.classes.s := 'classes()';
help::pkg.utility.tasking.objs.types.m.class := [=];
help::pkg.utility.tasking.objs.types.m.class.d := 'Define a class or type of tool';
help::pkg.utility.tasking.objs.types.m.class.a.class := [=];
help::pkg.utility.tasking.objs.types.m.class.a.class.d := 'Class or type of tool';
help::pkg.utility.tasking.objs.types.m.class.a.class.def := '';
help::pkg.utility.tasking.objs.types.m.class.a.class.a := 'String';
help::pkg.utility.tasking.objs.types.m.class.s := 'class(class)';
help::pkg.utility.tasking.objs.types.m.group := [=];
help::pkg.utility.tasking.objs.types.m.group.d := 'Define the group name for a function';
help::pkg.utility.tasking.objs.types.m.group.a.group := [=];
help::pkg.utility.tasking.objs.types.m.group.a.group.d := 'Group name';
help::pkg.utility.tasking.objs.types.m.group.a.group.def := 'basic';
help::pkg.utility.tasking.objs.types.m.group.a.group.a := 'String';
help::pkg.utility.tasking.objs.types.m.group.s := 'group(group)';
help::pkg.utility.tasking.objs.types.m.includefile := [=];
help::pkg.utility.tasking.objs.types.m.includefile.d := 'Specify the include file for a class';
help::pkg.utility.tasking.objs.types.m.includefile.a.file := [=];
help::pkg.utility.tasking.objs.types.m.includefile.a.file.d := 'File name';
help::pkg.utility.tasking.objs.types.m.includefile.a.file.def := '';
help::pkg.utility.tasking.objs.types.m.includefile.a.file.a := 'String';
help::pkg.utility.tasking.objs.types.m.includefile.a.class := [=];
help::pkg.utility.tasking.objs.types.m.includefile.a.class.d := 'Class or type of tool';
help::pkg.utility.tasking.objs.types.m.includefile.a.class.def := 'unset';
help::pkg.utility.tasking.objs.types.m.includefile.a.class.a := 'String';
help::pkg.utility.tasking.objs.types.m.includefile.s := 'includefile(file, class)';
help::pkg.utility.tasking.objs.types.m.getincludefile := [=];
help::pkg.utility.tasking.objs.types.m.getincludefile.d := 'Get the include file for a class';
help::pkg.utility.tasking.objs.types.m.getincludefile.a.class := [=];
help::pkg.utility.tasking.objs.types.m.getincludefile.a.class.d := 'Class or type of tool';
help::pkg.utility.tasking.objs.types.m.getincludefile.a.class.def := 'unset';
help::pkg.utility.tasking.objs.types.m.getincludefile.a.class.a := 'String';
help::pkg.utility.tasking.objs.types.m.getincludefile.s := 'getincludefile(class)';
help::pkg.utility.tasking.objs.types.m.method := [=];
help::pkg.utility.tasking.objs.types.m.method.d := 'Define a method or function for a class';
help::pkg.utility.tasking.objs.types.m.method.a.method := [=];
help::pkg.utility.tasking.objs.types.m.method.a.method.d := 'Name of method';
help::pkg.utility.tasking.objs.types.m.method.a.method.def := '';
help::pkg.utility.tasking.objs.types.m.method.a.method.a := 'String';
help::pkg.utility.tasking.objs.types.m.method.a.title := [=];
help::pkg.utility.tasking.objs.types.m.method.a.title.d := 'Title';
help::pkg.utility.tasking.objs.types.m.method.a.title.def := 'unset';
help::pkg.utility.tasking.objs.types.m.method.a.title.a := 'String';
help::pkg.utility.tasking.objs.types.m.method.a.label := [=];
help::pkg.utility.tasking.objs.types.m.method.a.label.d := 'label';
help::pkg.utility.tasking.objs.types.m.method.a.label.def := 'unset';
help::pkg.utility.tasking.objs.types.m.method.a.label.a := 'String';
help::pkg.utility.tasking.objs.types.m.method.a.category := [=];
help::pkg.utility.tasking.objs.types.m.method.a.category.d := 'Category';
help::pkg.utility.tasking.objs.types.m.method.a.category.def := 'unset';
help::pkg.utility.tasking.objs.types.m.method.a.category.a := 'String';
help::pkg.utility.tasking.objs.types.m.method.s := 'method(method, title, label, category)';
help::pkg.utility.tasking.objs.types.m.list := [=];
help::pkg.utility.tasking.objs.types.m.list.d := 'Define a list of other types';
help::pkg.utility.tasking.objs.types.m.list.a.arg := [=];
help::pkg.utility.tasking.objs.types.m.list.a.arg.d := 'List of arguments';
help::pkg.utility.tasking.objs.types.m.list.a.arg.def := '';
help::pkg.utility.tasking.objs.types.m.list.a.arg.a := 'String';
help::pkg.utility.tasking.objs.types.m.list.a.types := [=];
help::pkg.utility.tasking.objs.types.m.list.a.types.d := 'List of types';
help::pkg.utility.tasking.objs.types.m.list.a.types.def := '';
help::pkg.utility.tasking.objs.types.m.list.a.types.a := 'String';
help::pkg.utility.tasking.objs.types.m.list.a.options := [=];
help::pkg.utility.tasking.objs.types.m.list.a.options.d := 'Record of options';
help::pkg.utility.tasking.objs.types.m.list.a.options.def := '';
help::pkg.utility.tasking.objs.types.m.list.a.options.a := 'Record';
help::pkg.utility.tasking.objs.types.m.list.a.name := [=];
help::pkg.utility.tasking.objs.types.m.list.a.name.d := 'Name of the composite type';
help::pkg.utility.tasking.objs.types.m.list.a.name.def := '';
help::pkg.utility.tasking.objs.types.m.list.a.name.a := 'Vector String';
help::pkg.utility.tasking.objs.types.m.list.a.names := [=];
help::pkg.utility.tasking.objs.types.m.list.a.names.d := 'Names of individual types';
help::pkg.utility.tasking.objs.types.m.list.a.names.def := '';
help::pkg.utility.tasking.objs.types.m.list.a.names.a := 'Vector String';
help::pkg.utility.tasking.objs.types.m.list.a.default := [=];
help::pkg.utility.tasking.objs.types.m.list.a.default.d := 'Default values';
help::pkg.utility.tasking.objs.types.m.list.a.default.def := 'unset';
help::pkg.utility.tasking.objs.types.m.list.a.default.a := 'Region';
help::pkg.utility.tasking.objs.types.m.list.a.dir := [=];
help::pkg.utility.tasking.objs.types.m.list.a.dir.d := 'Direction of variable';
help::pkg.utility.tasking.objs.types.m.list.a.dir.def := '\' in\' ';
help::pkg.utility.tasking.objs.types.m.list.a.dir.a := 'String: \' in\' |\' inout\' |\' out\' ';
help::pkg.utility.tasking.objs.types.m.list.a.checkeval := [=];
help::pkg.utility.tasking.objs.types.m.list.a.checkeval.d := 'Check eval\' ability';
help::pkg.utility.tasking.objs.types.m.list.a.checkeval.def := 'T';
help::pkg.utility.tasking.objs.types.m.list.a.checkeval.a := 'Boolean';
help::pkg.utility.tasking.objs.types.m.list.a.help := [=];
help::pkg.utility.tasking.objs.types.m.list.a.help.d := 'Help string: if unset, help file is used';
help::pkg.utility.tasking.objs.types.m.list.a.help.def := 'unset';
help::pkg.utility.tasking.objs.types.m.list.a.help.a := 'String';
help::pkg.utility.tasking.objs.types.m.list.a.allowunset := [=];
help::pkg.utility.tasking.objs.types.m.list.a.allowunset.d := 'Allow unset values?';
help::pkg.utility.tasking.objs.types.m.list.a.allowunset.def := 'F';
help::pkg.utility.tasking.objs.types.m.list.a.allowunset.a := 'Boolean';
help::pkg.utility.tasking.objs.types.m.list.s := 'list(arg, types, options, name, names, default, dir, checkeval, help, allowunset)';
help::pkg.utility.tasking.objs.types.m.integer := [=];
help::pkg.utility.tasking.objs.types.m.integer.d := 'Define an integer';
help::pkg.utility.tasking.objs.types.m.integer.a.arg := [=];
help::pkg.utility.tasking.objs.types.m.integer.a.arg.d := 'List of arguments';
help::pkg.utility.tasking.objs.types.m.integer.a.arg.def := '';
help::pkg.utility.tasking.objs.types.m.integer.a.arg.a := 'String';
help::pkg.utility.tasking.objs.types.m.integer.a.default := [=];
help::pkg.utility.tasking.objs.types.m.integer.a.default.d := 'Default value';
help::pkg.utility.tasking.objs.types.m.integer.a.default.def := '1';
help::pkg.utility.tasking.objs.types.m.integer.a.default.a := 'Integer';
help::pkg.utility.tasking.objs.types.m.integer.a.dir := [=];
help::pkg.utility.tasking.objs.types.m.integer.a.dir.d := 'Direction of variable';
help::pkg.utility.tasking.objs.types.m.integer.a.dir.def := '\' in\' ';
help::pkg.utility.tasking.objs.types.m.integer.a.dir.a := 'String: \' in\' |\' inout\' |\' out\' ';
help::pkg.utility.tasking.objs.types.m.integer.a.checkeval := [=];
help::pkg.utility.tasking.objs.types.m.integer.a.checkeval.d := 'Check eval\' ability';
help::pkg.utility.tasking.objs.types.m.integer.a.checkeval.def := 'T';
help::pkg.utility.tasking.objs.types.m.integer.a.checkeval.a := 'Boolean';
help::pkg.utility.tasking.objs.types.m.integer.a.help := [=];
help::pkg.utility.tasking.objs.types.m.integer.a.help.d := 'Help string: if unset, help file is used';
help::pkg.utility.tasking.objs.types.m.integer.a.help.def := 'unset';
help::pkg.utility.tasking.objs.types.m.integer.a.help.a := 'String';
help::pkg.utility.tasking.objs.types.m.integer.a.allowunset := [=];
help::pkg.utility.tasking.objs.types.m.integer.a.allowunset.d := 'Allow unset values?';
help::pkg.utility.tasking.objs.types.m.integer.a.allowunset.def := 'F';
help::pkg.utility.tasking.objs.types.m.integer.a.allowunset.a := 'Boolean';
help::pkg.utility.tasking.objs.types.m.integer.s := 'integer(arg, default, dir, checkeval, help, allowunset)';
help::pkg.utility.tasking.objs.types.m.vector_integer := [=];
help::pkg.utility.tasking.objs.types.m.vector_integer.d := 'Define a vector of integer';
help::pkg.utility.tasking.objs.types.m.vector_integer.a.arg := [=];
help::pkg.utility.tasking.objs.types.m.vector_integer.a.arg.d := 'List of arguments';
help::pkg.utility.tasking.objs.types.m.vector_integer.a.arg.def := '';
help::pkg.utility.tasking.objs.types.m.vector_integer.a.arg.a := 'String';
help::pkg.utility.tasking.objs.types.m.vector_integer.a.default := [=];
help::pkg.utility.tasking.objs.types.m.vector_integer.a.default.d := 'Default value';
help::pkg.utility.tasking.objs.types.m.vector_integer.a.default.def := '[]';
help::pkg.utility.tasking.objs.types.m.vector_integer.a.default.a := 'Vector of Int';
help::pkg.utility.tasking.objs.types.m.vector_integer.a.dir := [=];
help::pkg.utility.tasking.objs.types.m.vector_integer.a.dir.d := 'Direction of variable';
help::pkg.utility.tasking.objs.types.m.vector_integer.a.dir.def := '\' in\' ';
help::pkg.utility.tasking.objs.types.m.vector_integer.a.dir.a := 'String: \' in\' |\' inout\' |\' out\' ';
help::pkg.utility.tasking.objs.types.m.vector_integer.a.checkeval := [=];
help::pkg.utility.tasking.objs.types.m.vector_integer.a.checkeval.d := 'Check eval\' ability';
help::pkg.utility.tasking.objs.types.m.vector_integer.a.checkeval.def := 'T';
help::pkg.utility.tasking.objs.types.m.vector_integer.a.checkeval.a := 'Boolean';
help::pkg.utility.tasking.objs.types.m.vector_integer.a.help := [=];
help::pkg.utility.tasking.objs.types.m.vector_integer.a.help.d := 'Help string: if unset, help file is used';
help::pkg.utility.tasking.objs.types.m.vector_integer.a.help.def := 'unset';
help::pkg.utility.tasking.objs.types.m.vector_integer.a.help.a := 'String';
help::pkg.utility.tasking.objs.types.m.vector_integer.a.allowunset := [=];
help::pkg.utility.tasking.objs.types.m.vector_integer.a.allowunset.d := 'Allow unset values?';
help::pkg.utility.tasking.objs.types.m.vector_integer.a.allowunset.def := 'F';
help::pkg.utility.tasking.objs.types.m.vector_integer.a.allowunset.a := 'Boolean';
help::pkg.utility.tasking.objs.types.m.vector_integer.s := 'vector_integer(arg, default, dir, checkeval, help, allowunset)';
help::pkg.utility.tasking.objs.types.m.float := [=];
help::pkg.utility.tasking.objs.types.m.float.d := 'Define a float';
help::pkg.utility.tasking.objs.types.m.float.a.arg := [=];
help::pkg.utility.tasking.objs.types.m.float.a.arg.d := 'List of arguments';
help::pkg.utility.tasking.objs.types.m.float.a.arg.def := '';
help::pkg.utility.tasking.objs.types.m.float.a.arg.a := 'String';
help::pkg.utility.tasking.objs.types.m.float.a.default := [=];
help::pkg.utility.tasking.objs.types.m.float.a.default.d := 'Default value';
help::pkg.utility.tasking.objs.types.m.float.a.default.def := '0.0';
help::pkg.utility.tasking.objs.types.m.float.a.default.a := 'Float';
help::pkg.utility.tasking.objs.types.m.float.a.dir := [=];
help::pkg.utility.tasking.objs.types.m.float.a.dir.d := 'Direction of variable';
help::pkg.utility.tasking.objs.types.m.float.a.dir.def := '\' in\' ';
help::pkg.utility.tasking.objs.types.m.float.a.dir.a := 'String: \' in\' |\' inout\' |\' out\' ';
help::pkg.utility.tasking.objs.types.m.float.a.checkeval := [=];
help::pkg.utility.tasking.objs.types.m.float.a.checkeval.d := 'Check eval\' ability';
help::pkg.utility.tasking.objs.types.m.float.a.checkeval.def := 'T';
help::pkg.utility.tasking.objs.types.m.float.a.checkeval.a := 'Boolean';
help::pkg.utility.tasking.objs.types.m.float.a.help := [=];
help::pkg.utility.tasking.objs.types.m.float.a.help.d := 'Help string: if unset, help file is used';
help::pkg.utility.tasking.objs.types.m.float.a.help.def := 'unset';
help::pkg.utility.tasking.objs.types.m.float.a.help.a := 'String';
help::pkg.utility.tasking.objs.types.m.float.a.allowunset := [=];
help::pkg.utility.tasking.objs.types.m.float.a.allowunset.d := 'Allow unset values?';
help::pkg.utility.tasking.objs.types.m.float.a.allowunset.def := 'F';
help::pkg.utility.tasking.objs.types.m.float.a.allowunset.a := 'Boolean';
help::pkg.utility.tasking.objs.types.m.float.s := 'float(arg, default, dir, checkeval, help, allowunset)';
help::pkg.utility.tasking.objs.types.m.vector_float := [=];
help::pkg.utility.tasking.objs.types.m.vector_float.d := 'Define a vector of floats';
help::pkg.utility.tasking.objs.types.m.vector_float.a.arg := [=];
help::pkg.utility.tasking.objs.types.m.vector_float.a.arg.d := 'List of arguments';
help::pkg.utility.tasking.objs.types.m.vector_float.a.arg.def := '';
help::pkg.utility.tasking.objs.types.m.vector_float.a.arg.a := 'String';
help::pkg.utility.tasking.objs.types.m.vector_float.a.default := [=];
help::pkg.utility.tasking.objs.types.m.vector_float.a.default.d := 'Default value';
help::pkg.utility.tasking.objs.types.m.vector_float.a.default.def := '[]';
help::pkg.utility.tasking.objs.types.m.vector_float.a.default.a := 'Vector of floats';
help::pkg.utility.tasking.objs.types.m.vector_float.a.dir := [=];
help::pkg.utility.tasking.objs.types.m.vector_float.a.dir.d := 'Direction of variable';
help::pkg.utility.tasking.objs.types.m.vector_float.a.dir.def := '\' in\' ';
help::pkg.utility.tasking.objs.types.m.vector_float.a.dir.a := 'String: \' in\' |\' inout\' |\' out\' ';
help::pkg.utility.tasking.objs.types.m.vector_float.a.checkeval := [=];
help::pkg.utility.tasking.objs.types.m.vector_float.a.checkeval.d := 'Check eval\' ability';
help::pkg.utility.tasking.objs.types.m.vector_float.a.checkeval.def := 'T';
help::pkg.utility.tasking.objs.types.m.vector_float.a.checkeval.a := 'Boolean';
help::pkg.utility.tasking.objs.types.m.vector_float.a.help := [=];
help::pkg.utility.tasking.objs.types.m.vector_float.a.help.d := 'Help string: if unset, help file is used';
help::pkg.utility.tasking.objs.types.m.vector_float.a.help.def := 'unset';
help::pkg.utility.tasking.objs.types.m.vector_float.a.help.a := 'String';
help::pkg.utility.tasking.objs.types.m.vector_float.a.allowunset := [=];
help::pkg.utility.tasking.objs.types.m.vector_float.a.allowunset.d := 'Allow unset values?';
help::pkg.utility.tasking.objs.types.m.vector_float.a.allowunset.def := 'F';
help::pkg.utility.tasking.objs.types.m.vector_float.a.allowunset.a := 'Boolean';
help::pkg.utility.tasking.objs.types.m.vector_float.s := 'vector_float(arg, default, dir, checkeval, help, allowunset)';
help::pkg.utility.tasking.objs.types.m.double := [=];
help::pkg.utility.tasking.objs.types.m.double.d := 'Define a double';
help::pkg.utility.tasking.objs.types.m.double.a.arg := [=];
help::pkg.utility.tasking.objs.types.m.double.a.arg.d := 'List of arguments';
help::pkg.utility.tasking.objs.types.m.double.a.arg.def := '';
help::pkg.utility.tasking.objs.types.m.double.a.arg.a := 'String';
help::pkg.utility.tasking.objs.types.m.double.a.default := [=];
help::pkg.utility.tasking.objs.types.m.double.a.default.d := 'Default value';
help::pkg.utility.tasking.objs.types.m.double.a.default.def := '0.0';
help::pkg.utility.tasking.objs.types.m.double.a.default.a := 'Double';
help::pkg.utility.tasking.objs.types.m.double.a.dir := [=];
help::pkg.utility.tasking.objs.types.m.double.a.dir.d := 'Direction of variable';
help::pkg.utility.tasking.objs.types.m.double.a.dir.def := '\' in\' ';
help::pkg.utility.tasking.objs.types.m.double.a.dir.a := 'String: \' in\' |\' inout\' |\' out\' ';
help::pkg.utility.tasking.objs.types.m.double.a.checkeval := [=];
help::pkg.utility.tasking.objs.types.m.double.a.checkeval.d := 'Check eval\' ability';
help::pkg.utility.tasking.objs.types.m.double.a.checkeval.def := 'T';
help::pkg.utility.tasking.objs.types.m.double.a.checkeval.a := 'Boolean';
help::pkg.utility.tasking.objs.types.m.double.a.help := [=];
help::pkg.utility.tasking.objs.types.m.double.a.help.d := 'Help string: if unset, help file is used';
help::pkg.utility.tasking.objs.types.m.double.a.help.def := 'unset';
help::pkg.utility.tasking.objs.types.m.double.a.help.a := 'String';
help::pkg.utility.tasking.objs.types.m.double.a.allowunset := [=];
help::pkg.utility.tasking.objs.types.m.double.a.allowunset.d := 'Allow unset values?';
help::pkg.utility.tasking.objs.types.m.double.a.allowunset.def := 'F';
help::pkg.utility.tasking.objs.types.m.double.a.allowunset.a := 'Boolean';
help::pkg.utility.tasking.objs.types.m.double.s := 'double(arg, default, dir, checkeval, help, allowunset)';
help::pkg.utility.tasking.objs.types.m.vector_double := [=];
help::pkg.utility.tasking.objs.types.m.vector_double.d := 'Define a vector of doubles';
help::pkg.utility.tasking.objs.types.m.vector_double.a.arg := [=];
help::pkg.utility.tasking.objs.types.m.vector_double.a.arg.d := 'List of arguments';
help::pkg.utility.tasking.objs.types.m.vector_double.a.arg.def := '';
help::pkg.utility.tasking.objs.types.m.vector_double.a.arg.a := 'String';
help::pkg.utility.tasking.objs.types.m.vector_double.a.default := [=];
help::pkg.utility.tasking.objs.types.m.vector_double.a.default.d := 'Default value';
help::pkg.utility.tasking.objs.types.m.vector_double.a.default.def := '[]';
help::pkg.utility.tasking.objs.types.m.vector_double.a.default.a := 'Vector of doubles';
help::pkg.utility.tasking.objs.types.m.vector_double.a.dir := [=];
help::pkg.utility.tasking.objs.types.m.vector_double.a.dir.d := 'Direction of variable';
help::pkg.utility.tasking.objs.types.m.vector_double.a.dir.def := '\' in\' ';
help::pkg.utility.tasking.objs.types.m.vector_double.a.dir.a := 'String: \' in\' |\' inout\' |\' out\' ';
help::pkg.utility.tasking.objs.types.m.vector_double.a.checkeval := [=];
help::pkg.utility.tasking.objs.types.m.vector_double.a.checkeval.d := 'Check eval\' ability';
help::pkg.utility.tasking.objs.types.m.vector_double.a.checkeval.def := 'T';
help::pkg.utility.tasking.objs.types.m.vector_double.a.checkeval.a := 'Boolean';
help::pkg.utility.tasking.objs.types.m.vector_double.a.help := [=];
help::pkg.utility.tasking.objs.types.m.vector_double.a.help.d := 'Help string: if unset, help file is used';
help::pkg.utility.tasking.objs.types.m.vector_double.a.help.def := 'unset';
help::pkg.utility.tasking.objs.types.m.vector_double.a.help.a := 'String';
help::pkg.utility.tasking.objs.types.m.vector_double.a.allowunset := [=];
help::pkg.utility.tasking.objs.types.m.vector_double.a.allowunset.d := 'Allow unset values?';
help::pkg.utility.tasking.objs.types.m.vector_double.a.allowunset.def := 'F';
help::pkg.utility.tasking.objs.types.m.vector_double.a.allowunset.a := 'Boolean';
help::pkg.utility.tasking.objs.types.m.vector_double.s := 'vector_double(arg, default, dir, checkeval, help, allowunset)';
help::pkg.utility.tasking.objs.types.m.complex := [=];
help::pkg.utility.tasking.objs.types.m.complex.d := 'Define a complex';
help::pkg.utility.tasking.objs.types.m.complex.a.arg := [=];
help::pkg.utility.tasking.objs.types.m.complex.a.arg.d := 'List of arguments';
help::pkg.utility.tasking.objs.types.m.complex.a.arg.def := '';
help::pkg.utility.tasking.objs.types.m.complex.a.arg.a := 'String';
help::pkg.utility.tasking.objs.types.m.complex.a.default := [=];
help::pkg.utility.tasking.objs.types.m.complex.a.default.d := 'Default value';
help::pkg.utility.tasking.objs.types.m.complex.a.default.def := '0+0i';
help::pkg.utility.tasking.objs.types.m.complex.a.default.a := 'Complex';
help::pkg.utility.tasking.objs.types.m.complex.a.dir := [=];
help::pkg.utility.tasking.objs.types.m.complex.a.dir.d := 'Direction of variable';
help::pkg.utility.tasking.objs.types.m.complex.a.dir.def := '\' in\' ';
help::pkg.utility.tasking.objs.types.m.complex.a.dir.a := 'String: \' in\' |\' inout\' |\' out\' ';
help::pkg.utility.tasking.objs.types.m.complex.a.checkeval := [=];
help::pkg.utility.tasking.objs.types.m.complex.a.checkeval.d := 'Check eval\' ability';
help::pkg.utility.tasking.objs.types.m.complex.a.checkeval.def := 'T';
help::pkg.utility.tasking.objs.types.m.complex.a.checkeval.a := 'Boolean';
help::pkg.utility.tasking.objs.types.m.complex.a.help := [=];
help::pkg.utility.tasking.objs.types.m.complex.a.help.d := 'Help string: if unset, help file is used';
help::pkg.utility.tasking.objs.types.m.complex.a.help.def := 'unset';
help::pkg.utility.tasking.objs.types.m.complex.a.help.a := 'String';
help::pkg.utility.tasking.objs.types.m.complex.a.allowunset := [=];
help::pkg.utility.tasking.objs.types.m.complex.a.allowunset.d := 'Allow unset values?';
help::pkg.utility.tasking.objs.types.m.complex.a.allowunset.def := 'F';
help::pkg.utility.tasking.objs.types.m.complex.a.allowunset.a := 'Boolean';
help::pkg.utility.tasking.objs.types.m.complex.s := 'complex(arg, default, dir, checkeval, help, allowunset)';
help::pkg.utility.tasking.objs.types.m.vector_complex := [=];
help::pkg.utility.tasking.objs.types.m.vector_complex.d := 'Define a vector of complexs';
help::pkg.utility.tasking.objs.types.m.vector_complex.a.arg := [=];
help::pkg.utility.tasking.objs.types.m.vector_complex.a.arg.d := 'List of arguments';
help::pkg.utility.tasking.objs.types.m.vector_complex.a.arg.def := '';
help::pkg.utility.tasking.objs.types.m.vector_complex.a.arg.a := 'String';
help::pkg.utility.tasking.objs.types.m.vector_complex.a.default := [=];
help::pkg.utility.tasking.objs.types.m.vector_complex.a.default.d := 'Default value';
help::pkg.utility.tasking.objs.types.m.vector_complex.a.default.def := '[]';
help::pkg.utility.tasking.objs.types.m.vector_complex.a.default.a := 'Vector of complexs';
help::pkg.utility.tasking.objs.types.m.vector_complex.a.dir := [=];
help::pkg.utility.tasking.objs.types.m.vector_complex.a.dir.d := 'Direction of variable';
help::pkg.utility.tasking.objs.types.m.vector_complex.a.dir.def := '\' in\' ';
help::pkg.utility.tasking.objs.types.m.vector_complex.a.dir.a := 'String: \' in\' |\' inout\' |\' out\' ';
help::pkg.utility.tasking.objs.types.m.vector_complex.a.checkeval := [=];
help::pkg.utility.tasking.objs.types.m.vector_complex.a.checkeval.d := 'Check eval\' ability';
help::pkg.utility.tasking.objs.types.m.vector_complex.a.checkeval.def := 'T';
help::pkg.utility.tasking.objs.types.m.vector_complex.a.checkeval.a := 'Boolean';
help::pkg.utility.tasking.objs.types.m.vector_complex.a.help := [=];
help::pkg.utility.tasking.objs.types.m.vector_complex.a.help.d := 'Help string: if unset, help file is used';
help::pkg.utility.tasking.objs.types.m.vector_complex.a.help.def := 'unset';
help::pkg.utility.tasking.objs.types.m.vector_complex.a.help.a := 'String';
help::pkg.utility.tasking.objs.types.m.vector_complex.a.allowunset := [=];
help::pkg.utility.tasking.objs.types.m.vector_complex.a.allowunset.d := 'Allow unset values?';
help::pkg.utility.tasking.objs.types.m.vector_complex.a.allowunset.def := 'F';
help::pkg.utility.tasking.objs.types.m.vector_complex.a.allowunset.a := 'Boolean';
help::pkg.utility.tasking.objs.types.m.vector_complex.s := 'vector_complex(arg, default, dir, checkeval, help, allowunset)';
help::pkg.utility.tasking.objs.types.m.string := [=];
help::pkg.utility.tasking.objs.types.m.string.d := 'Define a string';
help::pkg.utility.tasking.objs.types.m.string.a.arg := [=];
help::pkg.utility.tasking.objs.types.m.string.a.arg.d := 'List of arguments';
help::pkg.utility.tasking.objs.types.m.string.a.arg.def := '';
help::pkg.utility.tasking.objs.types.m.string.a.arg.a := 'String';
help::pkg.utility.tasking.objs.types.m.string.a.default := [=];
help::pkg.utility.tasking.objs.types.m.string.a.default.d := 'Default value';
help::pkg.utility.tasking.objs.types.m.string.a.default.def := '\' \' ';
help::pkg.utility.tasking.objs.types.m.string.a.default.a := 'String';
help::pkg.utility.tasking.objs.types.m.string.a.dir := [=];
help::pkg.utility.tasking.objs.types.m.string.a.dir.d := 'Direction of variable';
help::pkg.utility.tasking.objs.types.m.string.a.dir.def := '\' in\' ';
help::pkg.utility.tasking.objs.types.m.string.a.dir.a := 'String: \' in\' |\' inout\' |\' out\' ';
help::pkg.utility.tasking.objs.types.m.string.a.checkeval := [=];
help::pkg.utility.tasking.objs.types.m.string.a.checkeval.d := 'Check eval\' ability';
help::pkg.utility.tasking.objs.types.m.string.a.checkeval.def := 'F';
help::pkg.utility.tasking.objs.types.m.string.a.checkeval.a := 'Boolean';
help::pkg.utility.tasking.objs.types.m.string.a.help := [=];
help::pkg.utility.tasking.objs.types.m.string.a.help.d := 'Help string: if unset, help file is used';
help::pkg.utility.tasking.objs.types.m.string.a.help.def := 'unset';
help::pkg.utility.tasking.objs.types.m.string.a.help.a := 'String';
help::pkg.utility.tasking.objs.types.m.string.a.allowunset := [=];
help::pkg.utility.tasking.objs.types.m.string.a.allowunset.d := 'Allow unset values?';
help::pkg.utility.tasking.objs.types.m.string.a.allowunset.def := 'F';
help::pkg.utility.tasking.objs.types.m.string.a.allowunset.a := 'Boolean';
help::pkg.utility.tasking.objs.types.m.string.s := 'string(arg, default, dir, checkeval, help, allowunset)';
help::pkg.utility.tasking.objs.types.m.vector_string := [=];
help::pkg.utility.tasking.objs.types.m.vector_string.d := 'Define a vector of strings';
help::pkg.utility.tasking.objs.types.m.vector_string.a.arg := [=];
help::pkg.utility.tasking.objs.types.m.vector_string.a.arg.d := 'List of arguments';
help::pkg.utility.tasking.objs.types.m.vector_string.a.arg.def := '';
help::pkg.utility.tasking.objs.types.m.vector_string.a.arg.a := 'String';
help::pkg.utility.tasking.objs.types.m.vector_string.a.default := [=];
help::pkg.utility.tasking.objs.types.m.vector_string.a.default.d := 'Default value';
help::pkg.utility.tasking.objs.types.m.vector_string.a.default.def := '[\' \' ]';
help::pkg.utility.tasking.objs.types.m.vector_string.a.default.a := 'Vector of strings';
help::pkg.utility.tasking.objs.types.m.vector_string.a.dir := [=];
help::pkg.utility.tasking.objs.types.m.vector_string.a.dir.d := 'Direction of variable';
help::pkg.utility.tasking.objs.types.m.vector_string.a.dir.def := '\' in\' ';
help::pkg.utility.tasking.objs.types.m.vector_string.a.dir.a := 'String: \' in\' |\' inout\' |\' out\' ';
help::pkg.utility.tasking.objs.types.m.vector_string.a.checkeval := [=];
help::pkg.utility.tasking.objs.types.m.vector_string.a.checkeval.d := 'Check eval\' ability';
help::pkg.utility.tasking.objs.types.m.vector_string.a.checkeval.def := 'F';
help::pkg.utility.tasking.objs.types.m.vector_string.a.checkeval.a := 'Boolean';
help::pkg.utility.tasking.objs.types.m.vector_string.a.help := [=];
help::pkg.utility.tasking.objs.types.m.vector_string.a.help.d := 'Help string: if unset, help file is used';
help::pkg.utility.tasking.objs.types.m.vector_string.a.help.def := 'unset';
help::pkg.utility.tasking.objs.types.m.vector_string.a.help.a := 'String';
help::pkg.utility.tasking.objs.types.m.vector_string.a.allowunset := [=];
help::pkg.utility.tasking.objs.types.m.vector_string.a.allowunset.d := 'Allow unset values?';
help::pkg.utility.tasking.objs.types.m.vector_string.a.allowunset.def := 'F';
help::pkg.utility.tasking.objs.types.m.vector_string.a.allowunset.a := 'Boolean';
help::pkg.utility.tasking.objs.types.m.vector_string.s := 'vector_string(arg, default, dir, checkeval, help, allowunset)';
help::pkg.utility.tasking.objs.types.m.measure := [=];
help::pkg.utility.tasking.objs.types.m.measure.d := 'Define a measure';
help::pkg.utility.tasking.objs.types.m.measure.a.arg := [=];
help::pkg.utility.tasking.objs.types.m.measure.a.arg.d := 'List of arguments';
help::pkg.utility.tasking.objs.types.m.measure.a.arg.def := '';
help::pkg.utility.tasking.objs.types.m.measure.a.arg.a := 'String';
help::pkg.utility.tasking.objs.types.m.measure.a.default := [=];
help::pkg.utility.tasking.objs.types.m.measure.a.default.d := 'Default value';
help::pkg.utility.tasking.objs.types.m.measure.a.default.def := '\' dm.direction(\' b1950\' , \' 0deg\' , \' 0deg\' )\' ';
help::pkg.utility.tasking.objs.types.m.measure.a.default.a := 'Measure';
help::pkg.utility.tasking.objs.types.m.measure.a.dir := [=];
help::pkg.utility.tasking.objs.types.m.measure.a.dir.d := 'Direction of variable';
help::pkg.utility.tasking.objs.types.m.measure.a.dir.def := '\' in\' ';
help::pkg.utility.tasking.objs.types.m.measure.a.dir.a := 'String: \' in\' |\' inout\' |\' out\' ';
help::pkg.utility.tasking.objs.types.m.measure.a.checkeval := [=];
help::pkg.utility.tasking.objs.types.m.measure.a.checkeval.d := 'Check eval\' ability';
help::pkg.utility.tasking.objs.types.m.measure.a.checkeval.def := 'T';
help::pkg.utility.tasking.objs.types.m.measure.a.checkeval.a := 'Boolean';
help::pkg.utility.tasking.objs.types.m.measure.a.help := [=];
help::pkg.utility.tasking.objs.types.m.measure.a.help.d := 'Help string: if unset, help file is used';
help::pkg.utility.tasking.objs.types.m.measure.a.help.def := 'unset';
help::pkg.utility.tasking.objs.types.m.measure.a.help.a := 'String';
help::pkg.utility.tasking.objs.types.m.measure.a.allowunset := [=];
help::pkg.utility.tasking.objs.types.m.measure.a.allowunset.d := 'Allow unset values?';
help::pkg.utility.tasking.objs.types.m.measure.a.allowunset.def := 'F';
help::pkg.utility.tasking.objs.types.m.measure.a.allowunset.a := 'Boolean';
help::pkg.utility.tasking.objs.types.m.measure.s := 'measure(arg, default, dir, checkeval, help, allowunset)';
help::pkg.utility.tasking.objs.types.m.measurecodes := [=];
help::pkg.utility.tasking.objs.types.m.measurecodes.d := 'Define the reference code for a measure';
help::pkg.utility.tasking.objs.types.m.measurecodes.a.arg := [=];
help::pkg.utility.tasking.objs.types.m.measurecodes.a.arg.d := 'List of arguments';
help::pkg.utility.tasking.objs.types.m.measurecodes.a.arg.def := '';
help::pkg.utility.tasking.objs.types.m.measurecodes.a.arg.a := 'String';
help::pkg.utility.tasking.objs.types.m.measurecodes.a.default := [=];
help::pkg.utility.tasking.objs.types.m.measurecodes.a.default.d := 'Default value';
help::pkg.utility.tasking.objs.types.m.measurecodes.a.default.def := '\' dm.direction(\' b1950\' , \' 0deg\' , \' 0deg\' )\' ';
help::pkg.utility.tasking.objs.types.m.measurecodes.a.default.a := 'Measure';
help::pkg.utility.tasking.objs.types.m.measurecodes.a.dir := [=];
help::pkg.utility.tasking.objs.types.m.measurecodes.a.dir.d := 'Direction of variable';
help::pkg.utility.tasking.objs.types.m.measurecodes.a.dir.def := '\' in\' ';
help::pkg.utility.tasking.objs.types.m.measurecodes.a.dir.a := 'String: \' in\' |\' inout\' |\' out\' ';
help::pkg.utility.tasking.objs.types.m.measurecodes.a.options := [=];
help::pkg.utility.tasking.objs.types.m.measurecodes.a.options.d := 'List of options';
help::pkg.utility.tasking.objs.types.m.measurecodes.a.options.def := 'unset';
help::pkg.utility.tasking.objs.types.m.measurecodes.a.options.a := 'Vector of strings';
help::pkg.utility.tasking.objs.types.m.measurecodes.a.checkeval := [=];
help::pkg.utility.tasking.objs.types.m.measurecodes.a.checkeval.d := 'Check eval\' ability';
help::pkg.utility.tasking.objs.types.m.measurecodes.a.checkeval.def := 'T';
help::pkg.utility.tasking.objs.types.m.measurecodes.a.checkeval.a := 'Boolean';
help::pkg.utility.tasking.objs.types.m.measurecodes.a.help := [=];
help::pkg.utility.tasking.objs.types.m.measurecodes.a.help.d := 'Help string: if unset, help file is used';
help::pkg.utility.tasking.objs.types.m.measurecodes.a.help.def := 'unset';
help::pkg.utility.tasking.objs.types.m.measurecodes.a.help.a := 'String';
help::pkg.utility.tasking.objs.types.m.measurecodes.a.allowunset := [=];
help::pkg.utility.tasking.objs.types.m.measurecodes.a.allowunset.d := 'Allow unset values?';
help::pkg.utility.tasking.objs.types.m.measurecodes.a.allowunset.def := 'F';
help::pkg.utility.tasking.objs.types.m.measurecodes.a.allowunset.a := 'Boolean';
help::pkg.utility.tasking.objs.types.m.measurecodes.s := 'measurecodes(arg, default, dir, options, checkeval, help, allowunset)';
help::pkg.utility.tasking.objs.types.m.epoch := [=];
help::pkg.utility.tasking.objs.types.m.epoch.d := 'Define an epoch measure';
help::pkg.utility.tasking.objs.types.m.epoch.a.arg := [=];
help::pkg.utility.tasking.objs.types.m.epoch.a.arg.d := 'List of arguments';
help::pkg.utility.tasking.objs.types.m.epoch.a.arg.def := '';
help::pkg.utility.tasking.objs.types.m.epoch.a.arg.a := 'String';
help::pkg.utility.tasking.objs.types.m.epoch.a.default := [=];
help::pkg.utility.tasking.objs.types.m.epoch.a.default.d := 'Default value';
help::pkg.utility.tasking.objs.types.m.epoch.a.default.def := 'dm.epoch(\' utc\' , \' today\' )';
help::pkg.utility.tasking.objs.types.m.epoch.a.default.a := 'Measure';
help::pkg.utility.tasking.objs.types.m.epoch.a.dir := [=];
help::pkg.utility.tasking.objs.types.m.epoch.a.dir.d := 'Direction of variable';
help::pkg.utility.tasking.objs.types.m.epoch.a.dir.def := '\' in\' ';
help::pkg.utility.tasking.objs.types.m.epoch.a.dir.a := 'String: \' in\' |\' inout\' |\' out\' ';
help::pkg.utility.tasking.objs.types.m.epoch.a.checkeval := [=];
help::pkg.utility.tasking.objs.types.m.epoch.a.checkeval.d := 'Check eval\' ability';
help::pkg.utility.tasking.objs.types.m.epoch.a.checkeval.def := 'T';
help::pkg.utility.tasking.objs.types.m.epoch.a.checkeval.a := 'Boolean';
help::pkg.utility.tasking.objs.types.m.epoch.a.help := [=];
help::pkg.utility.tasking.objs.types.m.epoch.a.help.d := 'Help string: if unset, help file is used';
help::pkg.utility.tasking.objs.types.m.epoch.a.help.def := 'unset';
help::pkg.utility.tasking.objs.types.m.epoch.a.help.a := 'String';
help::pkg.utility.tasking.objs.types.m.epoch.a.allowunset := [=];
help::pkg.utility.tasking.objs.types.m.epoch.a.allowunset.d := 'Allow unset values?';
help::pkg.utility.tasking.objs.types.m.epoch.a.allowunset.def := 'F';
help::pkg.utility.tasking.objs.types.m.epoch.a.allowunset.a := 'Boolean';
help::pkg.utility.tasking.objs.types.m.epoch.s := 'epoch(arg, default, dir, checkeval, help, allowunset)';
help::pkg.utility.tasking.objs.types.m.position := [=];
help::pkg.utility.tasking.objs.types.m.position.d := 'Define a position measure';
help::pkg.utility.tasking.objs.types.m.position.a.arg := [=];
help::pkg.utility.tasking.objs.types.m.position.a.arg.d := 'List of arguments';
help::pkg.utility.tasking.objs.types.m.position.a.arg.def := '';
help::pkg.utility.tasking.objs.types.m.position.a.arg.a := 'String';
help::pkg.utility.tasking.objs.types.m.position.a.default := [=];
help::pkg.utility.tasking.objs.types.m.position.a.default.d := 'Default value';
help::pkg.utility.tasking.objs.types.m.position.a.default.def := 'dm.observatory(\' vla\' )';
help::pkg.utility.tasking.objs.types.m.position.a.default.a := 'Measure';
help::pkg.utility.tasking.objs.types.m.position.a.dir := [=];
help::pkg.utility.tasking.objs.types.m.position.a.dir.d := 'Direction of variable';
help::pkg.utility.tasking.objs.types.m.position.a.dir.def := '\' in\' ';
help::pkg.utility.tasking.objs.types.m.position.a.dir.a := 'String: \' in\' |\' inout\' |\' out\' ';
help::pkg.utility.tasking.objs.types.m.position.a.checkeval := [=];
help::pkg.utility.tasking.objs.types.m.position.a.checkeval.d := 'Check eval\' ability';
help::pkg.utility.tasking.objs.types.m.position.a.checkeval.def := 'T';
help::pkg.utility.tasking.objs.types.m.position.a.checkeval.a := 'Boolean';
help::pkg.utility.tasking.objs.types.m.position.a.help := [=];
help::pkg.utility.tasking.objs.types.m.position.a.help.d := 'Help string: if unset, help file is used';
help::pkg.utility.tasking.objs.types.m.position.a.help.def := 'unset';
help::pkg.utility.tasking.objs.types.m.position.a.help.a := 'String';
help::pkg.utility.tasking.objs.types.m.position.a.allowunset := [=];
help::pkg.utility.tasking.objs.types.m.position.a.allowunset.d := 'Allow unset values?';
help::pkg.utility.tasking.objs.types.m.position.a.allowunset.def := 'F';
help::pkg.utility.tasking.objs.types.m.position.a.allowunset.a := 'Boolean';
help::pkg.utility.tasking.objs.types.m.position.s := 'position(arg, default, dir, checkeval, help, allowunset)';
help::pkg.utility.tasking.objs.types.m.direction := [=];
help::pkg.utility.tasking.objs.types.m.direction.d := 'Define a direction measure';
help::pkg.utility.tasking.objs.types.m.direction.a.arg := [=];
help::pkg.utility.tasking.objs.types.m.direction.a.arg.d := 'List of arguments';
help::pkg.utility.tasking.objs.types.m.direction.a.arg.def := '';
help::pkg.utility.tasking.objs.types.m.direction.a.arg.a := 'String';
help::pkg.utility.tasking.objs.types.m.direction.a.default := [=];
help::pkg.utility.tasking.objs.types.m.direction.a.default.d := 'Default value';
help::pkg.utility.tasking.objs.types.m.direction.a.default.def := 'dm.direction(\' b1950\' , \' 0deg\' , \' 0deg\' )';
help::pkg.utility.tasking.objs.types.m.direction.a.default.a := 'Measure';
help::pkg.utility.tasking.objs.types.m.direction.a.dir := [=];
help::pkg.utility.tasking.objs.types.m.direction.a.dir.d := 'Direction of variable';
help::pkg.utility.tasking.objs.types.m.direction.a.dir.def := '\' in\' ';
help::pkg.utility.tasking.objs.types.m.direction.a.dir.a := 'String: \' in\' |\' inout\' |\' out\' ';
help::pkg.utility.tasking.objs.types.m.direction.a.checkeval := [=];
help::pkg.utility.tasking.objs.types.m.direction.a.checkeval.d := 'Check eval\' ability';
help::pkg.utility.tasking.objs.types.m.direction.a.checkeval.def := 'T';
help::pkg.utility.tasking.objs.types.m.direction.a.checkeval.a := 'Boolean';
help::pkg.utility.tasking.objs.types.m.direction.a.help := [=];
help::pkg.utility.tasking.objs.types.m.direction.a.help.d := 'Help string: if unset, help file is used';
help::pkg.utility.tasking.objs.types.m.direction.a.help.def := 'unset';
help::pkg.utility.tasking.objs.types.m.direction.a.help.a := 'String';
help::pkg.utility.tasking.objs.types.m.direction.a.allowunset := [=];
help::pkg.utility.tasking.objs.types.m.direction.a.allowunset.d := 'Allow unset values?';
help::pkg.utility.tasking.objs.types.m.direction.a.allowunset.def := 'F';
help::pkg.utility.tasking.objs.types.m.direction.a.allowunset.a := 'Boolean';
help::pkg.utility.tasking.objs.types.m.direction.s := 'direction(arg, default, dir, checkeval, help, allowunset)';
help::pkg.utility.tasking.objs.types.m.quantity := [=];
help::pkg.utility.tasking.objs.types.m.quantity.d := 'Define a quantity';
help::pkg.utility.tasking.objs.types.m.quantity.a.arg := [=];
help::pkg.utility.tasking.objs.types.m.quantity.a.arg.d := 'List of arguments';
help::pkg.utility.tasking.objs.types.m.quantity.a.arg.def := '';
help::pkg.utility.tasking.objs.types.m.quantity.a.arg.a := 'String';
help::pkg.utility.tasking.objs.types.m.quantity.a.default := [=];
help::pkg.utility.tasking.objs.types.m.quantity.a.default.d := 'Default value';
help::pkg.utility.tasking.objs.types.m.quantity.a.default.def := '\' 0deg\' ';
help::pkg.utility.tasking.objs.types.m.quantity.a.default.a := 'Quantity';
help::pkg.utility.tasking.objs.types.m.quantity.a.dir := [=];
help::pkg.utility.tasking.objs.types.m.quantity.a.dir.d := 'Direction of variable';
help::pkg.utility.tasking.objs.types.m.quantity.a.dir.def := '\' in\' ';
help::pkg.utility.tasking.objs.types.m.quantity.a.dir.a := 'String: \' in\' |\' inout\' |\' out\' ';
help::pkg.utility.tasking.objs.types.m.quantity.a.checkeval := [=];
help::pkg.utility.tasking.objs.types.m.quantity.a.checkeval.d := 'Check eval\' ability';
help::pkg.utility.tasking.objs.types.m.quantity.a.checkeval.def := 'T';
help::pkg.utility.tasking.objs.types.m.quantity.a.checkeval.a := 'Boolean';
help::pkg.utility.tasking.objs.types.m.quantity.a.help := [=];
help::pkg.utility.tasking.objs.types.m.quantity.a.help.d := 'Help string: if unset, help file is used';
help::pkg.utility.tasking.objs.types.m.quantity.a.help.def := 'unset';
help::pkg.utility.tasking.objs.types.m.quantity.a.help.a := 'String';
help::pkg.utility.tasking.objs.types.m.quantity.a.options := [=];
help::pkg.utility.tasking.objs.types.m.quantity.a.options.d := 'Default type';
help::pkg.utility.tasking.objs.types.m.quantity.a.options.def := 'angle|time|flux|unnormalizedfluxdensity|vel|long|lat|len|temp|freq';
help::pkg.utility.tasking.objs.types.m.quantity.a.options.a := 'Vector of strings';
help::pkg.utility.tasking.objs.types.m.quantity.a.allowunset := [=];
help::pkg.utility.tasking.objs.types.m.quantity.a.allowunset.d := 'Allow unset values?';
help::pkg.utility.tasking.objs.types.m.quantity.a.allowunset.def := 'F';
help::pkg.utility.tasking.objs.types.m.quantity.a.allowunset.a := 'Boolean';
help::pkg.utility.tasking.objs.types.m.quantity.s := 'quantity(arg, default, dir, checkeval, help, options, allowunset)';
help::pkg.utility.tasking.objs.types.m.choice := [=];
help::pkg.utility.tasking.objs.types.m.choice.d := 'Choose one from a list of strings';
help::pkg.utility.tasking.objs.types.m.choice.a.arg := [=];
help::pkg.utility.tasking.objs.types.m.choice.a.arg.d := 'List of arguments';
help::pkg.utility.tasking.objs.types.m.choice.a.arg.def := '';
help::pkg.utility.tasking.objs.types.m.choice.a.arg.a := 'String';
help::pkg.utility.tasking.objs.types.m.choice.a.default := [=];
help::pkg.utility.tasking.objs.types.m.choice.a.default.d := 'Default value';
help::pkg.utility.tasking.objs.types.m.choice.a.default.def := '\' \' ';
help::pkg.utility.tasking.objs.types.m.choice.a.default.a := 'String';
help::pkg.utility.tasking.objs.types.m.choice.a.options := [=];
help::pkg.utility.tasking.objs.types.m.choice.a.options.d := 'List of options';
help::pkg.utility.tasking.objs.types.m.choice.a.options.def := 'unset';
help::pkg.utility.tasking.objs.types.m.choice.a.options.a := 'Vector of strings';
help::pkg.utility.tasking.objs.types.m.choice.a.dir := [=];
help::pkg.utility.tasking.objs.types.m.choice.a.dir.d := 'Direction of variable';
help::pkg.utility.tasking.objs.types.m.choice.a.dir.def := '\' in\' ';
help::pkg.utility.tasking.objs.types.m.choice.a.dir.a := 'String: \' in\' |\' inout\' |\' out\' ';
help::pkg.utility.tasking.objs.types.m.choice.a.checkeval := [=];
help::pkg.utility.tasking.objs.types.m.choice.a.checkeval.d := 'Check eval\' ability';
help::pkg.utility.tasking.objs.types.m.choice.a.checkeval.def := 'T';
help::pkg.utility.tasking.objs.types.m.choice.a.checkeval.a := 'Boolean';
help::pkg.utility.tasking.objs.types.m.choice.a.help := [=];
help::pkg.utility.tasking.objs.types.m.choice.a.help.d := 'Help string: if unset, help file is used';
help::pkg.utility.tasking.objs.types.m.choice.a.help.def := 'unset';
help::pkg.utility.tasking.objs.types.m.choice.a.help.a := 'String';
help::pkg.utility.tasking.objs.types.m.choice.a.allowunset := [=];
help::pkg.utility.tasking.objs.types.m.choice.a.allowunset.d := 'Allow unset values?';
help::pkg.utility.tasking.objs.types.m.choice.a.allowunset.def := 'F';
help::pkg.utility.tasking.objs.types.m.choice.a.allowunset.a := 'Boolean';
help::pkg.utility.tasking.objs.types.m.choice.s := 'choice(arg, default, options, dir, checkeval, help, allowunset)';
help::pkg.utility.tasking.objs.types.m.check := [=];
help::pkg.utility.tasking.objs.types.m.check.d := 'Choose one or more from a list of strings';
help::pkg.utility.tasking.objs.types.m.check.a.arg := [=];
help::pkg.utility.tasking.objs.types.m.check.a.arg.d := 'List of arguments';
help::pkg.utility.tasking.objs.types.m.check.a.arg.def := '';
help::pkg.utility.tasking.objs.types.m.check.a.arg.a := 'String';
help::pkg.utility.tasking.objs.types.m.check.a.default := [=];
help::pkg.utility.tasking.objs.types.m.check.a.default.d := 'Default value';
help::pkg.utility.tasking.objs.types.m.check.a.default.def := '\' \' ';
help::pkg.utility.tasking.objs.types.m.check.a.default.a := 'String';
help::pkg.utility.tasking.objs.types.m.check.a.options := [=];
help::pkg.utility.tasking.objs.types.m.check.a.options.d := 'List of options';
help::pkg.utility.tasking.objs.types.m.check.a.options.def := 'unset';
help::pkg.utility.tasking.objs.types.m.check.a.options.a := 'Vector of strings';
help::pkg.utility.tasking.objs.types.m.check.a.dir := [=];
help::pkg.utility.tasking.objs.types.m.check.a.dir.d := 'Direction of variable';
help::pkg.utility.tasking.objs.types.m.check.a.dir.def := '\' in\' ';
help::pkg.utility.tasking.objs.types.m.check.a.dir.a := 'String: \' in\' |\' inout\' |\' out\' ';
help::pkg.utility.tasking.objs.types.m.check.a.checkeval := [=];
help::pkg.utility.tasking.objs.types.m.check.a.checkeval.d := 'Check eval\' ability';
help::pkg.utility.tasking.objs.types.m.check.a.checkeval.def := 'T';
help::pkg.utility.tasking.objs.types.m.check.a.checkeval.a := 'Boolean';
help::pkg.utility.tasking.objs.types.m.check.a.help := [=];
help::pkg.utility.tasking.objs.types.m.check.a.help.d := 'Help string: if unset, help file is used';
help::pkg.utility.tasking.objs.types.m.check.a.help.def := 'unset';
help::pkg.utility.tasking.objs.types.m.check.a.help.a := 'String';
help::pkg.utility.tasking.objs.types.m.check.a.allowunset := [=];
help::pkg.utility.tasking.objs.types.m.check.a.allowunset.d := 'Allow unset values?';
help::pkg.utility.tasking.objs.types.m.check.a.allowunset.def := 'F';
help::pkg.utility.tasking.objs.types.m.check.a.allowunset.a := 'Boolean';
help::pkg.utility.tasking.objs.types.m.check.s := 'check(arg, default, options, dir, checkeval, help, allowunset)';
help::pkg.utility.tasking.objs.types.m.boolean := [=];
help::pkg.utility.tasking.objs.types.m.boolean.d := 'Define a boolean';
help::pkg.utility.tasking.objs.types.m.boolean.a.arg := [=];
help::pkg.utility.tasking.objs.types.m.boolean.a.arg.d := 'List of arguments';
help::pkg.utility.tasking.objs.types.m.boolean.a.arg.def := '';
help::pkg.utility.tasking.objs.types.m.boolean.a.arg.a := 'String';
help::pkg.utility.tasking.objs.types.m.boolean.a.default := [=];
help::pkg.utility.tasking.objs.types.m.boolean.a.default.d := 'Default value';
help::pkg.utility.tasking.objs.types.m.boolean.a.default.def := 'T';
help::pkg.utility.tasking.objs.types.m.boolean.a.default.a := 'Boolean';
help::pkg.utility.tasking.objs.types.m.boolean.a.dir := [=];
help::pkg.utility.tasking.objs.types.m.boolean.a.dir.d := 'Direction of variable';
help::pkg.utility.tasking.objs.types.m.boolean.a.dir.def := '\' in\' ';
help::pkg.utility.tasking.objs.types.m.boolean.a.dir.a := 'String: \' in\' |\' inout\' |\' out\' ';
help::pkg.utility.tasking.objs.types.m.boolean.a.checkeval := [=];
help::pkg.utility.tasking.objs.types.m.boolean.a.checkeval.d := 'Check eval\' ability';
help::pkg.utility.tasking.objs.types.m.boolean.a.checkeval.def := 'T';
help::pkg.utility.tasking.objs.types.m.boolean.a.checkeval.a := 'Boolean';
help::pkg.utility.tasking.objs.types.m.boolean.a.help := [=];
help::pkg.utility.tasking.objs.types.m.boolean.a.help.d := 'Help string: if unset, help file is used';
help::pkg.utility.tasking.objs.types.m.boolean.a.help.def := 'unset';
help::pkg.utility.tasking.objs.types.m.boolean.a.help.a := 'String';
help::pkg.utility.tasking.objs.types.m.boolean.a.allowunset := [=];
help::pkg.utility.tasking.objs.types.m.boolean.a.allowunset.d := 'Allow unset values?';
help::pkg.utility.tasking.objs.types.m.boolean.a.allowunset.def := 'F';
help::pkg.utility.tasking.objs.types.m.boolean.a.allowunset.a := 'Boolean';
help::pkg.utility.tasking.objs.types.m.boolean.s := 'boolean(arg, default, dir, checkeval, help, allowunset)';
help::pkg.utility.tasking.objs.types.m.vector_boolean := [=];
help::pkg.utility.tasking.objs.types.m.vector_boolean.d := 'Define a vector of booleans';
help::pkg.utility.tasking.objs.types.m.vector_boolean.a.arg := [=];
help::pkg.utility.tasking.objs.types.m.vector_boolean.a.arg.d := 'List of arguments';
help::pkg.utility.tasking.objs.types.m.vector_boolean.a.arg.def := '';
help::pkg.utility.tasking.objs.types.m.vector_boolean.a.arg.a := 'String';
help::pkg.utility.tasking.objs.types.m.vector_boolean.a.default := [=];
help::pkg.utility.tasking.objs.types.m.vector_boolean.a.default.d := 'Default value';
help::pkg.utility.tasking.objs.types.m.vector_boolean.a.default.def := '[]';
help::pkg.utility.tasking.objs.types.m.vector_boolean.a.default.a := 'Vector of booleans';
help::pkg.utility.tasking.objs.types.m.vector_boolean.a.dir := [=];
help::pkg.utility.tasking.objs.types.m.vector_boolean.a.dir.d := 'Direction of variable';
help::pkg.utility.tasking.objs.types.m.vector_boolean.a.dir.def := '\' in\' ';
help::pkg.utility.tasking.objs.types.m.vector_boolean.a.dir.a := 'String: \' in\' |\' inout\' |\' out\' ';
help::pkg.utility.tasking.objs.types.m.vector_boolean.a.checkeval := [=];
help::pkg.utility.tasking.objs.types.m.vector_boolean.a.checkeval.d := 'Check eval\' ability';
help::pkg.utility.tasking.objs.types.m.vector_boolean.a.checkeval.def := 'T';
help::pkg.utility.tasking.objs.types.m.vector_boolean.a.checkeval.a := 'Boolean';
help::pkg.utility.tasking.objs.types.m.vector_boolean.a.help := [=];
help::pkg.utility.tasking.objs.types.m.vector_boolean.a.help.d := 'Help string: if unset, help file is used';
help::pkg.utility.tasking.objs.types.m.vector_boolean.a.help.def := 'unset';
help::pkg.utility.tasking.objs.types.m.vector_boolean.a.help.a := 'String';
help::pkg.utility.tasking.objs.types.m.vector_boolean.a.allowunset := [=];
help::pkg.utility.tasking.objs.types.m.vector_boolean.a.allowunset.d := 'Allow unset values?';
help::pkg.utility.tasking.objs.types.m.vector_boolean.a.allowunset.def := 'F';
help::pkg.utility.tasking.objs.types.m.vector_boolean.a.allowunset.a := 'Boolean';
help::pkg.utility.tasking.objs.types.m.vector_boolean.s := 'vector_boolean(arg, default, dir, checkeval, help, allowunset)';
help::pkg.utility.tasking.objs.types.m.record := [=];
help::pkg.utility.tasking.objs.types.m.record.d := 'Define a record';
help::pkg.utility.tasking.objs.types.m.record.a.arg := [=];
help::pkg.utility.tasking.objs.types.m.record.a.arg.d := 'List of arguments';
help::pkg.utility.tasking.objs.types.m.record.a.arg.def := '';
help::pkg.utility.tasking.objs.types.m.record.a.arg.a := 'String';
help::pkg.utility.tasking.objs.types.m.record.a.default := [=];
help::pkg.utility.tasking.objs.types.m.record.a.default.d := 'Default value';
help::pkg.utility.tasking.objs.types.m.record.a.default.def := '[=]';
help::pkg.utility.tasking.objs.types.m.record.a.default.a := 'Record';
help::pkg.utility.tasking.objs.types.m.record.a.dir := [=];
help::pkg.utility.tasking.objs.types.m.record.a.dir.d := 'Direction of variable';
help::pkg.utility.tasking.objs.types.m.record.a.dir.def := '\' in\' ';
help::pkg.utility.tasking.objs.types.m.record.a.dir.a := 'String: \' in\' |\' inout\' |\' out\' ';
help::pkg.utility.tasking.objs.types.m.record.a.checkeval := [=];
help::pkg.utility.tasking.objs.types.m.record.a.checkeval.d := 'Check eval\' ability';
help::pkg.utility.tasking.objs.types.m.record.a.checkeval.def := 'T';
help::pkg.utility.tasking.objs.types.m.record.a.checkeval.a := 'Boolean';
help::pkg.utility.tasking.objs.types.m.record.a.help := [=];
help::pkg.utility.tasking.objs.types.m.record.a.help.d := 'Help string: if unset, help file is used';
help::pkg.utility.tasking.objs.types.m.record.a.help.def := 'unset';
help::pkg.utility.tasking.objs.types.m.record.a.help.a := 'String';
help::pkg.utility.tasking.objs.types.m.record.a.allowunset := [=];
help::pkg.utility.tasking.objs.types.m.record.a.allowunset.d := 'Allow unset values?';
help::pkg.utility.tasking.objs.types.m.record.a.allowunset.def := 'F';
help::pkg.utility.tasking.objs.types.m.record.a.allowunset.a := 'Boolean';
help::pkg.utility.tasking.objs.types.m.record.s := 'record(arg, default, dir, checkeval, help, allowunset)';
help::pkg.utility.tasking.objs.types.m.table := [=];
help::pkg.utility.tasking.objs.types.m.table.d := 'Define a table';
help::pkg.utility.tasking.objs.types.m.table.a.arg := [=];
help::pkg.utility.tasking.objs.types.m.table.a.arg.d := 'List of arguments';
help::pkg.utility.tasking.objs.types.m.table.a.arg.def := '';
help::pkg.utility.tasking.objs.types.m.table.a.arg.a := 'String';
help::pkg.utility.tasking.objs.types.m.table.a.default := [=];
help::pkg.utility.tasking.objs.types.m.table.a.default.d := 'Default value';
help::pkg.utility.tasking.objs.types.m.table.a.default.def := '\' \' ';
help::pkg.utility.tasking.objs.types.m.table.a.default.a := 'String';
help::pkg.utility.tasking.objs.types.m.table.a.dir := [=];
help::pkg.utility.tasking.objs.types.m.table.a.dir.d := 'Direction of variable';
help::pkg.utility.tasking.objs.types.m.table.a.dir.def := '\' in\' ';
help::pkg.utility.tasking.objs.types.m.table.a.dir.a := 'String: \' in\' |\' inout\' |\' out\' ';
help::pkg.utility.tasking.objs.types.m.table.a.checkeval := [=];
help::pkg.utility.tasking.objs.types.m.table.a.checkeval.d := 'Check eval\' ability';
help::pkg.utility.tasking.objs.types.m.table.a.checkeval.def := 'T';
help::pkg.utility.tasking.objs.types.m.table.a.checkeval.a := 'Boolean';
help::pkg.utility.tasking.objs.types.m.table.a.help := [=];
help::pkg.utility.tasking.objs.types.m.table.a.help.d := 'Help string: if unset, help file is used';
help::pkg.utility.tasking.objs.types.m.table.a.help.def := 'unset';
help::pkg.utility.tasking.objs.types.m.table.a.help.a := 'String';
help::pkg.utility.tasking.objs.types.m.table.a.allowunset := [=];
help::pkg.utility.tasking.objs.types.m.table.a.allowunset.d := 'Allow unset values?';
help::pkg.utility.tasking.objs.types.m.table.a.allowunset.def := 'F';
help::pkg.utility.tasking.objs.types.m.table.a.allowunset.a := 'Boolean';
help::pkg.utility.tasking.objs.types.m.table.s := 'table(arg, default, dir, checkeval, help, allowunset)';
help::pkg.utility.tasking.objs.types.m.taql := [=];
help::pkg.utility.tasking.objs.types.m.taql.d := 'Define a Table Query Language string';
help::pkg.utility.tasking.objs.types.m.taql.a.arg := [=];
help::pkg.utility.tasking.objs.types.m.taql.a.arg.d := 'List of arguments';
help::pkg.utility.tasking.objs.types.m.taql.a.arg.def := '';
help::pkg.utility.tasking.objs.types.m.taql.a.arg.a := 'String';
help::pkg.utility.tasking.objs.types.m.taql.a.default := [=];
help::pkg.utility.tasking.objs.types.m.taql.a.default.d := 'Default value';
help::pkg.utility.tasking.objs.types.m.taql.a.default.def := '\' \' ';
help::pkg.utility.tasking.objs.types.m.taql.a.default.a := 'String';
help::pkg.utility.tasking.objs.types.m.taql.a.dir := [=];
help::pkg.utility.tasking.objs.types.m.taql.a.dir.d := 'Direction of variable';
help::pkg.utility.tasking.objs.types.m.taql.a.dir.def := '\' in\' ';
help::pkg.utility.tasking.objs.types.m.taql.a.dir.a := 'String: \' in\' |\' inout\' |\' out\' ';
help::pkg.utility.tasking.objs.types.m.taql.a.checkeval := [=];
help::pkg.utility.tasking.objs.types.m.taql.a.checkeval.d := 'Check eval\' ability';
help::pkg.utility.tasking.objs.types.m.taql.a.checkeval.def := 'T';
help::pkg.utility.tasking.objs.types.m.taql.a.checkeval.a := 'Boolean';
help::pkg.utility.tasking.objs.types.m.taql.a.help := [=];
help::pkg.utility.tasking.objs.types.m.taql.a.help.d := 'Help string: if unset, help file is used';
help::pkg.utility.tasking.objs.types.m.taql.a.help.def := 'unset';
help::pkg.utility.tasking.objs.types.m.taql.a.help.a := 'String';
help::pkg.utility.tasking.objs.types.m.taql.a.allowunset := [=];
help::pkg.utility.tasking.objs.types.m.taql.a.allowunset.d := 'Allow unset values?';
help::pkg.utility.tasking.objs.types.m.taql.a.allowunset.def := 'F';
help::pkg.utility.tasking.objs.types.m.taql.a.allowunset.a := 'Boolean';
help::pkg.utility.tasking.objs.types.m.taql.s := 'taql(arg, default, dir, checkeval, help, allowunset)';
help::pkg.utility.tasking.objs.types.m.msselect := [=];
help::pkg.utility.tasking.objs.types.m.msselect.d := 'Define a taql string for a MeasurementSet';
help::pkg.utility.tasking.objs.types.m.msselect.a.arg := [=];
help::pkg.utility.tasking.objs.types.m.msselect.a.arg.d := 'List of arguments';
help::pkg.utility.tasking.objs.types.m.msselect.a.arg.def := '';
help::pkg.utility.tasking.objs.types.m.msselect.a.arg.a := 'String';
help::pkg.utility.tasking.objs.types.m.msselect.a.default := [=];
help::pkg.utility.tasking.objs.types.m.msselect.a.default.d := 'Default value';
help::pkg.utility.tasking.objs.types.m.msselect.a.default.def := '\' \' ';
help::pkg.utility.tasking.objs.types.m.msselect.a.default.a := 'String';
help::pkg.utility.tasking.objs.types.m.msselect.a.dir := [=];
help::pkg.utility.tasking.objs.types.m.msselect.a.dir.d := 'Direction of variable';
help::pkg.utility.tasking.objs.types.m.msselect.a.dir.def := '\' in\' ';
help::pkg.utility.tasking.objs.types.m.msselect.a.dir.a := 'String: \' in\' |\' inout\' |\' out\' ';
help::pkg.utility.tasking.objs.types.m.msselect.a.checkeval := [=];
help::pkg.utility.tasking.objs.types.m.msselect.a.checkeval.d := 'Check eval\' ability';
help::pkg.utility.tasking.objs.types.m.msselect.a.checkeval.def := 'T';
help::pkg.utility.tasking.objs.types.m.msselect.a.checkeval.a := 'Boolean';
help::pkg.utility.tasking.objs.types.m.msselect.a.help := [=];
help::pkg.utility.tasking.objs.types.m.msselect.a.help.d := 'Help string: if unset, help file is used';
help::pkg.utility.tasking.objs.types.m.msselect.a.help.def := 'unset';
help::pkg.utility.tasking.objs.types.m.msselect.a.help.a := 'String';
help::pkg.utility.tasking.objs.types.m.msselect.a.allowunset := [=];
help::pkg.utility.tasking.objs.types.m.msselect.a.allowunset.d := 'Allow unset values?';
help::pkg.utility.tasking.objs.types.m.msselect.a.allowunset.def := 'F';
help::pkg.utility.tasking.objs.types.m.msselect.a.allowunset.a := 'Boolean';
help::pkg.utility.tasking.objs.types.m.msselect.s := 'msselect(arg, default, dir, checkeval, help, allowunset)';
help::pkg.utility.tasking.objs.types.m.file := [=];
help::pkg.utility.tasking.objs.types.m.file.d := 'Define a file';
help::pkg.utility.tasking.objs.types.m.file.a.arg := [=];
help::pkg.utility.tasking.objs.types.m.file.a.arg.d := 'List of arguments';
help::pkg.utility.tasking.objs.types.m.file.a.arg.def := '';
help::pkg.utility.tasking.objs.types.m.file.a.arg.a := 'String';
help::pkg.utility.tasking.objs.types.m.file.a.default := [=];
help::pkg.utility.tasking.objs.types.m.file.a.default.d := 'Default value';
help::pkg.utility.tasking.objs.types.m.file.a.default.def := '\' \' ';
help::pkg.utility.tasking.objs.types.m.file.a.default.a := 'String';
help::pkg.utility.tasking.objs.types.m.file.a.dir := [=];
help::pkg.utility.tasking.objs.types.m.file.a.dir.d := 'Direction of variable';
help::pkg.utility.tasking.objs.types.m.file.a.dir.def := '\' in\' ';
help::pkg.utility.tasking.objs.types.m.file.a.dir.a := 'String: \' in\' |\' inout\' |\' out\' ';
help::pkg.utility.tasking.objs.types.m.file.a.checkeval := [=];
help::pkg.utility.tasking.objs.types.m.file.a.checkeval.d := 'Check eval\' ability';
help::pkg.utility.tasking.objs.types.m.file.a.checkeval.def := 'T';
help::pkg.utility.tasking.objs.types.m.file.a.checkeval.a := 'Boolean';
help::pkg.utility.tasking.objs.types.m.file.a.help := [=];
help::pkg.utility.tasking.objs.types.m.file.a.help.d := 'Help string: if unset, help file is used';
help::pkg.utility.tasking.objs.types.m.file.a.help.def := 'unset';
help::pkg.utility.tasking.objs.types.m.file.a.help.a := 'String';
help::pkg.utility.tasking.objs.types.m.file.a.allowunset := [=];
help::pkg.utility.tasking.objs.types.m.file.a.allowunset.d := 'Allow unset values?';
help::pkg.utility.tasking.objs.types.m.file.a.allowunset.def := 'F';
help::pkg.utility.tasking.objs.types.m.file.a.allowunset.a := 'Boolean';
help::pkg.utility.tasking.objs.types.m.file.s := 'file(arg, default, dir, checkeval, help, allowunset)';
help::pkg.utility.tasking.objs.types.m.directory := [=];
help::pkg.utility.tasking.objs.types.m.directory.d := 'Define a directory';
help::pkg.utility.tasking.objs.types.m.directory.a.arg := [=];
help::pkg.utility.tasking.objs.types.m.directory.a.arg.d := 'List of arguments';
help::pkg.utility.tasking.objs.types.m.directory.a.arg.def := '';
help::pkg.utility.tasking.objs.types.m.directory.a.arg.a := 'String';
help::pkg.utility.tasking.objs.types.m.directory.a.default := [=];
help::pkg.utility.tasking.objs.types.m.directory.a.default.d := 'Default value';
help::pkg.utility.tasking.objs.types.m.directory.a.default.def := '\' \' ';
help::pkg.utility.tasking.objs.types.m.directory.a.default.a := 'String';
help::pkg.utility.tasking.objs.types.m.directory.a.dir := [=];
help::pkg.utility.tasking.objs.types.m.directory.a.dir.d := 'Direction of variable';
help::pkg.utility.tasking.objs.types.m.directory.a.dir.def := '\' in\' ';
help::pkg.utility.tasking.objs.types.m.directory.a.dir.a := 'String: \' in\' |\' inout\' |\' out\' ';
help::pkg.utility.tasking.objs.types.m.directory.a.checkeval := [=];
help::pkg.utility.tasking.objs.types.m.directory.a.checkeval.d := 'Check eval\' ability';
help::pkg.utility.tasking.objs.types.m.directory.a.checkeval.def := 'T';
help::pkg.utility.tasking.objs.types.m.directory.a.checkeval.a := 'Boolean';
help::pkg.utility.tasking.objs.types.m.directory.a.help := [=];
help::pkg.utility.tasking.objs.types.m.directory.a.help.d := 'Help string: if unset, help file is used';
help::pkg.utility.tasking.objs.types.m.directory.a.help.def := 'unset';
help::pkg.utility.tasking.objs.types.m.directory.a.help.a := 'String';
help::pkg.utility.tasking.objs.types.m.directory.a.allowunset := [=];
help::pkg.utility.tasking.objs.types.m.directory.a.allowunset.d := 'Allow unset values?';
help::pkg.utility.tasking.objs.types.m.directory.a.allowunset.def := 'F';
help::pkg.utility.tasking.objs.types.m.directory.a.allowunset.a := 'Boolean';
help::pkg.utility.tasking.objs.types.m.directory.s := 'directory(arg, default, dir, checkeval, help, allowunset)';
help::pkg.utility.tasking.objs.types.m.region := [=];
help::pkg.utility.tasking.objs.types.m.region.d := 'Define a region';
help::pkg.utility.tasking.objs.types.m.region.a.arg := [=];
help::pkg.utility.tasking.objs.types.m.region.a.arg.d := 'List of arguments';
help::pkg.utility.tasking.objs.types.m.region.a.arg.def := '';
help::pkg.utility.tasking.objs.types.m.region.a.arg.a := 'String';
help::pkg.utility.tasking.objs.types.m.region.a.default := [=];
help::pkg.utility.tasking.objs.types.m.region.a.default.d := 'Default value';
help::pkg.utility.tasking.objs.types.m.region.a.default.def := 'unset';
help::pkg.utility.tasking.objs.types.m.region.a.default.a := 'Region';
help::pkg.utility.tasking.objs.types.m.region.a.dir := [=];
help::pkg.utility.tasking.objs.types.m.region.a.dir.d := 'Direction of variable';
help::pkg.utility.tasking.objs.types.m.region.a.dir.def := '\' in\' ';
help::pkg.utility.tasking.objs.types.m.region.a.dir.a := 'String: \' in\' |\' inout\' |\' out\' ';
help::pkg.utility.tasking.objs.types.m.region.a.checkeval := [=];
help::pkg.utility.tasking.objs.types.m.region.a.checkeval.d := 'Check eval\' ability';
help::pkg.utility.tasking.objs.types.m.region.a.checkeval.def := 'T';
help::pkg.utility.tasking.objs.types.m.region.a.checkeval.a := 'Boolean';
help::pkg.utility.tasking.objs.types.m.region.a.help := [=];
help::pkg.utility.tasking.objs.types.m.region.a.help.d := 'Help string: if unset, help file is used';
help::pkg.utility.tasking.objs.types.m.region.a.help.def := 'unset';
help::pkg.utility.tasking.objs.types.m.region.a.help.a := 'String';
help::pkg.utility.tasking.objs.types.m.region.a.allowunset := [=];
help::pkg.utility.tasking.objs.types.m.region.a.allowunset.d := 'Allow unset values?';
help::pkg.utility.tasking.objs.types.m.region.a.allowunset.def := 'F';
help::pkg.utility.tasking.objs.types.m.region.a.allowunset.a := 'Boolean';
help::pkg.utility.tasking.objs.types.m.region.s := 'region(arg, default, dir, checkeval, help, allowunset)';
help::pkg.utility.tasking.objs.types.m.antennas := [=];
help::pkg.utility.tasking.objs.types.m.antennas.d := 'Define a list of antennas';
help::pkg.utility.tasking.objs.types.m.antennas.a.arg := [=];
help::pkg.utility.tasking.objs.types.m.antennas.a.arg.d := 'List of arguments';
help::pkg.utility.tasking.objs.types.m.antennas.a.arg.def := '';
help::pkg.utility.tasking.objs.types.m.antennas.a.arg.a := 'String';
help::pkg.utility.tasking.objs.types.m.antennas.a.default := [=];
help::pkg.utility.tasking.objs.types.m.antennas.a.default.d := 'Default value';
help::pkg.utility.tasking.objs.types.m.antennas.a.default.def := 'unset';
help::pkg.utility.tasking.objs.types.m.antennas.a.default.a := 'Region';
help::pkg.utility.tasking.objs.types.m.antennas.a.dir := [=];
help::pkg.utility.tasking.objs.types.m.antennas.a.dir.d := 'Direction of variable';
help::pkg.utility.tasking.objs.types.m.antennas.a.dir.def := '\' in\' ';
help::pkg.utility.tasking.objs.types.m.antennas.a.dir.a := 'String: \' in\' |\' inout\' |\' out\' ';
help::pkg.utility.tasking.objs.types.m.antennas.a.checkeval := [=];
help::pkg.utility.tasking.objs.types.m.antennas.a.checkeval.d := 'Check eval\' ability';
help::pkg.utility.tasking.objs.types.m.antennas.a.checkeval.def := 'T';
help::pkg.utility.tasking.objs.types.m.antennas.a.checkeval.a := 'Boolean';
help::pkg.utility.tasking.objs.types.m.antennas.a.help := [=];
help::pkg.utility.tasking.objs.types.m.antennas.a.help.d := 'Help string: if unset, help file is used';
help::pkg.utility.tasking.objs.types.m.antennas.a.help.def := 'unset';
help::pkg.utility.tasking.objs.types.m.antennas.a.help.a := 'String';
help::pkg.utility.tasking.objs.types.m.antennas.a.allowunset := [=];
help::pkg.utility.tasking.objs.types.m.antennas.a.allowunset.d := 'Allow unset values?';
help::pkg.utility.tasking.objs.types.m.antennas.a.allowunset.def := 'F';
help::pkg.utility.tasking.objs.types.m.antennas.a.allowunset.a := 'Boolean';
help::pkg.utility.tasking.objs.types.m.antennas.s := 'antennas(arg, default, dir, checkeval, help, allowunset)';
help::pkg.utility.tasking.objs.types.m.baselines := [=];
help::pkg.utility.tasking.objs.types.m.baselines.d := 'Define a list of baselines';
help::pkg.utility.tasking.objs.types.m.baselines.a.arg := [=];
help::pkg.utility.tasking.objs.types.m.baselines.a.arg.d := 'List of arguments';
help::pkg.utility.tasking.objs.types.m.baselines.a.arg.def := '';
help::pkg.utility.tasking.objs.types.m.baselines.a.arg.a := 'String';
help::pkg.utility.tasking.objs.types.m.baselines.a.default := [=];
help::pkg.utility.tasking.objs.types.m.baselines.a.default.d := 'Default value';
help::pkg.utility.tasking.objs.types.m.baselines.a.default.def := 'unset';
help::pkg.utility.tasking.objs.types.m.baselines.a.default.a := 'Region';
help::pkg.utility.tasking.objs.types.m.baselines.a.dir := [=];
help::pkg.utility.tasking.objs.types.m.baselines.a.dir.d := 'Direction of variable';
help::pkg.utility.tasking.objs.types.m.baselines.a.dir.def := '\' in\' ';
help::pkg.utility.tasking.objs.types.m.baselines.a.dir.a := 'String: \' in\' |\' inout\' |\' out\' ';
help::pkg.utility.tasking.objs.types.m.baselines.a.checkeval := [=];
help::pkg.utility.tasking.objs.types.m.baselines.a.checkeval.d := 'Check eval\' ability';
help::pkg.utility.tasking.objs.types.m.baselines.a.checkeval.def := 'T';
help::pkg.utility.tasking.objs.types.m.baselines.a.checkeval.a := 'Boolean';
help::pkg.utility.tasking.objs.types.m.baselines.a.help := [=];
help::pkg.utility.tasking.objs.types.m.baselines.a.help.d := 'Help string: if unset, help file is used';
help::pkg.utility.tasking.objs.types.m.baselines.a.help.def := 'unset';
help::pkg.utility.tasking.objs.types.m.baselines.a.help.a := 'String';
help::pkg.utility.tasking.objs.types.m.baselines.a.allowunset := [=];
help::pkg.utility.tasking.objs.types.m.baselines.a.allowunset.d := 'Allow unset values?';
help::pkg.utility.tasking.objs.types.m.baselines.a.allowunset.def := 'F';
help::pkg.utility.tasking.objs.types.m.baselines.a.allowunset.a := 'Boolean';
help::pkg.utility.tasking.objs.types.m.baselines.s := 'baselines(arg, default, dir, checkeval, help, allowunset)';
help::pkg.utility.tasking.objs.types.m.fields := [=];
help::pkg.utility.tasking.objs.types.m.fields.d := 'Define a list of field ids';
help::pkg.utility.tasking.objs.types.m.fields.a.arg := [=];
help::pkg.utility.tasking.objs.types.m.fields.a.arg.d := 'List of arguments';
help::pkg.utility.tasking.objs.types.m.fields.a.arg.def := '';
help::pkg.utility.tasking.objs.types.m.fields.a.arg.a := 'String';
help::pkg.utility.tasking.objs.types.m.fields.a.default := [=];
help::pkg.utility.tasking.objs.types.m.fields.a.default.d := 'Default value';
help::pkg.utility.tasking.objs.types.m.fields.a.default.def := 'unset';
help::pkg.utility.tasking.objs.types.m.fields.a.default.a := 'Region';
help::pkg.utility.tasking.objs.types.m.fields.a.dir := [=];
help::pkg.utility.tasking.objs.types.m.fields.a.dir.d := 'Direction of variable';
help::pkg.utility.tasking.objs.types.m.fields.a.dir.def := '\' in\' ';
help::pkg.utility.tasking.objs.types.m.fields.a.dir.a := 'String: \' in\' |\' inout\' |\' out\' ';
help::pkg.utility.tasking.objs.types.m.fields.a.checkeval := [=];
help::pkg.utility.tasking.objs.types.m.fields.a.checkeval.d := 'Check eval\' ability';
help::pkg.utility.tasking.objs.types.m.fields.a.checkeval.def := 'T';
help::pkg.utility.tasking.objs.types.m.fields.a.checkeval.a := 'Boolean';
help::pkg.utility.tasking.objs.types.m.fields.a.help := [=];
help::pkg.utility.tasking.objs.types.m.fields.a.help.d := 'Help string: if unset, help file is used';
help::pkg.utility.tasking.objs.types.m.fields.a.help.def := 'unset';
help::pkg.utility.tasking.objs.types.m.fields.a.help.a := 'String';
help::pkg.utility.tasking.objs.types.m.fields.a.allowunset := [=];
help::pkg.utility.tasking.objs.types.m.fields.a.allowunset.d := 'Allow unset values?';
help::pkg.utility.tasking.objs.types.m.fields.a.allowunset.def := 'F';
help::pkg.utility.tasking.objs.types.m.fields.a.allowunset.a := 'Boolean';
help::pkg.utility.tasking.objs.types.m.fields.s := 'fields(arg, default, dir, checkeval, help, allowunset)';
help::pkg.utility.tasking.objs.types.m.spectralwindows := [=];
help::pkg.utility.tasking.objs.types.m.spectralwindows.d := 'Define a list of spectralwindows';
help::pkg.utility.tasking.objs.types.m.spectralwindows.a.arg := [=];
help::pkg.utility.tasking.objs.types.m.spectralwindows.a.arg.d := 'List of arguments';
help::pkg.utility.tasking.objs.types.m.spectralwindows.a.arg.def := '';
help::pkg.utility.tasking.objs.types.m.spectralwindows.a.arg.a := 'String';
help::pkg.utility.tasking.objs.types.m.spectralwindows.a.default := [=];
help::pkg.utility.tasking.objs.types.m.spectralwindows.a.default.d := 'Default value';
help::pkg.utility.tasking.objs.types.m.spectralwindows.a.default.def := 'unset';
help::pkg.utility.tasking.objs.types.m.spectralwindows.a.default.a := 'Region';
help::pkg.utility.tasking.objs.types.m.spectralwindows.a.dir := [=];
help::pkg.utility.tasking.objs.types.m.spectralwindows.a.dir.d := 'Direction of variable';
help::pkg.utility.tasking.objs.types.m.spectralwindows.a.dir.def := '\' in\' ';
help::pkg.utility.tasking.objs.types.m.spectralwindows.a.dir.a := 'String: \' in\' |\' inout\' |\' out\' ';
help::pkg.utility.tasking.objs.types.m.spectralwindows.a.checkeval := [=];
help::pkg.utility.tasking.objs.types.m.spectralwindows.a.checkeval.d := 'Check eval\' ability';
help::pkg.utility.tasking.objs.types.m.spectralwindows.a.checkeval.def := 'T';
help::pkg.utility.tasking.objs.types.m.spectralwindows.a.checkeval.a := 'Boolean';
help::pkg.utility.tasking.objs.types.m.spectralwindows.a.help := [=];
help::pkg.utility.tasking.objs.types.m.spectralwindows.a.help.d := 'Help string: if unset, help file is used';
help::pkg.utility.tasking.objs.types.m.spectralwindows.a.help.def := 'unset';
help::pkg.utility.tasking.objs.types.m.spectralwindows.a.help.a := 'String';
help::pkg.utility.tasking.objs.types.m.spectralwindows.a.allowunset := [=];
help::pkg.utility.tasking.objs.types.m.spectralwindows.a.allowunset.d := 'Allow unset values?';
help::pkg.utility.tasking.objs.types.m.spectralwindows.a.allowunset.def := 'F';
help::pkg.utility.tasking.objs.types.m.spectralwindows.a.allowunset.a := 'Boolean';
help::pkg.utility.tasking.objs.types.m.spectralwindows.s := 'spectralwindows(arg, default, dir, checkeval, help, allowunset)';
help::pkg.utility.tasking.objs.types.m.untyped := [=];
help::pkg.utility.tasking.objs.types.m.untyped.d := 'Define an untyped variable';
help::pkg.utility.tasking.objs.types.m.untyped.a.arg := [=];
help::pkg.utility.tasking.objs.types.m.untyped.a.arg.d := 'List of arguments';
help::pkg.utility.tasking.objs.types.m.untyped.a.arg.def := '';
help::pkg.utility.tasking.objs.types.m.untyped.a.arg.a := 'String';
help::pkg.utility.tasking.objs.types.m.untyped.a.default := [=];
help::pkg.utility.tasking.objs.types.m.untyped.a.default.d := 'Default value';
help::pkg.utility.tasking.objs.types.m.untyped.a.default.def := '\' \' ';
help::pkg.utility.tasking.objs.types.m.untyped.a.default.a := 'Any type';
help::pkg.utility.tasking.objs.types.m.untyped.a.dir := [=];
help::pkg.utility.tasking.objs.types.m.untyped.a.dir.d := 'Direction of variable';
help::pkg.utility.tasking.objs.types.m.untyped.a.dir.def := '\' in\' ';
help::pkg.utility.tasking.objs.types.m.untyped.a.dir.a := 'String: \' in\' |\' inout\' |\' out\' ';
help::pkg.utility.tasking.objs.types.m.untyped.a.checkeval := [=];
help::pkg.utility.tasking.objs.types.m.untyped.a.checkeval.d := 'Check eval\' ability';
help::pkg.utility.tasking.objs.types.m.untyped.a.checkeval.def := 'T';
help::pkg.utility.tasking.objs.types.m.untyped.a.checkeval.a := 'Boolean';
help::pkg.utility.tasking.objs.types.m.untyped.a.help := [=];
help::pkg.utility.tasking.objs.types.m.untyped.a.help.d := 'Help string: if unset, help file is used';
help::pkg.utility.tasking.objs.types.m.untyped.a.help.def := 'unset';
help::pkg.utility.tasking.objs.types.m.untyped.a.help.a := 'String';
help::pkg.utility.tasking.objs.types.m.untyped.a.options := [=];
help::pkg.utility.tasking.objs.types.m.untyped.a.options.d := 'Search order string';
help::pkg.utility.tasking.objs.types.m.untyped.a.options.def := 'unset';
help::pkg.utility.tasking.objs.types.m.untyped.a.options.a := 'Vector of strings';
help::pkg.utility.tasking.objs.types.m.untyped.a.allowunset := [=];
help::pkg.utility.tasking.objs.types.m.untyped.a.allowunset.d := 'Allow unset values?';
help::pkg.utility.tasking.objs.types.m.untyped.a.allowunset.def := 'F';
help::pkg.utility.tasking.objs.types.m.untyped.a.allowunset.a := 'Boolean';
help::pkg.utility.tasking.objs.types.m.untyped.s := 'untyped(arg, default, dir, checkeval, help, options, allowunset)';
help::pkg.utility.tasking.objs.types.m.meta := [=];
help::pkg.utility.tasking.objs.types.m.meta.d := 'Return meta information for a type of tool';
help::pkg.utility.tasking.objs.types.m.meta.a.class := [=];
help::pkg.utility.tasking.objs.types.m.meta.a.class.d := 'Class or type of tool';
help::pkg.utility.tasking.objs.types.m.meta.a.class.def := '';
help::pkg.utility.tasking.objs.types.m.meta.a.class.a := 'String';
help::pkg.utility.tasking.objs.types.m.meta.a.ctors := [=];
help::pkg.utility.tasking.objs.types.m.meta.a.ctors.d := 'Show constructors';
help::pkg.utility.tasking.objs.types.m.meta.a.ctors.def := 'F';
help::pkg.utility.tasking.objs.types.m.meta.a.ctors.a := 'Boolean';
help::pkg.utility.tasking.objs.types.m.meta.a.addhelp := [=];
help::pkg.utility.tasking.objs.types.m.meta.a.addhelp.d := 'Add the help information?';
help::pkg.utility.tasking.objs.types.m.meta.a.addhelp.def := 'T';
help::pkg.utility.tasking.objs.types.m.meta.a.addhelp.a := 'Boolean';
help::pkg.utility.tasking.objs.types.m.meta.s := 'meta(class, ctors, addhelp)';
help::pkg.utility.tasking.objs.types.m.addmeta := [=];
help::pkg.utility.tasking.objs.types.m.addmeta.d := 'Copy meta information to a class';
help::pkg.utility.tasking.objs.types.m.addmeta.a.class := [=];
help::pkg.utility.tasking.objs.types.m.addmeta.a.class.d := 'Class or type of tool';
help::pkg.utility.tasking.objs.types.m.addmeta.a.class.def := '';
help::pkg.utility.tasking.objs.types.m.addmeta.a.class.a := 'String';
help::pkg.utility.tasking.objs.types.m.addmeta.a.meta := [=];
help::pkg.utility.tasking.objs.types.m.addmeta.a.meta.d := 'Meta-information';
help::pkg.utility.tasking.objs.types.m.addmeta.a.meta.def := '';
help::pkg.utility.tasking.objs.types.m.addmeta.a.meta.a := 'Record';
help::pkg.utility.tasking.objs.types.m.addmeta.s := 'addmeta(class, meta)';
help::pkg.utility.tasking.objs.types.m.all := [=];
help::pkg.utility.tasking.objs.types.m.all.d := 'Show all classes';
help::pkg.utility.tasking.objs.types.m.all.a.class := [=];
help::pkg.utility.tasking.objs.types.m.all.a.class.d := 'Class or type of tool';
help::pkg.utility.tasking.objs.types.m.all.a.class.def := '';
help::pkg.utility.tasking.objs.types.m.all.a.class.a := 'String';
help::pkg.utility.tasking.objs.types.m.all.a.meta := [=];
help::pkg.utility.tasking.objs.types.m.all.a.meta.d := 'Meta-information';
help::pkg.utility.tasking.objs.types.m.all.a.meta.def := '';
help::pkg.utility.tasking.objs.types.m.all.a.meta.a := 'Record';
help::pkg.utility.tasking.objs.types.m.all.s := 'all(class, meta)';
help::pkg.utility.tasking.objs.types.m.is_tool := [=];
help::pkg.utility.tasking.objs.types.m.is_tool.d := 'Is this a tool?';
help::pkg.utility.tasking.objs.types.m.is_tool.a.obj := [=];
help::pkg.utility.tasking.objs.types.m.is_tool.a.obj.d := 'Possible object';
help::pkg.utility.tasking.objs.types.m.is_tool.a.obj.def := '';
help::pkg.utility.tasking.objs.types.m.is_tool.a.obj.a := 'Variable';
help::pkg.utility.tasking.objs.types.m.is_tool.a.type := [=];
help::pkg.utility.tasking.objs.types.m.is_tool.a.type.d := 'Type of variable';
help::pkg.utility.tasking.objs.types.m.is_tool.a.type.def := '\' unset\' ';
help::pkg.utility.tasking.objs.types.m.is_tool.a.type.a := 'String';
help::pkg.utility.tasking.objs.types.m.is_tool.s := 'is_tool(obj, type)';
help::pkg.utility.tasking.objs.types.m.attachhelp := [=];
help::pkg.utility.tasking.objs.types.m.attachhelp.d := 'Attach help from the help system';
help::pkg.utility.tasking.objs.types.m.attachhelp.a.type := [=];
help::pkg.utility.tasking.objs.types.m.attachhelp.a.type.d := 'Type of tool';
help::pkg.utility.tasking.objs.types.m.attachhelp.a.type.def := '';
help::pkg.utility.tasking.objs.types.m.attachhelp.a.type.a := 'String';
help::pkg.utility.tasking.objs.types.m.attachhelp.s := 'attachhelp(type)';
help::pkg.utility.tasking.objs.types.m.includemeta := [=];
help::pkg.utility.tasking.objs.types.m.includemeta.d := 'Include all meta information files';
help::pkg.utility.tasking.objs.types.m.includemeta.a.includepath := [=];
help::pkg.utility.tasking.objs.types.m.includemeta.a.includepath.d := 'Path for include files';
help::pkg.utility.tasking.objs.types.m.includemeta.a.includepath.def := 'unset';
help::pkg.utility.tasking.objs.types.m.includemeta.a.includepath.a := 'String';
help::pkg.utility.tasking.objs.types.m.includemeta.s := 'includemeta(includepath)';
help::pkg.utility.tasking.funs.typestest := [=];
help::pkg.utility.tasking.funs.typestest.a := [=];
help::pkg.utility.tasking.funs.typestest.d := 'Test the types definition';
help::pkg.utility.tasking.funs.typestest.s := 'typestest()';
help::pkg.utility.tasking.objs.plugins := [=];
help::pkg.utility.tasking.objs.plugins.m := [=];
help::pkg.utility.tasking.objs.plugins.c := [=];
help::pkg.utility.tasking.objs.plugins.d := 'attach code to tools at runtime';
help::pkg.utility.tasking.objs.plugins.m.rescan := [=];
help::pkg.utility.tasking.objs.plugins.m.rescan.d := 'Find all plugin (.gp) files';
help::pkg.utility.tasking.objs.plugins.m.rescan.s := 'rescan()';
help::pkg.utility.tasking.objs.plugins.m.loadplugins := [=];
help::pkg.utility.tasking.objs.plugins.m.loadplugins.d := 'load plugin (.gp) files for some class';
help::pkg.utility.tasking.objs.plugins.m.loadplugins.a.type := [=];
help::pkg.utility.tasking.objs.plugins.m.loadplugins.a.type.d := 'type (class) for which we want to load plugins';
help::pkg.utility.tasking.objs.plugins.m.loadplugins.a.type.def := '';
help::pkg.utility.tasking.objs.plugins.m.loadplugins.a.type.a := 'string';
help::pkg.utility.tasking.objs.plugins.m.loadplugins.s := 'loadplugins(type)';
help::pkg.utility.tasking.objs.plugins.m.loaded := [=];
help::pkg.utility.tasking.objs.plugins.m.loaded.d := 'list which plugins have been loaded';
help::pkg.utility.tasking.objs.plugins.m.loaded.s := 'loaded()';
help::pkg.utility.tasking.objs.plugins.m.attach := [=];
help::pkg.utility.tasking.objs.plugins.m.attach.d := 'Attach plugins for a type to an tool';
help::pkg.utility.tasking.objs.plugins.m.attach.a.type := [=];
help::pkg.utility.tasking.objs.plugins.m.attach.a.type.d := 'type (class) for which we want to load plugins';
help::pkg.utility.tasking.objs.plugins.m.attach.a.type.def := '';
help::pkg.utility.tasking.objs.plugins.m.attach.a.type.a := 'string';
help::pkg.utility.tasking.objs.plugins.m.attach.a.objpublic := [=];
help::pkg.utility.tasking.objs.plugins.m.attach.a.objpublic.d := 'the tool the constructor will return to the caller';
help::pkg.utility.tasking.objs.plugins.m.attach.a.objpublic.def := '';
help::pkg.utility.tasking.objs.plugins.m.attach.a.objpublic.a := 'record';
help::pkg.utility.tasking.objs.plugins.m.attach.s := 'attach(type, objpublic)';
help::pkg.utility.tasking.objs.asynceval := [=];
help::pkg.utility.tasking.objs.asynceval.m := [=];
help::pkg.utility.tasking.objs.asynceval.c := [=];
help::pkg.utility.tasking.objs.asynceval.d := 'Asynchronous eval';
help::pkg.utility.tasking.objs.asynceval.c.asynceval := [=];
help::pkg.utility.tasking.objs.asynceval.c.asynceval.d := 'Construct asynceval tool';
help::pkg.utility.tasking.objs.asynceval.c.asynceval.s := 'asynceval()';
help::pkg.utility.tasking.objs.asynceval.m.done := [=];
help::pkg.utility.tasking.objs.asynceval.m.done.d := 'Kill this asynceval';
help::pkg.utility.tasking.objs.asynceval.m.done.s := 'done()';
help::pkg.utility.tasking.objs.servers := [=];
help::pkg.utility.tasking.objs.servers.m := [=];
help::pkg.utility.tasking.objs.servers.c := [=];
help::pkg.utility.tasking.objs.servers.d := 'A tool for sending events between glish and precompiled executables';
help::pkg.utility.tasking.objs.servers.m.activate := [=];
help::pkg.utility.tasking.objs.servers.m.activate.d := 'Create a new server';
help::pkg.utility.tasking.objs.servers.m.activate.a.server := [=];
help::pkg.utility.tasking.objs.servers.m.activate.a.server.d := 'The name of the server to create';
help::pkg.utility.tasking.objs.servers.m.activate.a.server.def := 'no default';
help::pkg.utility.tasking.objs.servers.m.activate.a.server.a := 'a string';
help::pkg.utility.tasking.objs.servers.m.activate.a.host := [=];
help::pkg.utility.tasking.objs.servers.m.activate.a.host.d := 'The name of the computer on which to start the 		    server';
help::pkg.utility.tasking.objs.servers.m.activate.a.host.def := 'an empty string';
help::pkg.utility.tasking.objs.servers.m.activate.a.host.a := 'any computer name';
help::pkg.utility.tasking.objs.servers.m.activate.a.forcenewserver := [=];
help::pkg.utility.tasking.objs.servers.m.activate.a.forcenewserver.d := 'Start a new server even if one is running';
help::pkg.utility.tasking.objs.servers.m.activate.a.forcenewserver.def := 'F';
help::pkg.utility.tasking.objs.servers.m.activate.a.forcenewserver.a := 'T or F';
help::pkg.utility.tasking.objs.servers.m.activate.a.async := [=];
help::pkg.utility.tasking.objs.servers.m.activate.a.async.d := 'Start the server asynchronously';
help::pkg.utility.tasking.objs.servers.m.activate.a.async.def := 'F';
help::pkg.utility.tasking.objs.servers.m.activate.a.async.a := 'T or F';
help::pkg.utility.tasking.objs.servers.m.activate.a.terminateonempty := [=];
help::pkg.utility.tasking.objs.servers.m.activate.a.terminateonempty.d := 'Terminate servers when empty';
help::pkg.utility.tasking.objs.servers.m.activate.a.terminateonempty.def := 'T';
help::pkg.utility.tasking.objs.servers.m.activate.a.terminateonempty.a := 'Boolean';
help::pkg.utility.tasking.objs.servers.m.activate.s := 'activate(server, host, forcenewserver, async, terminateonempty)';
help::pkg.utility.tasking.objs.servers.m.create := [=];
help::pkg.utility.tasking.objs.servers.m.create.d := 'Create an object';
help::pkg.utility.tasking.objs.servers.m.create.a.id := [=];
help::pkg.utility.tasking.objs.servers.m.create.a.id.d := 'Identifies which server to use';
help::pkg.utility.tasking.objs.servers.m.create.a.id.def := 'no default';
help::pkg.utility.tasking.objs.servers.m.create.a.id.a := 'A positive integer obtained from the                           activate function.';
help::pkg.utility.tasking.objs.servers.m.create.a.type := [=];
help::pkg.utility.tasking.objs.servers.m.create.a.type.d := 'The object to create.';
help::pkg.utility.tasking.objs.servers.m.create.a.type.def := 'no default';
help::pkg.utility.tasking.objs.servers.m.create.a.type.a := 'A string that corresponds to the output of                           the className function in the C++ class.';
help::pkg.utility.tasking.objs.servers.m.create.a.creator := [=];
help::pkg.utility.tasking.objs.servers.m.create.a.creator.d := 'A string indicating which constructor to use.';
help::pkg.utility.tasking.objs.servers.m.create.a.creator.def := 'An empty string';
help::pkg.utility.tasking.objs.servers.m.create.a.creator.a := 'An empty string or one that matches a                                string in the ``factory\' \'  class.';
help::pkg.utility.tasking.objs.servers.m.create.a.invokerecord := [=];
help::pkg.utility.tasking.objs.servers.m.create.a.invokerecord.d := 'Additional construction parameters';
help::pkg.utility.tasking.objs.servers.m.create.a.invokerecord.def := 'An empty record';
help::pkg.utility.tasking.objs.servers.m.create.a.invokerecord.a := 'A record with fields containing additional construction parameters.';
help::pkg.utility.tasking.objs.servers.m.create.s := 'create(id, type, creator, invokerecord)';
help::pkg.utility.tasking.objs.servers.m.add := [=];
help::pkg.utility.tasking.objs.servers.m.add.d := 'Add an object to an existing server';
help::pkg.utility.tasking.objs.servers.m.add.a.agentid := [=];
help::pkg.utility.tasking.objs.servers.m.add.a.agentid.d := 'Identifies which server to use';
help::pkg.utility.tasking.objs.servers.m.add.a.agentid.def := 'no default';
help::pkg.utility.tasking.objs.servers.m.add.a.agentid.a := 'A positive integer obtained from the                           activate function.';
help::pkg.utility.tasking.objs.servers.m.add.a.id := [=];
help::pkg.utility.tasking.objs.servers.m.add.a.id.d := 'Identifies the object (as returned from a DO)';
help::pkg.utility.tasking.objs.servers.m.add.a.id.def := 'no default';
help::pkg.utility.tasking.objs.servers.m.add.a.id.a := 'A record returned from a DO function';
help::pkg.utility.tasking.objs.servers.m.add.s := 'add(agentid, id)';
help::pkg.utility.tasking.objs.servers.m.run := [=];
help::pkg.utility.tasking.objs.servers.m.run.d := 'Run a function in an object';
help::pkg.utility.tasking.objs.servers.m.run.a.id := [=];
help::pkg.utility.tasking.objs.servers.m.run.a.id.d := 'Identifies which server to use';
help::pkg.utility.tasking.objs.servers.m.run.a.id.def := 'no default';
help::pkg.utility.tasking.objs.servers.m.run.a.id.a := 'A positive integer obtained from the                           activate function.';
help::pkg.utility.tasking.objs.servers.m.run.a.invokerecord := [=];
help::pkg.utility.tasking.objs.servers.m.run.a.invokerecord.d := 'Parameters for the function that will be run';
help::pkg.utility.tasking.objs.servers.m.run.a.invokerecord.def := 'no default';
help::pkg.utility.tasking.objs.servers.m.run.a.invokerecord.a := 'A record with the required fields';
help::pkg.utility.tasking.objs.servers.m.run.a.async := [=];
help::pkg.utility.tasking.objs.servers.m.run.a.async.d := 'Return before the function has completed?';
help::pkg.utility.tasking.objs.servers.m.run.a.async.def := 'F';
help::pkg.utility.tasking.objs.servers.m.run.a.async.a := 'T or F';
help::pkg.utility.tasking.objs.servers.m.run.s := 'run(id, invokerecord, async)';
help::pkg.utility.tasking.objs.servers.m.done := [=];
help::pkg.utility.tasking.objs.servers.m.done.d := 'Delete a tool';
help::pkg.utility.tasking.objs.servers.m.done.a.id := [=];
help::pkg.utility.tasking.objs.servers.m.done.a.id.d := 'Identifies which server to use';
help::pkg.utility.tasking.objs.servers.m.done.a.id.def := 'no default';
help::pkg.utility.tasking.objs.servers.m.done.a.id.a := 'A positive integer obtained from the                           activate function.';
help::pkg.utility.tasking.objs.servers.m.done.a.objectid := [=];
help::pkg.utility.tasking.objs.servers.m.done.a.objectid.d := 'The object to delete.';
help::pkg.utility.tasking.objs.servers.m.done.a.objectid.def := 'no default';
help::pkg.utility.tasking.objs.servers.m.done.a.objectid.a := 'The objectid field of the record returned by                            the create function.';
help::pkg.utility.tasking.objs.servers.m.done.s := 'done(id, objectid)';
help::pkg.utility.tasking.objs.servers.m.running := [=];
help::pkg.utility.tasking.objs.servers.m.running.d := 'Determine if an asynchronous function is running';
help::pkg.utility.tasking.objs.servers.m.running.a.jobid := [=];
help::pkg.utility.tasking.objs.servers.m.running.a.jobid.d := 'Which job id we are inquiring about';
help::pkg.utility.tasking.objs.servers.m.running.a.jobid.def := 'no default';
help::pkg.utility.tasking.objs.servers.m.running.a.jobid.a := 'A positive integer obtained from the                           run function.';
help::pkg.utility.tasking.objs.servers.m.running.s := 'running(jobid)';
help::pkg.utility.tasking.objs.servers.m.result := [=];
help::pkg.utility.tasking.objs.servers.m.result.d := 'Get the result(s) from an asynchronous function.';
help::pkg.utility.tasking.objs.servers.m.result.a.jobid := [=];
help::pkg.utility.tasking.objs.servers.m.result.a.jobid.d := 'Which job id we are inquiring about';
help::pkg.utility.tasking.objs.servers.m.result.a.jobid.def := 'no default';
help::pkg.utility.tasking.objs.servers.m.result.a.jobid.a := 'A positive integer obtained from the                           run function.';
help::pkg.utility.tasking.objs.servers.m.result.a.clear := [=];
help::pkg.utility.tasking.objs.servers.m.result.a.clear.d := 'Delete the results from the internal buffer';
help::pkg.utility.tasking.objs.servers.m.result.a.clear.def := 'T';
help::pkg.utility.tasking.objs.servers.m.result.a.clear.a := 'T or F';
help::pkg.utility.tasking.objs.servers.m.result.s := 'result(jobid, clear)';
help::pkg.utility.tasking.objs.servers.m.getplotter := [=];
help::pkg.utility.tasking.objs.servers.m.getplotter.d := 'Get the plotter used by a tool';
help::pkg.utility.tasking.objs.servers.m.getplotter.a.id := [=];
help::pkg.utility.tasking.objs.servers.m.getplotter.a.id.d := 'agentid field from record returned by tool id() function';
help::pkg.utility.tasking.objs.servers.m.getplotter.a.id.def := 'no default';
help::pkg.utility.tasking.objs.servers.m.getplotter.a.id.a := 'A positive integer';
help::pkg.utility.tasking.objs.servers.m.getplotter.a.name := [=];
help::pkg.utility.tasking.objs.servers.m.getplotter.a.name.d := 'Optional name of plotfile';
help::pkg.utility.tasking.objs.servers.m.getplotter.a.name.def := '\' \' ';
help::pkg.utility.tasking.objs.servers.m.getplotter.a.name.a := 'String';
help::pkg.utility.tasking.objs.servers.m.getplotter.s := 'getplotter(id, name)';
help::pkg.utility.tasking.objs.servers.m.isvalid := [=];
help::pkg.utility.tasking.objs.servers.m.isvalid.d := 'Is this a valid server?';
help::pkg.utility.tasking.objs.servers.m.isvalid.a.agentid := [=];
help::pkg.utility.tasking.objs.servers.m.isvalid.a.agentid.d := 'server id';
help::pkg.utility.tasking.objs.servers.m.isvalid.a.agentid.def := 'no default';
help::pkg.utility.tasking.objs.servers.m.isvalid.a.agentid.a := 'Int';
help::pkg.utility.tasking.objs.servers.m.isvalid.s := 'isvalid(agentid)';
help::pkg.utility.tasking.objs.servers.m.busy := [=];
help::pkg.utility.tasking.objs.servers.m.busy.d := 'Is the server busy?';
help::pkg.utility.tasking.objs.servers.m.busy.a.agentid := [=];
help::pkg.utility.tasking.objs.servers.m.busy.a.agentid.d := 'server id';
help::pkg.utility.tasking.objs.servers.m.busy.a.agentid.def := 'no default';
help::pkg.utility.tasking.objs.servers.m.busy.a.agentid.a := 'Int';
help::pkg.utility.tasking.objs.servers.m.busy.s := 'busy(agentid)';
help::pkg.utility.tasking.objs.servers.m.settimeout := [=];
help::pkg.utility.tasking.objs.servers.m.settimeout.d := 'Set event timeouts';
help::pkg.utility.tasking.objs.servers.m.settimeout.a.action := [=];
help::pkg.utility.tasking.objs.servers.m.settimeout.a.action.d := 'event name';
help::pkg.utility.tasking.objs.servers.m.settimeout.a.action.def := 'create';
help::pkg.utility.tasking.objs.servers.m.settimeout.a.action.a := 'String';
help::pkg.utility.tasking.objs.servers.m.settimeout.a.timeout := [=];
help::pkg.utility.tasking.objs.servers.m.settimeout.a.timeout.d := 'Time out in seconds';
help::pkg.utility.tasking.objs.servers.m.settimeout.a.timeout.def := '60';
help::pkg.utility.tasking.objs.servers.m.settimeout.a.timeout.a := 'Numeric';
help::pkg.utility.tasking.objs.servers.m.settimeout.s := 'settimeout(action, timeout)';
help::pkg.utility.tasking.objs.servers.m.timeouts := [=];
help::pkg.utility.tasking.objs.servers.m.timeouts.d := 'Return record of timeouts';
help::pkg.utility.tasking.objs.servers.m.timeouts.s := 'timeouts()';
help::pkg.utility.tasking.objs.servers.m.info := [=];
help::pkg.utility.tasking.objs.servers.m.info.d := 'Print information on the existing servers.';
help::pkg.utility.tasking.objs.servers.m.info.s := 'info()';
help::pkg.utility.tasking.objs.servers.m.memory := [=];
help::pkg.utility.tasking.objs.servers.m.memory.d := 'Return the memory usage of each server';
help::pkg.utility.tasking.objs.servers.m.memory.s := 'memory()';
help::pkg.utility.tasking.objs.servers.m.sendmemoryevents := [=];
help::pkg.utility.tasking.objs.servers.m.sendmemoryevents.d := 'Enable the generation of memory events';
help::pkg.utility.tasking.objs.servers.m.sendmemoryevents.s := 'sendmemoryevents()';
help::pkg.utility.tasking.objs.servers.m.stopmemoryevents := [=];
help::pkg.utility.tasking.objs.servers.m.stopmemoryevents.d := 'Disable the generation of memory events';
help::pkg.utility.tasking.objs.servers.m.stopmemoryevents.s := 'stopmemoryevents()';
help::pkg.utility.tasking.objs.servers.m.init := [=];
help::pkg.utility.tasking.objs.servers.m.init.d := 'Initialize servers';
help::pkg.utility.tasking.objs.servers.m.init.s := 'init()';
help::pkg.utility.tasking.objs.servers.m.alerter := [=];
help::pkg.utility.tasking.objs.servers.m.alerter.d := 'Relay events on completion';
help::pkg.utility.tasking.objs.servers.m.alerter.s := 'alerter()';
help::pkg.utility.tasking.objs.servers.m.agents := [=];
help::pkg.utility.tasking.objs.servers.m.agents.d := 'Return a record of all agents';
help::pkg.utility.tasking.objs.servers.m.agents.s := 'agents()';
help::pkg.utility.tasking.objs.servers.m.suspend := [=];
help::pkg.utility.tasking.objs.servers.m.suspend.d := 'Suspend certain clients';
help::pkg.utility.tasking.objs.servers.m.suspend.a.suspend_clients := [=];
help::pkg.utility.tasking.objs.servers.m.suspend.a.suspend_clients.d := 'Clients to suspend';
help::pkg.utility.tasking.objs.servers.m.suspend.a.suspend_clients.def := 'no default';
help::pkg.utility.tasking.objs.servers.m.suspend.a.suspend_clients.a := 'String';
help::pkg.utility.tasking.objs.servers.m.suspend.s := 'suspend(suspend_clients)';
help::pkg.utility.tasking.objs.servers.m.trace := [=];
help::pkg.utility.tasking.objs.servers.m.trace.d := 'Trace events related to certain clients';
help::pkg.utility.tasking.objs.servers.m.trace.a.trace_clients := [=];
help::pkg.utility.tasking.objs.servers.m.trace.a.trace_clients.d := 'Clients to trace';
help::pkg.utility.tasking.objs.servers.m.trace.a.trace_clients.def := 'no default';
help::pkg.utility.tasking.objs.servers.m.trace.a.trace_clients.a := 'String';
help::pkg.utility.tasking.objs.servers.m.trace.s := 'trace(trace_clients)';
help::pkg.utility.tasking.objs.servers.m.kill := [=];
help::pkg.utility.tasking.objs.servers.m.kill.d := 'Kill a given agent';
help::pkg.utility.tasking.objs.servers.m.kill.a.agentid := [=];
help::pkg.utility.tasking.objs.servers.m.kill.a.agentid.d := 'Agent id';
help::pkg.utility.tasking.objs.servers.m.kill.a.agentid.def := 'no default';
help::pkg.utility.tasking.objs.servers.m.kill.a.agentid.a := 'Int';
help::pkg.utility.tasking.objs.servers.m.kill.s := 'kill(agentid)';
help::pkg.utility.tasking.objs.servers.m.methods := [=];
help::pkg.utility.tasking.objs.servers.m.methods.d := 'Return the methods of an object';
help::pkg.utility.tasking.objs.servers.m.methods.a.agentid := [=];
help::pkg.utility.tasking.objs.servers.m.methods.a.agentid.d := 'Agent id';
help::pkg.utility.tasking.objs.servers.m.methods.a.agentid.def := 'no default';
help::pkg.utility.tasking.objs.servers.m.methods.a.agentid.a := 'Int';
help::pkg.utility.tasking.objs.servers.m.methods.a.objectid := [=];
help::pkg.utility.tasking.objs.servers.m.methods.a.objectid.d := 'Object id';
help::pkg.utility.tasking.objs.servers.m.methods.a.objectid.def := 'no default';
help::pkg.utility.tasking.objs.servers.m.methods.a.objectid.a := 'Int';
help::pkg.utility.tasking.objs.servers.m.methods.s := 'methods(agentid, objectid)';

help::pkg.utility.benchmark := [=];
help::pkg.utility.benchmark.objs := [=];
help::pkg.utility.benchmark.funs := [=];
help::pkg.utility.benchmark.d := 'Module for standard AIPS++ performance benchmarks';
help::pkg.utility.benchmark.objs.benchmark := [=];
help::pkg.utility.benchmark.objs.benchmark.m := [=];
help::pkg.utility.benchmark.objs.benchmark.c := [=];
help::pkg.utility.benchmark.objs.benchmark.d := 'tool for standard AIPS++ performance benchmarks';
help::pkg.utility.benchmark.objs.benchmark.c.benchmark := [=];
help::pkg.utility.benchmark.objs.benchmark.c.benchmark.d := 'Construct an benchmark tool';
help::pkg.utility.benchmark.objs.benchmark.c.benchmark.a.datarepospath := [=];
help::pkg.utility.benchmark.objs.benchmark.c.benchmark.a.datarepospath.d := 'Path for the test data repository';
help::pkg.utility.benchmark.objs.benchmark.c.benchmark.a.datarepospath.def := '\' \$AIPSROOT/data/demo/benchmark\' ';
help::pkg.utility.benchmark.objs.benchmark.c.benchmark.a.datarepospath.a := 'String';
help::pkg.utility.benchmark.objs.benchmark.c.benchmark.s := 'benchmark(datarepospath)';
help::pkg.utility.benchmark.objs.benchmark.m.all := [=];
help::pkg.utility.benchmark.objs.benchmark.m.all.d := 'Run all defined benchmarks';
help::pkg.utility.benchmark.objs.benchmark.m.all.s := 'all()';
help::pkg.utility.benchmark.objs.benchmark.m.done := [=];
help::pkg.utility.benchmark.objs.benchmark.m.done.d := 'Terminate the benchmark process';
help::pkg.utility.benchmark.objs.benchmark.m.done.s := 'done()';
help::pkg.utility.benchmark.objs.benchmark.m.ccsf := [=];
help::pkg.utility.benchmark.objs.benchmark.m.ccsf.d := 'Run all Clark Clean, single-field benchmarks';
help::pkg.utility.benchmark.objs.benchmark.m.ccsf.s := 'ccsf()';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu125k := [=];
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu125k.d := 'Run the Clark Clean, single-field, VLA, 125k vis, uncompressed, continuum benchmarks';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu125k.a.imsizes := [=];
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu125k.a.imsizes.d := 'List of image sizes to be used for benchmarking';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu125k.a.imsizes.def := '[512,1024,2048]';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu125k.a.imsizes.a := 'Vector of ints';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu125k.a.stokes := [=];
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu125k.a.stokes.d := 'List of stokes parameters to be used for benchmarking';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu125k.a.stokes.def := '[\' I\' ,\' IQUV\' ]';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu125k.a.stokes.a := 'Vector of \' I\'  and/or \' IQUV\' ';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu125k.a.weight := [=];
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu125k.a.weight.d := 'List of weighting schemes to be used for benchmarking';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu125k.a.weight.def := '[\' natural\' ,\' uniform\' ]';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu125k.a.weight.a := 'Vector of \' uniform\'  and/or \' natural\' ';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu125k.a.spwid := [=];
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu125k.a.spwid.d := 'List of spectral windows to be used for benchmarking';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu125k.a.spwid.def := '[1]';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu125k.a.spwid.a := 'Vector of ints';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu125k.a.niter := [=];
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu125k.a.niter.d := 'The number of CLEAN iterations to be used';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu125k.a.niter.def := '1000';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu125k.a.niter.a := 'Integer';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu125k.a.mode := [=];
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu125k.a.mode.d := 'Imaging mode';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu125k.a.mode.def := '\' mfs\' ';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu125k.a.mode.a := '\' mfs\'  or \' channel\' ';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu125k.a.nchan := [=];
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu125k.a.nchan.d := 'Number of frequency channels to use';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu125k.a.nchan.def := '1';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu125k.a.nchan.a := 'Integer';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu125k.a.start := [=];
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu125k.a.start.d := 'Start channel number';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu125k.a.start.def := '1';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu125k.a.start.a := 'Integer';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu125k.a.step := [=];
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu125k.a.step.d := 'Step to use for stepping through channels';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu125k.a.step.def := '1';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu125k.a.step.a := 'Integer';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu125k.a.fieldid := [=];
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu125k.a.fieldid.d := 'Field ID parameter of imager';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu125k.a.fieldid.def := '1';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu125k.a.fieldid.a := 'Integer';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu125k.a.facets := [=];
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu125k.a.facets.d := 'Number of facets to be used for imaging';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu125k.a.facets.def := '1';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu125k.a.facets.a := 'Integer';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu125k.a.tile := [=];
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu125k.a.tile.d := 'Tile size used internally by imager for PagedArrays';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu125k.a.tile.def := '16';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu125k.a.tile.a := 'Integer';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu125k.a.cache := [=];
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu125k.a.cache.d := 'The cache size internally by imager for PagedArrays';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu125k.a.cache.def := '4194304 (4MB)';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu125k.a.cache.a := 'Integer';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu125k.s := 'ccsfvlacu125k(imsizes, stokes, weight, spwid, niter, mode, nchan, start, step, fieldid, facets, tile, cache)';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu1m := [=];
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu1m.d := 'Run the Clark Clean, single-field, VLA, 1M vis, uncompressed, continuum benchmarks';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu1m.a.imsizes := [=];
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu1m.a.imsizes.d := 'List of image sizes to be used for benchmarking';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu1m.a.imsizes.def := '[512,1024,2048]';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu1m.a.imsizes.a := 'Vector of ints';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu1m.a.stokes := [=];
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu1m.a.stokes.d := 'List of stokes parameters to be used for benchmarking';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu1m.a.stokes.def := '[\' I\' ,\' IQUV\' ]';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu1m.a.stokes.a := 'Vector of \' I\'  and/or \' IQUV\' ';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu1m.a.weight := [=];
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu1m.a.weight.d := 'List of weighting schemes to be used for benchmarking';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu1m.a.weight.def := '[\' natural\' ,\' uniform\' ]';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu1m.a.weight.a := 'Vector of \' uniform\'  and/or \' natural\' ';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu1m.a.spwid := [=];
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu1m.a.spwid.d := 'List of spectral windows to be used for benchmarking';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu1m.a.spwid.def := '[1]';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu1m.a.spwid.a := 'Vector of ints';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu1m.a.niter := [=];
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu1m.a.niter.d := 'The number of CLEAN iterations to be used';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu1m.a.niter.def := '1000';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu1m.a.niter.a := 'Integer';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu1m.a.mode := [=];
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu1m.a.mode.d := 'Imaging mode';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu1m.a.mode.def := '\' mfs\' ';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu1m.a.mode.a := '\' mfs\'  or \' channel\' ';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu1m.a.nchan := [=];
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu1m.a.nchan.d := 'Number of frequency channels to use';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu1m.a.nchan.def := '1';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu1m.a.nchan.a := 'Integer';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu1m.a.start := [=];
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu1m.a.start.d := 'Start channel number';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu1m.a.start.def := '1';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu1m.a.start.a := 'Integer';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu1m.a.step := [=];
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu1m.a.step.d := 'Step to use for stepping through channels';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu1m.a.step.def := '1';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu1m.a.step.a := 'Integer';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu1m.a.fieldid := [=];
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu1m.a.fieldid.d := 'Field ID parameter of imager';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu1m.a.fieldid.def := '1';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu1m.a.fieldid.a := 'Integer';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu1m.a.facets := [=];
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu1m.a.facets.d := 'Number of facets to be used for imaging';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu1m.a.facets.def := '1';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu1m.a.facets.a := 'Integer';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu1m.a.tile := [=];
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu1m.a.tile.d := 'Tile size used internally by imager for PagedArrays';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu1m.a.tile.def := '16';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu1m.a.tile.a := 'Integer';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu1m.a.cache := [=];
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu1m.a.cache.d := 'The cache size internally by imager for PagedArrays';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu1m.a.cache.def := '4194304 (4MB)';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu1m.a.cache.a := 'Integer';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlacu1m.s := 'ccsfvlacu1m(imsizes, stokes, weight, spwid, niter, mode, nchan, start, step, fieldid, facets, tile, cache)';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlalu125k := [=];
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlalu125k.d := 'Run the Clark Clean, single-field, VLA, 125K vis, 64 frequency channel, uncompressed, spectral line benchmarks';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlalu125k.a.imsizes := [=];
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlalu125k.a.imsizes.d := 'List of image sizes to be used for benchmarking';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlalu125k.a.imsizes.def := '[512]';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlalu125k.a.imsizes.a := 'Vector of ints';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlalu125k.a.stokes := [=];
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlalu125k.a.stokes.d := 'List of stokes parameters to be used for benchmarking';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlalu125k.a.stokes.def := '[\' I\' ]';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlalu125k.a.stokes.a := 'Vector of \' I\'  and/or \' IQUV\' ';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlalu125k.a.weight := [=];
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlalu125k.a.weight.d := 'List of weighting schemes to be used for benchmarking';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlalu125k.a.weight.def := '[\' natural\' ,\' uniform\' ]';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlalu125k.a.weight.a := 'Vector of \' uniform\'  and/or \' natural\' ';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlalu125k.a.spwid := [=];
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlalu125k.a.spwid.d := 'List of spectral windows to be used for benchmarking';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlalu125k.a.spwid.def := '[1]';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlalu125k.a.spwid.a := 'Vector of ints';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlalu125k.a.niter := [=];
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlalu125k.a.niter.d := 'The number of CLEAN iterations to be used';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlalu125k.a.niter.def := '1000';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlalu125k.a.niter.a := 'Integer';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlalu125k.a.mode := [=];
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlalu125k.a.mode.d := 'Imaging mode';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlalu125k.a.mode.def := '\' channel\' ';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlalu125k.a.mode.a := '\' mfs\'  or \' channel\' ';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlalu125k.a.nchan := [=];
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlalu125k.a.nchan.d := 'Number of frequency channels to use';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlalu125k.a.nchan.def := '64';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlalu125k.a.nchan.a := 'Integer';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlalu125k.a.start := [=];
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlalu125k.a.start.d := 'Start channel number';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlalu125k.a.start.def := '1';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlalu125k.a.start.a := 'Integer';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlalu125k.a.step := [=];
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlalu125k.a.step.d := 'Step to use for stepping through channels';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlalu125k.a.step.def := '1';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlalu125k.a.step.a := 'Integer';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlalu125k.a.fieldid := [=];
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlalu125k.a.fieldid.d := 'Field ID parameter of imager';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlalu125k.a.fieldid.def := '1';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlalu125k.a.fieldid.a := 'Integer';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlalu125k.a.facets := [=];
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlalu125k.a.facets.d := 'Number of facets to be used for imaging';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlalu125k.a.facets.def := '1';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlalu125k.a.facets.a := 'Integer';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlalu125k.a.tile := [=];
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlalu125k.a.tile.d := 'Tile size used internally by imager for PagedArrays';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlalu125k.a.tile.def := '16';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlalu125k.a.tile.a := 'Integer';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlalu125k.a.cache := [=];
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlalu125k.a.cache.d := 'The cache size internally by imager for PagedArrays';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlalu125k.a.cache.def := '4194304 (4MB)';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlalu125k.a.cache.a := 'Integer';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfvlalu125k.s := 'ccsfvlalu125k(imsizes, stokes, weight, spwid, niter, mode, nchan, start, step, fieldid, facets, tile, cache)';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfbi4nl := [=];
help::pkg.utility.benchmark.objs.benchmark.m.ccsfbi4nl.d := 'Run the Clark Clean, single-field, BIMA, 139M vis, uncompressed, continuum benchmarks';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfbi4nl.a.imsizes := [=];
help::pkg.utility.benchmark.objs.benchmark.m.ccsfbi4nl.a.imsizes.d := 'List of image sizes to be used for benchmarking';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfbi4nl.a.imsizes.def := '[256]';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfbi4nl.a.imsizes.a := 'Vector of ints';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfbi4nl.a.stokes := [=];
help::pkg.utility.benchmark.objs.benchmark.m.ccsfbi4nl.a.stokes.d := 'List of stokes parameters to be used for benchmarking';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfbi4nl.a.stokes.def := '[\' I\' ]';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfbi4nl.a.stokes.a := 'Vector of \' I\'  and/or \' IQUV\' ';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfbi4nl.a.weight := [=];
help::pkg.utility.benchmark.objs.benchmark.m.ccsfbi4nl.a.weight.d := 'List of weighting schemes to be used for benchmarking';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfbi4nl.a.weight.def := '[\' natural\' ]';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfbi4nl.a.weight.a := 'Vector of \' uniform\'  and/or \' natural\' ';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfbi4nl.a.spwid := [=];
help::pkg.utility.benchmark.objs.benchmark.m.ccsfbi4nl.a.spwid.d := 'List of spectral windows to be used for benchmarking';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfbi4nl.a.spwid.def := '[1]';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfbi4nl.a.spwid.a := 'Vector of ints';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfbi4nl.a.niter := [=];
help::pkg.utility.benchmark.objs.benchmark.m.ccsfbi4nl.a.niter.d := 'The number of CLEAN iterations to be used';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfbi4nl.a.niter.def := '1000';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfbi4nl.a.niter.a := 'Integer';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfbi4nl.a.mode := [=];
help::pkg.utility.benchmark.objs.benchmark.m.ccsfbi4nl.a.mode.d := 'Imaging mode';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfbi4nl.a.mode.def := '\' channel\' ';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfbi4nl.a.mode.a := '\' mfs\'  or \' channel\' ';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfbi4nl.a.nchan := [=];
help::pkg.utility.benchmark.objs.benchmark.m.ccsfbi4nl.a.nchan.d := 'Number of frequency channels to use';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfbi4nl.a.nchan.def := '20';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfbi4nl.a.nchan.a := 'Integer';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfbi4nl.a.start := [=];
help::pkg.utility.benchmark.objs.benchmark.m.ccsfbi4nl.a.start.d := 'Start channel number';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfbi4nl.a.start.def := '40';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfbi4nl.a.start.a := 'Integer';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfbi4nl.a.step := [=];
help::pkg.utility.benchmark.objs.benchmark.m.ccsfbi4nl.a.step.d := 'Step to use for stepping through channels';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfbi4nl.a.step.def := '1';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfbi4nl.a.step.a := 'Integer';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfbi4nl.a.fieldid := [=];
help::pkg.utility.benchmark.objs.benchmark.m.ccsfbi4nl.a.fieldid.d := 'Field ID parameter of imager';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfbi4nl.a.fieldid.def := '1';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfbi4nl.a.fieldid.a := 'Integer';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfbi4nl.a.facets := [=];
help::pkg.utility.benchmark.objs.benchmark.m.ccsfbi4nl.a.facets.d := 'Number of facets to be used for imaging';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfbi4nl.a.facets.def := '1';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfbi4nl.a.facets.a := 'Integer';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfbi4nl.a.tile := [=];
help::pkg.utility.benchmark.objs.benchmark.m.ccsfbi4nl.a.tile.d := 'Tile size used internally by imager for PagedArrays';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfbi4nl.a.tile.def := '16';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfbi4nl.a.tile.a := 'Integer';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfbi4nl.a.cache := [=];
help::pkg.utility.benchmark.objs.benchmark.m.ccsfbi4nl.a.cache.d := 'The cache size internally by imager for PagedArrays';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfbi4nl.a.cache.def := '4194304 (4MB)';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfbi4nl.a.cache.a := 'Integer';
help::pkg.utility.benchmark.objs.benchmark.m.ccsfbi4nl.s := 'ccsfbi4nl(imsizes, stokes, weight, spwid, niter, mode, nchan, start, step, fieldid, facets, tile, cache)';
help::pkg.utility.benchmark.objs.benchmark.m.fuvrd := [=];
help::pkg.utility.benchmark.objs.benchmark.m.fuvrd.d := 'Run all FITS UV read benchmarks';
help::pkg.utility.benchmark.objs.benchmark.m.fuvrd.s := 'fuvrd()';
help::pkg.utility.benchmark.objs.benchmark.m.fuvrdvlacu125k := [=];
help::pkg.utility.benchmark.objs.benchmark.m.fuvrdvlacu125k.d := 'Run the FITS Filler, VLA, 125k vis, uncompressed, continuum benchmarks';
help::pkg.utility.benchmark.objs.benchmark.m.fuvrdvlacu125k.a.fitsin := [=];
help::pkg.utility.benchmark.objs.benchmark.m.fuvrdvlacu125k.a.fitsin.d := 'FITS file name';
help::pkg.utility.benchmark.objs.benchmark.m.fuvrdvlacu125k.a.fitsin.def := 'vlac125k.fits';
help::pkg.utility.benchmark.objs.benchmark.m.fuvrdvlacu125k.a.fitsin.a := 'string';
help::pkg.utility.benchmark.objs.benchmark.m.fuvrdvlacu125k.a.compress := [=];
help::pkg.utility.benchmark.objs.benchmark.m.fuvrdvlacu125k.a.compress.d := 'MS compression mode';
help::pkg.utility.benchmark.objs.benchmark.m.fuvrdvlacu125k.a.compress.def := 'F';
help::pkg.utility.benchmark.objs.benchmark.m.fuvrdvlacu125k.a.compress.a := 'Bool';
help::pkg.utility.benchmark.objs.benchmark.m.fuvrdvlacu125k.s := 'fuvrdvlacu125k(fitsin, compress)';
help::pkg.utility.benchmark.objs.benchmark.m.fuvrdvlacu1m := [=];
help::pkg.utility.benchmark.objs.benchmark.m.fuvrdvlacu1m.d := 'Run FITS Filler, VLA, 1M vis, uncompressed, continuum benchmarks';
help::pkg.utility.benchmark.objs.benchmark.m.fuvrdvlacu1m.a.fitsin := [=];
help::pkg.utility.benchmark.objs.benchmark.m.fuvrdvlacu1m.a.fitsin.d := 'FITS file name';
help::pkg.utility.benchmark.objs.benchmark.m.fuvrdvlacu1m.a.fitsin.def := 'vlac1M.fits';
help::pkg.utility.benchmark.objs.benchmark.m.fuvrdvlacu1m.a.fitsin.a := 'string';
help::pkg.utility.benchmark.objs.benchmark.m.fuvrdvlacu1m.a.compress := [=];
help::pkg.utility.benchmark.objs.benchmark.m.fuvrdvlacu1m.a.compress.d := 'MS compression mode';
help::pkg.utility.benchmark.objs.benchmark.m.fuvrdvlacu1m.a.compress.def := 'F';
help::pkg.utility.benchmark.objs.benchmark.m.fuvrdvlacu1m.a.compress.a := 'Bool';
help::pkg.utility.benchmark.objs.benchmark.m.fuvrdvlacu1m.s := 'fuvrdvlacu1m(fitsin, compress)';
help::pkg.utility.benchmark.objs.benchmark.m.fuvrdvlalu125k := [=];
help::pkg.utility.benchmark.objs.benchmark.m.fuvrdvlalu125k.d := 'Run the FITS Filler VLA, 125K vis, 64 frequency channel, uncompressed, spectral line benchmarks';
help::pkg.utility.benchmark.objs.benchmark.m.fuvrdvlalu125k.a.fitsin := [=];
help::pkg.utility.benchmark.objs.benchmark.m.fuvrdvlalu125k.a.fitsin.d := 'FITS file name';
help::pkg.utility.benchmark.objs.benchmark.m.fuvrdvlalu125k.a.fitsin.def := 'vlal125K64Chan.fits';
help::pkg.utility.benchmark.objs.benchmark.m.fuvrdvlalu125k.a.fitsin.a := 'string';
help::pkg.utility.benchmark.objs.benchmark.m.fuvrdvlalu125k.a.compress := [=];
help::pkg.utility.benchmark.objs.benchmark.m.fuvrdvlalu125k.a.compress.d := 'MS compression mode';
help::pkg.utility.benchmark.objs.benchmark.m.fuvrdvlalu125k.a.compress.def := 'F';
help::pkg.utility.benchmark.objs.benchmark.m.fuvrdvlalu125k.a.compress.a := 'Bool';
help::pkg.utility.benchmark.objs.benchmark.m.fuvrdvlalu125k.s := 'fuvrdvlalu125k(fitsin, compress)';
help::pkg.utility.benchmark.objs.benchmark.m.almafuvrd := [=];
help::pkg.utility.benchmark.objs.benchmark.m.almafuvrd.d := 'Run all ALMA-TI almati2ms FITS UV read benchmarks';
help::pkg.utility.benchmark.objs.benchmark.m.almafuvrd.s := 'almafuvrd()';
help::pkg.utility.benchmark.objs.benchmark.m.almatifuvrd := [=];
help::pkg.utility.benchmark.objs.benchmark.m.almatifuvrd.d := 'Run the almati2ms FITS Filler, IRAM data, ALMA-TI format, uncompressed benchmarks';
help::pkg.utility.benchmark.objs.benchmark.m.almatifuvrd.a.fitsin := [=];
help::pkg.utility.benchmark.objs.benchmark.m.almatifuvrd.a.fitsin.d := 'FITS file name';
help::pkg.utility.benchmark.objs.benchmark.m.almatifuvrd.a.fitsin.def := '07-feb-1997-g067-04.fits';
help::pkg.utility.benchmark.objs.benchmark.m.almatifuvrd.a.fitsin.a := 'string';
help::pkg.utility.benchmark.objs.benchmark.m.almatifuvrd.a.compress := [=];
help::pkg.utility.benchmark.objs.benchmark.m.almatifuvrd.a.compress.d := 'MS compression mode';
help::pkg.utility.benchmark.objs.benchmark.m.almatifuvrd.a.compress.def := 'F';
help::pkg.utility.benchmark.objs.benchmark.m.almatifuvrd.a.compress.a := 'Bool';
help::pkg.utility.benchmark.objs.benchmark.m.almatifuvrd.s := 'almatifuvrd(fitsin, compress)';
help::pkg.utility.benchmark.objs.benchmark.m.calvla := [=];
help::pkg.utility.benchmark.objs.benchmark.m.calvla.d := 'Run all default VLA calibrator benchmarks';
help::pkg.utility.benchmark.objs.benchmark.m.calvla.s := 'calvla()';
help::pkg.utility.benchmark.objs.benchmark.m.calvlau27s10 := [=];
help::pkg.utility.benchmark.objs.benchmark.m.calvlau27s10.d := 'Run the VLA calibrator benchmarks for G and D Jones';
help::pkg.utility.benchmark.objs.benchmark.m.calvlau27s10.a.datafile := [=];
help::pkg.utility.benchmark.objs.benchmark.m.calvlau27s10.a.datafile.d := 'FITS file name';
help::pkg.utility.benchmark.objs.benchmark.m.calvlau27s10.a.datafile.def := 'calvlac27s10.fits';
help::pkg.utility.benchmark.objs.benchmark.m.calvlau27s10.a.datafile.a := 'string';
help::pkg.utility.benchmark.objs.benchmark.m.calvlau27s10.a.myms := [=];
help::pkg.utility.benchmark.objs.benchmark.m.calvlau27s10.a.myms.d := 'Name of the MS.  Will bypass the fitstoms() operation';
help::pkg.utility.benchmark.objs.benchmark.m.calvlau27s10.a.myms.def := '\'  \' ';
help::pkg.utility.benchmark.objs.benchmark.m.calvlau27s10.a.myms.a := 'string';
help::pkg.utility.benchmark.objs.benchmark.m.calvlau27s10.a.jones := [=];
help::pkg.utility.benchmark.objs.benchmark.m.calvlau27s10.a.jones.d := 'List of Jones matrices to be solved for';
help::pkg.utility.benchmark.objs.benchmark.m.calvlau27s10.a.jones.def := '[\' G\' ,\' D\' ]';
help::pkg.utility.benchmark.objs.benchmark.m.calvlau27s10.a.jones.a := 'array of strings';
help::pkg.utility.benchmark.objs.benchmark.m.calvlau27s10.a.nsolint := [=];
help::pkg.utility.benchmark.objs.benchmark.m.calvlau27s10.a.nsolint.d := 'No. of solution intervals';
help::pkg.utility.benchmark.objs.benchmark.m.calvlau27s10.a.nsolint.def := '100';
help::pkg.utility.benchmark.objs.benchmark.m.calvlau27s10.a.nsolint.a := 'integer';
help::pkg.utility.benchmark.objs.benchmark.m.calvlau27s10.a.nchan := [=];
help::pkg.utility.benchmark.objs.benchmark.m.calvlau27s10.a.nchan.d := 'No. of frequency channels to be used';
help::pkg.utility.benchmark.objs.benchmark.m.calvlau27s10.a.nchan.def := '1';
help::pkg.utility.benchmark.objs.benchmark.m.calvlau27s10.a.nchan.a := 'integer';
help::pkg.utility.benchmark.objs.benchmark.m.calvlau27s10.a.start := [=];
help::pkg.utility.benchmark.objs.benchmark.m.calvlau27s10.a.start.d := 'The starting frequency channel number';
help::pkg.utility.benchmark.objs.benchmark.m.calvlau27s10.a.start.def := '1';
help::pkg.utility.benchmark.objs.benchmark.m.calvlau27s10.a.start.a := 'integer';
help::pkg.utility.benchmark.objs.benchmark.m.calvlau27s10.a.step := [=];
help::pkg.utility.benchmark.objs.benchmark.m.calvlau27s10.a.step.d := 'Increment for iterating through frequency channels';
help::pkg.utility.benchmark.objs.benchmark.m.calvlau27s10.a.step.def := '1';
help::pkg.utility.benchmark.objs.benchmark.m.calvlau27s10.a.step.a := 'integer';
help::pkg.utility.benchmark.objs.benchmark.m.calvlau27s10.a.tablename := [=];
help::pkg.utility.benchmark.objs.benchmark.m.calvlau27s10.a.tablename.d := 'Name of a calibration table to be applied before the solver is invoked';
help::pkg.utility.benchmark.objs.benchmark.m.calvlau27s10.a.tablename.def := '\' \' ';
help::pkg.utility.benchmark.objs.benchmark.m.calvlau27s10.a.tablename.a := 'string';
help::pkg.utility.benchmark.objs.benchmark.m.calvlau27s10.s := 'calvlau27s10(datafile, myms, jones, nsolint, nchan, start, step, tablename)';
help::pkg.utility.benchmark.objs.benchmark.m.sdall := [=];
help::pkg.utility.benchmark.objs.benchmark.m.sdall.d := 'Run the single dish benchmark tests';
help::pkg.utility.benchmark.objs.benchmark.m.sdall.s := 'sdall()';
help::pkg.utility.benchmark.objs.benchmark.m.sdbench := [=];
help::pkg.utility.benchmark.objs.benchmark.m.sdbench.d := 'Run the single dish benchmark tests for a particular data set';
help::pkg.utility.benchmark.objs.benchmark.m.sdbench.a.code := [=];
help::pkg.utility.benchmark.objs.benchmark.m.sdbench.a.code.d := 'code for test';
help::pkg.utility.benchmark.objs.benchmark.m.sdbench.a.code.def := 'none (see above)';
help::pkg.utility.benchmark.objs.benchmark.m.sdbench.a.code.a := 'string';
help::pkg.utility.benchmark.objs.benchmark.m.sdbench.s := 'sdbench(code)';
help::pkg.utility.benchmark.objs.atmosphere := [=];
help::pkg.utility.benchmark.objs.atmosphere.m := [=];
help::pkg.utility.benchmark.objs.atmosphere.c := [=];
help::pkg.utility.benchmark.objs.atmosphere.d := 'Tool for calculating atmospheric effects in the mm regime';
help::pkg.utility.benchmark.objs.atmosphere.c.atmosphere := [=];
help::pkg.utility.benchmark.objs.atmosphere.c.atmosphere.d := 'Construct an atmosphere tool';
help::pkg.utility.benchmark.objs.atmosphere.c.atmosphere.a.altitude := [=];
help::pkg.utility.benchmark.objs.atmosphere.c.atmosphere.a.altitude.d := 'Site altitude';
help::pkg.utility.benchmark.objs.atmosphere.c.atmosphere.a.altitude.def := '2550m';
help::pkg.utility.benchmark.objs.atmosphere.c.atmosphere.a.altitude.a := 'Quantity with units of altitude, meter ';
help::pkg.utility.benchmark.objs.atmosphere.c.atmosphere.a.temperature := [=];
help::pkg.utility.benchmark.objs.atmosphere.c.atmosphere.a.temperature.d := 'Ambient Temperature';
help::pkg.utility.benchmark.objs.atmosphere.c.atmosphere.a.temperature.def := '270.32K';
help::pkg.utility.benchmark.objs.atmosphere.c.atmosphere.a.temperature.a := 'Quantity with units of temperature, K';
help::pkg.utility.benchmark.objs.atmosphere.c.atmosphere.a.pressure := [=];
help::pkg.utility.benchmark.objs.atmosphere.c.atmosphere.a.pressure.d := 'Ambient pressure';
help::pkg.utility.benchmark.objs.atmosphere.c.atmosphere.a.pressure.def := '73585Pa';
help::pkg.utility.benchmark.objs.atmosphere.c.atmosphere.a.pressure.a := 'Quantity with units of pressure, Pascal ';
help::pkg.utility.benchmark.objs.atmosphere.c.atmosphere.a.maxAltitude := [=];
help::pkg.utility.benchmark.objs.atmosphere.c.atmosphere.a.maxAltitude.d := 'altitude of the top pf the modelled atmosphere';
help::pkg.utility.benchmark.objs.atmosphere.c.atmosphere.a.maxAltitude.def := '45000m';
help::pkg.utility.benchmark.objs.atmosphere.c.atmosphere.a.maxAltitude.a := 'Quantity with dimension of length, meter';
help::pkg.utility.benchmark.objs.atmosphere.c.atmosphere.a.humidity := [=];
help::pkg.utility.benchmark.objs.atmosphere.c.atmosphere.a.humidity.d := 'used to guess water';
help::pkg.utility.benchmark.objs.atmosphere.c.atmosphere.a.humidity.def := '20';
help::pkg.utility.benchmark.objs.atmosphere.c.atmosphere.a.humidity.a := '0 - 100';
help::pkg.utility.benchmark.objs.atmosphere.c.atmosphere.a.dTem_dh := [=];
help::pkg.utility.benchmark.objs.atmosphere.c.atmosphere.a.dTem_dh.d := 'the derivative of temperature with respect to height';
help::pkg.utility.benchmark.objs.atmosphere.c.atmosphere.a.dTem_dh.def := '-0.0056K/m';
help::pkg.utility.benchmark.objs.atmosphere.c.atmosphere.a.dTem_dh.a := 'Quantity with units of K/m';
help::pkg.utility.benchmark.objs.atmosphere.c.atmosphere.a.dP := [=];
help::pkg.utility.benchmark.objs.atmosphere.c.atmosphere.a.dP.d := 'initial pressure step';
help::pkg.utility.benchmark.objs.atmosphere.c.atmosphere.a.dP.def := '500Pa';
help::pkg.utility.benchmark.objs.atmosphere.c.atmosphere.a.dP.a := 'Quantity with the units of pressure, Pa';
help::pkg.utility.benchmark.objs.atmosphere.c.atmosphere.a.dPm := [=];
help::pkg.utility.benchmark.objs.atmosphere.c.atmosphere.a.dPm.d := 'pressure multiplicative factor for steps';
help::pkg.utility.benchmark.objs.atmosphere.c.atmosphere.a.dPm.def := '1.25';
help::pkg.utility.benchmark.objs.atmosphere.c.atmosphere.a.dPm.a := 'real value';
help::pkg.utility.benchmark.objs.atmosphere.c.atmosphere.a.h0 := [=];
help::pkg.utility.benchmark.objs.atmosphere.c.atmosphere.a.h0.d := 'scale height for water( exp distribution )';
help::pkg.utility.benchmark.objs.atmosphere.c.atmosphere.a.h0.def := '2000m';
help::pkg.utility.benchmark.objs.atmosphere.c.atmosphere.a.h0.a := 'Quantity with the dimension of length, meter ';
help::pkg.utility.benchmark.objs.atmosphere.c.atmosphere.a.atmType := [=];
help::pkg.utility.benchmark.objs.atmosphere.c.atmosphere.a.atmType.d := ' atmospheric type ';
help::pkg.utility.benchmark.objs.atmosphere.c.atmosphere.a.atmType.def := '2';
help::pkg.utility.benchmark.objs.atmosphere.c.atmosphere.a.atmType.a := ' 1(tropical),2(mid latitude summer),3(mid latitude winter)                                                  ,4(subarctic summer),5(subarctic winter), dimensionless';
help::pkg.utility.benchmark.objs.atmosphere.c.atmosphere.s := 'atmosphere(altitude, temperature, pressure, maxAltitude, humidity, dTem_dh, dP, dPm, h0, atmType)';
help::pkg.utility.benchmark.objs.atmosphere.m.getStartupWaterContent := [=];
help::pkg.utility.benchmark.objs.atmosphere.m.getStartupWaterContent.d := 'get the guessed startup water content';
help::pkg.utility.benchmark.objs.atmosphere.m.getStartupWaterContent.s := 'getStartupWaterContent()';
help::pkg.utility.benchmark.objs.atmosphere.m.getProfile := [=];
help::pkg.utility.benchmark.objs.atmosphere.m.getProfile.d := 'get atmospheric profile';
help::pkg.utility.benchmark.objs.atmosphere.m.getProfile.a.thickness := [=];
help::pkg.utility.benchmark.objs.atmosphere.m.getProfile.a.thickness.d := 'thickness of every atmospheric layer';
help::pkg.utility.benchmark.objs.atmosphere.m.getProfile.a.thickness.def := 'none';
help::pkg.utility.benchmark.objs.atmosphere.m.getProfile.a.thickness.a := 'Quantum with a vector value and dimension of length, m';
help::pkg.utility.benchmark.objs.atmosphere.m.getProfile.a.temperature := [=];
help::pkg.utility.benchmark.objs.atmosphere.m.getProfile.a.temperature.d := 'temperature of every atmospheric layer';
help::pkg.utility.benchmark.objs.atmosphere.m.getProfile.a.temperature.def := 'none';
help::pkg.utility.benchmark.objs.atmosphere.m.getProfile.a.temperature.a := 'Quantum with a vector value and unit of temperature, K';
help::pkg.utility.benchmark.objs.atmosphere.m.getProfile.a.water := [=];
help::pkg.utility.benchmark.objs.atmosphere.m.getProfile.a.water.d := 'water content of every atmospheric layer';
help::pkg.utility.benchmark.objs.atmosphere.m.getProfile.a.water.def := 'none';
help::pkg.utility.benchmark.objs.atmosphere.m.getProfile.a.water.a := 'Quantum with a vector value and unit of kg.m-3';
help::pkg.utility.benchmark.objs.atmosphere.m.getProfile.a.pressure := [=];
help::pkg.utility.benchmark.objs.atmosphere.m.getProfile.a.pressure.d := 'pressure of every atmospheric layer';
help::pkg.utility.benchmark.objs.atmosphere.m.getProfile.a.pressure.def := 'none';
help::pkg.utility.benchmark.objs.atmosphere.m.getProfile.a.pressure.a := 'Quantum with a vector value and unit of Pascal ';
help::pkg.utility.benchmark.objs.atmosphere.m.getProfile.a.O3 := [=];
help::pkg.utility.benchmark.objs.atmosphere.m.getProfile.a.O3.d := 'O3 of every atmospheric layer';
help::pkg.utility.benchmark.objs.atmosphere.m.getProfile.a.O3.def := 'none';
help::pkg.utility.benchmark.objs.atmosphere.m.getProfile.a.O3.a := 'Quantum with a vector value and unit of m-3';
help::pkg.utility.benchmark.objs.atmosphere.m.getProfile.a.CO := [=];
help::pkg.utility.benchmark.objs.atmosphere.m.getProfile.a.CO.d := 'CO of every atmospheric layer';
help::pkg.utility.benchmark.objs.atmosphere.m.getProfile.a.CO.def := 'none';
help::pkg.utility.benchmark.objs.atmosphere.m.getProfile.a.CO.a := 'Quantum with a vector value and unit of m-3';
help::pkg.utility.benchmark.objs.atmosphere.m.getProfile.a.N2O := [=];
help::pkg.utility.benchmark.objs.atmosphere.m.getProfile.a.N2O.d := 'N2O of every atmospheric layer';
help::pkg.utility.benchmark.objs.atmosphere.m.getProfile.a.N2O.def := 'none';
help::pkg.utility.benchmark.objs.atmosphere.m.getProfile.a.N2O.a := 'Quantum with a vector value and unit of m-3';
help::pkg.utility.benchmark.objs.atmosphere.m.getProfile.s := 'getProfile(thickness, temperature, water, pressure, O3, CO, N2O)';
help::pkg.utility.benchmark.objs.atmosphere.m.initWindow := [=];
help::pkg.utility.benchmark.objs.atmosphere.m.initWindow.d := 'initialize window ';
help::pkg.utility.benchmark.objs.atmosphere.m.initWindow.a.nbands := [=];
help::pkg.utility.benchmark.objs.atmosphere.m.initWindow.a.nbands.d := 'number of bands';
help::pkg.utility.benchmark.objs.atmosphere.m.initWindow.a.nbands.def := '1';
help::pkg.utility.benchmark.objs.atmosphere.m.initWindow.a.nbands.a := 'Int, standing for the number of bands';
help::pkg.utility.benchmark.objs.atmosphere.m.initWindow.a.fCenter := [=];
help::pkg.utility.benchmark.objs.atmosphere.m.initWindow.a.fCenter.d := 'frequencies';
help::pkg.utility.benchmark.objs.atmosphere.m.initWindow.a.fCenter.def := '\' 88.e9Hz\' ';
help::pkg.utility.benchmark.objs.atmosphere.m.initWindow.a.fCenter.a := 'Quantum with a vector value and unit of frequency, Hz';
help::pkg.utility.benchmark.objs.atmosphere.m.initWindow.a.fWidth := [=];
help::pkg.utility.benchmark.objs.atmosphere.m.initWindow.a.fWidth.d := 'frequency width';
help::pkg.utility.benchmark.objs.atmosphere.m.initWindow.a.fWidth.def := '\' 5.0e8Hz\' ';
help::pkg.utility.benchmark.objs.atmosphere.m.initWindow.a.fWidth.a := 'Quantum with a vector value and unit of frequency, Hz';
help::pkg.utility.benchmark.objs.atmosphere.m.initWindow.a.fRes := [=];
help::pkg.utility.benchmark.objs.atmosphere.m.initWindow.a.fRes.d := 'resolution inside band';
help::pkg.utility.benchmark.objs.atmosphere.m.initWindow.a.fRes.def := '\' 1.25Hz\' ';
help::pkg.utility.benchmark.objs.atmosphere.m.initWindow.a.fRes.a := 'Quantum with a vector value and unit frequency, Hz ';
help::pkg.utility.benchmark.objs.atmosphere.m.initWindow.s := 'initWindow(nbands, fCenter, fWidth, fRes)';
help::pkg.utility.benchmark.objs.atmosphere.m.getNdata := [=];
help::pkg.utility.benchmark.objs.atmosphere.m.getNdata.d := 'return the number of channels of ith band';
help::pkg.utility.benchmark.objs.atmosphere.m.getNdata.a.ibands := [=];
help::pkg.utility.benchmark.objs.atmosphere.m.getNdata.a.ibands.d := 'identifier of bands';
help::pkg.utility.benchmark.objs.atmosphere.m.getNdata.a.ibands.def := '1';
help::pkg.utility.benchmark.objs.atmosphere.m.getNdata.a.ibands.a := 'Int, standing for the identifier of bands';
help::pkg.utility.benchmark.objs.atmosphere.m.getNdata.s := 'getNdata(ibands)';
help::pkg.utility.benchmark.objs.atmosphere.m.getOapcity := [=];
help::pkg.utility.benchmark.objs.atmosphere.m.getOapcity.d := 'get the integrated optical depth on each band';
help::pkg.utility.benchmark.objs.atmosphere.m.getOapcity.a.dryOpacity := [=];
help::pkg.utility.benchmark.objs.atmosphere.m.getOapcity.a.dryOpacity.d := 'dry opacity for each band';
help::pkg.utility.benchmark.objs.atmosphere.m.getOapcity.a.dryOpacity.def := 'none';
help::pkg.utility.benchmark.objs.atmosphere.m.getOapcity.a.dryOpacity.a := 'Vector of Double';
help::pkg.utility.benchmark.objs.atmosphere.m.getOapcity.a.wetOpacity := [=];
help::pkg.utility.benchmark.objs.atmosphere.m.getOapcity.a.wetOpacity.d := 'wet ipacity for each band';
help::pkg.utility.benchmark.objs.atmosphere.m.getOapcity.a.wetOpacity.def := 'none';
help::pkg.utility.benchmark.objs.atmosphere.m.getOapcity.a.wetOpacity.a := 'Quantum with a vector value and unit of mm-1';
help::pkg.utility.benchmark.objs.atmosphere.m.getOapcity.s := 'getOapcity(dryOpacity, wetOpacity)';
help::pkg.utility.benchmark.objs.atmosphere.m.getOapcitySpec := [=];
help::pkg.utility.benchmark.objs.atmosphere.m.getOapcitySpec.d := 'get the integrated optical depth for each channel of each band';
help::pkg.utility.benchmark.objs.atmosphere.m.getOapcitySpec.a.dryOpacitySpec := [=];
help::pkg.utility.benchmark.objs.atmosphere.m.getOapcitySpec.a.dryOpacitySpec.d := 'dry opacity spectrum for each channel of each band';
help::pkg.utility.benchmark.objs.atmosphere.m.getOapcitySpec.a.dryOpacitySpec.def := 'none';
help::pkg.utility.benchmark.objs.atmosphere.m.getOapcitySpec.a.dryOpacitySpec.a := 'Array of Double';
help::pkg.utility.benchmark.objs.atmosphere.m.getOapcitySpec.a.wetOpacitySpec := [=];
help::pkg.utility.benchmark.objs.atmosphere.m.getOapcitySpec.a.wetOpacitySpec.d := 'wet ipacity spectrum for each channel of each band';
help::pkg.utility.benchmark.objs.atmosphere.m.getOapcitySpec.a.wetOpacitySpec.def := 'none';
help::pkg.utility.benchmark.objs.atmosphere.m.getOapcitySpec.a.wetOpacitySpec.a := 'Quantum with a Array value and unit of mm-1';
help::pkg.utility.benchmark.objs.atmosphere.m.getOapcitySpec.s := 'getOapcitySpec(dryOpacitySpec, wetOpacitySpec)';
help::pkg.utility.benchmark.objs.atmosphere.m.getAbsCoeff := [=];
help::pkg.utility.benchmark.objs.atmosphere.m.getAbsCoeff.d := 'get the absorption coefficients';
help::pkg.utility.benchmark.objs.atmosphere.m.getAbsCoeff.a.kH2OLines := [=];
help::pkg.utility.benchmark.objs.atmosphere.m.getAbsCoeff.a.kH2OLines.d := 'absorption coefficients for H2O lines ';
help::pkg.utility.benchmark.objs.atmosphere.m.getAbsCoeff.a.kH2OLines.def := 'none';
help::pkg.utility.benchmark.objs.atmosphere.m.getAbsCoeff.a.kH2OLines.a := 'Quantum with a vector value and unit of m-1';
help::pkg.utility.benchmark.objs.atmosphere.m.getAbsCoeff.a.kH2OCont := [=];
help::pkg.utility.benchmark.objs.atmosphere.m.getAbsCoeff.a.kH2OCont.d := 'absorption coefficients for H2O continum';
help::pkg.utility.benchmark.objs.atmosphere.m.getAbsCoeff.a.kH2OCont.def := 'none';
help::pkg.utility.benchmark.objs.atmosphere.m.getAbsCoeff.a.kH2OCont.a := 'Quantum with a vector value and unit of m-1';
help::pkg.utility.benchmark.objs.atmosphere.m.getAbsCoeff.a.kO2 := [=];
help::pkg.utility.benchmark.objs.atmosphere.m.getAbsCoeff.a.kO2.d := 'absorption coefficients for O2';
help::pkg.utility.benchmark.objs.atmosphere.m.getAbsCoeff.a.kO2.def := 'none';
help::pkg.utility.benchmark.objs.atmosphere.m.getAbsCoeff.a.kO2.a := 'Quantum with a vector value and unit of m-1';
help::pkg.utility.benchmark.objs.atmosphere.m.getAbsCoeff.a.kDryCont := [=];
help::pkg.utility.benchmark.objs.atmosphere.m.getAbsCoeff.a.kDryCont.d := 'absorption coefficients for dry continum';
help::pkg.utility.benchmark.objs.atmosphere.m.getAbsCoeff.a.kDryCont.def := 'none';
help::pkg.utility.benchmark.objs.atmosphere.m.getAbsCoeff.a.kDryCont.a := 'Quantum with a vector value and unit of m-1';
help::pkg.utility.benchmark.objs.atmosphere.m.getAbsCoeff.a.kO3 := [=];
help::pkg.utility.benchmark.objs.atmosphere.m.getAbsCoeff.a.kO3.d := 'absorption coefficients for O3';
help::pkg.utility.benchmark.objs.atmosphere.m.getAbsCoeff.a.kO3.def := 'none';
help::pkg.utility.benchmark.objs.atmosphere.m.getAbsCoeff.a.kO3.a := 'Quantum with a vector value and unit of m-1';
help::pkg.utility.benchmark.objs.atmosphere.m.getAbsCoeff.a.kCO := [=];
help::pkg.utility.benchmark.objs.atmosphere.m.getAbsCoeff.a.kCO.d := 'absorption coefficients for CO';
help::pkg.utility.benchmark.objs.atmosphere.m.getAbsCoeff.a.kCO.def := 'none';
help::pkg.utility.benchmark.objs.atmosphere.m.getAbsCoeff.a.kCO.a := 'Quantum with a vector value and unit of m-1';
help::pkg.utility.benchmark.objs.atmosphere.m.getAbsCoeff.a.kN2O := [=];
help::pkg.utility.benchmark.objs.atmosphere.m.getAbsCoeff.a.kN2O.d := 'absorption coefficients for N2O';
help::pkg.utility.benchmark.objs.atmosphere.m.getAbsCoeff.a.kN2O.def := 'none';
help::pkg.utility.benchmark.objs.atmosphere.m.getAbsCoeff.a.kN2O.a := 'Quantum with a vector value and unit of m-1';
help::pkg.utility.benchmark.objs.atmosphere.m.getAbsCoeff.s := 'getAbsCoeff(kH2OLines, kH2OCont, kO2, kDryCont, kO3, kCO, kN2O)';
help::pkg.utility.benchmark.objs.atmosphere.m.getAbsCoeffDer := [=];
help::pkg.utility.benchmark.objs.atmosphere.m.getAbsCoeffDer.d := 'get the derivatives of absorption coefficients';
help::pkg.utility.benchmark.objs.atmosphere.m.getAbsCoeffDer.a.kH2OLinesDer := [=];
help::pkg.utility.benchmark.objs.atmosphere.m.getAbsCoeffDer.a.kH2OLinesDer.d := 'derivatives of absorption coefficients for H2O lines ';
help::pkg.utility.benchmark.objs.atmosphere.m.getAbsCoeffDer.a.kH2OLinesDer.def := 'none';
help::pkg.utility.benchmark.objs.atmosphere.m.getAbsCoeffDer.a.kH2OLinesDer.a := 'Quantum with a vector value and unit of m-1';
help::pkg.utility.benchmark.objs.atmosphere.m.getAbsCoeffDer.a.kH2OContDer := [=];
help::pkg.utility.benchmark.objs.atmosphere.m.getAbsCoeffDer.a.kH2OContDer.d := 'derivatives of absorption coefficients for H2O continum';
help::pkg.utility.benchmark.objs.atmosphere.m.getAbsCoeffDer.a.kH2OContDer.def := 'none';
help::pkg.utility.benchmark.objs.atmosphere.m.getAbsCoeffDer.a.kH2OContDer.a := 'Quantum with a vector value and unit of m-1';
help::pkg.utility.benchmark.objs.atmosphere.m.getAbsCoeffDer.a.kO2Der := [=];
help::pkg.utility.benchmark.objs.atmosphere.m.getAbsCoeffDer.a.kO2Der.d := 'derivatives of absorption coefficients for O2';
help::pkg.utility.benchmark.objs.atmosphere.m.getAbsCoeffDer.a.kO2Der.def := 'none';
help::pkg.utility.benchmark.objs.atmosphere.m.getAbsCoeffDer.a.kO2Der.a := 'Quantum with a vector value and unit of m-1';
help::pkg.utility.benchmark.objs.atmosphere.m.getAbsCoeffDer.a.kDryContDer := [=];
help::pkg.utility.benchmark.objs.atmosphere.m.getAbsCoeffDer.a.kDryContDer.d := 'derivatives of absorption coefficients for dry continum';
help::pkg.utility.benchmark.objs.atmosphere.m.getAbsCoeffDer.a.kDryContDer.def := 'none';
help::pkg.utility.benchmark.objs.atmosphere.m.getAbsCoeffDer.a.kDryContDer.a := 'Quantum with a vector value and unit of m-1';
help::pkg.utility.benchmark.objs.atmosphere.m.getAbsCoeffDer.a.kO3Der := [=];
help::pkg.utility.benchmark.objs.atmosphere.m.getAbsCoeffDer.a.kO3Der.d := 'derivatives of absorption coefficients for O3';
help::pkg.utility.benchmark.objs.atmosphere.m.getAbsCoeffDer.a.kO3Der.def := 'none';
help::pkg.utility.benchmark.objs.atmosphere.m.getAbsCoeffDer.a.kO3Der.a := 'Quantum with a vector value and unit of m-1';
help::pkg.utility.benchmark.objs.atmosphere.m.getAbsCoeffDer.a.kCODer := [=];
help::pkg.utility.benchmark.objs.atmosphere.m.getAbsCoeffDer.a.kCODer.d := 'derivatives of absorption coefficients for CO';
help::pkg.utility.benchmark.objs.atmosphere.m.getAbsCoeffDer.a.kCODer.def := 'none';
help::pkg.utility.benchmark.objs.atmosphere.m.getAbsCoeffDer.a.kCODer.a := 'Quantum with a vector value and unit of m-1';
help::pkg.utility.benchmark.objs.atmosphere.m.getAbsCoeffDer.a.kN2ODer := [=];
help::pkg.utility.benchmark.objs.atmosphere.m.getAbsCoeffDer.a.kN2ODer.d := 'derivatives of absorption coefficients for N2O';
help::pkg.utility.benchmark.objs.atmosphere.m.getAbsCoeffDer.a.kN2ODer.def := 'none';
help::pkg.utility.benchmark.objs.atmosphere.m.getAbsCoeffDer.a.kN2ODer.a := 'Quantum with a vector value and unit of m-1';
help::pkg.utility.benchmark.objs.atmosphere.m.getAbsCoeffDer.s := 'getAbsCoeffDer(kH2OLinesDer, kH2OContDer, kO2Der, kDryContDer, kO3Der, kCODer, kN2ODer)';
help::pkg.utility.benchmark.objs.atmosphere.m.getPhaseFactor := [=];
help::pkg.utility.benchmark.objs.atmosphere.m.getPhaseFactor.d := 'get the dipersive and non-dispersive phase delay factor';
help::pkg.utility.benchmark.objs.atmosphere.m.getPhaseFactor.a.dispPhase := [=];
help::pkg.utility.benchmark.objs.atmosphere.m.getPhaseFactor.a.dispPhase.d := 'dispersive phase delay factor';
help::pkg.utility.benchmark.objs.atmosphere.m.getPhaseFactor.a.dispPhase.def := 'none';
help::pkg.utility.benchmark.objs.atmosphere.m.getPhaseFactor.a.dispPhase.a := 'Quantum with a vector value and unit of m-1';
help::pkg.utility.benchmark.objs.atmosphere.m.getPhaseFactor.a.nonDispPhase := [=];
help::pkg.utility.benchmark.objs.atmosphere.m.getPhaseFactor.a.nonDispPhase.d := 'non-dispersive phase delay factor';
help::pkg.utility.benchmark.objs.atmosphere.m.getPhaseFactor.a.nonDispPhase.def := 'none';
help::pkg.utility.benchmark.objs.atmosphere.m.getPhaseFactor.a.nonDispPhase.a := 'Quantum with a vector value and unit of m-1';
help::pkg.utility.benchmark.objs.atmosphere.m.getPhaseFactor.s := 'getPhaseFactor(dispPhase, nonDispPhase)';
help::pkg.utility.benchmark.objs.atmosphere.m.computeSkyBrightness := [=];
help::pkg.utility.benchmark.objs.atmosphere.m.computeSkyBrightness.d := 'compute the sky brightness by integrating the transfer equation';
help::pkg.utility.benchmark.objs.atmosphere.m.computeSkyBrightness.a.airMass := [=];
help::pkg.utility.benchmark.objs.atmosphere.m.computeSkyBrightness.a.airMass.d := 'air mass';
help::pkg.utility.benchmark.objs.atmosphere.m.computeSkyBrightness.a.airMass.def := '1.51';
help::pkg.utility.benchmark.objs.atmosphere.m.computeSkyBrightness.a.airMass.a := 'Double, dimensionless';
help::pkg.utility.benchmark.objs.atmosphere.m.computeSkyBrightness.a.tbgr := [=];
help::pkg.utility.benchmark.objs.atmosphere.m.computeSkyBrightness.a.tbgr.d := 'temperature of cosmic background';
help::pkg.utility.benchmark.objs.atmosphere.m.computeSkyBrightness.a.tbgr.def := '\' 2.73K';
help::pkg.utility.benchmark.objs.atmosphere.m.computeSkyBrightness.a.tbgr.a := 'Quantity with unit of temperature, K';
help::pkg.utility.benchmark.objs.atmosphere.m.computeSkyBrightness.a.precWater := [=];
help::pkg.utility.benchmark.objs.atmosphere.m.computeSkyBrightness.a.precWater.d := 'precipitable water content';
help::pkg.utility.benchmark.objs.atmosphere.m.computeSkyBrightness.a.precWater.def := '\' 4.05e-3m\' ';
help::pkg.utility.benchmark.objs.atmosphere.m.computeSkyBrightness.a.precWater.a := 'Quantity with dimension of length, m';
help::pkg.utility.benchmark.objs.atmosphere.m.computeSkyBrightness.s := 'computeSkyBrightness(airMass, tbgr, precWater)';
help::pkg.utility.benchmark.objs.atmosphere.m.getSkyBrightness := [=];
help::pkg.utility.benchmark.objs.atmosphere.m.getSkyBrightness.d := 'get sky brightness computed by computeSkyBrightness()';
help::pkg.utility.benchmark.objs.atmosphere.m.getSkyBrightness.a.iopt := [=];
help::pkg.utility.benchmark.objs.atmosphere.m.getSkyBrightness.a.iopt.d := 'temperature type';
help::pkg.utility.benchmark.objs.atmosphere.m.getSkyBrightness.a.iopt.def := '1';
help::pkg.utility.benchmark.objs.atmosphere.m.getSkyBrightness.a.iopt.a := 'Int 1 or 2, standing for blackbody temperature or Rayleigh Jeans temperature';
help::pkg.utility.benchmark.objs.atmosphere.m.getSkyBrightness.s := 'getSkyBrightness(iopt)';
help::pkg.utility.benchmark.objs.atmosphere.m.getSkyBrightnessSpec := [=];
help::pkg.utility.benchmark.objs.atmosphere.m.getSkyBrightnessSpec.d := 'get sky brightness by integrating the transfer equation for each channel';
help::pkg.utility.benchmark.objs.atmosphere.m.getSkyBrightnessSpec.a.iopt := [=];
help::pkg.utility.benchmark.objs.atmosphere.m.getSkyBrightnessSpec.a.iopt.d := 'temperature type';
help::pkg.utility.benchmark.objs.atmosphere.m.getSkyBrightnessSpec.a.iopt.def := '1';
help::pkg.utility.benchmark.objs.atmosphere.m.getSkyBrightnessSpec.a.iopt.a := 'Int 1 or 2, standing for blackbody temperature or Rayleigh Jeans temperature';
help::pkg.utility.benchmark.objs.atmosphere.m.getSkyBrightnessSpec.s := 'getSkyBrightnessSpec(iopt)';
help::pkg.utility.benchmark.objs.atmosphere.m.setSkyCoupling := [=];
help::pkg.utility.benchmark.objs.atmosphere.m.setSkyCoupling.d := 'set sky coupling';
help::pkg.utility.benchmark.objs.atmosphere.m.setSkyCoupling.a.c := [=];
help::pkg.utility.benchmark.objs.atmosphere.m.setSkyCoupling.a.c.d := 'sky coupling';
help::pkg.utility.benchmark.objs.atmosphere.m.setSkyCoupling.a.c.def := '1.0';
help::pkg.utility.benchmark.objs.atmosphere.m.setSkyCoupling.a.c.a := 'Float, standing for the sky coupling';
help::pkg.utility.benchmark.objs.atmosphere.m.setSkyCoupling.s := 'setSkyCoupling(c)';
help::pkg.utility.benchmark.objs.atmosphere.m.getSkyCoupling := [=];
help::pkg.utility.benchmark.objs.atmosphere.m.getSkyCoupling.d := 'return the sky coupling';
help::pkg.utility.benchmark.objs.atmosphere.m.getSkyCoupling.s := 'getSkyCoupling()';

