%% Copyright (C) 1999
%% Associated Universities, Inc. Washington DC, USA.
%%
%% This library is free software; you can redistribute it and/or modify it
%% under the terms of the GNU Library General Public License as published by
%% the Free Software Foundation; either version 2 of the License, or (at your
%% option) any later version.
%%
%% This library is distributed in the hope that it will be useful, but WITHOUT
%% ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
%% FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Library General Public
%% License for more details.
%%
%% You should have received a copy of the GNU Library General Public License
%% along with this library; if not, write to the Free Software Foundation,
%% Inc., 675 Massachusetts Ave, Cambridge, MA 02139, USA.
%%
%% Correspondence concerning AIPS++ should be addressed as follows:
%%        Internet email: aips2-request@nrao.edu.
%%        Postal address: AIPS++ Project Office
%%                        National Radio Astronomy Observatory
%%                        520 Edgemont Road
%%                        Charlottesville, VA 22903-2475 USA
%%
%% $Id: tasking.help,v 19.2 2004/08/25 02:04:59 cvsmgr Exp $
\begin{ahmodule}{tasking}{Running tools and functions within \aipspp}
\ahcategory{aips}
\ahinclude{tasking.g}

\begin{ahdescription}

The {\tt tasking} module contains tools that help with the
execution of other tools and functions within \aipspp.

\begin{description}
\item[{\tt toolmanager}] allows execution of tools and functions
from the Glish command line and also from Graphical User Interfaces.
\item[{\tt inputsmanager}] allows saving and retrieval of inputs
to the tools and functions.
\item[{\tt logger}] is used for logging messages from tools and
functions.
\item[{\tt scripter}] allows execution of scripts built up from the
toolmanager.
\item[{\tt clipboard}]| allows cut-and-paste processing of Glish variables.
\item[{\tt types}] defines types of variables in the tasking system.
\item[{\tt plugins}] allows commands to be augmented by user-defined
plug-in commands.
\item[{\tt asynceval}] Allows asynchronous execution of an eval().
\end{description}

\end{ahdescription}

\ahobjs{}
\ahfuncs{}

\input{toolmanager.help}
\input{inputsmanager.help}
\input{clipboard.help}
\input{scripter.help}
\input{logger.help}
\input{types.help}
\input{plugins.help}
\input{asynceval.help}
\input{servers.help}
		
\end{ahmodule}

