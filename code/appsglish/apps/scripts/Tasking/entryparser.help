%% Copyright (C) 1999
%% Associated Universities, Inc. Washington DC, USA.
%%
%% This library is free software; you can redistribute it and/or modify it
%% under the terms of the GNU Library General Public License as published by
%% the Free Software Foundation; either version 2 of the License, or (at your
%% option) any later version.
%%
%% This library is distributed in the hope that it will be useful, but WITHOUT
%% ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
%% FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Library General Public
%% License for more details.
%%
%% You should have received a copy of the GNU Library General Public License
%% along with this library; if not, write to the Free Software Foundation,
%% Inc., 675 Massachusetts Ave, Cambridge, MA 02139, USA.
%%
%% Correspondence concerning AIPS++ should be addressed as follows:
%%        Internet email: aips2-request@nrao.edu.
%%        Postal address: AIPS++ Project Office
%%                        National Radio Astronomy Observatory
%%                        520 Edgemont Road
%%                        Charlottesville, VA 22903-2475 USA
%%
%% $Id: entryparser.help,v 19.2 2004/08/25 02:02:42 cvsmgr Exp $
\begin{ahobject}{entryparser}{Tool for parsing entry of a type}

\ahinclude{entryparser.g}

\ahmethods{}

\begin{ahdescription}

This tool providing centralized parsing. This tool is used in the
\ahlink{guientry}{guientry} and \ahlink{clientry}{clientry}.
There are functions of the tool for parsing various types of
entry. Each function takes a string or value and returns the status
of the parsing. If the parsing succeeded then the actual value
and the displayed value are returned. The latter is guaranteed 
to be a string. Some rules are build in so that for example, large
arrays are displayed using the string '<array>'. Similarly
undisplayable values are returned as {\em e.g.} '<region>';

There is a test script: tentryparser.g. Consult this for
syntax examples.

\begin{ahconstructor}{entryparser}{Make a entryparser tool}
\ahreturns{entryparser tool}
\begin{ahdescription}
Constructs an entryparser tool, and returns a ref to the tool. Use of
this constructor should be unnecessary since the default entryparser
(called defaultentryparser or dep) can nearly always be used.
\end{ahdescription}
\begin{ahexample}
\begin{verbatim}
include 'entryparser.g'   
if(dep.scalar('192.234', allowunset=F, actualvalue, displayvalue)) {
  print "Parsing succeeded : ", displayvalue
}
\end{verbatim}
\end{ahexample}
\end{ahconstructor}

\begin{ahfunction}{scalar}{Parse a scalar}
\begin{ahdescription}
Parse the entry rec and return the status, and the actual and
display values. The type is also returned.
\end{ahdescription}
\begin{ahargs}
\ahaddarg{rec}{Variable to be parsed}{}{String|Glish variable}
\ahaddarg{allowunset}{Allow unset values?}{F}{Boolean}
\ahaddarg{actual}{Actual value}{}{scalar}
\ahaddarg{display}{Display value}{}{String}
\ahaddarg{type}{Type of variable}{}{String: 'integer'|'double'|'complex'}
\end{ahargs}
\end{ahfunction}


\begin{ahfunction}{array}{Parse an array}
\begin{ahdescription}
Parse the entry rec and return the status, and the actual and
display values. The type is also returned.
\end{ahdescription}
\begin{ahargs}
\ahaddarg{rec}{Variable to be parsed}{}{String|Glish variable}
\ahaddarg{allowunset}{Allow unset values?}{F}{Boolean}
\ahaddarg{actual}{Actual value}{}{scalar}
\ahaddarg{display}{Display value}{}{String}
\end{ahargs}
\end{ahfunction}


\begin{ahfunction}{boolean}{Parse a boolean}
\begin{ahdescription}
Parse the entry rec and return the status, and the actual and
display values.
\end{ahdescription}
\begin{ahargs}
\ahaddarg{rec}{Variable to be parsed}{}{String|Glish variable}
\ahaddarg{allowunset}{Allow unset values?}{F}{Boolean}
\ahaddarg{actual}{Actual value}{}{scalar}
\ahaddarg{display}{Display value}{}{String}
\end{ahargs}
\end{ahfunction}


\begin{ahfunction}{check}{Parse a selection from a set of strings}
\begin{ahdescription}
Parse the entry rec and return the status, and the actual and
display values.
\end{ahdescription}
\begin{ahargs}
\ahaddarg{rec}{Variable to be parsed}{}{String|Glish variable}
\ahaddarg{allowunset}{Allow unset values?}{F}{Boolean}
\ahaddarg{options}{Possible values}{}{Vector of strings}
\ahaddarg{actual}{Actual value}{}{scalar}
\ahaddarg{display}{Display value}{}{String}
\end{ahargs}
\end{ahfunction}

\begin{ahfunction}{choice}{Parse a choice from a set of strings}
\begin{ahdescription}
Parse the entry rec and return the status, and the actual and
display values.
\end{ahdescription}
\begin{ahargs}
\ahaddarg{rec}{Variable to be parsed}{}{String|Glish variable}
\ahaddarg{allowunset}{Allow unset values?}{F}{Boolean}
\ahaddarg{options}{Possible values}{}{Vector of strings}
\ahaddarg{actual}{Actual value}{}{scalar}
\ahaddarg{display}{Display value}{}{String}
\end{ahargs}
\end{ahfunction}


\begin{ahfunction}{file}{Parse a file}
\begin{ahdescription}
Parse the entry rec and return the status, and the actual and
display values.
\end{ahdescription}
\begin{ahargs}
\ahaddarg{rec}{Variable to be parsed}{}{String|Glish variable}
\ahaddarg{allowunset}{Allow unset values?}{F}{Boolean}
\ahaddarg{actual}{Actual value}{}{scalar}
\ahaddarg{display}{Display value}{}{String}
\end{ahargs}
\end{ahfunction}


\begin{ahfunction}{measure}{Parse a measure}
\begin{ahdescription}
Parse the entry rec and return the status, and the actual and
display values.
\end{ahdescription}
\begin{ahargs}
\ahaddarg{rec}{Variable to be parsed}{}{String|Glish variable}
\ahaddarg{allowunset}{Allow unset values?}{F}{Boolean}
\ahaddarg{actual}{Actual value}{}{scalar}
\ahaddarg{display}{Display value}{}{String}
\ahaddarg{type}{Type of variable}{}{String}
\end{ahargs}
\end{ahfunction}


\begin{ahfunction}{quantity.findtype}{Return the type of a quantity}
\begin{ahdescription}
Find the type of a quantity.
\end{ahdescription}
\begin{ahargs}
\ahaddarg{originalvalue}{Original value}{}{Variable}
\ahaddarg{defaultvalue}{Default value}{}{Variable}
\ahaddarg{type}{Type of variable}{}{String}
\end{ahargs}
\end{ahfunction}

\begin{ahfunction}{quantity.parse}{Parse a quantity}
\begin{ahdescription}
Parse the entry rec and return the status, and the actual and
display values.
\end{ahdescription}
\begin{ahargs}
\ahaddarg{rec}{Variable to be parsed}{}{String|Glish variable}
\ahaddarg{allowunset}{Allow unset values?}{F}{Boolean}
\ahaddarg{actual}{Actual value}{}{scalar}
\ahaddarg{display}{Display value}{}{String}
\ahaddarg{type}{Type of variable}{}{String}
\ahaddarg{unit}{Unit of variable}{}{String}
\end{ahargs}
\end{ahfunction}


\begin{ahfunction}{record}{Parse a record}
\begin{ahdescription}
Parse the entry rec and return the status, and the actual and
display values.
\end{ahdescription}
\begin{ahargs}
\ahaddarg{rec}{Variable to be parsed}{}{String|Glish variable}
\ahaddarg{allowunset}{Allow unset values?}{F}{Boolean}
\ahaddarg{actual}{Actual value}{}{scalar}
\ahaddarg{display}{Display value}{}{String}
\end{ahargs}
\end{ahfunction}


\begin{ahfunction}{region}{Parse a region}
\begin{ahdescription}
Parse the entry rec and return the status, and the actual and
display values.
\end{ahdescription}
\begin{ahargs}
\ahaddarg{rec}{Variable to be parsed}{}{String|Glish variable}
\ahaddarg{allowunset}{Allow unset values?}{F}{Boolean}
\ahaddarg{actual}{Actual value}{}{scalar}
\ahaddarg{display}{Display value}{}{String}
\end{ahargs}
\end{ahfunction}


\begin{ahfunction}{string}{Parse a string}
\begin{ahdescription}
Parse the entry rec and return the status, and the actual and
display values.
\end{ahdescription}
\begin{ahargs}
\ahaddarg{rec}{Variable to be parsed}{}{String|Glish variable}
\ahaddarg{allowunset}{Allow unset values?}{F}{Boolean}
\ahaddarg{actual}{Actual value}{}{scalar}
\ahaddarg{display}{Display value}{}{String}
\end{ahargs}
\end{ahfunction}


\begin{ahfunction}{untyped}{Parse an untyped value}
\begin{ahdescription}
Parse the entry rec and return the status, and the actual and
display values.
\end{ahdescription}
\begin{ahargs}
\ahaddarg{rec}{Variable to be parsed}{}{String|Glish variable}
\ahaddarg{allowunset}{Allow unset values?}{F}{Boolean}
\ahaddarg{actual}{Actual value}{}{scalar}
\ahaddarg{display}{Display value}{}{String}
\ahaddarg{type}{Type of variable}{}{String: 'integer'|'double'|'complex'}
\end{ahargs}
\end{ahfunction}


\begin{ahfunction}{scalar}{Parse a scalar}
\begin{ahdescription}
Parse the entry rec and return the status, and the actual and
display values.
\end{ahdescription}
\begin{ahargs}
\ahaddarg{rec}{Variable to be parsed}{}{String|Glish variable}
\ahaddarg{allowunset}{Allow unset values?}{F}{Boolean}
\ahaddarg{actual}{Actual value}{}{scalar}
\ahaddarg{display}{Display value}{}{String}
\ahaddarg{type}{Type of variable}{}{String: 'integer'|'double'|'complex'}
\end{ahargs}
\end{ahfunction}


\begin{ahfunction}{scalar}{Parse a scalar}
\begin{ahdescription}
Parse the entry rec and return the status, and the actual and
display values.
\end{ahdescription}
\begin{ahargs}
\ahaddarg{rec}{Variable to be parsed}{}{String|Glish variable}
\ahaddarg{allowunset}{Allow unset values?}{F}{Boolean}
\ahaddarg{actual}{Actual value}{}{scalar}
\ahaddarg{display}{Display value}{}{String}
\ahaddarg{type}{Type of variable}{}{String: 'integer'|'double'|'complex'}
\end{ahargs}
\end{ahfunction}


\end{ahobject}