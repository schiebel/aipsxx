%% Copyright (C) 1999
%% Associated Universities, Inc. Washington DC, USA.
%%
%% This library is free software; you can redistribute it and/or modify it
%% under the terms of the GNU Library General Public License as published by
%% the Free Software Foundation; either version 2 of the License, or (at your
%% option) any later version.
%%
%% This library is distributed in the hope that it will be useful, but WITHOUT
%% ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
%% FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Library General Public
%% License for more details.
%%
%% You should have received a copy of the GNU Library General Public License
%% along with this library; if not, write to the Free Software Foundation,
%% Inc., 675 Massachusetts Ave, Cambridge, MA 02139, USA.
%%
%% Correspondence concerning AIPS++ should be addressed as follows:
%%        Internet email: aips2-request@nrao.edu.
%%        Postal address: AIPS++ Project Office
%%                        National Radio Astronomy Observatory
%%                        520 Edgemont Road
%%                        Charlottesville, VA 22903-2475 USA
%%
%% $Id: newab.help,v 19.1 2004/08/25 01:54:53 cvsmgr Exp $
\begin{ahfunction}{newab}{"Array browser"}

\begin{ahargs}
\ahaddarg{table}{Array name or express}{}{Any valid glish array}
\ahaddarg{readonly}{Flag to allow editing of array in browser}{T}{Boolean T or F}
\ahaddarg{rows2read}{Then number of rows to cache in memory (set to -1 to read all rows)}{1000}{integer}
\ahaddarg{display}{Display to visually view array}{F}{Any valid \aipspp\ viewer }
\ahaddarg{plotter}{Plotter to graphically display array}{F}{Any \aipspp\ plotter}
\end{ahargs}
\ahreturns{Glish agent}
\begin{ahexample}
\ahinclude{newab.g}
\begin{verbatim}
 na := newab(array(1:1000, 10, 10, 10)
\end{verbatim}
This will load and display the array readonly in the array browser. To
enable editing of the array use the following:
\begin{verbatim}
 na := newab(array(1:1000, 10, 10, 10), readonly=F)
\end{verbatim}

Another application may close the array browser using the following:
\begin{verbatim}
na->close(T)
\end{verbatim}

\end{ahexample}

\begin{ahdescription}
Browse an array using a graphical interface.  
The graphical interfaces has three parts:
\begin{itemize}
\item \textbf{Menu Bar}  has five options:
\begin{description}
\item[File] -
  \begin{description}
  \item[Close], Dismisses the GUI.
  \end{description}
\item[Options] -
  \begin{description}
  \item[Glish variable/expression] Selecting this option will cause a glish 
variable/expression frame to become visible.  You may enter any valid glish
variable or expression in the field.  After pressing return or the label button
the variable or expression will be displayed in the canvas.
  \item[Slicer] The slicer lets you choose how much of the array to view.  This
can be especially useful for arrays with dimension > 2, as you can choose which
plane to view.  For example given an array of size [100, 100, 100], you can
view planes via 1:100, 1:100, 5 to get the fifth plane in the z axis, or
1:100, 67, 1:100 to look at the 67 plane in the x, z plane.
  \end{description}
\item[View] -
  \begin{description}
   \item[In Default Display] displays the array using the default display.
   \item[In PGPlotter, contour] displays the array as a contour plot using
   pgplotter.
   \item[In PGPlotter, raster] displays the array as a raster image using the
pgplotter.
  \end{description}
\item[Help] - drives the browser to the new array browser html.
\end{description}

\item \textbf{Display Canvas} has the following features:

\begin{description}

\item[Rows and Individual Cells] may be selected by pressing a mouse button on
the text.  Vectors may be displayed as "[1 2 3]" or "[3]integer" depending on
how many elements of the vector are chosen to display.  Selecting on the
"[3]integer" form will cause an arraybrowser to be displayed with the values
of the vector or array displayed in it.
\end{description}
\end{itemize}

\end{ahdescription}
\begin{ahseealso}
\ahlink{table tool}{table:table}
\ahlink{table browser}{table:newtb}
\end{ahseealso}
\end{ahfunction}
