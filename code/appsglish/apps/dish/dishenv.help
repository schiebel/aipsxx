%% Copyright (C) 1999,2000,2001,2002
%% Associated Universities, Inc. Washington DC, USA.
%%
%% This library is free software; you can redistribute it and/or modify it
%% under the terms of the GNU Library General Public License as published by
%% the Free Software Foundation; either version 2 of the License, or (at your
%% option) any later version.
%%
%% This library is distributed in the hope that it will be useful, but WITHOUT
%% ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
%% FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Library General Public
%% License for more details.
%%
%% You should have received a copy of the GNU Library General Public License
%% along with this library; if not, write to the Free Software Foundation,
%% Inc., 675 Massachusetts Ave, Cambridge, MA 02139, USA.
%%
%% Correspondence concerning AIPS++ should be addressed as follows:
%%        Internet email: aips2-request@nrao.edu.
%%        Postal address: AIPS++ Project Office
%%                        National Radio Astronomy Observatory
%%                        520 Edgemont Road
%%                        Charlottesville, VA 22903-2475 USA
%%
%% $Id: dishenv.help,v 19.1 2004/08/25 01:09:54 cvsmgr Exp $
%
\begin{ahmodule}{dish}{Single Dish Analysis Environment}

\begin{ahdescription}
The single-dish environment within \aipspp is known as \textbf{dish}.
See the \htmlref{Getting Results:Single Dish Analysis}{GRsingledish}
note for a complete description of the various graphical
components and tools which together make up the \textbf{dish}
module along with recipes for reduction.

\textbf{dish} is actually a set of nested tools with broad functionality. We
organize them into several groups to facilitate finding the appropriate
function for a given task, though all functions are available as a group
from the command line.

There are additional functions available in dish through the AIPS++
plug-in utility. For example, the calibration routines are 
instrument-specific. Please see the chapters in the Getting Results Manual
for details.

\begin{verbatim}
> glish -l dish.g
Glish version 2.7. 
- const d := dish()	# create my dish tool, calling it 'd'
Time to initialize DISH =  8.797364
- field_names(d)
addop addtool busy clearrm dologging files filein gauss wsname fileout find 
doselect done nogui getscan gui history dhistory info listscans logcommand 
message mult open ops tools rm plotter plotcom plotscan plotxy rmadd 
restorestate savestate scanadd scansub scandiv scansrr scanmult scanscale 
scanbias scanscale2D scanbias2D summary statefile tofile type uniput uniget 
view_sdrec gaussian boxcar dumcal calibSM calibSP import fixpnt gaincorr tip1 
tip tps1 fsw1 dclip aver base save select smooth stat 
\end{verbatim}

For the following, we divide the core functionality of \textbf{dish} into 'user'
and 'developer' sections. The 'developer' sections are designated by a 'dishd',
though they are accessed in the same fashion as any other \textbf{dish}
function, i.e., d.fn(...). We also present information on the functions
available on tools contained within \textbf{dish}, namely the plotter and
results manager (\textbf{rm}) tools.

\end{ahdescription}

\ahobjs{}
\ahfuncs{}

\begin{ahobject}{dish}{dish tool (user functions)}
\ahkeyword{dish}{}

\ahinclude{dish.g}

\ahfuncs{}

\begin{ahdescription}

Including ``dish.g'' loads the single-dish analysis environment
and creates a default tool, {\bf d}, for use.

\textbf{dish} knows how to read from and write to \aipspp tables which have
been created from Single Dish FITS files (SDFITS).  The documentation
for \ahlink{dishdemodata}{dish:dishdemodata} provides more details.
The \htmladdnormallink{Using Dish}{../../notes/236/236.html} note
has an appendix which describes the SDFITS convention.
 
You can load one of these \aipspp tables (for example, the sample
data generated by \ahlink{dishdemodata}{dish:dishdemodata})
into \textbf{dish} by using one of the two options in the File/Open
menu.  The difference between ``Read Only'' and ``Reading and writing''
when opening a \textbf{dish} data set is whether you can save a
result to this data set through the save operation.  It is
generally a good idea to save to a different data set from your
raw data.  The File/New menu can be used to create an empty
\aipspp table suitable for storing \textbf{dish} results.
Choosing any one of the menu options (Read Only, Reading and writing
or New) will launch a file chooser window.  Simply select one of
the files (or type in a new file) and press ``ok''. The program is now ready
to use the contents of that table.

The ``Results Manager'' is where all of the variables created by
\textbf{dish} are shown.  These are all global symbols which you can
manipulate directly at the glish prompt.  
There are three types of variables which
\textbf{dish} creates and manipulates.
\begin{itemize}
\item SDRecord - a glish record with a known structure.  This holds
the data plus header values for a single ``scan''.  
\textbf{dish} knows how to display SDRecords in the
plotter.  Selecting an SDRecord in the results manager window will
always cause that SDRecord to be displayed on the plotter.
SDRecords may also be browsed.  In this context, pushing the
browse button will launch a window which will allow you to browse
the header values of this record.  See the SDRecord information in the
\htmlref{sditerator}{dish:sditerator} Tool.
\item SDIterators - these are also called working sets in the \textbf{dish} GUI.
They are collections of SDRecords.  The disk files which \textbf{dish} reads from
and writes to are SDIterators/working sets as are any selections
which are made from these files.  \textbf{Dish} knows how to browse these.
Pushing the browse button will launch a window which will allow you
to select any of the records in this collection.  When selected, it
will be plotted.  The header values for each selection may also
be browsed through this browser.  See also the 
\htmlref{sditerator tool}{dish:oldsditerator} documentation.
\item Anything else.  \textbf{Dish} knows very little about these values.  They
can neither be plotter or browsed although they can be inspected.
\end{itemize}

The variables in the results manager come with a description which
you can change by simply editing the description shown and pressing
the return or enter key.  Similarly, you can change the name of 
any variable by entering a new name in the entry in the results 
manager and pressing the return or enter key.  The ``Delete'' button
removes a variable completely from glish although it will not delete
any files on disk.

To bring up the GUI for the operations, select one from the ``Operations''
menu.  Due to the limited amount of screen real estate typically
available, you will only be able to see a few operations at once.
The operations each have a ``Dismiss'' button generally towards the
lower left corner which will remove that frame from the \textbf{dish} window.
This can also be achieved by re-selecting that operation from the
``Operations'' menu.

There are two types of operation: operations which operate on entire
working sets and operations which operate on single SDRecords.
Of the current operations, selection and averaging operate on
entire working sets (selection produces a new working set and
averaging produces a new record).  The operations which operate on
a single spectra always use the most recently viewed spectra (i.e.
the one you see in the plotter).  This is true even if the
working set from which it came or the single record which 
produced that plot have been ``Delete''d from the results manager.
What you see is what \textbf{dish} operates on.
When a new scan is produced, the focus of the
plotter and the program is automatically set to that result
(i.e. it becomes the most recently displayed SD Record).

Baseline regions are all set through the ``Baselines'' operation.
Whether you enter the ranges by hand or by
using the plotter, if the "Plot ranges" option has been
turned on, the ranges will be plotted on top of the data.
The height of each range box on the plotter indicates
the local RMS of the data and the center Y value of each range
box indicates the local mean of the data.  The statistics for all
baseline regions are shown on the plotter in the statistics
line.

%There are two buttons in the middle of the ``Baselines'' operation
%window, ``X-Axis Units'' and, below it, ``Convert''.  These 
%control the display of x-axis units on this window (these
%two buttons will appear together on other windows for the
%same purpose with respect to the window on which they
%appear).  On this window, these buttons control the units
%of the ranges as well as the sinusoid parameters, ``Period''
%and ``X0''.  Clicking on ``X-Axis Units'' offers two
%choices: ``X-Axis Units'' and ``Channels''.  X-axis
%units are whatever the currently displayed x-axis
%units on the plotter are.  Channels are channel numbers.
%This button doesn't actually change any values, it just
%changes what the baseline fitter thinks the units are
%for those values.  The ``Convert'' button, on the other
%hand, converts between whatever the current units are
%and whatever the current other choice is.  So, if the
%upper button says ``X-Axis Units'', clicking ``Convert''
%converts the relevant values to channels and changes
%the display on the upper button to ``Channels''.  This
%conversion is always done using whatever record was
%most recently displayed on the plotter.

A full example session, suitable for a demonstration, is
given in
\htmladdnormallink{AIPS++ Note 205}{../../notes/205/205.html}.  
\end{ahdescription}

\begin{ahconstructor}{dish}{single dish analysis tool}
\ahreturns{tool}
\end{ahconstructor}

%here's where all of the functions go!



\input{dishfunctions.help}

\input{dishdemodata.help}

\end{ahobject}

\input{sdaverager.help}
%\input{sdimager.help}
%%\input{ssa.help}
\input{sditerator.help}

\end{ahmodule}

\end{document}
