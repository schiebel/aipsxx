%% Copyright (C) 1999, 2000
%% Associated Universities, Inc. Washington DC, USA.
%%
%% This library is free software; you can redistribute it and/or modify it
%% under the terms of the GNU Library General Public License as published by
%% the Free Software Foundation; either version 2 of the License, or (at your
%% option) any later version.
%%
%% This library is distributed in the hope that it will be useful, but WITHOUT
%% ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
%% FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Library General Public
%% License for more details.
%%
%% You should have received a copy of the GNU Library General Public License
%% along with this library; if not, write to the Free Software Foundation,
%% Inc., 675 Massachusetts Ave, Cambridge, MA 02139, USA.
%%
%% Correspondence concerning AIPS++ should be addressed as follows:
%%        Internet email: aips2-request@nrao.edu.
%%        Postal address: AIPS++ Project Office
%%                        National Radio Astronomy Observatory
%%                        520 Edgemont Road
%%                        Charlottesville, VA 22903-2475 USA
%%
%% $Id: dishdemodata.help,v 19.1 2004/08/25 01:09:44 cvsmgr Exp $
%

\begin{ahfunction}{dishdemodata}{Set up demonstration data for Dish}

\begin{ahdescription}
This function converts the sample SDFITS data files (dishdemo1.fits,
dishdemo2.fits, dishmopra.fits, dishparkes.fits, and dishspecproc.fits) 
into \aipspp tables using 
tablefromfits.  If these tables
already exist in your current working directory, then this command
does nothing.  Status messages from this conversion process
are sent to the \aipspp logger. 

Use the dishdemodata function to get a copy of the demonstration data,
as in this example:

\begin{ahexample}
\begin{verbatim}
- include 'dishdemodata.g'
T
- dishdemodata()
T
\end{verbatim}

The following text appears in the AIPS++ logger:

\begin{verbatim}
dishdemodata starts
Creating demo table : dishdemo1
FITS file found : /aips++/data/demo/dishdemo/dishdemo1.fits
Begin converting it to an aips++ table ...
Demo table created : dishdemo1
Creating demo table : dishdemo2
FITS file found : /aips++/data/demo/dishdemo/dishdemo2.fits
Begin converting it to an aips++ table ...
Demo table created : dishdemo2
Creating demo table : dishmopra
FITS file found : /aips++/data/demo/dishdemo/dishmopra.fits
Begin converting it to an aips++ table ...
Demo table created : dishmopra
Creating demo table : dishparkes
FITS file found : /aips++//data/demo/dishdemo/dishparkes.fits
Begin converting it to an aips++ table ...
Demo table created : dishparkes
Creating demo table : dishspecproc
FITS file found : /aips++/data/demo/dishdemo/dishspecproc.fits
Begin converting it to an aips++ table ...
Demo table created : dishspecproc
The single dish demo tables are: dishdemo1 dishdemo2 dishmopra dishparkes dishspecproc
\end{verbatim}
\end{ahexample}

Other SDFITS files (and binary tables) can be converted using tablefromfits.

\begin{verbatim}
tab := tablefromfits('mydemo','/aips++/data/dishdemo/dishparkes.fits')
\end{verbatim}
A new table named 'mydemo' is created and filled using the input fits file (in this case,
dishparkes.fits).  This table is then opened and the returned value is a table tool that
can be used immediately.  Once the table has been converted, there is no need to run
tablefromfits on that same fits file again.  You can use the normal table function to
re-open that table as necessary.

\begin{verbatim}
tab := table('mydemo')
\end{verbatim}

\end{ahdescription}

\end{ahfunction}
