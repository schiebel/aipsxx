%% Copyright (C) 2000,2001
%% Associated Universities, Inc. Washington DC, USA.
%%
%% This library is free software; you can redistribute it and/or modify it
%% under the terms of the GNU Library General Public License as published by
%% the Free Software Foundation; either version 2 of the License, or (at your
%% option) any later version.
%%
%% This library is distributed in the hope that it will be useful, but WITHOUT
%% ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
%% FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Library General Public
%% License for more details.
%%
%% You should have received a copy of the GNU Library General Public License
%% along with this library; if not, write to the Free Software Foundation,
%% Inc., 675 Massachusetts Ave, Cambridge, MA 02139, USA.
%%
%% Correspondence concerning AIPS++ should be addressed as follows:
%%        Internet email: aips2-request@nrao.edu.
%%        Postal address: AIPS++ Project Office
%%                        National Radio Astronomy Observatory
%%                        520 Edgemont Road
%%                        Charlottesville, VA 22903-2475 USA
%%
\documentclass{article}
\usepackage{aips2help,html}
\begin{document}
 
\begin{ahobject}{ms2fromms1}{MeasurementSet Version 1 to Version 2 converter}

\ahinclude{ms2fromms1.g}

\ahfuncs{}

\begin{ahconstructor}{ms2fromms1}{Construct the converter tool}
\begin{ahargs}
  \ahaddarg{ms2}{Output measurement set}{''}{String}
  \ahaddarg{ms1}{Input measurement set}{''}{String}
  \ahaddarg{inPlace}{Overwrite the old measurement set ?}{F}{Boolean}
\end{ahargs}
\ahreturns{ms2fromms1 tool}
\begin{ahdescription}
This constructor just creates the converter tool, it does not create
the new Measurement set.
\end{ahdescription}
\begin{ahexample}
\begin{verbatim}
- cnv := ms2fromms1('newms', 'oldms', F);
\end{verbatim}
\end{ahexample}
\end{ahconstructor}


\begin{ahfunction}{convert}{Create the new Measurement Set}
\begin{ahdescription}

This function does the actual conversion.

\end{ahdescription}
\ahreturns{Bool}
\begin{ahexample}
\begin{verbatim}
- cnv := ms2fromms1('newms', 'oldms', F);
- ok := cnv.convert();
\end{verbatim}
\end{ahexample}
\end{ahfunction}

\end{ahobject}

\end{document}




