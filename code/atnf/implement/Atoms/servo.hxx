/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _SERVO_H_RPCGEN
#define	_SERVO_H_RPCGEN

#include <rpc/rpc.h>
#if (defined(_PSOS_))
#if (!defined(CLNT_CALL))
#define CLNT_CALL
static enum clnt_stat clnt_call(CLIENT *rh, unsigned long proc, xdrproc_t xargs,  
  caddr_t argsp, xdrproc_t xres, caddr_t resp, timeval secs) { 
 return ((enum clnt_stat (*)(CLIENT *, unsigned long, xdrproc_t,  
 caddr_t, xdrproc_t, caddr_t, timeval))  
  (*(rh)->cl_ops->cl_call))(rh,proc,xargs,argsp,xres,resp,secs);
}
#endif
#if (!defined(CLNT_ABORT))
#define CLNT_ABORT
static void clnt_abort(CLIENT *rh) { 
 ((void (*)(CLIENT *)) 
 (*(rh)->cl_ops->cl_abort))(rh);
}
#endif
#if (!defined(CLNT_CONTROL))
#define CLNT_CONTROL
static bool_t clnt_control(CLIENT *rh, unsigned long proc, char* ca) {  
 return ((bool_t (*)(CLIENT *, unsigned long, char*))  
 (*(rh)->cl_ops->cl_control))(rh,proc,ca);
}
#endif
#if (!defined(CLNT_DESTROY))
#define CLNT_DESTROY
static void clnt_destroy(CLIENT *rh) { 
 ((void (*)(CLIENT *)) 
 (*(rh)->cl_ops->cl_destroy))(rh);
}
#endif
#endif
#define	SERVO_RPC__FLAG_NO_REPLY 1
#define	SERVO_RPC__FLAG_GUARD_POINT 2
#define	SERVO_RPC__FLAG_NO_DRIVE 4
#define	SERVO_RPC__FLAG_FIRST_POINT 8
#define	SERVO_RPC__FLAG_POS_ERROR 1
#define	SERVO_RPC__FLAG_POS_ERROR_PAST 2
#define	SERVO_RPC__FLAG_CANCELLED 4
#ifdef AIPS_LINUX
#define _PSOS_
#endif

struct __ulonglong {
	u_int h1;
	u_int h0;
};
typedef struct __ulonglong __ulonglong;
#ifdef _PSOS_

typedef __ulonglong servoRPC_AbsTime;
#else

typedef u_longlong_t servoRPC_AbsTime;
#endif

struct __longlong {
	int h1;
	u_int h0;
};
typedef struct __longlong __longlong;
#ifdef _PSOS_

typedef __longlong servoRPC_RelTime;
#else

typedef longlong_t servoRPC_RelTime;
#endif

enum servoRPC_ShapeInclude {
	servoRPC_inside = 1,
	servoRPC_outside = 2
};
typedef enum servoRPC_ShapeInclude servoRPC_ShapeInclude;

typedef char *servoRPC_ReadoutName;

enum servoRPC_Status {
	servoRPC_ok = 0,
	servoRPC_failure = 1,
	servoRPC_unsupported = 2,
	servoRPC_authFailed = 3,
	servoRPC_impossible = 4,
	servoRPC_clockError = 5,
	servoRPC_registryError = 6,
	servoRPC_invalidArg = 7,
	servoRPC_badState = 8,
	servoRPC_badCoord = 9,
	servoRPC_systemRebooted = 10,
	servoRPC_servoHardwareError = 50,
	servoRPC_invalidPointParams = 51,
	servoRPC_softServoError = 52,
	servoRPC_hardServoError = 53,
	servoRPC_badCoordSystem = 54,
	servoRPC_requestQueFull = 55,
	servoRPC_outOfOrder = 56,
	servoRPC_remOpBlocked = 57
};
typedef enum servoRPC_Status servoRPC_Status;

enum servoRPC_CoordSystem {
	servoRPC_azEl = 1,
	servoRPC_haDec = 2
};
typedef enum servoRPC_CoordSystem servoRPC_CoordSystem;

struct servoRPC_Pair {
	double c1;
	double c2;
};
typedef struct servoRPC_Pair servoRPC_Pair;

enum servoRPC_InterpScheme {
	servoRPC_linear = 1,
	servoRPC_smooth = 2
};
typedef enum servoRPC_InterpScheme servoRPC_InterpScheme;

enum servoRPC_State {
	servoRPC_stateUnknown = 1,
	servoRPC_stowed = 2,
	servoRPC_stowing = 3,
	servoRPC_unstowing = 4,
	servoRPC_stowError = 5,
	servoRPC_parked = 6,
	servoRPC_parking = 7,
	servoRPC_stopping = 8,
	servoRPC_idle = 9,
	servoRPC_goto = 10,
	servoRPC_slewing = 11,
	servoRPC_tracking = 12,
	servoRPC_inLimits = 13,
	servoRPC_driveError = 14,
	servoRPC_resetting = 15,
	N_servoRPC_State = 15 + 1
};
typedef enum servoRPC_State servoRPC_State;

enum servoRPC_DeadZoneReasons {
	servoRPC_horizon = 1,
	servoRPC_pole = 2
};
typedef enum servoRPC_DeadZoneReasons servoRPC_DeadZoneReasons;

enum servoRPC_ShapeSpec {
	servoRPC_circle = 1
};
typedef enum servoRPC_ShapeSpec servoRPC_ShapeSpec;

struct servoRPC_Circle {
	servoRPC_CoordSystem coordSystem;
	servoRPC_Pair centre;
	double radius;
	servoRPC_ShapeInclude inOut;
};
typedef struct servoRPC_Circle servoRPC_Circle;

struct servoRPC_DeadZoneSpec {
	servoRPC_ShapeSpec shape;
	union {
		servoRPC_Circle circle;
	} servoRPC_DeadZoneSpec_u;
};
typedef struct servoRPC_DeadZoneSpec servoRPC_DeadZoneSpec;

struct servoRPC_DeadZone {
	servoRPC_DeadZoneReasons reason;
	servoRPC_DeadZoneSpec zone;
};
typedef struct servoRPC_DeadZone servoRPC_DeadZone;

struct servoRPC_TrackPointRequest {
	servoRPC_AbsTime time;
	servoRPC_Pair pos;
	double maxError;
	u_int flags;
};
typedef struct servoRPC_TrackPointRequest servoRPC_TrackPointRequest;

struct servoRPC_TrackPointShortRequest {
	servoRPC_Pair pos;
	u_int flags;
};
typedef struct servoRPC_TrackPointShortRequest servoRPC_TrackPointShortRequest;

struct servoRPC_TrackPointReadout {
	servoRPC_AbsTime timeTag;
	servoRPC_AbsTime timeStamp;
	servoRPC_Status status;
	struct {
		u_int pos_len;
		servoRPC_Pair *pos_val;
	} pos;
	u_int flags;
};
typedef struct servoRPC_TrackPointReadout servoRPC_TrackPointReadout;

struct servoRPC_DateTime {
	struct {
		u_int dt_len;
		u_int *dt_val;
	} dt;
};
typedef struct servoRPC_DateTime servoRPC_DateTime;

enum servoRPC_DataType {
	servoRPC_DTbool = 0,
	servoRPC_DTint = 1,
	servoRPC_DTdouble = 2,
	servoRPC_DTabsTime = 3,
	servoRPC_DTrelTime = 4,
	servoRPC_DTpair = 5,
	servoRPC_DTstring = 6,
	servoRPC_DTangle = 7,
	servoRPC_DTtime = 8,
	N_servoRPC_DataType = 8 + 1
};
typedef enum servoRPC_DataType servoRPC_DataType;

struct servoRPC_DataName {
	servoRPC_DataType type;
	bool_t writable;
	char *name;
	int len;
};
typedef struct servoRPC_DataName servoRPC_DataName;

struct servoRPC_DataValue {
	servoRPC_DataType type;
	union {
		bool_t DATbool;
		int DATint;
		double DATdouble;
		servoRPC_AbsTime DATabsTime;
		servoRPC_RelTime DATrelTime;
		servoRPC_Pair DATpair;
		char *DATstring;
		double DATangle;
		double DATtime;
	} servoRPC_DataValue_u;
};
typedef struct servoRPC_DataValue servoRPC_DataValue;

struct servoRPC_DataNameValue {
	servoRPC_DataName name;
	struct {
		u_int value_len;
		servoRPC_DataValue *value_val;
	} value;
};
typedef struct servoRPC_DataNameValue servoRPC_DataNameValue;

struct servoRPC_ShortInfoValue {
	struct {
		u_int value_len;
		servoRPC_DataValue *value_val;
	} value;
};
typedef struct servoRPC_ShortInfoValue servoRPC_ShortInfoValue;

typedef char *servoRPC_Name;

struct servoRPC_ShortInfoReadout {
	servoRPC_AbsTime timeStamp;
	struct {
		u_int info_len;
		servoRPC_ShortInfoValue *info_val;
	} info;
};
typedef struct servoRPC_ShortInfoReadout servoRPC_ShortInfoReadout;

typedef struct {
	u_int servoRPC_AuthenticateIn_len;
	char *servoRPC_AuthenticateIn_val;
} servoRPC_AuthenticateIn;

struct servoRPC_GetWDTimeoutOut {
	servoRPC_Status status;
	servoRPC_RelTime timeout;
};
typedef struct servoRPC_GetWDTimeoutOut servoRPC_GetWDTimeoutOut;

struct servoRPC_GetStaticInfoOut {
	servoRPC_Status status;
	char *antennaName;
	char *antennaVersion;
	char *antennaSite;
	char *deviceInstanceName;
	servoRPC_CoordSystem request;
	struct {
		u_int readouts_len;
		servoRPC_CoordSystem *readouts_val;
	} readouts;
	struct {
		u_int readoutNames_len;
		servoRPC_ReadoutName *readoutNames_val;
	} readoutNames;
	struct {
		u_int interpSchemes_len;
		servoRPC_InterpScheme *interpSchemes_val;
	} interpSchemes;
	struct {
		u_int deadZones_len;
		servoRPC_DeadZone *deadZones_val;
	} deadZones;
	servoRPC_Pair min;
	servoRPC_Pair max;
	u_int requestQueLen;
	u_int readoutQueLen;
};
typedef struct servoRPC_GetStaticInfoOut servoRPC_GetStaticInfoOut;

struct servoRPC_GetInfoOut {
	servoRPC_AbsTime timeStamp;
	servoRPC_Status status;
	servoRPC_State state;
	bool_t rebooted;
	servoRPC_InterpScheme interpScheme;
	struct {
		u_int pos_len;
		servoRPC_Pair *pos_val;
	} pos;
	servoRPC_Pair reqPos;
	struct {
		u_int rate_len;
		servoRPC_Pair *rate_val;
	} rate;
	servoRPC_Pair reqRate;
	servoRPC_Pair target;
	servoRPC_AbsTime estTime;
	u_int requestQueSpace;
	u_int readoutQueSpace;
	bool_t remOpBlocked;
	struct {
		u_int driveError_len;
		bool_t *driveError_val;
	} driveError;
};
typedef struct servoRPC_GetInfoOut servoRPC_GetInfoOut;

struct servoRPC_StowIn {
	u_int token;
};
typedef struct servoRPC_StowIn servoRPC_StowIn;

struct servoRPC_StowOut {
	servoRPC_AbsTime timeStamp;
	servoRPC_Status status;
	servoRPC_AbsTime estTime;
	servoRPC_AbsTime maxTime;
};
typedef struct servoRPC_StowOut servoRPC_StowOut;

struct servoRPC_UnstowIn {
	u_int token;
};
typedef struct servoRPC_UnstowIn servoRPC_UnstowIn;

struct servoRPC_UnstowOut {
	servoRPC_AbsTime timeStamp;
	servoRPC_Status status;
	servoRPC_AbsTime estTime;
	servoRPC_AbsTime maxTime;
};
typedef struct servoRPC_UnstowOut servoRPC_UnstowOut;

struct servoRPC_ParkIn {
	u_int token;
};
typedef struct servoRPC_ParkIn servoRPC_ParkIn;

struct servoRPC_ParkOut {
	servoRPC_AbsTime timeStamp;
	servoRPC_Status status;
	servoRPC_AbsTime estTime;
	servoRPC_AbsTime maxTime;
};
typedef struct servoRPC_ParkOut servoRPC_ParkOut;

struct servoRPC_DriveResetIn {
	u_int token;
};
typedef struct servoRPC_DriveResetIn servoRPC_DriveResetIn;

struct servoRPC_DriveResetOut {
	servoRPC_AbsTime timeStamp;
	servoRPC_Status status;
	servoRPC_AbsTime estTime;
	servoRPC_AbsTime maxTime;
};
typedef struct servoRPC_DriveResetOut servoRPC_DriveResetOut;

struct servoRPC_ExitLimitsIn {
	u_int token;
};
typedef struct servoRPC_ExitLimitsIn servoRPC_ExitLimitsIn;

struct servoRPC_ExitLimitsOut {
	servoRPC_AbsTime timeStamp;
	servoRPC_Status status;
	servoRPC_AbsTime estTime;
	servoRPC_AbsTime maxTime;
};
typedef struct servoRPC_ExitLimitsOut servoRPC_ExitLimitsOut;

struct servoRPC_HaltIn {
	u_int token;
};
typedef struct servoRPC_HaltIn servoRPC_HaltIn;

struct servoRPC_HaltOut {
	servoRPC_AbsTime timeStamp;
	servoRPC_Status status;
	servoRPC_AbsTime estTime;
	servoRPC_AbsTime maxTime;
};
typedef struct servoRPC_HaltOut servoRPC_HaltOut;

struct servoRPC_GotoIn {
	u_int token;
	servoRPC_Pair pos;
};
typedef struct servoRPC_GotoIn servoRPC_GotoIn;

struct servoRPC_GotoOut {
	servoRPC_AbsTime timeStamp;
	servoRPC_Status status;
	servoRPC_AbsTime estTime;
	servoRPC_AbsTime maxTime;
};
typedef struct servoRPC_GotoOut servoRPC_GotoOut;

struct servoRPC_TrackIn {
	u_int token;
	struct {
		u_int points_len;
		servoRPC_TrackPointRequest *points_val;
	} points;
};
typedef struct servoRPC_TrackIn servoRPC_TrackIn;

struct servoRPC_TrackShortIn {
	u_int token;
	servoRPC_AbsTime startTime;
	servoRPC_RelTime interval;
	double maxError;
	struct {
		u_int points_len;
		servoRPC_TrackPointShortRequest *points_val;
	} points;
};
typedef struct servoRPC_TrackShortIn servoRPC_TrackShortIn;

struct servoRPC_TrackOut {
	servoRPC_AbsTime timeStamp;
	servoRPC_Status status;
};
typedef struct servoRPC_TrackOut servoRPC_TrackOut;

struct servoRPC_GetTrackIn {
	u_int token;
};
typedef struct servoRPC_GetTrackIn servoRPC_GetTrackIn;

struct servoRPC_GetTrackOut {
	servoRPC_AbsTime timeStamp;
	servoRPC_Status status;
	u_int numOverflowed;
	struct {
		u_int points_len;
		servoRPC_TrackPointReadout *points_val;
	} points;
};
typedef struct servoRPC_GetTrackOut servoRPC_GetTrackOut;

struct servoRPC_ClearTrackReadoutQueIn {
	u_int token;
};
typedef struct servoRPC_ClearTrackReadoutQueIn servoRPC_ClearTrackReadoutQueIn;

struct servoRPC_ClearRebootIn {
	u_int token;
};
typedef struct servoRPC_ClearRebootIn servoRPC_ClearRebootIn;

struct servoRPC_ClearRebootOut {
	servoRPC_AbsTime timeStamp;
	servoRPC_Status status;
};
typedef struct servoRPC_ClearRebootOut servoRPC_ClearRebootOut;

struct servoRPC_EstimateTimeIn {
	servoRPC_Pair start;
	servoRPC_Pair end;
};
typedef struct servoRPC_EstimateTimeIn servoRPC_EstimateTimeIn;

struct servoRPC_EstimateTimeOut {
	servoRPC_Status status;
	servoRPC_RelTime minDelay;
	servoRPC_RelTime maxDelay;
};
typedef struct servoRPC_EstimateTimeOut servoRPC_EstimateTimeOut;

struct servoRPC_GetBeamwidthIn {
	double frequency;
};
typedef struct servoRPC_GetBeamwidthIn servoRPC_GetBeamwidthIn;

struct servoRPC_GetBeamwidthOut {
	servoRPC_Status status;
	servoRPC_CoordSystem coordSystem;
	servoRPC_Pair width;
};
typedef struct servoRPC_GetBeamwidthOut servoRPC_GetBeamwidthOut;

struct servoRPC_SetDateTimeIn {
	u_int token;
	servoRPC_DateTime dateTime;
};
typedef struct servoRPC_SetDateTimeIn servoRPC_SetDateTimeIn;

struct servoRPC_SetDateTimeOut {
	servoRPC_Status status;
	servoRPC_AbsTime timeStamp;
};
typedef struct servoRPC_SetDateTimeOut servoRPC_SetDateTimeOut;

struct servoRPC_SetShortInfoNamesIn {
	u_int token;
	struct {
		u_int names_len;
		servoRPC_Name *names_val;
	} names;
};
typedef struct servoRPC_SetShortInfoNamesIn servoRPC_SetShortInfoNamesIn;

struct servoRPC_SetShortInfoNamesOut {
	servoRPC_Status status;
};
typedef struct servoRPC_SetShortInfoNamesOut servoRPC_SetShortInfoNamesOut;

struct servoRPC_GetShortInfoIn {
	u_int token;
};
typedef struct servoRPC_GetShortInfoIn servoRPC_GetShortInfoIn;

struct servoRPC_GetShortInfoNamesOut {
	servoRPC_Status status;
	u_int maxValues;
	struct {
		u_int names_len;
		servoRPC_DataName *names_val;
	} names;
	u_int maxPoints;
	servoRPC_RelTime interval;
};
typedef struct servoRPC_GetShortInfoNamesOut servoRPC_GetShortInfoNamesOut;

struct servoRPC_GetShortInfoOut {
	servoRPC_Status status;
	struct {
		u_int points_len;
		servoRPC_ShortInfoReadout *points_val;
	} points;
};
typedef struct servoRPC_GetShortInfoOut servoRPC_GetShortInfoOut;

struct servoRPC_GetNamedValueIn {
	servoRPC_DataName name;
};
typedef struct servoRPC_GetNamedValueIn servoRPC_GetNamedValueIn;

struct servoRPC_GetNamedValueOut {
	servoRPC_Status status;
	servoRPC_DataName name;
	struct {
		u_int value_len;
		servoRPC_DataValue *value_val;
	} value;
};
typedef struct servoRPC_GetNamedValueOut servoRPC_GetNamedValueOut;

struct servoRPC_GetValuesOut {
	servoRPC_Status status;
	struct {
		u_int data_len;
		servoRPC_DataNameValue *data_val;
	} data;
};
typedef struct servoRPC_GetValuesOut servoRPC_GetValuesOut;

struct servoRPC_SetNamedValueIn {
	u_int token;
	servoRPC_DataName name;
	struct {
		u_int value_len;
		servoRPC_DataValue *value_val;
	} value;
};
typedef struct servoRPC_SetNamedValueIn servoRPC_SetNamedValueIn;

struct servoRPC_SetNamedValueOut {
	servoRPC_Status status;
	servoRPC_DataName name;
	struct {
		u_int value_len;
		servoRPC_DataValue *value_val;
	} value;
};
typedef struct servoRPC_SetNamedValueOut servoRPC_SetNamedValueOut;

struct servoRPC_GetNameListOut {
	servoRPC_Status status;
	struct {
		u_int names_len;
		servoRPC_DataName *names_val;
	} names;
};
typedef struct servoRPC_GetNameListOut servoRPC_GetNameListOut;

#define	SERVO_RPC__PROG ((unsigned long)(0x20002004))
#define	SERVO_RPC__VER ((unsigned long)(1))

#if defined(__STDC__) || defined(__cplusplus)
#define	SERVO_RPC__PING ((unsigned long)(1))
extern  servoRPC_Status * servo_rpc__ping_1(void *, CLIENT *);
extern  servoRPC_Status * servo_rpc__ping_1_svc(void *, struct svc_req *);
#define	SERVO_RPC__AUTHENTICATE ((unsigned long)(2))
extern  servoRPC_Status * servo_rpc__authenticate_1(servoRPC_AuthenticateIn *, CLIENT *);
extern  servoRPC_Status * servo_rpc__authenticate_1_svc(servoRPC_AuthenticateIn *, struct svc_req *);
#define	SERVO_RPC__SET_WD_TIMEOUT ((unsigned long)(3))
extern  servoRPC_Status * servo_rpc__set_wd_timeout_1(servoRPC_RelTime *, CLIENT *);
extern  servoRPC_Status * servo_rpc__set_wd_timeout_1_svc(servoRPC_RelTime *, struct svc_req *);
#define	SERVO_RPC__GET_WD_TIMEOUT ((unsigned long)(4))
extern  servoRPC_GetWDTimeoutOut * servo_rpc__get_wd_timeout_1(void *, CLIENT *);
extern  servoRPC_GetWDTimeoutOut * servo_rpc__get_wd_timeout_1_svc(void *, struct svc_req *);
#define	SERVO_RPC__GET_STATIC_INFO ((unsigned long)(10))
extern  servoRPC_GetStaticInfoOut * servo_rpc__get_static_info_1(void *, CLIENT *);
extern  servoRPC_GetStaticInfoOut * servo_rpc__get_static_info_1_svc(void *, struct svc_req *);
#define	SERVO_RPC__GET_INFO ((unsigned long)(11))
extern  servoRPC_GetInfoOut * servo_rpc__get_info_1(void *, CLIENT *);
extern  servoRPC_GetInfoOut * servo_rpc__get_info_1_svc(void *, struct svc_req *);
#define	SERVO_RPC__SET_INTERP_SCHEME ((unsigned long)(12))
extern  servoRPC_Status * servo_rpc__set_interp_scheme_1(servoRPC_InterpScheme *, CLIENT *);
extern  servoRPC_Status * servo_rpc__set_interp_scheme_1_svc(servoRPC_InterpScheme *, struct svc_req *);
#define	SERVO_RPC__STOW ((unsigned long)(30))
extern  servoRPC_StowOut * servo_rpc__stow_1(servoRPC_StowIn *, CLIENT *);
extern  servoRPC_StowOut * servo_rpc__stow_1_svc(servoRPC_StowIn *, struct svc_req *);
#define	SERVO_RPC__UNSTOW ((unsigned long)(31))
extern  servoRPC_UnstowOut * servo_rpc__unstow_1(servoRPC_UnstowIn *, CLIENT *);
extern  servoRPC_UnstowOut * servo_rpc__unstow_1_svc(servoRPC_UnstowIn *, struct svc_req *);
#define	SERVO_RPC__PARK ((unsigned long)(32))
extern  servoRPC_ParkOut * servo_rpc__park_1(servoRPC_ParkIn *, CLIENT *);
extern  servoRPC_ParkOut * servo_rpc__park_1_svc(servoRPC_ParkIn *, struct svc_req *);
#define	SERVO_RPC__RESET ((unsigned long)(33))
extern  servoRPC_DriveResetOut * servo_rpc__reset_1(servoRPC_DriveResetIn *, CLIENT *);
extern  servoRPC_DriveResetOut * servo_rpc__reset_1_svc(servoRPC_DriveResetIn *, struct svc_req *);
#define	SERVO_RPC__EXIT_LIMITS ((unsigned long)(34))
extern  servoRPC_ExitLimitsOut * servo_rpc__exit_limits_1(servoRPC_ExitLimitsIn *, CLIENT *);
extern  servoRPC_ExitLimitsOut * servo_rpc__exit_limits_1_svc(servoRPC_ExitLimitsIn *, struct svc_req *);
#define	SERVO_RPC__HALT ((unsigned long)(35))
extern  servoRPC_HaltOut * servo_rpc__halt_1(servoRPC_HaltIn *, CLIENT *);
extern  servoRPC_HaltOut * servo_rpc__halt_1_svc(servoRPC_HaltIn *, struct svc_req *);
#define	SERVO_RPC__GOTO ((unsigned long)(40))
extern  servoRPC_GotoOut * servo_rpc__goto_1(servoRPC_GotoIn *, CLIENT *);
extern  servoRPC_GotoOut * servo_rpc__goto_1_svc(servoRPC_GotoIn *, struct svc_req *);
#define	SERVO_RPC__TRACK ((unsigned long)(50))
extern  servoRPC_TrackOut * servo_rpc__track_1(servoRPC_TrackIn *, CLIENT *);
extern  servoRPC_TrackOut * servo_rpc__track_1_svc(servoRPC_TrackIn *, struct svc_req *);
#define	SERVO_RPC__TRACK_SHORT ((unsigned long)(51))
extern  servoRPC_TrackOut * servo_rpc__track_short_1(servoRPC_TrackShortIn *, CLIENT *);
extern  servoRPC_TrackOut * servo_rpc__track_short_1_svc(servoRPC_TrackShortIn *, struct svc_req *);
#define	SERVO_RPC__CLEAR_REBOOT ((unsigned long)(52))
extern  servoRPC_ClearRebootOut * servo_rpc__clear_reboot_1(servoRPC_ClearRebootIn *, CLIENT *);
extern  servoRPC_ClearRebootOut * servo_rpc__clear_reboot_1_svc(servoRPC_ClearRebootIn *, struct svc_req *);
#define	SERVO_RPC__GET_TRACK ((unsigned long)(70))
extern  servoRPC_GetTrackOut * servo_rpc__get_track_1(servoRPC_GetTrackIn *, CLIENT *);
extern  servoRPC_GetTrackOut * servo_rpc__get_track_1_svc(servoRPC_GetTrackIn *, struct svc_req *);
#define	SERVO_RPC__CLEAR_TRACK_READOUT_QUE ((unsigned long)(71))
extern  servoRPC_Status * servo_rpc__clear_track_readout_que_1(servoRPC_ClearTrackReadoutQueIn *, CLIENT *);
extern  servoRPC_Status * servo_rpc__clear_track_readout_que_1_svc(servoRPC_ClearTrackReadoutQueIn *, struct svc_req *);
#define	SERVO_RPC__ESTIMATE_TIME ((unsigned long)(90))
extern  servoRPC_EstimateTimeOut * servo_rpc__estimate_time_1(servoRPC_EstimateTimeIn *, CLIENT *);
extern  servoRPC_EstimateTimeOut * servo_rpc__estimate_time_1_svc(servoRPC_EstimateTimeIn *, struct svc_req *);
#define	SERVO_RPC__GET_BEAMWIDTH ((unsigned long)(91))
extern  servoRPC_GetBeamwidthOut * servo_rpc__get_beamwidth_1(servoRPC_GetBeamwidthIn *, CLIENT *);
extern  servoRPC_GetBeamwidthOut * servo_rpc__get_beamwidth_1_svc(servoRPC_GetBeamwidthIn *, struct svc_req *);
#define	SERVO_RPC__SET_DATETIME ((unsigned long)(92))
extern  servoRPC_SetDateTimeOut * servo_rpc__set_datetime_1(servoRPC_SetDateTimeIn *, CLIENT *);
extern  servoRPC_SetDateTimeOut * servo_rpc__set_datetime_1_svc(servoRPC_SetDateTimeIn *, struct svc_req *);
#define	SERVO_RPC__SET_SHORTINFO_NAMES ((unsigned long)(98))
extern  servoRPC_SetShortInfoNamesOut * servo_rpc__set_shortinfo_names_1(servoRPC_SetShortInfoNamesIn *, CLIENT *);
extern  servoRPC_SetShortInfoNamesOut * servo_rpc__set_shortinfo_names_1_svc(servoRPC_SetShortInfoNamesIn *, struct svc_req *);
#define	SERVO_RPC__GET_SHORTINFO_NAMES ((unsigned long)(99))
extern  servoRPC_GetShortInfoNamesOut * servo_rpc__get_shortinfo_names_1(void *, CLIENT *);
extern  servoRPC_GetShortInfoNamesOut * servo_rpc__get_shortinfo_names_1_svc(void *, struct svc_req *);
#define	SERVO_RPC__GET_SHORTINFO ((unsigned long)(93))
extern  servoRPC_GetShortInfoOut * servo_rpc__get_shortinfo_1(servoRPC_GetShortInfoIn *, CLIENT *);
extern  servoRPC_GetShortInfoOut * servo_rpc__get_shortinfo_1_svc(servoRPC_GetShortInfoIn *, struct svc_req *);
#define	SERVO_RPC__GET_NAMEDVALUE ((unsigned long)(94))
extern  servoRPC_GetNamedValueOut * servo_rpc__get_namedvalue_1(servoRPC_GetNamedValueIn *, CLIENT *);
extern  servoRPC_GetNamedValueOut * servo_rpc__get_namedvalue_1_svc(servoRPC_GetNamedValueIn *, struct svc_req *);
#define	SERVO_RPC__SET_NAMEDVALUE ((unsigned long)(95))
extern  servoRPC_SetNamedValueOut * servo_rpc__set_namedvalue_1(servoRPC_SetNamedValueIn *, CLIENT *);
extern  servoRPC_SetNamedValueOut * servo_rpc__set_namedvalue_1_svc(servoRPC_SetNamedValueIn *, struct svc_req *);
#define	SERVO_RPC__GET_NAMELIST ((unsigned long)(96))
extern  servoRPC_GetNameListOut * servo_rpc__get_namelist_1(void *, CLIENT *);
extern  servoRPC_GetNameListOut * servo_rpc__get_namelist_1_svc(void *, struct svc_req *);
#define	SERVO_RPC__GET_VALUES ((unsigned long)(97))
extern  servoRPC_GetValuesOut * servo_rpc__get_values_1(void *, CLIENT *);
extern  servoRPC_GetValuesOut * servo_rpc__get_values_1_svc(void *, struct svc_req *);
extern int servo_rpc__prog_1_freeresult(SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define	SERVO_RPC__PING ((unsigned long)(1))
extern  servoRPC_Status * servo_rpc__ping_1();
extern  servoRPC_Status * servo_rpc__ping_1_svc();
#define	SERVO_RPC__AUTHENTICATE ((unsigned long)(2))
extern  servoRPC_Status * servo_rpc__authenticate_1();
extern  servoRPC_Status * servo_rpc__authenticate_1_svc();
#define	SERVO_RPC__SET_WD_TIMEOUT ((unsigned long)(3))
extern  servoRPC_Status * servo_rpc__set_wd_timeout_1();
extern  servoRPC_Status * servo_rpc__set_wd_timeout_1_svc();
#define	SERVO_RPC__GET_WD_TIMEOUT ((unsigned long)(4))
extern  servoRPC_GetWDTimeoutOut * servo_rpc__get_wd_timeout_1();
extern  servoRPC_GetWDTimeoutOut * servo_rpc__get_wd_timeout_1_svc();
#define	SERVO_RPC__GET_STATIC_INFO ((unsigned long)(10))
extern  servoRPC_GetStaticInfoOut * servo_rpc__get_static_info_1();
extern  servoRPC_GetStaticInfoOut * servo_rpc__get_static_info_1_svc();
#define	SERVO_RPC__GET_INFO ((unsigned long)(11))
extern  servoRPC_GetInfoOut * servo_rpc__get_info_1();
extern  servoRPC_GetInfoOut * servo_rpc__get_info_1_svc();
#define	SERVO_RPC__SET_INTERP_SCHEME ((unsigned long)(12))
extern  servoRPC_Status * servo_rpc__set_interp_scheme_1();
extern  servoRPC_Status * servo_rpc__set_interp_scheme_1_svc();
#define	SERVO_RPC__STOW ((unsigned long)(30))
extern  servoRPC_StowOut * servo_rpc__stow_1();
extern  servoRPC_StowOut * servo_rpc__stow_1_svc();
#define	SERVO_RPC__UNSTOW ((unsigned long)(31))
extern  servoRPC_UnstowOut * servo_rpc__unstow_1();
extern  servoRPC_UnstowOut * servo_rpc__unstow_1_svc();
#define	SERVO_RPC__PARK ((unsigned long)(32))
extern  servoRPC_ParkOut * servo_rpc__park_1();
extern  servoRPC_ParkOut * servo_rpc__park_1_svc();
#define	SERVO_RPC__RESET ((unsigned long)(33))
extern  servoRPC_DriveResetOut * servo_rpc__reset_1();
extern  servoRPC_DriveResetOut * servo_rpc__reset_1_svc();
#define	SERVO_RPC__EXIT_LIMITS ((unsigned long)(34))
extern  servoRPC_ExitLimitsOut * servo_rpc__exit_limits_1();
extern  servoRPC_ExitLimitsOut * servo_rpc__exit_limits_1_svc();
#define	SERVO_RPC__HALT ((unsigned long)(35))
extern  servoRPC_HaltOut * servo_rpc__halt_1();
extern  servoRPC_HaltOut * servo_rpc__halt_1_svc();
#define	SERVO_RPC__GOTO ((unsigned long)(40))
extern  servoRPC_GotoOut * servo_rpc__goto_1();
extern  servoRPC_GotoOut * servo_rpc__goto_1_svc();
#define	SERVO_RPC__TRACK ((unsigned long)(50))
extern  servoRPC_TrackOut * servo_rpc__track_1();
extern  servoRPC_TrackOut * servo_rpc__track_1_svc();
#define	SERVO_RPC__TRACK_SHORT ((unsigned long)(51))
extern  servoRPC_TrackOut * servo_rpc__track_short_1();
extern  servoRPC_TrackOut * servo_rpc__track_short_1_svc();
#define	SERVO_RPC__CLEAR_REBOOT ((unsigned long)(52))
extern  servoRPC_ClearRebootOut * servo_rpc__clear_reboot_1();
extern  servoRPC_ClearRebootOut * servo_rpc__clear_reboot_1_svc();
#define	SERVO_RPC__GET_TRACK ((unsigned long)(70))
extern  servoRPC_GetTrackOut * servo_rpc__get_track_1();
extern  servoRPC_GetTrackOut * servo_rpc__get_track_1_svc();
#define	SERVO_RPC__CLEAR_TRACK_READOUT_QUE ((unsigned long)(71))
extern  servoRPC_Status * servo_rpc__clear_track_readout_que_1();
extern  servoRPC_Status * servo_rpc__clear_track_readout_que_1_svc();
#define	SERVO_RPC__ESTIMATE_TIME ((unsigned long)(90))
extern  servoRPC_EstimateTimeOut * servo_rpc__estimate_time_1();
extern  servoRPC_EstimateTimeOut * servo_rpc__estimate_time_1_svc();
#define	SERVO_RPC__GET_BEAMWIDTH ((unsigned long)(91))
extern  servoRPC_GetBeamwidthOut * servo_rpc__get_beamwidth_1();
extern  servoRPC_GetBeamwidthOut * servo_rpc__get_beamwidth_1_svc();
#define	SERVO_RPC__SET_DATETIME ((unsigned long)(92))
extern  servoRPC_SetDateTimeOut * servo_rpc__set_datetime_1();
extern  servoRPC_SetDateTimeOut * servo_rpc__set_datetime_1_svc();
#define	SERVO_RPC__SET_SHORTINFO_NAMES ((unsigned long)(98))
extern  servoRPC_SetShortInfoNamesOut * servo_rpc__set_shortinfo_names_1();
extern  servoRPC_SetShortInfoNamesOut * servo_rpc__set_shortinfo_names_1_svc();
#define	SERVO_RPC__GET_SHORTINFO_NAMES ((unsigned long)(99))
extern  servoRPC_GetShortInfoNamesOut * servo_rpc__get_shortinfo_names_1();
extern  servoRPC_GetShortInfoNamesOut * servo_rpc__get_shortinfo_names_1_svc();
#define	SERVO_RPC__GET_SHORTINFO ((unsigned long)(93))
extern  servoRPC_GetShortInfoOut * servo_rpc__get_shortinfo_1();
extern  servoRPC_GetShortInfoOut * servo_rpc__get_shortinfo_1_svc();
#define	SERVO_RPC__GET_NAMEDVALUE ((unsigned long)(94))
extern  servoRPC_GetNamedValueOut * servo_rpc__get_namedvalue_1();
extern  servoRPC_GetNamedValueOut * servo_rpc__get_namedvalue_1_svc();
#define	SERVO_RPC__SET_NAMEDVALUE ((unsigned long)(95))
extern  servoRPC_SetNamedValueOut * servo_rpc__set_namedvalue_1();
extern  servoRPC_SetNamedValueOut * servo_rpc__set_namedvalue_1_svc();
#define	SERVO_RPC__GET_NAMELIST ((unsigned long)(96))
extern  servoRPC_GetNameListOut * servo_rpc__get_namelist_1();
extern  servoRPC_GetNameListOut * servo_rpc__get_namelist_1_svc();
#define	SERVO_RPC__GET_VALUES ((unsigned long)(97))
extern  servoRPC_GetValuesOut * servo_rpc__get_values_1();
extern  servoRPC_GetValuesOut * servo_rpc__get_values_1_svc();
extern int servo_rpc__prog_1_freeresult();
#endif /* K&R C */

/* the xdr functions */

#ifdef __cplusplus
extern "C" {
#endif

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr___ulonglong(XDR *, __ulonglong*);
extern  bool_t xdr_servoRPC_AbsTime(XDR *, servoRPC_AbsTime*);
extern  bool_t xdr_servoRPC_AbsTime(XDR *, servoRPC_AbsTime*);
extern  bool_t xdr___longlong(XDR *, __longlong*);
extern  bool_t xdr_servoRPC_RelTime(XDR *, servoRPC_RelTime*);
extern  bool_t xdr_servoRPC_RelTime(XDR *, servoRPC_RelTime*);
extern  bool_t xdr_servoRPC_ShapeInclude(XDR *, servoRPC_ShapeInclude*);
extern  bool_t xdr_servoRPC_ReadoutName(XDR *, servoRPC_ReadoutName*);
extern  bool_t xdr_servoRPC_Status(XDR *, servoRPC_Status*);
extern  bool_t xdr_servoRPC_CoordSystem(XDR *, servoRPC_CoordSystem*);
extern  bool_t xdr_servoRPC_Pair(XDR *, servoRPC_Pair*);
extern  bool_t xdr_servoRPC_InterpScheme(XDR *, servoRPC_InterpScheme*);
extern  bool_t xdr_servoRPC_State(XDR *, servoRPC_State*);
extern  bool_t xdr_servoRPC_DeadZoneReasons(XDR *, servoRPC_DeadZoneReasons*);
extern  bool_t xdr_servoRPC_ShapeSpec(XDR *, servoRPC_ShapeSpec*);
extern  bool_t xdr_servoRPC_Circle(XDR *, servoRPC_Circle*);
extern  bool_t xdr_servoRPC_DeadZoneSpec(XDR *, servoRPC_DeadZoneSpec*);
extern  bool_t xdr_servoRPC_DeadZone(XDR *, servoRPC_DeadZone*);
extern  bool_t xdr_servoRPC_TrackPointRequest(XDR *, servoRPC_TrackPointRequest*);
extern  bool_t xdr_servoRPC_TrackPointShortRequest(XDR *, servoRPC_TrackPointShortRequest*);
extern  bool_t xdr_servoRPC_TrackPointReadout(XDR *, servoRPC_TrackPointReadout*);
extern  bool_t xdr_servoRPC_DateTime(XDR *, servoRPC_DateTime*);
extern  bool_t xdr_servoRPC_DataType(XDR *, servoRPC_DataType*);
extern  bool_t xdr_servoRPC_DataName(XDR *, servoRPC_DataName*);
extern  bool_t xdr_servoRPC_DataValue(XDR *, servoRPC_DataValue*);
extern  bool_t xdr_servoRPC_DataNameValue(XDR *, servoRPC_DataNameValue*);
extern  bool_t xdr_servoRPC_ShortInfoValue(XDR *, servoRPC_ShortInfoValue*);
extern  bool_t xdr_servoRPC_Name(XDR *, servoRPC_Name*);
extern  bool_t xdr_servoRPC_ShortInfoReadout(XDR *, servoRPC_ShortInfoReadout*);
extern  bool_t xdr_servoRPC_AuthenticateIn(XDR *, servoRPC_AuthenticateIn*);
extern  bool_t xdr_servoRPC_GetWDTimeoutOut(XDR *, servoRPC_GetWDTimeoutOut*);
extern  bool_t xdr_servoRPC_GetStaticInfoOut(XDR *, servoRPC_GetStaticInfoOut*);
extern  bool_t xdr_servoRPC_GetInfoOut(XDR *, servoRPC_GetInfoOut*);
extern  bool_t xdr_servoRPC_StowIn(XDR *, servoRPC_StowIn*);
extern  bool_t xdr_servoRPC_StowOut(XDR *, servoRPC_StowOut*);
extern  bool_t xdr_servoRPC_UnstowIn(XDR *, servoRPC_UnstowIn*);
extern  bool_t xdr_servoRPC_UnstowOut(XDR *, servoRPC_UnstowOut*);
extern  bool_t xdr_servoRPC_ParkIn(XDR *, servoRPC_ParkIn*);
extern  bool_t xdr_servoRPC_ParkOut(XDR *, servoRPC_ParkOut*);
extern  bool_t xdr_servoRPC_DriveResetIn(XDR *, servoRPC_DriveResetIn*);
extern  bool_t xdr_servoRPC_DriveResetOut(XDR *, servoRPC_DriveResetOut*);
extern  bool_t xdr_servoRPC_ExitLimitsIn(XDR *, servoRPC_ExitLimitsIn*);
extern  bool_t xdr_servoRPC_ExitLimitsOut(XDR *, servoRPC_ExitLimitsOut*);
extern  bool_t xdr_servoRPC_HaltIn(XDR *, servoRPC_HaltIn*);
extern  bool_t xdr_servoRPC_HaltOut(XDR *, servoRPC_HaltOut*);
extern  bool_t xdr_servoRPC_GotoIn(XDR *, servoRPC_GotoIn*);
extern  bool_t xdr_servoRPC_GotoOut(XDR *, servoRPC_GotoOut*);
extern  bool_t xdr_servoRPC_TrackIn(XDR *, servoRPC_TrackIn*);
extern  bool_t xdr_servoRPC_TrackShortIn(XDR *, servoRPC_TrackShortIn*);
extern  bool_t xdr_servoRPC_TrackOut(XDR *, servoRPC_TrackOut*);
extern  bool_t xdr_servoRPC_GetTrackIn(XDR *, servoRPC_GetTrackIn*);
extern  bool_t xdr_servoRPC_GetTrackOut(XDR *, servoRPC_GetTrackOut*);
extern  bool_t xdr_servoRPC_ClearTrackReadoutQueIn(XDR *, servoRPC_ClearTrackReadoutQueIn*);
extern  bool_t xdr_servoRPC_ClearRebootIn(XDR *, servoRPC_ClearRebootIn*);
extern  bool_t xdr_servoRPC_ClearRebootOut(XDR *, servoRPC_ClearRebootOut*);
extern  bool_t xdr_servoRPC_EstimateTimeIn(XDR *, servoRPC_EstimateTimeIn*);
extern  bool_t xdr_servoRPC_EstimateTimeOut(XDR *, servoRPC_EstimateTimeOut*);
extern  bool_t xdr_servoRPC_GetBeamwidthIn(XDR *, servoRPC_GetBeamwidthIn*);
extern  bool_t xdr_servoRPC_GetBeamwidthOut(XDR *, servoRPC_GetBeamwidthOut*);
extern  bool_t xdr_servoRPC_SetDateTimeIn(XDR *, servoRPC_SetDateTimeIn*);
extern  bool_t xdr_servoRPC_SetDateTimeOut(XDR *, servoRPC_SetDateTimeOut*);
extern  bool_t xdr_servoRPC_SetShortInfoNamesIn(XDR *, servoRPC_SetShortInfoNamesIn*);
extern  bool_t xdr_servoRPC_SetShortInfoNamesOut(XDR *, servoRPC_SetShortInfoNamesOut*);
extern  bool_t xdr_servoRPC_GetShortInfoIn(XDR *, servoRPC_GetShortInfoIn*);
extern  bool_t xdr_servoRPC_GetShortInfoNamesOut(XDR *, servoRPC_GetShortInfoNamesOut*);
extern  bool_t xdr_servoRPC_GetShortInfoOut(XDR *, servoRPC_GetShortInfoOut*);
extern  bool_t xdr_servoRPC_GetNamedValueIn(XDR *, servoRPC_GetNamedValueIn*);
extern  bool_t xdr_servoRPC_GetNamedValueOut(XDR *, servoRPC_GetNamedValueOut*);
extern  bool_t xdr_servoRPC_GetValuesOut(XDR *, servoRPC_GetValuesOut*);
extern  bool_t xdr_servoRPC_SetNamedValueIn(XDR *, servoRPC_SetNamedValueIn*);
extern  bool_t xdr_servoRPC_SetNamedValueOut(XDR *, servoRPC_SetNamedValueOut*);
extern  bool_t xdr_servoRPC_GetNameListOut(XDR *, servoRPC_GetNameListOut*);

#else /* K&R C */
extern bool_t xdr___ulonglong();
extern bool_t xdr_servoRPC_AbsTime();
extern bool_t xdr_servoRPC_AbsTime();
extern bool_t xdr___longlong();
extern bool_t xdr_servoRPC_RelTime();
extern bool_t xdr_servoRPC_RelTime();
extern bool_t xdr_servoRPC_ShapeInclude();
extern bool_t xdr_servoRPC_ReadoutName();
extern bool_t xdr_servoRPC_Status();
extern bool_t xdr_servoRPC_CoordSystem();
extern bool_t xdr_servoRPC_Pair();
extern bool_t xdr_servoRPC_InterpScheme();
extern bool_t xdr_servoRPC_State();
extern bool_t xdr_servoRPC_DeadZoneReasons();
extern bool_t xdr_servoRPC_ShapeSpec();
extern bool_t xdr_servoRPC_Circle();
extern bool_t xdr_servoRPC_DeadZoneSpec();
extern bool_t xdr_servoRPC_DeadZone();
extern bool_t xdr_servoRPC_TrackPointRequest();
extern bool_t xdr_servoRPC_TrackPointShortRequest();
extern bool_t xdr_servoRPC_TrackPointReadout();
extern bool_t xdr_servoRPC_DateTime();
extern bool_t xdr_servoRPC_DataType();
extern bool_t xdr_servoRPC_DataName();
extern bool_t xdr_servoRPC_DataValue();
extern bool_t xdr_servoRPC_DataNameValue();
extern bool_t xdr_servoRPC_ShortInfoValue();
extern bool_t xdr_servoRPC_Name();
extern bool_t xdr_servoRPC_ShortInfoReadout();
extern bool_t xdr_servoRPC_AuthenticateIn();
extern bool_t xdr_servoRPC_GetWDTimeoutOut();
extern bool_t xdr_servoRPC_GetStaticInfoOut();
extern bool_t xdr_servoRPC_GetInfoOut();
extern bool_t xdr_servoRPC_StowIn();
extern bool_t xdr_servoRPC_StowOut();
extern bool_t xdr_servoRPC_UnstowIn();
extern bool_t xdr_servoRPC_UnstowOut();
extern bool_t xdr_servoRPC_ParkIn();
extern bool_t xdr_servoRPC_ParkOut();
extern bool_t xdr_servoRPC_DriveResetIn();
extern bool_t xdr_servoRPC_DriveResetOut();
extern bool_t xdr_servoRPC_ExitLimitsIn();
extern bool_t xdr_servoRPC_ExitLimitsOut();
extern bool_t xdr_servoRPC_HaltIn();
extern bool_t xdr_servoRPC_HaltOut();
extern bool_t xdr_servoRPC_GotoIn();
extern bool_t xdr_servoRPC_GotoOut();
extern bool_t xdr_servoRPC_TrackIn();
extern bool_t xdr_servoRPC_TrackShortIn();
extern bool_t xdr_servoRPC_TrackOut();
extern bool_t xdr_servoRPC_GetTrackIn();
extern bool_t xdr_servoRPC_GetTrackOut();
extern bool_t xdr_servoRPC_ClearTrackReadoutQueIn();
extern bool_t xdr_servoRPC_ClearRebootIn();
extern bool_t xdr_servoRPC_ClearRebootOut();
extern bool_t xdr_servoRPC_EstimateTimeIn();
extern bool_t xdr_servoRPC_EstimateTimeOut();
extern bool_t xdr_servoRPC_GetBeamwidthIn();
extern bool_t xdr_servoRPC_GetBeamwidthOut();
extern bool_t xdr_servoRPC_SetDateTimeIn();
extern bool_t xdr_servoRPC_SetDateTimeOut();
extern bool_t xdr_servoRPC_SetShortInfoNamesIn();
extern bool_t xdr_servoRPC_SetShortInfoNamesOut();
extern bool_t xdr_servoRPC_GetShortInfoIn();
extern bool_t xdr_servoRPC_GetShortInfoNamesOut();
extern bool_t xdr_servoRPC_GetShortInfoOut();
extern bool_t xdr_servoRPC_GetNamedValueIn();
extern bool_t xdr_servoRPC_GetNamedValueOut();
extern bool_t xdr_servoRPC_GetValuesOut();
extern bool_t xdr_servoRPC_SetNamedValueIn();
extern bool_t xdr_servoRPC_SetNamedValueOut();
extern bool_t xdr_servoRPC_GetNameListOut();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_SERVO_H_RPCGEN */
