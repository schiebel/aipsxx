%% viewercanvasprintmanager.help: help file for viewercanvasprintmanager tool
%% Copyright (C) 1999,2000,2001
%% Associated Universities, Inc. Washington DC, USA.
%%
%% This library is free software; you can redistribute it and/or modify it
%% under the terms of the GNU Library General Public License as published by
%% the Free Software Foundation; either version 2 of the License, or (at your
%% option) any later version.
%%
%% This library is distributed in the hope that it will be useful, but WITHOUT
%% ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
%% FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Library General Public
%% License for more details.
%%
%% You should have received a copy of the GNU Library General Public License
%% along with this library; if not, write to the Free Software Foundation,
%% Inc., 675 Massachusetts Ave, Cambridge, MA 02139, USA.
%%
%% Correspondence concerning AIPS++ should be addressed as follows:
%%        Internet email: aips2-request@nrao.edu.
%%        Postal address: AIPS++ Project Office
%%                        National Radio Astronomy Observatory
%%                        520 Edgemont Road
%%                        Charlottesville, VA 22903-2475 USA
%%
%% $Id: viewercanvasprintmanager.help,v 19.1 2005/06/15 18:10:56 cvsmgr Exp $

\documentclass{book}
\usepackage{aips2help,html}
\begin{document}

\begin{ahobject}{viewercanvasprintmanager}{Tool for managing the printing of canvases of \VdisplaypanelTs}

\ahinclude{viewer.g}

\ahkeyword{canvas}{}
\ahkeyword{print}{}
\ahkeyword{printing}{}

\ahmethods{}

\begin{ahdescription}

This \tool\ provides services to produce copies of the drawing
canvases of \VdisplaypanelTs.  PostScript and bitmap output is
available at present.

\bigskip \noindent {\bf Graphical User Interface} \medskip This tool
controls two forms of hardcopy output: PostScript for printing, and
X-Windows pixmap format which can be easily converted to GIF, JPEG or
other bitmap formats.  To initiate printing of what is visible on the
\VdisplaypanelT\ simply press the {\gif Print...} button at the bottom
of the window, or select {\gif Print manager...} from the {\gif File}
menu.  This will bring up the \guishort\ for this tool which allows you
to set some basic output parameters, most of which are only important
for PostScript output (as indicated by the {\ssf [PS]} prefix:

\begin{itemize}

\item

{\gif Output file}

This can be left {\tt <unset>}, and the Viewer will automatically
create a unique filename for your output.  Otherwise, just type in a
specific name for your output file.

\item

{\gif [PS] Output media}

You may select to print to A4 or US Letter paper.

\item

{\gif [PS] Orientation}

Selection from portrait or landscape to orient the output on the selected paper.

\item

{\gif [PS] Resolution}

You may choose the resolution of your output here.  Bear in mind that
the size of the output file for raster images will generally grow as the
square of this number, and likewise the speed with which the hardcopy
will be generated and printed.  For test output, generally leave the
resolution quite low, and only increase it to your printer resolution
for final hardcopy output.  This setting enables you to tune the output
to the exact resolution of your hardcopy device. 

\item

{\gif [PS] Magnification}

You can scale your output by any factor between 0 and 1.

\item

{\gif [PS] Write EPS format?}

Set this option to True if you want encapsulated PostScript output.

\end{itemize}

Once you have filled in the desired options, you need to hit one of
three buttons at the bottom of the {\gif Print manager} GUI:

\begin{itemize}

\item

{\gif Save XPM}

This button will write an X-Windows Pixmap copy of the
\VdisplaypanelT\ contents to a file on disk.  The output will be an
{\em exact} copy of what is displayed on-screen, and then a utility
like 'xv' can be used to convert the output file to a GIF file, or a
JPEG file, or whatever takes your fancy.

\item

{\gif Save PS}

This button will write a PostScript file which aims to duplicate what
is seen on-screen in a higher-resolution mode suitable for printing.
Every attempt is made to preserve the aspect ratio of the on-screen
display.  

\item

{\gif Print}

This button will first write a PostScript file as if the {\gif Save PS}
button had been pressed, and will then bring up a simple window which
allows you to direct the output to a printer, to a previewer, or to
cancel the operation.

\end{itemize}

Press {\gif Dismiss} to cancel printing.
\end{ahdescription}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\begin{ahconstructor}{viewercanvasprintmanager}{Create a \VcanvasprintMT}
\begin{ahargs}
  \ahaddarg{displaypanel}{The \VdisplaypanelT\ which will use this \VcanvasprintMT}{}{\VdisplaypanelT}
\end{ahargs}
\ahreturns{\VcanvasprintMT\ or fail}
\begin{ahdescription}

This is the only constructor for \VcanvasprintMTs.  It constructs
(creates) a \VcanvasprintMT\ which can subsequently be used to provide
canvas printing facilities to a \VdisplaypanelT.

{\bf This constructor should not be called by users:} it is called
during construction of \lkVdisplaypanelTs.  The \VcanvasprintMT\ for a
given \VdisplaypanelT\ can be retrieved by calling its 
\ahlink{canvasprintmanager}{viewer:viewerdisplaypanel.canvasprintmanager} function.

\end{ahdescription}
\end{ahconstructor}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\begin{ahfunction}{type}{Return the type of this \tool}
\ahreturns{'viewercanvasprintmanager'}
\begin{ahdescription}

This function simply returns the string {\tt 'viewercanvasprintmanager'}, 
which can be used to identify this \tool\ as a \VcanvasprintMT.  It is
generally reserved for internal use.

\end{ahdescription}
\end{ahfunction}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\begin{ahfunction}{viewer}{Return the \VT\ which owns this \tool}
\ahreturns{\VT}
\begin{ahdescription}

This function simply returns the \VT\ which owns the \VdisplaypanelT\
that constructed and uses this \VcanvasprintMT.  It is generally reserved
for internal use.

\end{ahdescription}
\end{ahfunction}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\begin{ahfunction}{done}{Close down (destroy) this \VcanvasprintMT}
\ahreturns{T}
\begin{ahdescription}

If you no longer need to use this \VcanvasprintMT, calling this function
will free up its resources.  Any \guilongs associated with this \tool\
will be removed from the screen.

It is unwise to close down a \VcanvasprintMT\ by an explicit call to this
function.  It is generally reserved for internal use by the
\VdisplaypanelT\ which uses this \VcanvasprintMT.

\end{ahdescription}
\end{ahfunction}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\begin{ahfunction}{gui}{Create a new \guilong\ for this \tool}
\begin{ahargs}
  \ahaddarg{parent}{parent frame for \guishort}{F}{agent or F}
  \ahaddarg{show}{map the \guishort\ to the screen immediately?}{T}{Boolean}
  \ahaddarg{hasdismiss}{place a 'Dismiss' button in the \guishort?}{F}{Boolean}
  \ahaddarg{hasdone}{place a 'Done' button in the \guishort?}{F}{Boolean}
  \ahaddarg{widgetset}{\widgetserverT\ to use for the \guishort}{unset}{\widgetserverT}
\end{ahargs}
\ahreturns{\tool\ having \VstandardGI}
\begin{ahdescription}

Calling this function will create and return a new \guishort\ which
can be used to view and edit the printing settings of this
\VcanvasprintMT.  By judicious use of the function arguments, the
\guilong\ can optionally be placed within existing frames, and left
off-screen for later use.  The interface of the return value conforms
to the \lkVstandardGI.

\end{ahdescription}
\end{ahfunction}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\begin{ahfunction}{writeps}{Write a PostScript file}
\begin{ahargs}
  \ahaddarg{filename}{name of file to write}{unset}{string or unset}
  \ahaddarg{media}{paper type}{'A4'}{'A4' 'LETTER'}
  \ahaddarg{landscape}{print in landscape mode?}{F}{boolean}
  \ahaddarg{dpi}{resolution of output in dots per inch}{100}{integer}
  \ahaddarg{zoom}{scaling of output}{1.0}{float in (0,1]}
  \ahaddarg{eps}{generate encapsulated PostScript output}{F}{boolean}
\end{ahargs}
\ahreturns{fail or name of file written}
\begin{ahdescription}

This function writes a PostScript version of the current view on
display in the \VdisplaypanelT\ for which this \tool\ provides canvas
print management facilities.  The PostScript output will have the same
aspect ratio as that of the \VdisplaypanelT\ displayed on screen
(provided the screen pixel aspect ratio is close to $1.0$), but may
differ slightly in color use and resampling resolution for raster
images.  If the {\tt filename} argument is left {\tt unset}, then a
sensible filename is generated by the \VT.  The {\tt dpi} argument
allows the caller to specify the resolution of the output.

\end{ahdescription}
\end{ahfunction}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\begin{ahfunction}{writexpm}{Write an X11 Pixmap file}
\begin{ahargs}
  \ahaddarg{filename}{name of file to write}{unset}{string or unset}
\end{ahargs}
\ahreturns{name of file written}
\begin{ahdescription}

This function writes an X11 Pixmap version of the current view on
display in the \VdisplaypanelT\ for which this \tool\ provides canvas
print management facilities.  The resultant file is an {\em exact}\/
copy of the screen display: it is actually written directly from the
internal copy of the \VdisplaypanelT\ contents.  If the {\tt filename}
argument is left {\tt unset}, then a sensible filename is generated by
the \VT.

\end{ahdescription}
\end{ahfunction}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\end{ahobject}
\end{document}
