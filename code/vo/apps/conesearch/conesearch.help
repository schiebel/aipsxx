%% Copyright (C) 2003
%% Associated Universities, Inc. Washington DC, USA.
%%
%% This library is free software; you can redistribute it and/or modify it
%% under the terms of the GNU Library General Public License as published by
%% the Free Software Foundation; either version 2 of the License, or (at your
%% option) any later version.
%%
%% This library is distributed in the hope that it will be useful, but WITHOUT
%% ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
%% FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Library General Public
%% License for more details.
%%
%% You should have received a copy of the GNU Library General Public License
%% along with this library; if not, write to the Free Software Foundation,
%% Inc., 675 Massachusetts Ave, Cambridge, MA 02139, USA.
%%
%% Correspondence concerning AIPS++ should be addressed as follows:
%%        Internet email: aips2-request@nrao.edu.
%%        Postal address: AIPS++ Project Office
%%                        National Radio Astronomy Observatory
%%                        520 Edgemont Road
%%                        Charlottesville, VA 22903-2475 USA
%%
%% $Id: conesearch.help,v 19.0 2003/07/16 06:10:47 aips2adm Exp $
\providecommand{\voURL}{http://www.us-vo.org}
\providecommand{\conesearchURL}{http://voservices.org/cone/}
\providecommand{\votableURL}{http://www.us-vo.org/VOTable}

\begin{ahmodule}{conesearch}{Module for VO conesearch processing}
\ahinclude{conesearch.g}

\begin{ahdescription} 
The \htmladdnormallink{Virtual Observatory}{\voURL} project has
defined the 
\htmladdnormallink{conesearch web service}{\conesearchURL} to facilitate the exchange of
astronomical information about a given region of the sky. The region
is defined by a center Right Ascension and Declination, and a search
radius. A conesearch service returns what it knows about that region
in the form of a \htmladdnormallink{VOTable}{\votableURL} - an XML
document. This VOTable can be read by a computer and used
appropriately.

A number of conesearchs have been established and registered at a
central registry.

This module contains two tools:

\begin{description}
\item[{\ahlink{conesearch}{conesearch}}] Basic tool for finding,
listing, and querying registered conesearches.
\item[{\ahlink{cscatalog}{cscatalog}}] User tool for particular
conesearch related queries.
\end{description}
Of these, the cscatalog is more likely to be of use to astronomers.

\end{ahdescription}


\ahobjs{}
\ahfuncs{}

\begin{ahtool}{conesearch}{tool for VO conesearch queries}
\begin{ahdescription}
conesearch is an tool that processes queries to VO conesearch
services.

A conesearch tool connects to the registry of conesearch services and
downloads the definition of services available. The user may then
query one of these services and capture the output.

\begin{verbatim}
> cs:=conesearch()
Getting registry of VO cone services
Web request will be sent to http://voservices.org/cone/show/getprofile.asp?format=xml
Received answer in 1.07959199 seconds
Start parsing VOTable
Successfully parsed VOTable
Successfully read registry of conesearch services
> 
> cs.list()
Service 1: Messier
Service 2: GSC221
Service 3: HIP
Service 4: GSC1
Service 5: TYC
Service 6: NCSA Astronomy Digital Image Library
Service 7: Yale
Service 8: DPOSS Plates
Service 9: ASCA Master Observations
Service 10: XTE Master Observations
Service 11: OSSE Observations
Service 12: DPOSS
Service 13: SDSS.EDR.PhotoObj
Service 14: USNO-A2.0
Service 15: USNO-SA2.0
Service 16: Landolt 1992
Service 17: Landolt 1983
Service 18: VizieR on GSC2
Service 19: VizieR 
Service 20: VizieR 
Service 21: VizieR 
Service 22: VizieR 
Service 23: VizieR 
Service 24: VizieR 
Service 25: 2MASS Second Incremental Release Point Source Catalog (PSC)
Service 26: 2MASS Second Incremental Release Extended Source Catalog (XSC)
Service 27: 2MASS Second Incremental Release PSC Joined with XSC
Service 28: 2MASS Second Incremental Release Survey Scan Info
Service 29: 2MASS Second Incremental Release PSC Joined with Scan Data
Service 30: 2MASS Second Incremental Release XSC Joined with Scan Data
Service 31: 2MASS First Incremental Release Point Source Catalog (PSC)
Service 32: 2MASS First Incremental Release PSC Joined with XSC
Service 33: 2MASS First Incremental Release Survey Scan Info
Service 34: 2MASS First Incremental Release PSC Joined with Scan Data
Service 35: 2MASS First Incremental Release XSC Joined with Scan Data
Service 36: 2MASS Sampler Point Source Catalog (PSC)
Service 37: 2MASS Sampler Extended Source Catalog (PSC)
Service 38: 2MASS Sampler PSC Joined with XSC
Service 39: IRAS Faint Source Catalog v2.0
Service 40: IRAS Point Source Catalog v2.0
Service 41: IRAS Catalog of Galaxies and Quasars
Service 42: IRAS Serendipitous Survey Catalog
Service 43: IRAS Small Scale Structure Catalog
Service 44: IRAS Additional Observations Catalog
Service 45: IRAS Additional Observations Catalog
Service 46: IRAS Faint Source Catalog Rejects
Service 47: IRAS Point Source Catalog Rejects
Service 48: IRAS PSC Joined with the WSDB
Service 49: IRAS PSC Joined with HCON and WSDB
Service 50: USNOA-2
Service 51: &lt;a href=http://www.cv.nrao.edu/nvss/&gt;NVSS&lt;/a&gt;
Service 52: &lt;a href=http://sundog.stsci.edu/first/top.html&gt;FIRST&lt;/a&gt;
Service 53: The Midcourse Space Experiment (MSX)
Service 54: ROSAT All Sky Sources
Service 55: ROSAT Bright Sources
Service 56: ROSAT Faint Sources
> cs.info(40)
ResponsibleParty: &lt;a href=mailto:jcg@ipac.caltech.edu&gt;John Good&lt;/a&gt;
BaseURL:http://irsatest.ipac.caltech.edu:8001/cgi-bin/Oasis/CatSearch/nph-catsearch?
CAT=iras:iraspsc&amp;
ServiceName: IRAS Point Source Catalog v2.0
Waveband: infrared
Instrument: &lt;a href=http://www.ipac.caltech.edu/ipac/iras/iras.html&gt;IRAS&lt;/a&gt;
MaxSR: 0
MaxRecords: 100000
Verbosity: false
Epoch: 2000
Coverage: All-sky
_name: Row
> cs.query(40, 200, 45, 1)
Web request will be sent to "http://irsatest.ipac.caltech.edu:8001/cgi-bin/Oasis/CatSearch/
nph-catsearch?CAT=iras:iraspsc&RA=200&DEC=45&SR=1"
Received answer in 4.42842793 seconds
Start parsing VOTable
Successfully parsed VOTable
05-Jan-2003/11:27:04 NORMAL [_proc=xml version="1.0",
_doctype=[root=VOTABLE, public=,
system=http://us-vo.org/xml/VOTable.dtd],
VOTABLE=[DEFINITIONS=[COOSYS=[=]], RESOURCE=[TABLE=[FIELD=[=],
FIELD_1=[=], FIELD_2=[=], FIELD_3=[=], FIELD_4=[=], FIELD_5=[=],
FIELD_6=[=], FIELD_7=[=], FIELD_8=[=], FIELD_9=[=], FIELD_10=[=],
FIELD_11=[=], FIELD_12=[=], FIELD_13=[=], FIELD_14=[=], FIELD_15=[=],
FIELD_16=[=], FIELD_17=[=], FIELD_18=[=], FIELD_19=[=], FIELD_20=[=],
FIELD_21=[=], FIELD_22=[=], FIELD_23=[=], FIELD_24=[=], FIELD_25=[=],
FIELD_26=[=], FIELD_27=[=], FIELD_28=[=], FIELD_29=[=], FIELD_30=[=],
FIELD_31=[=], FIELD_32=[=], FIELD_33=[=], FIELD_34=[=], FIELD_35=[=],
FIELD_36=[=], FIELD_37=[=], FIELD_38=[=], FIELD_39=[=], FIELD_40=[=],
FIELD_41=[=], FIELD_42=[=], FIELD_43=[=], FIELD_44=[=], FIELD_45=[=],
FIELD_46=[=], FIELD_47=[=], FIELD_48=[=], FIELD_49=[=], FIELD_50=[=],
FIELD_51=[=], FIELD_52=[=], FIELD_53=[=], FIELD_54=[=], FIELD_55=[=],
FIELD_56=[=], FIELD_57=[=], FIELD_58=[=], FIELD_59=[=], FIELD_60=[=],
FIELD_61=[=], FIELD_62=[=], FIELD_63=[=], FIELD_64=[=], FIELD_65=[=],
FIELD_66=[=], FIELD_67=[=], FIELD_68=[=], FIELD_69=[=], FIELD_70=[=],
FIELD_71=[=], FIELD_72=[=], FIELD_73=[=], FIELD_74=[=], FIELD_75=[=],
FIELD_76=[=], FIELD_77=[=], FIELD_78=[=], FIELD_79=[=], FIELD_80=[=],
FIELD_81=[=], FIELD_82=[=], DATA=[TABLEDATA=[TR=[TD=13178+4601,
TD_1=13, TD_2=17, TD_3=53.3, TD_4=+, TD_5=46, TD_6=1, TD_7=42,
TD_8=73, TD_9=38, TD_10=124, TD_11=2, TD_12=0.250, TD_13=0.684,
TD_14=0.400, TD_15=1.204, TD_16=1, TD_17=1, TD_18=1, TD_19=3, TD_20=0,
TD_21=null, TD_22=0, TD_23=0, TD_24=0, TD_25=11, TD_26=0, TD_27=0,
TD_28=0, TD_29=60, TD_30=null, TD_31=L, TD_32=null, TD_33=F,
TD_34=nul, TD_35=2, TD_36=0, TD_37=0, TD_38=0, TD_39=0, TD_40=0,
TD_41=1, TD_42=2, TD_43=0, TD_44=0, TD_45=0, TD_46=0, TD_47=0,
TD_48=2, TD_49=3, TD_50=9, TD_51=0, TD_52=0, TD_53=2, TD_54=1000,
TD_55=1000, TD_56=1000, TD_57=1000, TD_58=null, TD_59=null,
TD_60=null, TD_61=null, TD_62=0.3322, TD_63=-1.00, TD_64=107.8316,
TD_65=70.5135, TD_66=174.2548, TD_67=48.7945, TD_68=200.0157,
TD_69=45.7664, TD_70=132003.8, TD_71=+454559, TD_72=199.4721,
TD_73=46.0283, TD_74=131753.3, TD_75=+460142, TD_76=97094,
TD_77=-0.6554507488515816, TD_78=-0.2387681951535420,
TD_79=0.7165012664420217, TD_80=213031130, TD_81=213031130, TD_82=1],
TR_1=[TD=13144+4508, TD_1=13, TD_2=14, TD_3=27.9, TD_4=+, TD_5=45,
TD_6=8, TD_7=22, TD_8=43, TD_9=10, TD_10=124, TD_11=2, TD_12=0.255,
TD_13=0.492, TD_14=0.721, TD_15=1.467, TD_16=1, TD_17=3, TD_18=3,
TD_19=1, TD_20=0, TD_21=null, TD_22=0, TD_23=10, TD_24=12, TD_25=0,
TD_26=0, TD_27=90, TD_28=53, TD_29=55, TD_30=G, TD_31=A, TD_32=A,
TD_33=E, TD_34=nul, TD_35=0, TD_36=0, TD_37=0, TD_38=0, TD_39=0,
TD_40=0, TD_41=0, TD_42=0, TD_43=0, TD_44=0, TD_45=0, TD_46=0,
TD_47=0, TD_48=0, TD_49=4, TD_50=9, TD_51=0, TD_52=0, TD_53=2,
TD_54=1000, TD_55=1000, TD_56=1000, TD_57=1000, TD_58=0.5181,
TD_59=-1.00, TD_60=0.6830, TD_61=15.62, TD_62=0.4914, TD_63=-2.00,
TD_64=108.6928, TD_65=71.5482, TD_66=174.2665, TD_67=47.7227,
TD_68=199.1668, TD_69=44.8761, TD_70=131640.0, TD_71=+445234,
TD_72=198.6163, TD_73=45.1394, TD_74=131427.9, TD_75=+450822,
TD_76=96685, TD_77=-0.6693523691696847, TD_78=-0.2326578735244160,
TD_79=0.7055761615687050, TD_80=213031132, TD_81=213031132, TD_82=1],
TR_2=[TD=13172+4547, TD_1=13, TD_2=17, TD_3=17.1, TD_4=+, TD_5=45,
TD_6=47, TD_7=20, TD_8=22, TD_9=5, TD_10=125, TD_11=2, TD_12=132.200,
TD_13=64.050, TD_14=5.521, TD_15=1.433, TD_16=3, TD_17=3, TD_18=3,
TD_19=2, TD_20=2, TD_21=29, TD_22=11, TD_23=5, TD_24=10, TD_25=12,
TD_26=15995, TD_27=10134, TD_28=492, TD_29=36, TD_30=A, TD_31=A,
TD_32=A, TD_33=B, TD_34=19, TD_35=0, TD_36=0, TD_37=0, TD_38=0,
TD_39=0, TD_40=0, TD_41=0, TD_42=0, TD_43=0, TD_44=0, TD_45=0,
TD_46=0, TD_47=0, TD_48=2, TD_49=5, TD_50=10, TD_51=5, TD_52=4,
TD_53=2, TD_54=1000, TD_55=1000, TD_56=1000, TD_57=1000, TD_58=2.0640,
TD_59=12.08, TD_60=11.6012, TD_61=11.18, TD_62=3.8528, TD_63=15.62,
TD_64=107.8894, TD_65=70.7742, TD_66=174.3300, TD_67=48.5379,
TD_68=199.8664, TD_69=45.5267, TD_70=131927.9, TD_71=+453136,
TD_72=199.3212, TD_73=45.7889, TD_74=131717.1, TD_75=+454720,
TD_76=97031, TD_77=-0.6588840449144233, TD_78=-0.2380756877363054,
TD_79=0.7135767528907409, TD_80=213031133, TD_81=213031133,
TD_82=1]]]]]]]
\end{verbatim}
The final output in this example is the VOTable in the form of a Glish
record. 

The FIELD information is available from the attributes of the
corresponding records, and the DATA can be retrieved directly. However
this is tedious and not for the faint-of-heart. We are currently
writing a conversion tool that will translate VOTables directly into
AIPS++ tables. For the moment, most of the interesting astronomical
use of the conesearch will come via the \ahlink{cscatalog}{cscatalog}
tool.
\end{ahdescription}

\ahfuncs{}

\begin{ahconstructor}{conesearch}{Construct an conesearch tool}
\begin{ahdescription}
This is used to construct {\tt conesearch} tools.

This returns a Glish variable containing the tool functions of
conesearch.
\end{ahdescription}
\ahreturns{conesearch tool}
\begin{ahexample}
\begin{verbatim}
cs:=conesearch();
cs.list()
rec:=cs.query(1, 200, 45, 10)
cs.done()
\end{verbatim}
\end{ahexample}
\end{ahconstructor}

\begin{ahfunction}{list}{List all registered conesearches}
\begin{ahdescription}
This queries the registry to find all registered conesearches. 
\end{ahdescription}
\begin{ahargs}
\end{ahargs}
\ahreturns{Bool}
\begin{ahexample}
\begin{verbatim}
cs:=conesearch();
cs.list()
rec:=cs.query(1, 200, 45, 10)
cs.done()
\end{verbatim}
\end{ahexample}
\end{ahfunction}

\begin{ahfunction}{info}{Print information about a particular
conesearch service}
\begin{ahdescription}
This queries the registry to find information about a particular
conesearch service.
\end{ahdescription}
\begin{ahargs}
\end{ahargs}
\ahreturns{Bool}
\begin{ahexample}
\begin{verbatim}
cs:=conesearch();
cs.list()
cs.info(14);
cs.done()
\end{verbatim}
\end{ahexample}
\end{ahfunction}

\begin{ahfunction}{query}{Query a conesearch}
\begin{ahdescription}
This queries a specific conesearch. The VOTable is returned as a
record parsed by the \ahlink{gxmlparser}{utility.gxmlparser} tool.

The service is denoted by an integer - the index of the service in the
list.

To facilitate testing of non-registered services, the query also
accepts a URL. This must be the same URL as expected by the conesearch
registry. For example for the NVSS conesearch being developed at the
NRAO, this would be

\begin{verbatim}
http://www.aoc.nrao.edu/e2e/java/NVSSConeSearchServlet?
\end{verbatim}
\end{ahdescription}
\begin{ahargs}
\ahaddarg{i}{Service to be queried}{1}{Integer}
\ahaddarg{ra}{Right ascension (degrees)}{200.0}{Double}
\ahaddarg{dec}{Declination (degrees)}{45.0}{Double}
\ahaddarg{sr}{Search radius (degrees)}{10}{Float}
\ahaddarg{url}{Alternative to service: URL to query}{F}{String}
\end{ahargs}
\ahreturns{votable in record}
\begin{ahexample}
\begin{verbatim}
cs:=conesearch();
cs.list()
rec:=cs.query(14, 180, 45, 1)
cs.done()
\end{verbatim}
\end{ahexample}
\end{ahfunction}

\begin{ahfunction}{done}{Terminate the tool}
\begin{ahdescription}
This is used to delete the tool.
\end{ahdescription}
\ahreturns{Bool}
\begin{ahexample}
\begin{verbatim}
cs:=conesearch();
cs.list();
cs.done()
\end{verbatim}
\end{ahexample}
\end{ahfunction}

\end{ahtool}

\input{cscatalog.help}

\end{ahmodule}

