#ifndef _imager_IDL_
#define _imager_IDL_

#include <baci.idl>
#include <acscomponent.idl>
#include <casadefs.idl>
         
#pragma prefix "alma"

module CASA {  

   interface acsimager : ACS::ACSComponent {

         boolean advise();
         boolean approximatepsf();
         boolean boxmask();
         boolean clean(in string clean, in long niter, in float gain, in float threshold, in boolean displayprogress, in string model, in boolean keepfixed, in string complist, in StringVec mask, in StringVec image, in StringVec residual, in boolean interactive, in long npercycle, in string masktemplate, in boolean async);
         boolean clipimage();
         boolean clipvis();
         boolean close();
         boolean correct();
         boolean done();
         boolean exprmask();
         boolean feather();
         boolean filter();
         boolean fitpsf();
         boolean ft();
         boolean linearmosaic();
         boolean make();
         boolean makeimage(in string type, in string image, in string complexiamge, in boolean async);
         boolean modemodelfromsd();
         boolean mask();
         boolean mem(in string algorithm, in long niter, in double sigma, in double targetflux, in boolean constrainflux, in boolean displayprogress, in StringVec model, in BoolVec keepfixed, in string complist, in StringVec prior, in StringVec mask, in StringVec image, in StringVec residual, in boolean async);
         boolean nnls();
         boolean open(in string thems, in boolean compress);
         boolean pixon();
         boolean plotsummary();
         boolean plotuv();
         boolean plotvis();
         boolean plotweights();
         boolean regionmask();
         boolean residual();
         boolean restore();
         boolean selfcal();
         boolean sensitivity();
         boolean setbeam();
         boolean setjy();
         boolean setmfcontrol();
         boolean setdata(in string mode, in IntVec nchan, in IntVec start, in IntVec step, in double mstart, in double mstep, in IntVec spwid, in IntVec fieldid, in string msslect, in boolean async);
         boolean setimage(in long nx, in long ny, in double cellx, in double celly, in string stokes, in boolean doshift, in string phasecenter, in double shiftx, in double shifty, in string mode, in long nchan, in long start, in long step, in string mstart, in string mstep, in IntVec spwid, in long fieldid, in long facets, in double distance);
         boolean setoptions(in string ftmachine, in long cache, in long tile, in string gridfunction, in string location, in double padding, in boolean usemodelcol);
         boolean setscales();
         boolean setsdoptions();
         boolean setvp();
         boolean smooth(out StringVec image, in StringVec Model, in boolean usefit, in double bmaj, in double mmin, in double bpa, in boolean normalize, in boolean async);
         boolean stop();
         boolean summary();
         boolean uvrange(in double uvmin, in double uvmax);
         boolean weight(in string type, in string rmode, in double noise, in double robust, in double fieldofview, in long npixels, in boolean mosaic, in boolean async);
         }; 
};
#endif
  
